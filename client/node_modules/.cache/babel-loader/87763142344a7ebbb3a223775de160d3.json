{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst MainHooksIndividualViewListingEmployerHelpers = () => {\n  const checkMessageMeetsCritera = {\n    check: (setError, register, clearErrors, name) => {\n      return { ...register(name, {\n          required: {\n            value: true,\n            message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n          },\n          minLength: {\n            value: 50,\n            message: \"You MUST enter AT Least 50 characters\"\n          },\n          maxLength: {\n            value: 450,\n            message: \"You may ONLY enter 450 characters or less\"\n          },\n          onBlur: e => {\n            console.log(\"blurred/\"); // deconstruct actual value\n\n            const value = e.target.value; // deconstruct length\n\n            const len = value.length; // check if both min/max values met\n\n            if (len > 0 && len >= 50 && len <= 450) {\n              // clear error\n              clearErrors(name);\n            } else {\n              // set error\n              setTimeout(() => {\n                setError(name, {\n                  type: \"manual\",\n                  message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\"\n                });\n              }, 50);\n            }\n          }\n        })\n      };\n    },\n    onChange: (e, name, setValue) => {\n      // deconstruct actual value\n      const value = e.target.value; // set new value\n\n      setValue(name, value, {\n        shouldValidate: true\n      });\n    },\n    label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n    name: \"comment\",\n    placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n  }; // return values to other component\n\n  return {\n    checkMessageMeetsCritera\n  };\n};\n\nexport default MainHooksIndividualViewListingEmployerHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/helpers/reduxFormHelpers.js"],"names":["MainHooksIndividualViewListingEmployerHelpers","checkMessageMeetsCritera","check","setError","register","clearErrors","name","required","value","message","minLength","maxLength","onBlur","e","console","log","target","len","length","setTimeout","type","onChange","setValue","shouldValidate","label","placeholder"],"mappings":"AAAA;AACA,MAAMA,6CAA6C,GAAG,MAAM;AAExD,QAAMC,wBAAwB,GAAG;AAC7BC,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,WAArB,EAAkCC,IAAlC,KAA2C;AAC9C,aACI,EAAC,GAAGF,QAAQ,CAACE,IAAD,EAAO;AAAEC,UAAAA,QAAQ,EAAE;AAC3BC,YAAAA,KAAK,EAAE,IADoB;AAE3BC,YAAAA,OAAO,EAAE;AAFkB,WAAZ;AAGhBC,UAAAA,SAAS,EAAE;AACVF,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAHK;AAMhBE,UAAAA,SAAS,EAAE;AACVH,YAAAA,KAAK,EAAE,GADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WANK;AAShBG,UAAAA,MAAM,EAAGC,CAAD,IAAO;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADc,CAEd;;AACA,kBAAMP,KAAK,GAAGK,CAAC,CAACG,MAAF,CAASR,KAAvB,CAHc,CAId;;AACA,kBAAMS,GAAG,GAAGT,KAAK,CAACU,MAAlB,CALc,CAMd;;AACA,gBAAKD,GAAG,GAAG,CAAP,IAAcA,GAAG,IAAI,EAArB,IAA6BA,GAAG,IAAI,GAAxC,EAA8C;AAC1C;AACAZ,cAAAA,WAAW,CAACC,IAAD,CAAX;AACH,aAHD,MAGO;AACH;AACAa,cAAAA,UAAU,CAAC,MAAM;AACbhB,gBAAAA,QAAQ,CAACG,IAAD,EAAO;AACXc,kBAAAA,IAAI,EAAE,QADK;AAEXX,kBAAAA,OAAO,EAAE;AAFE,iBAAP,CAAR;AAIH,eALS,EAKP,EALO,CAAV;AAMH;AACJ;AA5BkB,SAAP;AAAZ,OADJ;AA+BH,KAjC4B;AAkC7BY,IAAAA,QAAQ,EAAE,CAACR,CAAD,EAAIP,IAAJ,EAAUgB,QAAV,KAAuB;AAC7B;AACA,YAAMd,KAAK,GAAGK,CAAC,CAACG,MAAF,CAASR,KAAvB,CAF6B,CAG7B;;AACAc,MAAAA,QAAQ,CAAChB,IAAD,EAAOE,KAAP,EAAc;AAAEe,QAAAA,cAAc,EAAE;AAAlB,OAAd,CAAR;AACH,KAvC4B;AAwC7BC,IAAAA,KAAK,EAAE,mFAxCsB;AAyC7BlB,IAAAA,IAAI,EAAE,SAzCuB;AA0C7BmB,IAAAA,WAAW,EAAE;AA1CgB,GAAjC,CAFwD,CA8CxD;;AACA,SAAO;AACHxB,IAAAA;AADG,GAAP;AAGH,CAlDD;;AAoDA,eAAeD,6CAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHooksIndividualViewListingEmployerHelpers = () => {\n\n    const checkMessageMeetsCritera = {\n        check: (setError, register, clearErrors, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n                }, minLength: {\n                    value: 50,\n                    message: \"You MUST enter AT Least 50 characters\"\n                }, maxLength: {\n                    value: 450,\n                    message: \"You may ONLY enter 450 characters or less\"\n                }, onBlur: (e) => {\n                    console.log(\"blurred/\");\n                    // deconstruct actual value\n                    const value = e.target.value;\n                    // deconstruct length\n                    const len = value.length;\n                    // check if both min/max values met\n                    if ((len > 0) && (len >= 50) && (len <= 450)) {\n                        // clear error\n                        clearErrors(name);\n                    } else {\n                        // set error\n                        setTimeout(() => {\n                            setError(name, {\n                                type: \"manual\",\n                                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            );\n        },\n        onChange: (e, name, setValue) => {\n            // deconstruct actual value\n            const value = e.target.value;\n            // set new value\n            setValue(name, value, { shouldValidate: true })\n        },\n        label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n        name: \"comment\",\n        placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n    }\n    // return values to other component\n    return {\n        checkMessageMeetsCritera\n    }\n}\n\nexport default MainHooksIndividualViewListingEmployerHelpers;"]},"metadata":{},"sourceType":"module"}