{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst PaymentFullPaneManageAndPay = _ref => {\n  let {\n    setModalOpenToDo,\n    setCurrentlyDue,\n    currentApplication,\n    paymentPaneFull,\n    setFullPaymentPaneOpen,\n    userData\n  } = _ref;\n\n  const handlePaymentInitialization = () => {\n    confirmAlert({\n      title: `Are you SURE you'd like to deposit ${Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2)}?`,\n      message: `This is NOT completely permanant, IF the contracted hacker does NOT complete the required work or is incompetent, you have the ABILITY to RETRIEVE your un-used funds at a later point. Confirmed transfers/payments will ALSO need to be confirmed by you prior to any money being transferred throughout accounts.`,\n      buttons: [{\n        label: 'Yes, Request Update!',\n        onClick: () => {\n          console.log(\"yes notify and run logic!\");\n          const config = {\n            jobID: jobid,\n            userID: userData.uniqueId,\n            hackerID: currentApplicationData.applicantId,\n            publicCompanyName: listing.publicCompanyName,\n            employerPostedJobId: currentApplicationData.employerPostedJobId\n          };\n          axios.post(`${process.env.REACT_APP_BASE_URL}/notify/user/request/update/hacker`, config).then(res => {\n            if (res.data.message === \"Successfully notified the hacker of request!\") {\n              console.log(res.data);\n              NotificationManager.success(\"We've successfully sent the desired update request to this hacker & they should be circling back with you some point soon! Check this specific page you're currently on for future updates & changes to be posted..\", \"Succesfully processed request & notified hacker!\", 4750);\n            } else {\n              console.log(\"Err\", res.data);\n              NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n            }\n          }).catch(err => {\n            console.log(\"Critical err\", err);\n            NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n          });\n        }\n      }, {\n        label: 'No, Cancel/Exit.',\n        onClick: () => {\n          console.log(\"canelled/don't run logic\");\n        }\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    className: \"my-sheet-container-price-wrapper\",\n    draggable: false,\n    isOpen: paymentPaneFull,\n    onClose: () => setFullPaymentPaneOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"my-sheet-container-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {},\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"Exit/Close This Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"breadcrumb-full-payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    id: \"breadcrumb-full-payment\",\n    parent: \"Make FULL Payment\",\n    title: currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-pane-full-payment\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, currentApplication !== null ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 64\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"make-full-payment-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 49\n    }\n  }, \"Make a FULL payment to the desired hacker assigned to this contract job (escrow type deposit service - does NOT immediately transfer)!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 49\n    }\n  }, \"This is essentially an 'escrow' type service with \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 119\n    }\n  }, \"stripe\"), \" that deposit's funds PRIOR to a hacker starting a contract to assure both \", process.env.REACT_APP_APPLICATION_NAME, \" AND the hacker themselves that once the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 334\n    }\n  }, \"contract is successfully completed, the funds will be released..\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }\n  }, \"You have choosen to pay the FULL deposit of \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 97\n    }\n  }, \"$\", Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2), \" (USD-$)\"), \" to the hacker named \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 273\n    }\n  }, currentApplication.applicantName)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 49\n    }\n  }, \"Initialize & pay via the payment button below... Please KEEP IN MIND that transfers are NOT locked in place forever and YOU WILL be able to RETRIEVE ANY UN-USED credits/money deposited if for any circumstance your contractor fails to properly do the job or any other unfortunate circumstances. You will HOWEVER need to do this through our support team however we emphisize customer's quality of experience on our platform and will do our best to refund your desired funds, if applicable.\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      handlePaymentInitialization();\n    },\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\",\n      marginTop: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }\n  }, \"Make Payment (will need to double confirm)\")), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }\n  }, \"If you're confused or would like more information on \", /*#__PURE__*/React.createElement(Link, {\n    className: \"payment-linky\",\n    to: \"/frequently/asked/questions/main/employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 106\n    }\n  }, \"escrow services\"), \", you can find a plethorea of information between the \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"https://en.wikipedia.org/wiki/Escrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 265\n    }\n  }, \"wiki page\"), \" or by clicking \", /*#__PURE__*/React.createElement(Link, {\n    className: \"payment-linky\",\n    to: \"/frequently/asked/questions/main/employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 359\n    }\n  }, \"here\"), \" to see exactly how \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 473\n    }\n  }, \"WE\"), \" implement escrow type services!\"))))) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 45,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 41\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(PaymentFullPaneManageAndPay);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Container","Row","Col","Card","CardBody","CardFooter","CardHeader","ListGroup","ListGroupItem","Popover","PopoverHeader","PopoverBody","Button","axios","Link","Sheet","connect","NotificationManager","Skeleton","SkeletonTheme","confirmAlert","PaymentFullPaneManageAndPay","setModalOpenToDo","setCurrentlyDue","currentApplication","paymentPaneFull","setFullPaymentPaneOpen","userData","handlePaymentInitialization","title","Number","amountOfMoneyUponCompletion","toFixed","message","buttons","label","onClick","console","log","config","jobID","jobid","userID","uniqueId","hackerID","currentApplicationData","applicantId","publicCompanyName","listing","employerPostedJobId","post","process","env","REACT_APP_BASE_URL","then","res","data","success","error","catch","err","margin","width","applicantName","textDecorationLine","REACT_APP_APPLICATION_NAME","color","marginTop","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\"\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst PaymentFullPaneManageAndPay = ({ setModalOpenToDo, setCurrentlyDue, currentApplication, paymentPaneFull, setFullPaymentPaneOpen, userData }) => {\n    const handlePaymentInitialization = () => {\n        confirmAlert({\n            title: `Are you SURE you'd like to deposit ${Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2)}?`,\n            message: `This is NOT completely permanant, IF the contracted hacker does NOT complete the required work or is incompetent, you have the ABILITY to RETRIEVE your un-used funds at a later point. Confirmed transfers/payments will ALSO need to be confirmed by you prior to any money being transferred throughout accounts.`,\n            buttons: [\n              {\n                label: 'Yes, Request Update!',\n                onClick: () => {\n                    console.log(\"yes notify and run logic!\");\n\n                    const config = {\n                        jobID: jobid,\n                        userID: userData.uniqueId,\n                        hackerID: currentApplicationData.applicantId,\n                        publicCompanyName: listing.publicCompanyName,\n                        employerPostedJobId: currentApplicationData.employerPostedJobId\n                    }\n            \n                    axios.post(`${process.env.REACT_APP_BASE_URL}/notify/user/request/update/hacker`, config).then((res) => {\n                        if (res.data.message === \"Successfully notified the hacker of request!\") {\n                            console.log(res.data);\n\n                            NotificationManager.success(\"We've successfully sent the desired update request to this hacker & they should be circling back with you some point soon! Check this specific page you're currently on for future updates & changes to be posted..\", \"Succesfully processed request & notified hacker!\", 4750);\n                        } else {\n                            console.log(\"Err\", res.data);\n\n                            NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n                        }\n                    }).catch((err) => {\n                        console.log(\"Critical err\", err);\n\n                        NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n                    })\n                }\n              },\n              {\n                label: 'No, Cancel/Exit.',\n                onClick: () => {\n                    console.log(\"canelled/don't run logic\");\n                }\n              }\n            ]\n        });\n    }\n    return (\n        <Fragment>\n            <Sheet className={\"my-sheet-container-price-wrapper\"} draggable={false} isOpen={paymentPaneFull} onClose={() => setFullPaymentPaneOpen(false)}>\n                <Sheet.Container className={\"my-sheet-container-price\"}>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => {\n                            \n                            }} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <div id={\"breadcrumb-full-payment\"}>\n                            <Breadcrumb id={\"breadcrumb-full-payment\"} parent={\"Make FULL Payment\"} title={currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\"} />\n                            <Container className='container-pane-full-payment' fluid={true}>\n                                {currentApplication !== null ? <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='card-payment-entirely-halved'>\n                                            <CardHeader>\n                                                <h3 className='make-full-payment-header'>Make a FULL payment to the desired hacker assigned to this contract job (escrow type deposit service - does NOT immediately transfer)!</h3>\n                                                <hr />\n                                                <p className='lead'>This is essentially an 'escrow' type service with <em style={{ textDecorationLine: \"underline\" }}>stripe</em> that deposit's funds PRIOR to a hacker starting a contract to assure both {process.env.REACT_APP_APPLICATION_NAME} AND the hacker themselves that once the <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>contract is successfully completed, the funds will be released..</strong></p>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <h3>You have choosen to pay the FULL deposit of <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>${Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2)} (USD-$)</strong> to the hacker named <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>{currentApplication.applicantName}</strong></h3>\n                                                <hr />\n                                                <p className='lead'>Initialize & pay via the payment button below... Please KEEP IN MIND that transfers are NOT locked in place forever and YOU WILL be able to RETRIEVE ANY UN-USED credits/money deposited if for any circumstance your contractor fails to properly do the job or any other unfortunate circumstances. You will HOWEVER need to do this through our support team however we emphisize customer's quality of experience on our platform and will do our best to refund your desired funds, if applicable.</p>\n                                                <Button onClick={() => {\n                                                    handlePaymentInitialization();\n                                                }} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\", marginTop: \"17.5px\" }}>Make Payment (will need to double confirm)</Button>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <h3>If you're confused or would like more information on <Link className={\"payment-linky\"} to={\"/frequently/asked/questions/main/employer\"}>escrow services</Link>, you can find a plethorea of information between the <a target=\"_blank\" href={\"https://en.wikipedia.org/wiki/Escrow\"}>wiki page</a> or by clicking <Link className={\"payment-linky\"} to={\"/frequently/asked/questions/main/employer\"}>here</Link> to see exactly how <strong style={{ textDecorationLine: \"underline\" }}>WE</strong> implement escrow type services!</h3>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row> : <Row>\n                                <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                    <p>\n                                        <Skeleton count={45} />\n                                    </p>\n                                </SkeletonTheme>\n                                </Row>}\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(PaymentFullPaneManageAndPay);"]},"metadata":{},"sourceType":"module"}