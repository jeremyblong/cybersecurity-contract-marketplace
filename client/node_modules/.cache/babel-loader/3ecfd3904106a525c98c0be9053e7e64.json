{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/helpers/miscFunctions.js\";\nimport React, { Fragment } from \"react\";\nimport \"./styles.css\";\nimport { ListGroupItem, Row, Col, Badge, Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\n\nconst CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n  const text = \"Drop a file OR select to browse local data\";\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-input-dropzone-copy\",\n    style: {\n      backgroundColor: '#007bff',\n      color: '#fff',\n      cursor: 'pointer',\n      padding: 15,\n      borderRadius: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, text, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: accept,\n    multiple: false,\n    className: \"custom-dropzone-input-actual-input\",\n    onChange: e => {\n      const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n      setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n      setCurrentUploadFileStatus(file); // mark file as READY \n\n      setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n      onFiles([file]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst handleSubmit = (runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles) => {\n  console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n  const data = new FormData();\n  data.append(\"file\", currentFileSelectedUpload);\n  data.append(\"meta\", fileMetaData);\n  const config = {\n    onUploadProgress: progressEvent => {\n      let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      setProgress(percentCompleted);\n    },\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n    if (res.data.message === \"Successfully uploaded file!\") {\n      console.log(res.data);\n      const {\n        file\n      } = res.data; // update current file in main component\n\n      NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n      setFiles(prevState => {\n        return [...prevState, file];\n      });\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      runSubmit();\n    } else {\n      console.log(\"Err\", res.data);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst calculateFileType = type => {\n  switch (type) {\n    case \"video/mp4\":\n      return \"mp4\";\n      break;\n\n    case \"image/png\":\n      return \"png\";\n      break;\n\n    case \"image/jpeg\":\n      return \"jpeg\";\n      break;\n\n    case \"image/jpg\":\n      return \"jpg\";\n      break;\n\n    case \"image/gif\":\n      return \"gif\";\n      break;\n\n    case \"image/bmp\":\n      return \"bmp\";\n      break;\n\n    case \"application/pdf\":\n      return \"pdf\";\n      break;\n\n    case \"text/csv\":\n      return \"csv\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n      return \"xlsx\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n      return \"docx\";\n      break;\n\n    case \"video/webm\":\n      return \"webm\";\n      break;\n\n    case \"audio/mpeg\":\n      return \"mp3\";\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst renderCustomButtonDropzone = (data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles) => {\n  const {\n    meta\n  } = data.files[0];\n  console.log(\"meta\", meta);\n\n  if (currentFileSelectedUpload === null) {\n    return null;\n  } else {\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginTop: \"25px\"\n        },\n        onClick: e => {\n          e.preventDefault(); // file meta data for next action\n\n          setMetaFileData(meta); // set file status as ready or prepared.\n\n          setFileReadyStatus(false);\n          const runSubmit = data.onSubmit;\n          handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles);\n        },\n        className: \"btn-air-secondary\",\n        color: \"secondary\",\n        size: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"Submit & Upload New File!\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginTop: \"25px\"\n        },\n        onClick: () => {\n          NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n        },\n        className: \"btn-air-light\",\n        color: \"light\",\n        size: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, \"Submit & Upload New File!\"));\n    }\n  }\n};\n\nconst renderPreviewOfFile = (data, fileReady, filePathData) => {\n  const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n  if (fileReady === true) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filereader-preview-dropzone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FileViewer, {\n      fileType: calculateFileType(file.type),\n      filePath: filePathData,\n      onError: err => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500),\n      key: file.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return null;\n  }\n};\n\nconst onSubmitHelper = (files, allFiles) => {\n  allFiles.forEach(file => {\n    file.remove();\n  });\n};\n\nconst ItemRendererVul = _ref => {\n  let {\n    item,\n    methods,\n    selectedVul\n  } = _ref;\n  console.log(\"item\", item);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    onClick: () => methods.addItem(item),\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, item.name, \" ~ \", item.external_id), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 79\n    }\n  }, `Vulnerability ID ~ ${item.id}`)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, item.description)));\n};\n\nconst ItemRenderer = _ref2 => {\n  let {\n    item,\n    methods,\n    selectedAsset\n  } = _ref2;\n  console.log(\"item\", item);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    onClick: () => methods.addItem(item),\n    className: selectedAsset.id !== null && selectedAsset.id === item.id ? \"list-group-item-action flex-column align-items-start active\" : \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 58\n    }\n  }, `Asset ID ~ ${item.id}`)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, `This 'asset' has multiple reward tier's with 'low severity' paying the least generally and 'critical' paying the most, the employer and you will determine this vulerability risk/rating or class..`), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    lg: \"3\",\n    md: \"3\",\n    xl: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"$\", item.lowSeverity, \" Per \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 98\n    }\n  }, \"LOW\"), \" Severity\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    lg: \"3\",\n    md: \"3\",\n    xl: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"$\", item.mediumSeverity, \" Per \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 103\n    }\n  }, \"MEDIUM\"), \" Severity\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    lg: \"3\",\n    md: \"3\",\n    xl: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"$\", item.highSeverity, \" Per \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 96\n    }\n  }, \"HIGH\"), \" Severity\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    lg: \"3\",\n    md: \"3\",\n    xl: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, \"$\", item.criticalSeverity, \" Per \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 103\n    }\n  }, \"CRITICAL\"), \" Severity\")))));\n};\n\nexport default {\n  ItemRenderer,\n  ItemRendererVul,\n  onSubmitHelper,\n  renderPreviewOfFile,\n  renderCustomButtonDropzone,\n  calculateFileType,\n  handleSubmit,\n  CustomInputHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/helpers/miscFunctions.js"],"names":["React","Fragment","ListGroupItem","Row","Col","Badge","Button","axios","NotificationManager","FileViewer","_","CustomInputHelper","accept","onFiles","setCurrentFilePathData","setCurrentUploadFileStatus","setFileReadyStatus","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","URL","createObjectURL","handleSubmit","runSubmit","currentFileSelectedUpload","fileMetaData","setProgress","setMetaFileData","setFiles","console","log","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","prevState","catch","err","calculateFileType","type","renderCustomButtonDropzone","fileReady","meta","marginTop","preventDefault","onSubmit","warning","renderPreviewOfFile","filePathData","fileWithMeta","id","onSubmitHelper","allFiles","forEach","remove","ItemRendererVul","item","methods","selectedVul","addItem","name","external_id","description","ItemRenderer","selectedAsset","width","lowSeverity","mediumSeverity","highSeverity","criticalSeverity"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./styles.css\";\nimport { ListGroupItem, Row, Col, Badge, Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\n\n\nconst CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n\n    const text = \"Drop a file OR select to browse local data\";\n\n    return (\n        <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n            {text}\n            <input\n                style={{ display: 'none' }}\n                type=\"file\"\n                accept={accept}\n                multiple={false}\n                className={\"custom-dropzone-input-actual-input\"}\n                onChange={e => {\n                    const file = e.target.files[0];\n                    // set current file path to convert to readable URL later\n                    setCurrentFilePathData(URL.createObjectURL(file));\n                    // set status update for current file\n                    setCurrentUploadFileStatus(file);\n                    // mark file as READY \n                    setFileReadyStatus(true);\n                    // update \"Dropzone\" component state (NOT this react component state).\n                    onFiles([file])\n                }}\n            />\n        </label>\n    );\n}\nconst handleSubmit = (runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles) => {\n\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n    const data = new FormData();\n\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n\n    const config = {\n        onUploadProgress: (progressEvent) => {\n            let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n            setProgress(percentCompleted);\n        },\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n            console.log(res.data);\n\n            const { file } = res.data;\n\n            // update current file in main component\n            NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n            setFiles(prevState => {\n                return [...prevState, file]\n            })\n\n            setMetaFileData(null);\n            setFileReadyStatus(false);\n            setCurrentUploadFileStatus(null);\n\n            runSubmit();\n        } else {\n            console.log(\"Err\", res.data);\n        }\n    }).catch((err) => {\n        console.log(err);\n    })\n};\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst renderCustomButtonDropzone = (data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles) => {\n\n    const { meta } = data.files[0];\n\n    console.log(\"meta\", meta);\n\n    if (currentFileSelectedUpload === null) {\n        return null;\n    } else {\n        if (fileReady === true) {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                        e.preventDefault();\n                        // file meta data for next action\n                        setMetaFileData(meta);\n                        // set file status as ready or prepared.\n                        setFileReadyStatus(false);\n\n                        const runSubmit = data.onSubmit;\n\n                        handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles);\n                    }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                        NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                    }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        }\n    }\n}\nconst renderPreviewOfFile = (data, fileReady, filePathData) => {\n\n    const file = data.fileWithMeta.file;\n    // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n    if (fileReady === true) {\n        return (\n            <div className=\"filereader-preview-dropzone\">\n                <FileViewer\n                    fileType={calculateFileType(file.type)}\n                    filePath={filePathData}\n                    onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                    key={file.id}\n                />\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\nconst onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach((file) => {\n        file.remove();\n    })\n}\nconst ItemRendererVul = ({ item, methods, selectedVul }) => {\n    console.log(\"item\", item);\n    return (\n        <Fragment key={item.id}>\n            <ListGroupItem onClick={() => methods.addItem(item)} className={\"list-group-item-action flex-column align-items-start\"}>\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">{item.name} ~ {item.external_id}</h5><small>{`Vulnerability ID ~ ${item.id}`}</small>\n                </div>\n                <p className=\"mb-1\">{item.description}</p>\n            </ListGroupItem>\n        </Fragment>\n    );\n};\nconst ItemRenderer = ({ item, methods, selectedAsset }) => {\n    console.log(\"item\", item);\n\n    return (\n        <Fragment key={item.id}>\n            <ListGroupItem onClick={() => methods.addItem(item)} className={selectedAsset.id !== null && selectedAsset.id === item.id ? \"list-group-item-action flex-column align-items-start active\" : \"list-group-item-action flex-column align-items-start\"}>\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">{item.name}</h5><small>{`Asset ID ~ ${item.id}`}</small>\n                </div>\n                <p className=\"mb-1\">{`This 'asset' has multiple reward tier's with 'low severity' paying the least generally and 'critical' paying the most, the employer and you will determine this vulerability risk/rating or class..`}</p>\n                <Row>\n                    <Col sm=\"6\" lg=\"3\" md=\"3\" xl=\"3\">\n                        <Badge style={{ width: \"100%\" }} color=\"primary\">${item.lowSeverity} Per <strong>LOW</strong> Severity</Badge>\n                    </Col>\n                    <Col sm=\"6\" lg=\"3\" md=\"3\" xl=\"3\">\n                        <Badge style={{ width: \"100%\" }} color=\"secondary\">${item.mediumSeverity} Per <strong>MEDIUM</strong> Severity</Badge>\n                    </Col>\n                    <Col sm=\"6\" lg=\"3\" md=\"3\" xl=\"3\">\n                        <Badge style={{ width: \"100%\" }} color=\"info\">${item.highSeverity} Per <strong>HIGH</strong> Severity</Badge>\n                    </Col>\n                    <Col sm=\"6\" lg=\"3\" md=\"3\" xl=\"3\">\n                        <Badge style={{ width: \"100%\" }} color=\"success\">${item.criticalSeverity} Per <strong>CRITICAL</strong> Severity</Badge>\n                    </Col>\n                </Row>\n            </ListGroupItem>\n        </Fragment>\n    );\n};\n\nexport default {\n    ItemRenderer,\n    ItemRendererVul,\n    onSubmitHelper, \n    renderPreviewOfFile, \n    renderCustomButtonDropzone, \n    calculateFileType, \n    handleSubmit, \n    CustomInputHelper\n};\n  "]},"metadata":{},"sourceType":"module"}