{"ast":null,"code":"import _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n// helpers logic related to mainly to redux-hook-form\nvar MainHookHelpers = function MainHookHelpers() {\n  var radioSelectionPricingOptionsOne = {\n    check: function check(setError, register, clearErrors) {\n      return _objectSpread({}, register(\"auctionPurchaseType\", {\n        required: {\n          value: true,\n          message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n        },\n        onBlur: function onBlur(e) {\n          // log to check whats returned\n          setTimeout(function () {\n            // clear error after proper selection\n            clearErrors(\"auctionPurchaseType\");\n          }, 50);\n        }\n      }));\n    },\n    id: \"auction-ONLY\",\n    name: \"auctionPurchaseType\",\n    value: \"auction-ONLY\"\n  };\n  var radioSelectionPricingOptionsTwo = {\n    check: function check(setError, register, clearErrors) {\n      return _objectSpread({}, register(\"auctionPurchaseType\", {\n        required: {\n          value: true,\n          message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n        },\n        onBlur: function onBlur(e) {\n          // log to check whats returned\n          setTimeout(function () {\n            // clear error after proper selection\n            clearErrors(\"auctionPurchaseType\");\n          }, 50);\n        }\n      }));\n    },\n    id: \"auction-AND-buy-it-now\",\n    name: \"auctionPurchaseType\",\n    value: \"auction-AND-buy-it-now\"\n  };\n  var radioSelectionPricingOptionsThree = {\n    check: function check(setError, register, clearErrors) {\n      return _objectSpread({}, register(\"auctionPurchaseType\", {\n        required: {\n          value: true,\n          message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n        },\n        onBlur: function onBlur(e) {\n          // log to check whats returned\n          setTimeout(function () {\n            // clear error after proper selection\n            clearErrors(\"auctionPurchaseType\");\n          }, 50);\n        }\n      }));\n    },\n    id: \"buy-it-now-OR-best-offer\",\n    name: \"auctionPurchaseType\",\n    value: \"buy-it-now-OR-best-offer\"\n  };\n  var radioSelectionPricingOptionsFour = {\n    check: function check(setError, register, clearErrors) {\n      return _objectSpread({}, register(\"auctionPurchaseType\", {\n        required: {\n          value: true,\n          message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n        },\n        onBlur: function onBlur(e) {\n          // log to check whats returned\n          setTimeout(function () {\n            // clear error after proper selection\n            clearErrors(\"auctionPurchaseType\");\n          }, 50);\n        }\n      }));\n    },\n    id: \"buy-it-now-ONLY\",\n    name: \"auctionPurchaseType\",\n    value: \"buy-it-now-ONLY\"\n  }; // return values to other component\n\n  return {\n    radioSelectionPricingOptionsOne: radioSelectionPricingOptionsOne,\n    radioSelectionPricingOptionsTwo: radioSelectionPricingOptionsTwo,\n    radioSelectionPricingOptionsThree: radioSelectionPricingOptionsThree,\n    radioSelectionPricingOptionsFour: radioSelectionPricingOptionsFour\n  };\n};\n\nexport default MainHookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/reactHookFormHelpers/helpers.js"],"names":["MainHookHelpers","radioSelectionPricingOptionsOne","check","setError","register","clearErrors","required","value","message","onBlur","e","setTimeout","id","name","radioSelectionPricingOptionsTwo","radioSelectionPricingOptionsThree","radioSelectionPricingOptionsFour"],"mappings":"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","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHookHelpers = () => {\n    \n    const radioSelectionPricingOptionsOne = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"auctionPurchaseType\", { required: {\n                    value: true,\n                    message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        clearErrors(\"auctionPurchaseType\");\n                    }, 50);\n                }})}\n            );\n        },\n        id: \"auction-ONLY\",\n        name: \"auctionPurchaseType\",\n        value: \"auction-ONLY\"\n    };\n    const radioSelectionPricingOptionsTwo = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"auctionPurchaseType\", { required: {\n                    value: true,\n                    message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        clearErrors(\"auctionPurchaseType\");\n                    }, 50);\n                }})}\n            );\n        },\n        id: \"auction-AND-buy-it-now\",\n        name: \"auctionPurchaseType\",\n        value: \"auction-AND-buy-it-now\"\n    };\n    const radioSelectionPricingOptionsThree = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"auctionPurchaseType\", { required: {\n                    value: true,\n                    message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        clearErrors(\"auctionPurchaseType\");\n                    }, 50);\n                }})}\n            );\n        },\n        id: \"buy-it-now-OR-best-offer\",\n        name: \"auctionPurchaseType\",\n        value: \"buy-it-now-OR-best-offer\"\n    } \n    const radioSelectionPricingOptionsFour = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"auctionPurchaseType\", { required: {\n                    value: true,\n                    message: \"You MUST select an option before proceeding with this form - important bidding/purchase information is required.\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        clearErrors(\"auctionPurchaseType\");\n                    }, 50);\n                }})}\n            );\n        },\n        id: \"buy-it-now-ONLY\",\n        name: \"auctionPurchaseType\",\n        value: \"buy-it-now-ONLY\"\n    }\n    // return values to other component\n    return {\n        radioSelectionPricingOptionsOne,\n        radioSelectionPricingOptionsTwo,\n        radioSelectionPricingOptionsThree,\n        radioSelectionPricingOptionsFour\n    }\n}\n\nexport default MainHookHelpers;"]},"metadata":{},"sourceType":"module"}