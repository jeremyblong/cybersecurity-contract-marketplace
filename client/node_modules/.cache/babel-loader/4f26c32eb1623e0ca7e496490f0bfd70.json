{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/hackers/mainPaymentLogic/helpers/bottomTabbed/bottomTabbedHelper.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Cards from 'react-credit-cards';\nimport { Row, Col, Button, Card, CardBody, Input, FormGroup, Form, CardHeader, TabContent, TabPane, Nav, NavItem, NavLink, Container, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { useHistory } from \"react-router-dom\";\n\nconst BottomAddNewPaymentMethodTabbedHelper = _ref => {\n  let {\n    currentlyDue,\n    setCurrentlyDue,\n    setModalOpenToDo,\n    setPaymentMethods,\n    userData,\n    handleInputChange,\n    cardInfo,\n    setCardInfo\n  } = _ref;\n  const [activeTab, setActiveTab] = useState('1');\n  const [valid, setValidness] = useState(false);\n  const [capabilities, setCapabilities] = useState([]);\n  const [popover, setPopover] = useState({\n    capability0: false,\n    capability1: false,\n    capability2: false\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const configuration = {\n      params: {\n        employerID: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered payment capabilities!\") {\n        console.log(res.data);\n        const {\n          capabilities\n        } = res.data;\n        const arr = [];\n\n        for (let index = 0; index < capabilities.data.length; index++) {\n          const el = capabilities.data[index];\n\n          if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n            arr.push(el);\n          }\n        }\n\n        console.log(\"arr\", arr);\n        setCapabilities(arr);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"Critical errror...:\", err);\n    });\n  }, []);\n\n  const calculateType = type => {\n    switch (type) {\n      case \"card_payments\":\n        return \"Card Payment's\";\n        break;\n\n      case \"link_payments\":\n        return \"Link Payment's\";\n        break;\n\n      case \"us_bank_account_ach_payments\":\n        return \"US Bank Account ACH Payment's\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleActivation = (element, idx) => {\n    const {\n      id,\n      status\n    } = element;\n\n    if (status === \"active\") {\n      NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n    } else {\n      const configuration = {\n        params: {\n          employerID: userData.uniqueId,\n          elementID: id\n        }\n      };\n      axios.get(`${process.env.REACT_APP_BASE_URL}/modify/employer/capabilities/payments`, configuration).then(res => {\n        if (res.data.message === \"Successfully modified payment capabilities!\") {\n          console.log(res.data);\n          const {\n            capability,\n            elementID\n          } = res.data;\n          setCapabilities(prevState => {\n            return prevState.forEach((item, idx) => {\n              if (item.id === elementID) {\n                return capability;\n              } else {\n                return item;\n              }\n            });\n          });\n          setPopover(prevState => {\n            return { ...prevState,\n              [`capability${idx}`]: false\n            };\n          });\n          NotificationManager.success(`Successfully modified the desired capabilities & updated stripe information! You're capability ${elementID} is now ACTIVE!`, `Changed ${elementID} and is now ACTIVE!`, 4750);\n        } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n          const {\n            currentlyDue\n          } = res.data;\n          setCurrentlyDue(currentlyDue);\n          setTimeout(() => {\n            setModalOpenToDo(true);\n          }, 625);\n        } else {\n          console.log(\"Err\", res.data);\n          NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n        }\n      }).catch(err => {\n        console.log(\"Critical errror...:\", err);\n        NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n      });\n    }\n  };\n\n  console.log(\"capabilities\", capabilities);\n  console.log(\"popover\", popover);\n\n  const calculateReadiness = () => {\n    const {\n      number,\n      name,\n      expiry,\n      cvc\n    } = cardInfo;\n\n    if (valid === true && typeof name !== \"undefined\" && name.length > 0 && typeof expiry !== \"undefined\" && expiry.length >= 4 && typeof cvc !== \"undefined\" && cvc.length >= 3) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const addNewCardToAccount = () => {\n    const {\n      number,\n      name,\n      expiry,\n      cvc,\n      cardType\n    } = cardInfo;\n    const config = {\n      number,\n      name,\n      expiry,\n      cvc,\n      hackerID: userData.uniqueId,\n      cardType\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/add/new/payment/method/hacker`, config).then(res => {\n      if (res.data.message === \"Successfully added a new payment method!\") {\n        console.log(res.data);\n        const {\n          account\n        } = res.data;\n        setCardInfo({\n          cvc: \"\",\n          expiry: \"\",\n          focus: \"\",\n          name: \"\",\n          number: \"\",\n          cardType: \"\"\n        });\n        setPaymentMethods(prevState => [...prevState, account]);\n      } else if (res.data.err === \"This card doesn't appear to be a debit card.\") {\n        setCardInfo({\n          cvc: \"\",\n          expiry: \"\",\n          focus: \"\",\n          name: \"\",\n          number: \"\",\n          cardType: \"\"\n        });\n        NotificationManager.error(\"This card type (Anything outside of DEBIT) is NOT allowed! You MUST enter a debit card if you wish to enter a valid card payment type...\", \"Enter a DEBIT card ONLY! This is NOT a debit card.\", 4750);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-card-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    className: \"border-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"#\",\n    className: activeTab === '1' ? 'active' : '',\n    onClick: () => setActiveTab('1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"Add New Card Payment Method\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"material-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"#\",\n    className: activeTab === '2' ? 'active' : '',\n    onClick: () => setActiveTab('2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Manage Your Payment Account Capabilities\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"material-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"#\",\n    className: activeTab === '3' ? 'active' : '',\n    onClick: () => setActiveTab('3'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, \"Other Payment Method's\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"material-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"height-equal credit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 41\n    }\n  }, \"Add a Credit/Debit Card\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form mega-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    value: cardInfo.name,\n    placeholder: \"Name (Full Name - First/Last)\",\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"number\",\n    value: cardInfo.number,\n    placeholder: \"Enter your card number..\",\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => {\n      const value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n        setCardInfo(prevState => {\n          return { ...prevState,\n            expiry: cardInfo.expiry\n          };\n        });\n      }\n    },\n    style: {\n      marginLeft: \"15px\"\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireMM\",\n    id: \"expireMM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 65\n    }\n  }, \"Select a month\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 65\n    }\n  }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 65\n    }\n  }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 65\n    }\n  }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 65\n    }\n  }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 65\n    }\n  }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 65\n    }\n  }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 65\n    }\n  }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 65\n    }\n  }, \"August\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 65\n    }\n  }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 65\n    }\n  }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 65\n    }\n  }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 65\n    }\n  }, \"December\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => {\n      const value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n        setCardInfo(prevState => {\n          return { ...prevState,\n            expiry: cardInfo.expiry\n          };\n        });\n      }\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireYY\",\n    id: \"expireYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 65\n    }\n  }, \"Select a year\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 65\n    }\n  }, \"2020\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"21\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 65\n    }\n  }, \"2021\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 65\n    }\n  }, \"2022\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 65\n    }\n  }, \"2023\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 65\n    }\n  }, \"2024\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 65\n    }\n  }, \"2025\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"26\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 65\n    }\n  }, \"2026\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"27\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 65\n    }\n  }, \"2027\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"28\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 65\n    }\n  }, \"2028\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"29\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 65\n    }\n  }, \"2029\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 65\n    }\n  }, \"2030\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"31\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 65\n    }\n  }, \"2031\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 65\n    }\n  }, \"2032\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"33\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 65\n    }\n  }, \"2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"34\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 65\n    }\n  }, \"2034\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"35\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 65\n    }\n  }, \"2035\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 65\n    }\n  }, \"2036\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"cvc\",\n    placeholder: \"CVC... (Security Code On Back)\",\n    value: cardInfo.cvc,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: \"5\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    callback: (type, isValid) => {\n      setCardInfo(prevState => {\n        return { ...prevState,\n          cardType: type.issuer\n        };\n      });\n      setValidness(isValid);\n    },\n    cvc: cardInfo.cvc,\n    expiry: cardInfo.expiry,\n    focused: cardInfo.focus,\n    name: cardInfo.name,\n    number: cardInfo.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addNewCardToAccount,\n    disabled: calculateReadiness(),\n    style: {\n      width: \"100%\"\n    },\n    color: \"success\",\n    className: \"btn-square-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-submit mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 49\n    }\n  }), \" Submit New Payment Method\")))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"capabilities-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 49\n    }\n  }, \"Capabilities related to payment method's\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 49\n    }\n  }, \"Capabilities are the 'activated/enabled' various payment features and/or functionality on your account. The below table will display what features ARE ENABLED and which ones are NOT enabled but can be enabled by clicking the animated 'plus sign' image..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 49\n    }\n  }, typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 73\n      }\n    }, \"Payment Type:\")), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#f73164\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 73\n      }\n    }, calculateType(element.id))), /*#__PURE__*/React.createElement(Col, {\n      className: \"target-me\",\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-row-capability\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#7366ff\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 77\n      }\n    }, element.status), /*#__PURE__*/React.createElement(\"img\", {\n      id: `capability${idx}`,\n      onClick: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: true\n          };\n        });\n      },\n      src: require(\"../../../../../../../../../assets/gifs/add.gif\"),\n      className: \"gif-add-capability\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onMouseLeave: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: false\n          };\n        });\n      },\n      className: \"zindex-pop-me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      className: \"elevate-popover\",\n      placement: \"bottom\",\n      isOpen: popover[`capability${idx}`],\n      target: `capability${idx}`,\n      toggle: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: !popover[`capability${idx}`]\n          };\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 85\n      }\n    }, \"Update/Activate Capability\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 85\n      }\n    }, \"Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleActivation(element, idx),\n      className: \"btn-square-success\",\n      outline: true,\n      color: \"success-2x\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 85\n      }\n    }, \"Activate!\"))))))));\n  }) : null)))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 45\n    }\n  })))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 m-t-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }, \" \", \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(BottomAddNewPaymentMethodTabbedHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/hackers/mainPaymentLogic/helpers/bottomTabbed/bottomTabbedHelper.js"],"names":["React","Fragment","useState","useEffect","Cards","Row","Col","Button","Card","CardBody","Input","FormGroup","Form","CardHeader","TabContent","TabPane","Nav","NavItem","NavLink","Container","ListGroup","ListGroupItem","Popover","PopoverHeader","PopoverBody","axios","connect","NotificationManager","useHistory","BottomAddNewPaymentMethodTabbedHelper","currentlyDue","setCurrentlyDue","setModalOpenToDo","setPaymentMethods","userData","handleInputChange","cardInfo","setCardInfo","activeTab","setActiveTab","valid","setValidness","capabilities","setCapabilities","popover","setPopover","capability0","capability1","capability2","history","configuration","params","employerID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","arr","index","length","el","id","push","catch","err","calculateType","type","handleActivation","element","idx","status","info","elementID","capability","prevState","forEach","item","success","setTimeout","error","calculateReadiness","number","name","expiry","cvc","addNewCardToAccount","cardType","config","hackerID","post","account","focus","e","value","target","substring","marginLeft","isValid","issuer","width","map","color","textDecorationLine","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Cards from 'react-credit-cards';\nimport { Row, Col, Button, Card, CardBody, Input, FormGroup, Form, CardHeader, TabContent, TabPane, Nav, NavItem, NavLink, Container, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst BottomAddNewPaymentMethodTabbedHelper = ({ currentlyDue, setCurrentlyDue, setModalOpenToDo, setPaymentMethods, userData, handleInputChange, cardInfo, setCardInfo }) => {\n    const [activeTab, setActiveTab] = useState('1');\n    const [ valid, setValidness ] = useState(false);\n    const [ capabilities, setCapabilities ] = useState([]);\n    const [ popover, setPopover ] = useState({\n        capability0: false,\n        capability1: false,\n        capability2: false\n    })\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const configuration = {\n            params: { \n                employerID: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered payment capabilities!\") {\n                console.log(res.data);\n\n                const { capabilities } = res.data;\n\n                const arr = [];\n\n                for (let index = 0; index < capabilities.data.length; index++) {\n                    const el = capabilities.data[index];\n                    if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n                        arr.push(el);\n                    }\n                }\n                console.log(\"arr\", arr);\n\n                setCapabilities(arr);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n        })\n    }, [])\n\n    const calculateType = (type) => {\n        switch (type) {\n            case \"card_payments\":\n                return \"Card Payment's\"\n                break;\n            case \"link_payments\":\n                return \"Link Payment's\";\n                break;\n            case \"us_bank_account_ach_payments\":\n                return \"US Bank Account ACH Payment's\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleActivation = (element, idx) => {\n\n        const { id, status } = element; \n\n        if (status === \"active\") {\n            NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n        } else {\n            const configuration = {\n                params: { \n                    employerID: userData.uniqueId,\n                    elementID: id\n                }\n            }\n            axios.get(`${process.env.REACT_APP_BASE_URL}/modify/employer/capabilities/payments`, configuration).then((res) => {\n                if (res.data.message === \"Successfully modified payment capabilities!\") {\n                    console.log(res.data);\n\n                    const { capability, elementID } = res.data;\n\n                    setCapabilities(prevState => {\n                        return prevState.forEach((item, idx) => {\n                            if (item.id === elementID) {\n                                return capability;\n                            } else {\n                                return item;\n                            }\n                        })\n                    });\n                    \n                    setPopover(prevState => {\n                        return {\n                            ...prevState,\n                            [`capability${idx}`]: false\n                        }\n                    })\n\n                    NotificationManager.success(`Successfully modified the desired capabilities & updated stripe information! You're capability ${elementID} is now ACTIVE!`, `Changed ${elementID} and is now ACTIVE!`, 4750);\n                } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n\n                    const { currentlyDue } = res.data;\n\n                    setCurrentlyDue(currentlyDue);\n\n                    setTimeout(() => {\n                        setModalOpenToDo(true);\n                    },  625);\n                } else {\n                    console.log(\"Err\", res.data);\n\n                    NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n                }\n            }).catch((err) => {\n                console.log(\"Critical errror...:\", err);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n            })\n        }\n    }\n\n    console.log(\"capabilities\", capabilities);\n\n    console.log(\"popover\", popover);\n\n    const calculateReadiness = () => {\n        const { number, name, expiry, cvc } = cardInfo;\n\n        if (valid === true && typeof name !== \"undefined\" && name.length > 0 && typeof expiry !== \"undefined\" && expiry.length >= 4 && typeof cvc !== \"undefined\" && cvc.length >= 3) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    const addNewCardToAccount = () => {\n        const { number, name, expiry, cvc, cardType } = cardInfo;\n\n        const config = {\n            number,\n            name, \n            expiry, \n            cvc,\n            hackerID: userData.uniqueId,\n            cardType\n        }\n    \n        axios.post(`${process.env.REACT_APP_BASE_URL}/add/new/payment/method/hacker`, config).then((res) => {\n            if (res.data.message === \"Successfully added a new payment method!\") {\n\n                console.log(res.data);\n\n                const { account } = res.data;\n\n                setCardInfo({\n                    cvc: \"\",\n                    expiry: \"\",\n                    focus: \"\",\n                    name: \"\",\n                    number: \"\",\n                    cardType: \"\"\n                })\n\n                setPaymentMethods(prevState => [...prevState, account]);\n\n            } else if (res.data.err === \"This card doesn't appear to be a debit card.\") {\n\n                setCardInfo({\n                    cvc: \"\",\n                    expiry: \"\",\n                    focus: \"\",\n                    name: \"\",\n                    number: \"\",\n                    cardType: \"\"\n                })\n                \n                NotificationManager.error(\"This card type (Anything outside of DEBIT) is NOT allowed! You MUST enter a debit card if you wish to enter a valid card payment type...\", \"Enter a DEBIT card ONLY! This is NOT a debit card.\", 4750);\n\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n        })\n    }\n    return (\n        <Fragment>\n            <Card className=\"card-shadow-card-add\">\n                <Row className=\"product-page-main m-0\">\n                    <Col sm=\"12\">\n                    <Nav tabs className=\"border-tab\">\n                        <NavItem  id=\"myTab\" role=\"tablist\">\n                            <NavLink href=\"#\" className={activeTab === '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                Add New Card Payment Method\n                            </NavLink>\n                            <div className=\"material-border\"></div>\n                        </NavItem>\n                        <NavItem  id=\"myTab\" role=\"tablist\">\n                            <NavLink href=\"#\"  className={activeTab === '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                Manage Your Payment Account Capabilities\n                            </NavLink>\n                            <div className=\"material-border\"></div>\n                        </NavItem>\n                        <NavItem  id=\"myTab\" role=\"tablist\">\n                            <NavLink href=\"#\"  className={activeTab === '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\n                                Other Payment Method's\n                            </NavLink>\n                            <div className=\"material-border\"></div>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <Col lg=\"12\" sm=\"12\" md=\"12\" xl=\"12 xl-100\">\n                                <Card className=\"height-equal credit-form\">\n                                    <CardHeader className=\"py-4\">\n                                        <h5>Add a Credit/Debit Card</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col md=\"7\">\n                                                <Form className=\"theme-form mega-form\">\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"name\"\n                                                            value={cardInfo.name}\n                                                            placeholder=\"Name (Full Name - First/Last)\"\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"number\"\n                                                            value={cardInfo.number}\n                                                            placeholder=\"Enter your card number..\"\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Row>\n                                                            <select onChange={(e) => {\n                                                                const value = e.target.value;\n\n                                                                if (value !== \"\") {\n                                                            \n                                                                    cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n\n                                                                    setCardInfo(prevState => {\n                                                                        return {\n                                                                            ...prevState,\n                                                                            expiry: cardInfo.expiry\n                                                                        }\n                                                                    })\n                                                                }\n                                                            }} style={{ marginLeft: \"15px\" }} className=\"form-control digits year-date-format\" name='expireMM' id='expireMM'>\n                                                                <option value=''>Select a month</option>\n                                                                <option value='01'>January</option>\n                                                                <option value='02'>February</option>\n                                                                <option value='03'>March</option>\n                                                                <option value='04'>April</option>\n                                                                <option value='05'>May</option>\n                                                                <option value='06'>June</option>\n                                                                <option value='07'>July</option>\n                                                                <option value='08'>August</option>\n                                                                <option value='09'>September</option>\n                                                                <option value='10'>October</option>\n                                                                <option value='11'>November</option>\n                                                                <option value='12'>December</option>\n                                                            </select> \n                                                            <select onChange={(e) => {\n                                                                const value = e.target.value;\n\n                                                                if (value !== \"\") {\n                                                                    \n                                                                    cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n\n                                                                    setCardInfo(prevState => {\n                                                                        return {\n                                                                            ...prevState,\n                                                                            expiry: cardInfo.expiry\n                                                                        }\n                                                                    })\n                                                                }\n                                                            }} className=\"form-control digits year-date-format\" name='expireYY' id='expireYY'>\n                                                                <option value=''>Select a year</option>\n                                                                <option value='20'>2020</option>\n                                                                <option value='21'>2021</option>\n                                                                <option value='22'>2022</option>\n                                                                <option value='23'>2023</option>\n                                                                <option value='24'>2024</option>\n                                                                <option value='25'>2025</option>\n                                                                <option value='26'>2026</option>\n                                                                <option value='27'>2027</option>\n                                                                <option value='28'>2028</option>\n                                                                <option value='29'>2029</option>\n                                                                <option value='30'>2030</option>\n                                                                <option value='31'>2031</option>\n                                                                <option value='32'>2032</option>\n                                                                <option value='33'>2033</option>\n                                                                <option value='34'>2034</option>\n                                                                <option value='35'>2035</option>\n                                                                <option value='36'>2036</option>\n                                                            </select> \n                                                        </Row>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"cvc\"\n                                                            placeholder=\"CVC... (Security Code On Back)\"\n                                                            value={cardInfo.cvc}\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                </Form>\n                                            </Col>\n                                            <Col md=\"5\" className=\"text-center\">\n                                                <Cards\n                                                    callback={(type, isValid) => {\n                                                        setCardInfo(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                cardType: type.issuer\n                                                            }\n                                                        })\n                                                        setValidness(isValid);\n                                                    }}\n                                                    cvc={cardInfo.cvc}\n                                                    expiry={cardInfo.expiry}\n                                                    focused={cardInfo.focus}\n                                                    name={cardInfo.name}\n                                                    number={cardInfo.number}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Button onClick={addNewCardToAccount} disabled={calculateReadiness()} style={{ width: \"100%\" }} color=\"success\" className=\"btn-square-success\">\n                                                <i className=\"fa fa-submit mr-1\"></i> Submit New Payment Method\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Container fluid={true}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className='card-payment-entirely-halved'>\n                                            <CardHeader>\n                                                <h3 className='capabilities-header'>Capabilities related to payment method's</h3>\n                                                <hr />\n                                                <p className='lead'>Capabilities are the 'activated/enabled' various payment features and/or functionality on your account. The below table will display what features ARE ENABLED and which ones are NOT enabled but can be enabled by clicking the animated 'plus sign' image..</p>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <ListGroup className=\"list-group-flush\">\n                                                    {typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n                                                        return (\n                                                            <ListGroupItem key={idx}>\n                                                                <Row>\n                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <strong>Payment Type:</strong>\n                                                                    </Col>\n                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateType(element.id)}</strong>\n                                                                    </Col>\n                                                                    <Col className='target-me' sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <div className={\"create-row-capability\"}>\n                                                                            <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{element.status}</strong>\n                                                                            <img id={`capability${idx}`} onClick={() => {\n                                                                                setPopover(prevState => {\n                                                                                    return {\n                                                                                        ...prevState,\n                                                                                        [`capability${idx}`]: true\n                                                                                    }\n                                                                                })\n                                                                            }} src={require(\"../../../../../../../../../assets/gifs/add.gif\")} className={\"gif-add-capability\"} />\n                                                                            <div onMouseLeave={() => {\n                                                                                setPopover(prevState => {\n                                                                                    return {\n                                                                                        ...prevState,\n                                                                                        [`capability${idx}`]: false\n                                                                                    }\n                                                                                })\n                                                                            }} className='zindex-pop-me'>\n                                                                                <Popover className={\"elevate-popover\"} placement=\"bottom\" isOpen={popover[`capability${idx}`]} target={`capability${idx}`} toggle={() => {\n                                                                                    setPopover(prevState => {\n                                                                                        return {\n                                                                                            ...prevState,\n                                                                                            [`capability${idx}`]: !popover[`capability${idx}`]\n                                                                                        }\n                                                                                    })\n                                                                                }}>\n                                                                                    <PopoverHeader>Update/Activate Capability</PopoverHeader>\n                                                                                    <PopoverBody>Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\n                                                                                    <hr />\n                                                                                    <Button onClick={() => handleActivation(element, idx)} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }}>Activate!</Button>\n                                                                                    </PopoverBody>\n                                                                                </Popover>\n                                                                            </div>\n                                                                        </div>\n                                                                    </Col>\n                                                                </Row>\n                                                            </ListGroupItem>\n                                                        );\n                                                    }) : null}\n                                                </ListGroup>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className='card-payment-entirely-halved'>\n                                            <CardHeader>\n                                                \n                                            </CardHeader>\n                                            <CardBody>\n                                                \n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <p className=\"mb-0 m-t-20\"> {\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"}</p>\n                        </TabPane>\n                    </TabContent>\n                    </Col>\n                </Row>\n            </Card>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(BottomAddNewPaymentMethodTabbedHelper);"]},"metadata":{},"sourceType":"module"}