{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/messaging/main/messagingMain.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Media, Form, FormGroup, Input, Label, InputGroup, InputGroupAddon, Button, Nav, NavItem, NavLink, TabPane, TabContent, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport four from '../../../../assets/images/user/4.jpg';\nimport one from '../../../../assets/images/user/1.jpg';\nimport two from '../../../../assets/images/user/2.png';\nimport errorImg from '../../../../assets/images/search-not-found.png';\nimport start_conversion from '../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart';\nimport { CALL, STATUS, PROFILE, EricaHughes, VincentPorter, Active, ChataApp_p1, ChataApp_p2, Following, Follower, MarkJecno, Send } from '../../../../constant';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"./styles.css\";\nimport helpers from \"./helpers/mainHelperFunctions.js\";\nimport typingIndicator from \"../../../../assets/gifs/typing-white.gif\";\nconst {\n  handleCheckGroupType,\n  handleListItemClickPrivateChannel,\n  renderOnlineStatus,\n  renderNicknamePrivateGroup,\n  renderNickname,\n  renderStatus,\n  renderLastProfilePicMainUser,\n  handleMessagePressPrivateConvos,\n  onKeyPressPublicSubmitted,\n  onKeyPressPrivateSubmitted\n} = helpers;\n\nconst MessagingMainHelper = _ref => {\n  let {\n    SBData,\n    userData\n  } = _ref;\n  const channelHandler = new SBData.ChannelHandler();\n  const allMembers = [];\n  const chats = [];\n  const selectedUser = [];\n  const currentUser = [];\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [activeTab, setActiveTab] = useState('1');\n  const [openGroupChannels, setOpenGroupState] = useState([]);\n  const [messageList, setMessageListState] = useState([]);\n  const [channel, setChannelState] = useState(null);\n  const [activelyTyping, setTypingStatusState] = useState(false);\n  const [pictureChat, setPictureChatState] = useState(null);\n  const [popover, setPopoverState] = useState({});\n  const [groupType, setGroupType] = useState({\n    groupType: \"Private Convo's\",\n    checked: false\n  });\n  const [privateGroupChannels, setPrivateGroupChannels] = useState([]);\n  useEffect(() => {\n    // set profile picture (prevent constant re-render's)\n    setPictureChatState(renderLastProfilePicMainUser(userData)); // OPEN CHANNELS\n\n    const openChannelListQuery = SBData.OpenChannel.createOpenChannelListQuery();\n    openChannelListQuery.includeEmpty = true;\n    openChannelListQuery.memberStateFilter = 'all'; // 'all', 'joined_only', 'invited_only', 'invited_by_friend', and 'invited_by_non_friend'\n\n    openChannelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n\n    openChannelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n    // CLOSED/PRIVATE CHANNELS\n\n    const closedPrivateChannelListQuery = SBData.GroupChannel.createMyGroupChannelListQuery();\n    closedPrivateChannelListQuery.includeEmpty = true;\n    closedPrivateChannelListQuery.memberStateFilter = 'all'; // 'all', 'joined_only', 'invited_only', 'invited_by_friend', and 'invited_by_non_friend'\n\n    closedPrivateChannelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n\n    closedPrivateChannelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n\n    if (openChannelListQuery.hasNext) {\n      openChannelListQuery.next((groupChannels, error) => {\n        if (error) {\n          // Handle error.\n          console.log(\"openChannelListQuery gather groups errror :\", error);\n        } else {\n          console.log(\"looping...?\", groupChannels);\n          setOpenGroupState(groupChannels); // loop through channels\n\n          groupChannels.forEach(channel => {\n            // looping over channels\n            console.log(\"channel...:\", channel);\n          });\n        }\n      });\n    }\n\n    if (closedPrivateChannelListQuery.hasNext) {\n      closedPrivateChannelListQuery.next((groupChannels, error) => {\n        if (error) {\n          // Handle error.\n          console.log(\"GROUP CHANNELS FETCH ERROR... :\", error);\n        } else {\n          console.log(\"GATHERED group channels (private msging) : \", groupChannels);\n          setPrivateGroupChannels(groupChannels); // groupChannels.forEach(channel => {\n          // });\n        }\n      });\n    }\n  }, []);\n\n  const dynamicImage = image => {// return images(`./${image}`);\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const addEmoji = emoji => {\n    const text = `${messageInput}${emoji.native}`;\n    setShowEmojiPicker(false);\n    setMessageInput(text);\n  };\n\n  const changeChatClick = (e, selectedUserId) => {\n    handleSearchKeyword('');\n  };\n\n  const handleSearchKeyword = keyword => {\n    console.log(\"searching for keyword...\", keyword);\n  };\n\n  const handleMessageChange = message => {\n    setMessageInput(message);\n  };\n\n  const handleMessagePressPublicConversations = e => {\n    if (e.key === \"Enter\" || e === \"send\") {//     const params = new SBData.UserMessageParams();\n      //     params.message = messageInput;\n      //     params.customType = \"group\";\n      //     params.data = {\n      //         type: \"custom-object-data\"\n      //     };\n      //     params.mentionType = 'users';  // Either 'users' or 'channel'\n      //     params.mentionedUserIds = [userData.uniqueId, null]; // Or mentionedUsers = Array<User>;\n      //     // params.metaArrays = [  // A pair of key-value\n      //     //     new sendBirds.me.MessageMetaArray('itemType', ['tablet']),\n      //     //     new sendBirds.me.MessageMetaArray('quality', ['best', 'good'])\n      //     // ];\n      //     params.translationTargetLanguages = [\"en\"]; // French and German\n      //     params.pushNotificationDeliveryOption = 'default'; // Either 'default' or 'suppress'\n      //     channel.sendUserMessage(params, (userMessage, error) => {\n      //         if (error) {\n      //             // Handle error.\n      //             console.log(\"sending msg error... :\", error);\n      //         } else {\n      //             const messageId = userMessage.messageId;\n      //             console.log(\"mess-age...:\", messageId, userMessage);\n      //         }\n      //     });\n    }\n  };\n\n  const chatMenuToggle = () => {// setMenuToggle(!menuToggle)\n  };\n\n  const handleListItemClick = item => {\n    console.log(\"handleListItemClick clicked\", item);\n    SBData.OpenChannel.getChannel(item.url, (openChannel, error) => {\n      if (error) {\n        // Handle error.\n        console.log(\"getChannel error: \", error);\n      } else {\n        const params = new SBData.MessageListParams(); // create param's for message log/chat\n\n        params.prevResultSize = 25;\n        params.nextResultSize = 25;\n        params.isInclusive = true;\n        params.reverse = true;\n        params.replyType = \"all\";\n        params.includeThreadInfo = true;\n        params.includeParentMessageInfo = true; // create timestamp\n\n        const TIMESTAMP = Date.now();\n        console.log(\"openChannel\", openChannel);\n        setChannelState(openChannel); // Pass the params as an argument to the `getMessagesByTimestamp()` method.\n\n        openChannel.getMessagesByTimestamp(TIMESTAMP, params, (messages, error) => {\n          if (error) {\n            // Handle error.\n            console.log(\"error getMessagesByTimestamp :\", error);\n          } else {\n            console.log(\"messages\", messages);\n            setMessageListState(messages);\n          }\n        });\n      }\n    });\n  };\n\n  const renderConversationPeopleList = () => {\n    if (groupType.groupType === \"Private Convo's\") {\n      // private conversation's mapped\n      if (privateGroupChannels.length > 0) {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, privateGroupChannels.map((item, i) => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            onClick: () => handleListItemClickPrivateChannel(item, SBData, setChannelState, setMessageListState),\n            className: `clearfix ${true ? 'active add-hover-message-convo' : 'add-hover-message-convo'}`,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: item.coverUrl,\n            className: \"rounded-circle user-image\",\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: `status-circle ${renderOnlineStatus(item, userData)}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"about\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }\n          }, renderNicknamePrivateGroup(item, userData)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"status\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 41\n            }\n          }, item.name.slice(0, 25), item.name.length > 25 ? \"...\" : \"\")));\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"img-fluid m-auto\",\n          src: errorImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      // public/everyone conversation's mapped\n      if (openGroupChannels.length > 0) {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }\n        }, openGroupChannels.map((item, i) => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            onClick: () => handleListItemClick(item),\n            className: `clearfix ${true ? 'active add-hover-message-convo' : 'add-hover-message-convo'}`,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: item.coverUrl,\n            className: \"rounded-circle user-image\",\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: `status-circle ${renderStatus(item, userData) ? 'online' : 'offline'}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"about\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }\n          }, renderNickname(item, userData)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"status\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 41\n            }\n          }, item.name.slice(0, 25), item.name.length > 25 ? \"...\" : \"\")));\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"img-fluid m-auto\",\n          src: errorImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n  };\n\n  const renderChatMessagingChangesConditionally = () => {\n    channelHandler.onMessageReceived = (channelRecieved, message) => {\n      console.log(\"message recieved~! : \", channelRecieved, message);\n\n      if (channel !== null && channelRecieved.url === channel.url) {\n        setMessageListState(prevState => {\n          return [message, ...prevState];\n        });\n      }\n    };\n\n    channelHandler.onTypingStatusUpdated = (groupChannel, typing) => {\n      console.log(\"typing initiated...\");\n\n      if (channel !== null && channel.url === groupChannel.url) {\n        // change 'show typing indicator' status to TRUE\n        setTypingStatusState(true);\n        setTimeout(() => {\n          setTypingStatusState(false);\n        }, 5000);\n      }\n    };\n\n    SBData.addChannelHandler(userData.uniqueId, channelHandler);\n  };\n\n  const addNewMessageCallback = newMessage => {\n    setMessageListState(prevState => {\n      return [newMessage, ...prevState];\n    });\n  };\n\n  const mainInputBlurred = e => {\n    console.log(\"blurred input!\");\n\n    if (channel !== null) {\n      console.log(\"end typing...\");\n      channel.endTyping();\n    }\n  };\n\n  const handleTypingState = e => {\n    if (e.key === \"Enter\") {\n      if (channel !== null) {\n        console.log(\"STOP typing...\");\n        channel.stopTyping();\n      } else {\n        console.log(\"stop typing - channel doesnt exist.\");\n      }\n    } else {\n      if (channel !== null) {\n        console.log(\"start typing...\");\n        channel.startTyping();\n      } else {\n        console.log(\"start typing - channel doesnt exist.\");\n      }\n    }\n  };\n\n  const handleMessageClickPopover = (item, index) => {\n    console.log(\"handleMessageClickPopover item/index\", item, index);\n\n    if (channel !== null) {\n      console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");\n      setPopoverState(prevState => {\n        return { ...prevState,\n          [`popoverCustom${channel.url}${index}`]: true\n        };\n      });\n    }\n  };\n\n  console.log(\"POPOVER\", popover);\n\n  const closeMessagePopover = (item, index) => {\n    console.log(\"closeMessagePopover item/index\", item, index);\n\n    if (channel !== null) {\n      console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");\n      setPopoverState(prevState => {\n        return { ...prevState,\n          [`popoverCustom${channel.url}${index}`]: false\n        };\n      });\n    }\n  };\n\n  return allMembers && chats && selectedUser ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Messaging\",\n    title: \"Private/Group Messaging\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, renderChatMessagingChangesConditionally(), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    className: \"call-chat-sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"chat-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-left-aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: pictureChat,\n    className: \"rounded-circle user-image\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about custom-msg-about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name f-w-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, `${userData.firstName} ${userData.lastName}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status custom-chat-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, userData.accountType === \"hackers\" ? \"hacker\" : \"employer\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox checkbox-success checkbox-custom-group-change\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    checked: groupType.checked,\n    onChange: e => handleCheckGroupType(e, setGroupType, setMessageListState, setChannelState),\n    id: \"checkbox-primary\",\n    type: \"checkbox\",\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"checkbox-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 67\n    }\n  }, groupType.checked === true ? \"Public\" : \"Private\"), \" Convo's\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"people-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"search\",\n    defaultValue: searchKeyword,\n    onChange: e => handleSearchKeyword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 33\n    }\n  })))), renderConversationPeopleList())))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"call-chat-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"pr-0 chat-right-aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: dynamicImage(selectedUser.thumb),\n    className: \"rounded-circle\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 33\n    }\n  }, selectedUser.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, selectedUser.online ? 'online' : selectedUser.lastSeenDate)), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline float-left float-sm-right chat-menu-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 81\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-clip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 81\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-headphone-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 81\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-video-camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 81\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item toogle-bar\",\n    onClick: () => chatMenuToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 110\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 125\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history chat-msg-box custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, messageList.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subject-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 55\n    }\n  }, \"Subject/Title: \", channel.data) : null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, messageList.length > 0 ? messageList.map((item, index) => {\n    {\n      /* const participators = allMembers.chats.find(x => x.id === item.sender); */\n    }\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `popoverCustom${channel.url}${index}`,\n      onClick: () => handleMessageClickPopover(item, index),\n      className: `message add-hover-message-convo-individual my-message ${item._sender.userId !== userData.uniqueId ? '' : 'float-right'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      isOpen: `popoverCustom${channel.url}${index}` || popover,\n      toggle: () => closeMessagePopover(item, index),\n      placement: \"bottom\",\n      target: `popoverCustom${channel.url}${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 53\n      }\n    }, \"Popover Title\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 53\n      }\n    }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\")), /*#__PURE__*/React.createElement(Media, {\n      src: item._sender.plainProfileUrl,\n      className: `rounded-circle ${item._sender.userId !== userData.uniqueId ? 'float-left' : 'float-right'} chat-user-img img-30`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: item._sender.userId !== userData.uniqueId ? \"message-data-time message-data-time-custom-left float-left\" : \"message-data-time message-data-time-custom-right float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 53\n      }\n    }, moment(item.createdAt).format(\"MM/DD/YYYY, h:mm:ss a\"), \" by \", item._sender.nickname)), item.message, /*#__PURE__*/React.createElement(\"div\", {\n      className: item._sender.userId !== userData.uniqueId ? \"delivery-status-wrapper-right\" : \"delivery-status-wrapper-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: item._sender.userId !== userData.uniqueId ? \"delivery-confirmation-right\" : \"delivery-confirmation-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 53\n      }\n    }, item.sendingStatus === \"succeeded\" ? \"Delivered!\" : \"Pending Delivery...\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"img-fluid\",\n    src: start_conversion,\n    alt: \"start conversion \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 29\n    }\n  }, showEmojiPicker ? /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 37\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    xl: \"12\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smiley-box bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker\",\n    onClick: () => toggleEmojiPicker(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: require('../../../../assets/images/smiley.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control input-txt-bx\",\n    placeholder: \"Type a message......\",\n    value: messageInput,\n    onBlur: e => mainInputBlurred(e),\n    onKeyPress: e => {\n      handleTypingState(e); // conditional check to see which function to run (GROUP/1v1 messaging conversation)\n\n      if (groupType.groupType === \"Private Convo's\") {\n        onKeyPressPrivateSubmitted(e);\n      } else {\n        onKeyPressPublicSubmitted(e);\n      }\n    },\n    onChange: e => handleMessageChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      if (groupType.groupType === \"Private Convo's\") {\n        handleMessagePressPrivateConvos(messageInput, channel, SBData, setMessageInput, addNewMessageCallback);\n      } else {\n        handleMessagePressPublicConversations('send');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 41\n    }\n  }, Send))))))), activelyTyping === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"typing-indicator-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: typingIndicator,\n    className: \"typing-animation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  })) : null), /*#__PURE__*/React.createElement(Col, {\n    className: `pl-0 chat-menu ${menuToggle ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    className: \"nav  border-tab nav-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    tag: \"a\",\n    href: null,\n    className: activeTab === '1' ? 'active' : '',\n    onClick: () => setActiveTab('1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 37\n    }\n  }, CALL)), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    tag: \"a\",\n    href: null,\n    className: activeTab === '2' ? 'active' : '',\n    onClick: () => setActiveTab('2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 37\n    }\n  }, STATUS)), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    tag: \"a\",\n    href: null,\n    className: activeTab === '3' ? 'active' : '',\n    onClick: () => setActiveTab('3'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 37\n    }\n  }, PROFILE))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"people-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list digits custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"rounded-circle user-image\",\n    src: four,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 53\n    }\n  }, EricaHughes), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-share font-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 77\n    }\n  }), \"  \", \"5 May, 4:40 PM\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"rounded-circle user-image mt-0\",\n    src: one,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 53\n    }\n  }, VincentPorter, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-reply font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 57\n    }\n  }), \"  \", \"5 May, 5:30 PM\")))), allMembers.filter(x => x.id !== currentUser.id).map((member, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"clearfix\",\n    key: i,\n    onClick: e => changeChatClick(e, member.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: dynamicImage(member.thumb),\n    className: \"rounded-circle user-image\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 57\n    }\n  }, member.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 57\n    }\n  }, member.reply, member.status))))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"people-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Write Status...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-pencil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 129\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 41\n    }\n  }, Active), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 41\n    }\n  }, ChataApp_p1, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-emo-heart-eyes font-danger f-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-emo-heart-eyes font-danger f-20 m-l-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 41\n    }\n  }, ChataApp_p2, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-emo-rolling-eyes font-success f-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    alt: \"\",\n    src: two,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 81\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-pencil-alt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 75\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-content text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 45\n    }\n  }, MarkJecno), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"social-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-google-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-rss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 101\n    }\n  }))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follow text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 83\n    }\n  }, Following), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follow-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 57\n    }\n  }, \"236k\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 58\n    }\n  }, Follower), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follow-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 57\n    }\n  }, \"3691k\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 49\n    }\n  }, \"Mark.jecno23@gmail.com\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 49\n    }\n  }, \"+91 365 - 658 - 1236\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 49\n    }\n  }, \"Fax: 123-4560\")))))))))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    SBData: state.sendbirdInitData.sendbirdInitData,\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(MessagingMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/messaging/main/messagingMain.js"],"names":["React","useState","useEffect","Fragment","Breadcrumb","Container","Row","Col","Card","CardBody","Media","Form","FormGroup","Input","Label","InputGroup","InputGroupAddon","Button","Nav","NavItem","NavLink","TabPane","TabContent","Popover","PopoverHeader","PopoverBody","four","one","two","errorImg","start_conversion","Picker","CALL","STATUS","PROFILE","EricaHughes","VincentPorter","Active","ChataApp_p1","ChataApp_p2","Following","Follower","MarkJecno","Send","connect","moment","helpers","typingIndicator","handleCheckGroupType","handleListItemClickPrivateChannel","renderOnlineStatus","renderNicknamePrivateGroup","renderNickname","renderStatus","renderLastProfilePicMainUser","handleMessagePressPrivateConvos","onKeyPressPublicSubmitted","onKeyPressPrivateSubmitted","MessagingMainHelper","SBData","userData","channelHandler","ChannelHandler","allMembers","chats","selectedUser","currentUser","searchKeyword","setSearchKeyword","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","menuToggle","setMenuToggle","activeTab","setActiveTab","openGroupChannels","setOpenGroupState","messageList","setMessageListState","channel","setChannelState","activelyTyping","setTypingStatusState","pictureChat","setPictureChatState","popover","setPopoverState","groupType","setGroupType","checked","privateGroupChannels","setPrivateGroupChannels","openChannelListQuery","OpenChannel","createOpenChannelListQuery","includeEmpty","memberStateFilter","order","limit","closedPrivateChannelListQuery","GroupChannel","createMyGroupChannelListQuery","hasNext","next","groupChannels","error","console","log","forEach","dynamicImage","image","toggleEmojiPicker","addEmoji","emoji","text","native","changeChatClick","e","selectedUserId","handleSearchKeyword","keyword","handleMessageChange","message","handleMessagePressPublicConversations","key","chatMenuToggle","handleListItemClick","item","getChannel","url","openChannel","params","MessageListParams","prevResultSize","nextResultSize","isInclusive","reverse","replyType","includeThreadInfo","includeParentMessageInfo","TIMESTAMP","Date","now","getMessagesByTimestamp","messages","renderConversationPeopleList","length","map","i","coverUrl","name","slice","renderChatMessagingChangesConditionally","onMessageReceived","channelRecieved","prevState","onTypingStatusUpdated","groupChannel","typing","setTimeout","addChannelHandler","uniqueId","addNewMessageCallback","newMessage","mainInputBlurred","endTyping","handleTypingState","stopTyping","startTyping","handleMessageClickPopover","index","closeMessagePopover","firstName","lastName","accountType","textDecorationLine","target","value","thumb","online","lastSeenDate","data","_sender","userId","plainProfileUrl","createdAt","format","nickname","sendingStatus","require","filter","x","id","member","reply","status","mapStateToProps","state","sendbirdInitData","auth"],"mappings":"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","sourcesContent":["import React,{useState,useEffect, Fragment} from 'react';\nimport Breadcrumb from '../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardBody, Media, Form, FormGroup, Input, Label, InputGroup, InputGroupAddon, Button, Nav, NavItem, NavLink, TabPane, TabContent, Popover, PopoverHeader, PopoverBody } from 'reactstrap'\nimport four from '../../../../assets/images/user/4.jpg';\nimport one from '../../../../assets/images/user/1.jpg';\nimport two from '../../../../assets/images/user/2.png';\nimport errorImg from '../../../../assets/images/search-not-found.png';\nimport start_conversion from '../../../../assets/images/start-conversion.jpg';\nimport {Picker} from 'emoji-mart'\nimport { CALL, STATUS, PROFILE, EricaHughes, VincentPorter, Active, ChataApp_p1, ChataApp_p2, Following, Follower, MarkJecno, Send } from '../../../../constant';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"./styles.css\";\nimport helpers from \"./helpers/mainHelperFunctions.js\";\nimport typingIndicator from \"../../../../assets/gifs/typing-white.gif\";\n\nconst { \n    handleCheckGroupType,\n    handleListItemClickPrivateChannel,\n    renderOnlineStatus,\n    renderNicknamePrivateGroup,\n    renderNickname,\n    renderStatus,\n    renderLastProfilePicMainUser,\n    handleMessagePressPrivateConvos,\n    onKeyPressPublicSubmitted,\n    onKeyPressPrivateSubmitted\n} = helpers;\n\nconst MessagingMainHelper = ({ SBData, userData }) =>  {\n\n    const channelHandler = new SBData.ChannelHandler();\n\n    const allMembers = [];\n    const chats = [];\n    const selectedUser = [];\n    const currentUser = [];\n    const [ searchKeyword, setSearchKeyword ] = useState('');\n    const [ messageInput, setMessageInput ] = useState('');\n    const [ showEmojiPicker,setShowEmojiPicker ] = useState(false)\n    const [ menuToggle, setMenuToggle ] = useState(false);\n    const [ activeTab, setActiveTab ] = useState('1');\n    const [ openGroupChannels, setOpenGroupState ] = useState([]);\n    const [ messageList, setMessageListState ] = useState([]);\n    const [ channel, setChannelState ] = useState(null);\n    const [ activelyTyping, setTypingStatusState ] = useState(false);\n    const [ pictureChat, setPictureChatState ] = useState(null);\n    const [ popover, setPopoverState ] = useState({});\n    const [ groupType, setGroupType ] = useState({\n        groupType: \"Private Convo's\",\n        checked: false\n    });\n    const [ privateGroupChannels, setPrivateGroupChannels ] = useState([]);\n\n    useEffect(() => {\n        // set profile picture (prevent constant re-render's)\n        setPictureChatState(renderLastProfilePicMainUser(userData));\n        // OPEN CHANNELS\n        const openChannelListQuery = SBData.OpenChannel.createOpenChannelListQuery();\n        openChannelListQuery.includeEmpty = true;\n        openChannelListQuery.memberStateFilter = 'all';    // 'all', 'joined_only', 'invited_only', 'invited_by_friend', and 'invited_by_non_friend'\n        openChannelListQuery.order = 'latest_last_message';    // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n        openChannelListQuery.limit = 20;   // The value of pagination limit could be set up to 100.\n        // CLOSED/PRIVATE CHANNELS\n        const closedPrivateChannelListQuery = SBData.GroupChannel.createMyGroupChannelListQuery();\n        closedPrivateChannelListQuery.includeEmpty = true;\n        closedPrivateChannelListQuery.memberStateFilter = 'all';    // 'all', 'joined_only', 'invited_only', 'invited_by_friend', and 'invited_by_non_friend'\n        closedPrivateChannelListQuery.order = 'latest_last_message';    // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n        closedPrivateChannelListQuery.limit = 20;   // The value of pagination limit could be set up to 100.\n\n        if (openChannelListQuery.hasNext) {\n            openChannelListQuery.next((groupChannels, error) => {\n                if (error) {\n                    // Handle error.\n                    console.log(\"openChannelListQuery gather groups errror :\", error);\n                } else {\n                    console.log(\"looping...?\", groupChannels);\n\n                    setOpenGroupState(groupChannels);\n                    // loop through channels\n                    groupChannels.forEach(channel => {\n                        // looping over channels\n                        console.log(\"channel...:\", channel);\n                    });\n                }\n            });\n        } \n        if (closedPrivateChannelListQuery.hasNext) {\n            closedPrivateChannelListQuery.next((groupChannels, error) => {\n                if (error) {\n                    // Handle error.\n                    console.log(\"GROUP CHANNELS FETCH ERROR... :\", error);\n                } else {\n\n                    console.log(\"GATHERED group channels (private msging) : \", groupChannels);\n\n                    setPrivateGroupChannels(groupChannels);\n\n                    // groupChannels.forEach(channel => {\n\n                    // });\n                }\n            });\n        }\n    }, []);\n    \n    const dynamicImage = (image) => {\n        // return images(`./${image}`);\n    }\n    \n    const toggleEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n  \n    const addEmoji = (emoji) =>  {\n        const text = `${messageInput}${emoji.native}`;\n        setShowEmojiPicker(false);\n        setMessageInput(text)\n    }\n\n    const changeChatClick = (e, selectedUserId) => {\n        handleSearchKeyword('');\n    }\n\n    const handleSearchKeyword = (keyword) => {\n        console.log(\"searching for keyword...\", keyword);\n    }\n\n    const handleMessageChange = (message) => {\n        setMessageInput(message)\n    }\n\n    const handleMessagePressPublicConversations = (e) => {\n        if (e.key === \"Enter\" || e === \"send\") {\n        //     const params = new SBData.UserMessageParams();\n\n        //     params.message = messageInput;\n        //     params.customType = \"group\";\n        //     params.data = {\n        //         type: \"custom-object-data\"\n        //     };\n        //     params.mentionType = 'users';  // Either 'users' or 'channel'\n        //     params.mentionedUserIds = [userData.uniqueId, null]; // Or mentionedUsers = Array<User>;\n        //     // params.metaArrays = [  // A pair of key-value\n        //     //     new sendBirds.me.MessageMetaArray('itemType', ['tablet']),\n        //     //     new sendBirds.me.MessageMetaArray('quality', ['best', 'good'])\n        //     // ];\n        //     params.translationTargetLanguages = [\"en\"]; // French and German\n        //     params.pushNotificationDeliveryOption = 'default'; // Either 'default' or 'suppress'\n            \n        //     channel.sendUserMessage(params, (userMessage, error) => {\n        //         if (error) {\n        //             // Handle error.\n        //             console.log(\"sending msg error... :\", error);\n        //         } else {\n        //             const messageId = userMessage.messageId;\n\n        //             console.log(\"mess-age...:\", messageId, userMessage);\n        //         }\n        //     });\n        }\n    }\n\n    const chatMenuToggle = () => {\n        // setMenuToggle(!menuToggle)\n    }\n\n    const handleListItemClick = (item) => {\n        console.log(\"handleListItemClick clicked\", item);\n\n        SBData.OpenChannel.getChannel(item.url, (openChannel, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"getChannel error: \", error);\n            } else {\n                const params = new SBData.MessageListParams();\n                // create param's for message log/chat\n                params.prevResultSize = 25;\n                params.nextResultSize = 25;\n                params.isInclusive = true;\n                params.reverse = true;\n                params.replyType = \"all\";\n                params.includeThreadInfo = true;\n                params.includeParentMessageInfo = true;\n                // create timestamp\n                const TIMESTAMP = Date.now();\n\n                console.log(\"openChannel\", openChannel);\n\n                setChannelState(openChannel);\n\n                // Pass the params as an argument to the `getMessagesByTimestamp()` method.\n                openChannel.getMessagesByTimestamp(TIMESTAMP, params, (messages, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"error getMessagesByTimestamp :\", error);\n                    } else {\n                        console.log(\"messages\", messages);\n\n                        setMessageListState(messages);\n                    }\n                });\n            }\n        });\n    }\n    const renderConversationPeopleList = () => {\n        if (groupType.groupType === \"Private Convo's\") {\n            // private conversation's mapped\n            if (privateGroupChannels.length > 0) {\n                return (\n                    <ul className=\"list\">\n                        {privateGroupChannels.map((item, i) => {\n                            return (\n                                <li onClick={() => handleListItemClickPrivateChannel(item, SBData, setChannelState, setMessageListState)} className={`clearfix ${true ? 'active add-hover-message-convo' : 'add-hover-message-convo'}`}\n                                    key={i}>\n                                    <img src={item.coverUrl} className=\"rounded-circle user-image\" alt=\"\" />\n                                    <div className={`status-circle ${renderOnlineStatus(item, userData)}`}></div>\n                                    <div className=\"about\">\n                                    <div className=\"name\">{renderNicknamePrivateGroup(item, userData)}</div>\n                                        <div className=\"status\">\n                                            {item.name.slice(0, 25)}{item.name.length > 25 ? \"...\" : \"\"}\n                                        </div>\n                                    </div>\n                                </li>);\n                        })\n                        }\n                    </ul>\n                );\n            } else {\n                return <Media className=\"img-fluid m-auto\" src={errorImg} alt=\"\"/>;\n            }\n        } else {\n            // public/everyone conversation's mapped\n            if (openGroupChannels.length > 0) {\n                return (\n                    <ul className=\"list\">\n                        {openGroupChannels.map((item, i) => {\n                            return (\n                                <li onClick={() => handleListItemClick(item)} className={`clearfix ${true ? 'active add-hover-message-convo' : 'add-hover-message-convo'}`}\n                                    key={i}>\n                                    <img src={item.coverUrl} className=\"rounded-circle user-image\" alt=\"\" />\n                                    <div className={`status-circle ${renderStatus(item, userData) ? 'online' : 'offline'}`}></div>\n                                    <div className=\"about\">\n                                    <div className=\"name\">{renderNickname(item, userData)}</div>\n                                        <div className=\"status\">\n                                            {item.name.slice(0, 25)}{item.name.length > 25 ? \"...\" : \"\"}\n                                        </div>\n                                    </div>\n                                </li>);\n                        })\n                        }\n                    </ul>\n                );\n            } else {\n                return <Media className=\"img-fluid m-auto\" src={errorImg} alt=\"\"/>;\n            }\n        }\n    }\n    const renderChatMessagingChangesConditionally = () => {\n        channelHandler.onMessageReceived = (channelRecieved, message) => {\n            console.log(\"message recieved~! : \", channelRecieved, message);\n\n            if (channel !== null && channelRecieved.url === channel.url) {\n                setMessageListState(prevState => {\n                    return [message, ...prevState]\n                })\n            } \n        };\n        channelHandler.onTypingStatusUpdated = (groupChannel, typing) => {\n            console.log(\"typing initiated...\")\n            if (channel !== null && channel.url === groupChannel.url) {\n                // change 'show typing indicator' status to TRUE\n                setTypingStatusState(true);\n\n                setTimeout(() => {\n                    setTypingStatusState(false);\n                }, 5000);   \n            } \n        };\n\n        SBData.addChannelHandler(userData.uniqueId, channelHandler);\n    }\n    const addNewMessageCallback = (newMessage) => {\n        setMessageListState(prevState => {\n            return [newMessage, ...prevState]\n        })\n    }\n    const mainInputBlurred = (e) => {\n        console.log(\"blurred input!\");\n\n        if (channel !== null) {\n            console.log(\"end typing...\");\n\n            channel.endTyping();\n        }\n    }\n    const handleTypingState = (e) => {\n        if (e.key === \"Enter\") {\n\n            if (channel !== null) {\n                console.log(\"STOP typing...\");\n                \n                channel.stopTyping();\n            } else {\n                console.log(\"stop typing - channel doesnt exist.\")\n            }\n        } else {\n\n            if (channel !== null) {\n                console.log(\"start typing...\");\n                \n                channel.startTyping();\n            } else {\n                console.log(\"start typing - channel doesnt exist.\")\n            }\n        }\n    }\n    const handleMessageClickPopover = (item, index) => {\n        console.log(\"handleMessageClickPopover item/index\", item, index);\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");\n\n            setPopoverState(prevState => {\n                return {\n                    ...prevState,\n                    [`popoverCustom${channel.url}${index}`]: true\n                }\n            });  \n        } \n    }\n    console.log(\"POPOVER\", popover);\n    const closeMessagePopover = (item, index) => {\n        console.log(\"closeMessagePopover item/index\", item, index);\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");\n\n            setPopoverState(prevState => {\n                return {\n                    ...prevState,\n                    [`popoverCustom${channel.url}${index}`]: false\n                }\n            });  \n        } \n    }\n    return (\n        (allMembers && chats && selectedUser) ?\n        <Fragment>\n        <Breadcrumb parent=\"Messaging\" title=\"Private/Group Messaging\"/>\n        <Container fluid={true}>\n            {renderChatMessagingChangesConditionally()}\n            <Row>\n              <Col sm=\"12\" className=\"call-chat-sidebar\">\n                <Card>\n                  <CardBody className=\"chat-body\">\n                    <div className=\"chat-box\">\n                      <div className=\"chat-left-aside\">\n                        <div className=\"media\">\n                        <Media  src={pictureChat} className=\"rounded-circle user-image\" alt=\"\" />\n                        <div className=\"about custom-msg-about\">\n                            <div className=\"name f-w-600\">{`${userData.firstName} ${userData.lastName}`}</div>\n                            <div className=\"status custom-chat-row\">\n                                {userData.accountType === \"hackers\" ? \"hacker\" : \"employer\"}\n                                <div className=\"checkbox checkbox-success checkbox-custom-group-change\">\n                                    <Input checked={groupType.checked} onChange={(e) => handleCheckGroupType(e, setGroupType, setMessageListState, setChannelState)} id=\"checkbox-primary\" type=\"checkbox\" defaultChecked/>\n                                    <Label for=\"checkbox-primary\"><strong style={{ textDecorationLine: \"underline\" }}>{groupType.checked === true ? \"Public\" : \"Private\"}</strong> Convo's</Label>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"people-list\">\n                          <div className=\"search\">\n                            <Form className=\"theme-form\">\n                              <FormGroup className=\"form-group\">\n                              <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"search\"\n                                    defaultValue={searchKeyword}\n                                    onChange={(e) => handleSearchKeyword(e.target.value)}\n                                />\n                                <i className=\"fa fa-search\"></i>\n                              </FormGroup>\n                            </Form>\n                          </div>\n                          {renderConversationPeopleList()}\n                        </div>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col className=\"call-chat-body\">\n                <Card>\n                  <CardBody className=\"p-0\">\n                    <Row className=\"chat-box\">\n                      <Col className=\"pr-0 chat-right-aside\">\n                        <div className=\"chat\">\n                         <div className=\"chat-header clearfix\">\n                            <Media src={dynamicImage(selectedUser.thumb)} className=\"rounded-circle\" alt=\"\" />\n                            <div className=\"about\">\n                                <div className=\"name\">\n                                    {selectedUser.name}\n                                </div>\n                                <div className=\"status digits\" >\n                                    {selectedUser.online ? 'online' : selectedUser.lastSeenDate}\n                                </div>\n                            </div>\n                            <ul className=\"list-inline float-left float-sm-right chat-menu-icons\">\n                                <li className=\"list-inline-item\"><a href={null}><i className=\"icon-search\"></i></a></li>\n                                <li className=\"list-inline-item\"><a href={null}><i className=\"icon-clip\"></i></a></li>\n                                <li className=\"list-inline-item\"><a href={null}><i className=\"icon-headphone-alt\"></i></a></li>\n                                <li className=\"list-inline-item\"><a href={null}><i className=\"icon-video-camera\"></i></a></li>\n                                <li className=\"list-inline-item toogle-bar\" onClick={() => chatMenuToggle()}><a href={null}><i className=\"icon-menu\"></i></a></li>\n                            </ul>\n                        </div>\n                        <div className=\"chat-history chat-msg-box custom-scrollbar\">\n                            {messageList.length > 0 ? <p className=\"subject-title\">Subject/Title: {channel.data}</p> : null}\n                            <ul>\n                                {messageList.length > 0 ? messageList.map((item, index) => {\n                                    {/* const participators = allMembers.chats.find(x => x.id === item.sender); */}\n                                    return (\n                                        <li key={index} className=\"clearfix\">\n                                            <div id={`popoverCustom${channel.url}${index}`} onClick={() => handleMessageClickPopover(item, index)} className={`message add-hover-message-convo-individual my-message ${item._sender.userId !== userData.uniqueId ? '' : 'float-right'}`}>\n                                                <Popover isOpen={`popoverCustom${channel.url}${index}` || popover} toggle={() => closeMessagePopover(item, index)} placement=\"bottom\" target={`popoverCustom${channel.url}${index}`}>\n                                                    <PopoverHeader>Popover Title</PopoverHeader>\n                                                    <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\n                                                </Popover>\n                                                <Media src={item._sender.plainProfileUrl}\n                                                    className={`rounded-circle ${item._sender.userId !== userData.uniqueId ? 'float-left' : 'float-right'} chat-user-img img-30`} alt=\"\" />\n                                                <div className=\"message-data text-right\">\n                                                    <span className={item._sender.userId !== userData.uniqueId ? \"message-data-time message-data-time-custom-left float-left\" : \"message-data-time message-data-time-custom-right float-right\"}>{moment(item.createdAt).format(\"MM/DD/YYYY, h:mm:ss a\")} by {item._sender.nickname}</span>\n                                                </div>\n                                                {item.message}\n                                                <div className={item._sender.userId !== userData.uniqueId ? \"delivery-status-wrapper-right\" : \"delivery-status-wrapper-left\"}>\n                                                    <p className={item._sender.userId !== userData.uniqueId ? \"delivery-confirmation-right\" : \"delivery-confirmation-left\"}>{item.sendingStatus === \"succeeded\" ? \"Delivered!\" : \"Pending Delivery...\"}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    );\n                                }) :\n                                    <div>\n                                        <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                                    </div>\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"chat-message clearfix\">\n                            <Row>\n                            <div className=\"mb-2\">\n                            {showEmojiPicker ? (\n                                    <Picker set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                             ) : null}\n                             </div>\n                              <Col xl=\"12\" className=\"d-flex\">\n                                <div className=\"smiley-box bg-primary\">\n                                \n                                    <div className=\"picker\" onClick={() => toggleEmojiPicker()}>\n                                    <Media src={require('../../../../assets/images/smiley.png')}  alt=\"\"/>\n                                    </div>\n\n                                </div>\n                                <InputGroup className=\"text-box\">\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control input-txt-bx\"\n                                        placeholder=\"Type a message......\"\n                                        value={messageInput}\n                                        onBlur={(e) => mainInputBlurred(e)}\n                                        onKeyPress={(e) => {\n                                            handleTypingState(e);\n                                            // conditional check to see which function to run (GROUP/1v1 messaging conversation)\n                                            if (groupType.groupType === \"Private Convo's\") {\n                                                onKeyPressPrivateSubmitted(e);\n                                            } else {\n                                                onKeyPressPublicSubmitted(e);\n                                            }\n                                        }}\n                                        onChange={(e) => handleMessageChange(e.target.value)}\n                                    />\n                                    <InputGroupAddon addonType=\"append\">\n                                        <Button color=\"primary\" onClick={() => {\n                                            if (groupType.groupType === \"Private Convo's\") {\n                                                handleMessagePressPrivateConvos(messageInput, channel, SBData, setMessageInput, addNewMessageCallback);\n                                            } else {\n                                                handleMessagePressPublicConversations('send')\n                                            }\n                                        }} >{Send}</Button>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                              </Col>\n                            </Row>\n                          </div>\n                        </div>\n                        {activelyTyping === true ? <div className={\"typing-indicator-wrapper\"}>\n                            <img src={typingIndicator} className={\"typing-animation\"} />\n                        </div> : null}\n                      </Col>\n                      <Col className={`pl-0 chat-menu ${menuToggle ? 'show' : ''}`}>\n                            <Nav tabs className=\"nav  border-tab nav-primary\">\n                                <NavItem  id=\"myTab\" role=\"tablist\">\n                                    <NavLink tag=\"a\" href={null} className={activeTab === '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                        {CALL}\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem  id=\"myTab\" role=\"tablist\">\n                                    <NavLink tag=\"a\" href={null} className={activeTab === '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                        {STATUS}\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem  id=\"myTab\" role=\"tablist\">\n                                    <NavLink tag=\"a\" href={null} className={activeTab === '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\n                                        {PROFILE}\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <TabContent activeTab={activeTab}>\n                                <TabPane tabId=\"1\">\n                                    <div className=\"people-list\">\n                                        <ul className=\"list digits custom-scrollbar\">\n                                            <li className=\"clearfix\"><Media className=\"rounded-circle user-image\" src={four} alt=\"\" />\n                                                <div className=\"about\">\n                                                    <div className=\"name\">{EricaHughes}</div>\n                                                    <div className=\"status\"><i className=\"fa fa-share font-success\"></i>  {\"5 May, 4:40 PM\"}</div>\n                                                </div>\n                                            </li>\n                                            <li className=\"clearfix\"><Media className=\"rounded-circle user-image mt-0\" src={one} alt=\"\" />\n                                                <div className=\"about\">\n                                                    <div className=\"name\">{VincentPorter}\n                                                        <div className=\"status\">\n                                                        <i className=\"fa fa-reply font-danger\"></i>  {\"5 May, 5:30 PM\"}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            {allMembers.filter(x => x.id !== currentUser.id).map((member, i) =>\n                                                <li className=\"clearfix\" key={i} onClick={(e) => changeChatClick(e, member.id)}>\n                                                    <Media src={dynamicImage(member.thumb)} className=\"rounded-circle user-image\" alt=\"\" />\n                                                    <div className=\"about\">\n                                                        <div className=\"name\">{member.name}</div>\n                                                        <div className=\"status\">\n                                                            {member.reply}\n                                                            {member.status}\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            )}\n                                        </ul>\n                                    </div>\n                                </TabPane>\n                                <TabPane tabId=\"2\">\n                                    <div className=\"people-list\">\n                                        <div className=\"search\">\n                                            <Form className=\"theme-form\">\n                                                <FormGroup>\n                                                    <Input className=\"form-control\" type=\"text\" placeholder=\"Write Status...\" /><i className=\"fa fa-pencil\"></i>\n                                                </FormGroup>\n                                            </Form>\n                                        </div>\n                                    </div>\n                                    <div className=\"status\">\n                                        <p className=\"font-dark\">{Active}</p>\n                                        <hr />\n                                        <p>\n                                            {ChataApp_p1}\n                                            <i className=\"icofont icofont-emo-heart-eyes font-danger f-20\"></i>\n                                            <i className=\"icofont icofont-emo-heart-eyes font-danger f-20 m-l-5\"></i>\n                                        </p>\n                                        <hr />\n                                        <p>{ChataApp_p2}<i className=\"icofont icofont-emo-rolling-eyes font-success f-20\"></i></p>\n                                    </div>\n                                </TabPane>\n                                <TabPane tabId=\"3\">\n                                    <div className=\"user-profile\">\n                                        <div className=\"image\">\n                                            <div className=\"avatar text-center\"><Media body alt=\"\" src={two} /></div>\n                                            <div className=\"icon-wrapper\"><i className=\"icofont icofont-pencil-alt-5\"></i></div>\n                                        </div>\n                                        <div className=\"user-content text-center\">\n                                            <h5 className=\"text-uppercase\">{MarkJecno}</h5>\n                                            <div className=\"social-media\">\n                                                <ul className=\"list-inline\">\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"fa fa-facebook\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"fa fa-google-plus\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"fa fa-twitter\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"fa fa-instagram\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"fa fa-rss\"></i></a></li>\n                                                </ul>\n                                            </div>\n                                            <hr />\n                                            <div className=\"follow text-center\">\n                                                <Row>\n                                                    <Col className=\"border-right\"><span>{Following}</span>\n                                                        <div className=\"follow-num\">{\"236k\"}</div>\n                                                    </Col>\n                                                    <Col><span>{Follower}</span>\n                                                        <div className=\"follow-num\">{\"3691k\"}</div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <hr />\n                                            <div className=\"text-center digits\">\n                                                <p className=\"mb-0\">{\"Mark.jecno23@gmail.com\"}</p>\n                                                <p className=\"mb-0\">{\"+91 365 - 658 - 1236\"}</p>\n                                                <p className=\"mb-0\">{\"Fax: 123-4560\"}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </TabPane>\n                            </TabContent>\n                        </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n        : \n        <div className=\"loading\"></div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        SBData: state.sendbirdInitData.sendbirdInitData,\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(MessagingMainHelper);"]},"metadata":{},"sourceType":"module"}