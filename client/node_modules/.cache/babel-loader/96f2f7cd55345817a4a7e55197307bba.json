{"ast":null,"code":"import React,{Fragment}from\"react\";import{ListGroupItem,Row,Col,Badge,Button}from'reactstrap';import axios from\"axios\";import{NotificationManager}from'react-notifications';import FileViewer from'react-file-viewer';import _ from\"lodash\";const CustomInputHelper=(accept,onFiles,setCurrentFilePathData,setCurrentUploadFileStatus,setFileReadyStatus)=>{const text=\"Drop a file OR select to browse local data\";return/*#__PURE__*/React.createElement(\"label\",{className:\"custom-input-dropzone-copy\",style:{backgroundColor:'#007bff',color:'#fff',cursor:'pointer',padding:15,borderRadius:3}},text,/*#__PURE__*/React.createElement(\"input\",{style:{display:'none'},type:\"file\",accept:accept,multiple:false,className:\"custom-dropzone-input-actual-input\",onChange:e=>{const file=e.target.files[0];// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(file));// set status update for current file\nsetCurrentUploadFileStatus(file);// mark file as READY \nsetFileReadyStatus(true);// update \"Dropzone\" component state (NOT this react component state).\nonFiles([file]);}}));};const handleSubmit=(runSubmit,currentFileSelectedUpload,fileMetaData,setProgress,setMetaFileData,setFileReadyStatus,setCurrentUploadFileStatus,setFiles)=>{console.log(\"submitted!\",currentFileSelectedUpload,fileMetaData);const data=new FormData();data.append(\"file\",currentFileSelectedUpload);data.append(\"meta\",fileMetaData);const config={onUploadProgress:progressEvent=>{let percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);},headers:{'Content-Type':'multipart/form-data'}};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/upload/misc/file\"),data,config).then(res=>{if(res.data.message===\"Successfully uploaded file!\"){console.log(res.data);const{file}=res.data;// update current file in main component\nNotificationManager.success(\"We've successfully uploaded your file! Please proceed filling out your information...\",'Successfully uploaded file!',4500);setFiles(file);setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);runSubmit();}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(err);});};const calculateFileType=type=>{switch(type){case\"video/mp4\":return\"mp4\";break;case\"image/png\":return\"png\";break;case\"image/jpeg\":return\"jpeg\";break;case\"image/jpg\":return\"jpg\";break;case\"image/gif\":return\"gif\";break;case\"image/bmp\":return\"bmp\";break;case\"application/pdf\":return\"pdf\";break;case\"text/csv\":return\"csv\";break;case\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":return\"xlsx\";break;case\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":return\"docx\";break;case\"video/webm\":return\"webm\";break;case\"audio/mpeg\":return\"mp3\";break;default:break;}};const renderCustomButtonDropzone=(data,e,currentFileSelectedUpload,setMetaFileData,setFileReadyStatus,fileMetaData,setProgress,setCurrentUploadFileStatus,fileReady,setFiles)=>{const{meta}=data.files[0];console.log(\"meta\",meta);if(currentFileSelectedUpload===null){return null;}else{if(fileReady===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{e.preventDefault();// file meta data for next action\nsetMetaFileData(meta);// set file status as ready or prepared.\nsetFileReadyStatus(false);const runSubmit=data.onSubmit;handleSubmit(runSubmit,currentFileSelectedUpload,fileMetaData,setProgress,setMetaFileData,setFileReadyStatus,setCurrentUploadFileStatus,setFiles);},className:\"btn-air-secondary\",color:\"secondary\",size:\"md\"},\"Submit & Upload New File!\"));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:()=>{NotificationManager.warning(\"File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.\",'Still preparing!',4500);},className:\"btn-air-light\",color:\"light\",size:\"md\"},\"Submit & Upload New File!\"));}}};const renderPreviewOfFile=(data,fileReady,filePathData)=>{const file=data.fileWithMeta.file;// return preview data via FileViewer (to not exclude documents such as .docx and such...);\nif(fileReady===true){return/*#__PURE__*/React.createElement(\"div\",{className:\"filereader-preview-dropzone\"},/*#__PURE__*/React.createElement(FileViewer,{fileType:calculateFileType(file.type),filePath:filePathData,onError:err=>NotificationManager.warning(\"Error 'loading' your recently selected 'preview' file - please select another file & try again...\",'File loading error!',4500),key:file.id}));}else{return null;}};const onSubmitHelper=(files,allFiles)=>{allFiles.forEach(file=>{file.remove();});};export default{onSubmitHelper,renderPreviewOfFile,renderCustomButtonDropzone,CustomInputHelper};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/helpers/miscFunctions.js"],"names":["React","Fragment","ListGroupItem","Row","Col","Badge","Button","axios","NotificationManager","FileViewer","_","CustomInputHelper","accept","onFiles","setCurrentFilePathData","setCurrentUploadFileStatus","setFileReadyStatus","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","URL","createObjectURL","handleSubmit","runSubmit","currentFileSelectedUpload","fileMetaData","setProgress","setMetaFileData","setFiles","console","log","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","catch","err","calculateFileType","type","renderCustomButtonDropzone","fileReady","meta","marginTop","preventDefault","onSubmit","warning","renderPreviewOfFile","filePathData","fileWithMeta","id","onSubmitHelper","allFiles","forEach","remove"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { ListGroupItem, Row, Col, Badge, Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\n\nconst CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n\n    const text = \"Drop a file OR select to browse local data\";\n\n    return (\n        <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n            {text}\n            <input\n                style={{ display: 'none' }}\n                type=\"file\"\n                accept={accept}\n                multiple={false}\n                className={\"custom-dropzone-input-actual-input\"}\n                onChange={e => {\n                    const file = e.target.files[0];\n                    // set current file path to convert to readable URL later\n                    setCurrentFilePathData(URL.createObjectURL(file));\n                    // set status update for current file\n                    setCurrentUploadFileStatus(file);\n                    // mark file as READY \n                    setFileReadyStatus(true);\n                    // update \"Dropzone\" component state (NOT this react component state).\n                    onFiles([file])\n                }}\n            />\n        </label>\n    );\n}\nconst handleSubmit = (runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles) => {\n\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n    const data = new FormData();\n\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n\n    const config = {\n        onUploadProgress: (progressEvent) => {\n            let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n            setProgress(percentCompleted);\n        },\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file`, data, config).then((res) => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n            console.log(res.data);\n\n            const { file } = res.data;\n\n            // update current file in main component\n            NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information...`, 'Successfully uploaded file!', 4500);\n\n            setFiles(file);\n\n            setMetaFileData(null);\n            setFileReadyStatus(false);\n            setCurrentUploadFileStatus(null);\n\n            runSubmit();\n        } else {\n            console.log(\"Err\", res.data);\n        }\n    }).catch((err) => {\n        console.log(err);\n    })\n};\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst renderCustomButtonDropzone = (data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles) => {\n\n    const { meta } = data.files[0];\n\n    console.log(\"meta\", meta);\n\n    if (currentFileSelectedUpload === null) {\n        return null;\n    } else {\n        if (fileReady === true) {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                        e.preventDefault();\n                        // file meta data for next action\n                        setMetaFileData(meta);\n                        // set file status as ready or prepared.\n                        setFileReadyStatus(false);\n\n                        const runSubmit = data.onSubmit;\n\n                        handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setFiles);\n                    }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                        NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                    }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        }\n    }\n}\nconst renderPreviewOfFile = (data, fileReady, filePathData) => {\n\n    const file = data.fileWithMeta.file;\n    // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n    if (fileReady === true) {\n        return (\n            <div className=\"filereader-preview-dropzone\">\n                <FileViewer\n                    fileType={calculateFileType(file.type)}\n                    filePath={filePathData}\n                    onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                    key={file.id}\n                />\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\nconst onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach((file) => {\n        file.remove();\n    })\n}\n\nexport default {\n    onSubmitHelper, \n    renderPreviewOfFile, \n    renderCustomButtonDropzone, \n    CustomInputHelper\n};\n  "]},"metadata":{},"sourceType":"module"}