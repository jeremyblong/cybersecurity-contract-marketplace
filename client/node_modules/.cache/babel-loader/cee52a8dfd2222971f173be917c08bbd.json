{"ast":null,"code":"import React,{useState,useEffect,Fragment}from'react';import\"./styles.css\";import Sheet from'react-modal-sheet';import{Button,Container,Row,Col,Card,CardHeader,CardBody,Progress,Badge,Label,Input,InputGroup,FormGroup}from\"reactstrap\";import axios from'axios';import ReactMarkdown from'react-markdown';import remarkGfm from'remark-gfm';import ReactPlayer from'react-player';import moment from\"moment\";import{NotificationManager}from\"react-notifications\";import Cards from'react-credit-cards';import Select from'react-select';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';const monthOptions=[{value:'01',label:'01'},{value:'02',label:'02'},{value:'03',label:'03'},{value:'04',label:'04'},{value:'05',label:'05'},{value:'06',label:'06'},{value:'07',label:'07'},{value:'08',label:'08'},{value:'09',label:'09'},{value:'10',label:'10'},{value:'11',label:'11'},{value:'12',label:'12'}];const yearOptions=[{label:\"2022\",value:\"22\"},{label:\"2023\",value:\"23\"},{label:\"2024\",value:\"24\"},{label:\"2025\",value:\"25\"},{label:\"2026\",value:\"26\"},{label:\"2027\",value:\"27\"},{label:\"2028\",value:\"28\"},{label:\"2029\",value:\"29\"},{label:\"2030\",value:\"30\"},{label:\"2031\",value:\"31\"},{label:\"2032\",value:\"32\"},{label:\"2033\",value:\"33\"},{label:\"2034\",value:\"34\"},{label:\"2035\",value:\"35\"}];const BoostAlreadyPostedEmployerListingPaneHelper=_ref=>{let{userData,listingBoostSelected,employerListingPromotePane,setSheetOpenEmployerListingPromote}=_ref;const[listings,setListingData]=useState([]);const[selected,setSelected]=useState(null);const[fullySelected,setFullySelected]=useState(null);const[cardPaymentSelected,setSelectedCardPayment]=useState(null);const[previousCards,setPreviousCardsData]=useState([]);const[selectedMonth,setSelectedMonth]=useState(null);const[selectedYear,setSelectedYear]=useState(null);const[ready,setReady]=useState(false);const[cardData,setCardData]=useState({focus:\"\",cvc:\"\",name:\"\",number:\"\",expiry:\"\"});useEffect(()=>{const config={params:{id:userData.uniqueId}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/employer/payment/methods/cards/only\"),config).then(res=>{if(res.data.message===\"Gathered employer payment cards!\"){console.log(res.data);const{cards}=res.data;const convertedPaymentsArr=[];for(let index=0;index<cards.data.length;index++){const method=cards.data[index];const{last4}=method.card;convertedPaymentsArr.push({label:\"**** **** **** \".concat(last4),value:method});}setPreviousCardsData(convertedPaymentsArr);setReady(true);}else{console.log(\"err\",res.data);NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\",\"Failed to load previous method's!\",4750);}}).catch(err=>{console.log(err);NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\",\"Failed to load previous method's!\",4750);});},[]);useEffect(()=>{const configuration={params:{id:userData.uniqueId}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/fetch/related/employer/listings/employer/account\"),configuration).then(res=>{if(res.data.message===\"Gathered related listings to choose from!\"){console.log(res.data);const{listings}=res.data;setListingData(listings);}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(err);});},[]);const calculateBoostCost=tier=>{switch(tier){case\"tier-1\":return\"$10.00 (plus applicable taxes)\";break;case\"tier-2\":return\"$30.00 (plus applicable taxes)\";break;case\"tier-3\":return\"50.00 (plus applicable taxes)\";break;default:break;}};const calculateTier=tier=>{switch(tier){case\"tier-1\":return\"Tier One (1)\";break;case\"tier-2\":return\"Tier Two (2)\";break;case\"tier-3\":return\"Tier Three (3)\";break;default:break;}};const calculateFirstImage=listing=>{console.log(\"uploadedFiles\",listing.uploadedFiles);const files=listing.uploadedFiles;for(let index=0;index<files.length;index++){const file=files[index];if(file.type.includes(\"image\")){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(file.link),className:\"last-displayed rounded-circle mr-1\"}));break;}else if(file.type.includes(\"video\")){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ReactPlayer,{playing:true,loop:true,muted:true,width:\"100%\",className:\"last-displayed rounded-circle mr-1\",wrapper:\"div\",url:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(file.link)}));break;}}};const handleInputChange=e=>{const{name,value}=e.target;if(name===\"number\"){if(value.length!==0){let filtered=value.replace(/\\D/,'');setCardData(prevState=>{return{...prevState,number:filtered};});setSelectedCardPayment(null);}else{setCardData(prevState=>{return{...prevState,number:\"\"};});setSelectedCardPayment(null);}}else if(name===\"cvc\"){if(value.length!==0){let filtered=value.replace(/\\D/,'');setCardData(prevState=>{return{...prevState,cvc:filtered};});setSelectedCardPayment(null);}else{setCardData(prevState=>{return{...prevState,cvc:\"\"};});setSelectedCardPayment(null);}}else{setCardData(prevState=>{return{...prevState,[name]:value};});setSelectedCardPayment(null);}};const handleInputFocus=e=>{setCardData(prevState=>{return{...prevState,focus:e.target.name};});};const handleSelectBlur=(type,full,monthOrYear)=>{if(type===\"selectedMonth\"){setTimeout(()=>{setCardData(prevState=>{return{...prevState,expiry:\"\".concat(monthOrYear,\"/\").concat(selectedYear!==null?selectedYear.value:\"--\")};});},500);}else if(type===\"selectedYear\"){setTimeout(()=>{setCardData(prevState=>{return{...prevState,expiry:\"\".concat(selectedMonth!==null?selectedMonth.value:\"--\",\"/\").concat(monthOrYear)};});},500);}};const handleCardSelectionChange=value=>{console.log(\"handleCardSelectionChange ran/running..:\",value);setSelectedCardPayment(value);setCardData(prevState=>{return{...prevState,cvc:\"\",expiry:\"\",focus:\"\",name:\"\",number:\"\"};});};const clearPreviousState=()=>{setSelected(null);setFullySelected(null);setSelectedCardPayment(null);setSelectedMonth(null);setSelectedYear(null);setCardData({focus:\"\",cvc:\"\",name:\"\",number:\"\",expiry:\"\"});};const handleSubmission=()=>{console.log(\"handle handleSubmission submission!\");const configuration={employerId:userData.uniqueId,fullListing:fullySelected,listingID:fullySelected.uniqueId,listingTierSelected:listingBoostSelected,card:cardData,manuallyEntered:cardPaymentSelected!==null?false:true,cardPaymentSelected};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/boost/employer/listing/period/time\"),configuration).then(res=>{if(res.data.message===\"Successfully boosted your selected listing!\"){console.log(res.data);const{listing,cost}=res.data;setSheetOpenEmployerListingPromote(false);clearPreviousState();NotificationManager.success(\"We've successfully boosted your listing with the company name of '\".concat(listing.publicCompanyName,\"' at the cost of '$\").concat(cost/100,\"'! Succesfully initialized your promoted listing & it is NOW LIVE!\"),\"Successfully charged desired card and listing is NOW PROMOTED!\",5000);}else if(res.data.message===\"Already boosted this listing!\"){setSheetOpenEmployerListingPromote(false);NotificationManager.warning(\"You've ALREADY boosted this listing, you CANNOT double boost a listing as it would be a waste of your money. Please wait for this boosted listing to expire (check back periodically if you'd like) before boosting again or select another listing!\",\"Listing is already boosted!\",4750);}else{console.log(\"Err\",res.data);setSheetOpenEmployerListingPromote(false);clearPreviousState();NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\",\"Unknown error has occurred..!\",4750);}}).catch(err=>{console.log(err);setSheetOpenEmployerListingPromote(false);clearPreviousState();NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\",\"Unknown error has occurred..!\",4750);});};const calculateDisabled=()=>{const{name,number,expiry,cvc}=cardData;if(fullySelected!==null&&(typeof number!==\"undefined\"&&number.length>=12&&typeof cvc!==\"undefined\"&&cvc.length>=3&&typeof name!==\"undefined\"&&name.length>=8&&typeof expiry!==\"undefined\"&&expiry.length===5||cardPaymentSelected!==null)){return false;}else{return true;}};console.log(\"cardData\",cardData,selectedMonth,selectedYear);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Sheet,{disableDrag:true,isOpen:employerListingPromotePane,onClose:()=>setSheetOpenEmployerListingPromote(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{className:\"margin-medium-button-pane\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-danger\",color:\"danger-2x\",outline:true,style:{width:\"100%\"},onClick:()=>setSheetOpenEmployerListingPromote(false)},\"Close/Exit Pane\"))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{style:{marginTop:\"25px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"bordered-shadowed-card-deposit\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"header-deposit-card-funds\"},\"You've selected \",listingBoostSelected,\" which means you have selected the \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#7366ff\",textDecorationLine:\"underline\"}},calculateTier(listingBoostSelected)),\" boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},calculateBoostCost(listingBoostSelected))),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Please select the \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#7366ff\"}},\"previously posted employer listing\"),\" you'd like to promote and select your payment method (if applicable - you may need to add a payment method). We will display your previously posted \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#7366ff\"}},\"ACTIVE\"),\" contracts to allow you to choose from..\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,{className:\"row-infinite-pane\"},/*#__PURE__*/React.createElement(\"div\",{className:\"scroller-custom-horizontally-pane\"},typeof listings!==\"undefined\"&&listings.length>0?listings.map((listing,index)=>{const views=listing.totalViews;const progress=Math.round(views/1000);return/*#__PURE__*/React.createElement(Col,{key:index,sm:\"12\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(\"div\",{onClick:()=>{setSelected(listing.uniqueId);setFullySelected(listing);},className:selected===listing.uniqueId?\"project-box project-boxed-shadowized-selected\":\"project-box project-boxed-shadowized\"},/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-primary\"},\"Min Lvl. To Apply: \",listing.requiredRankToApply.label),/*#__PURE__*/React.createElement(\"h6\",{className:\"publicCompanyName\"},listing.publicCompanyName),/*#__PURE__*/React.createElement(\"div\",{className:\"media\"},calculateFirstImage(listing),/*#__PURE__*/React.createElement(\"p\",{className:\"posted-by-date\"},\"Posted \",moment(listing.systemDate).fromNow())),/*#__PURE__*/React.createElement(\"div\",{className:\"align-proper-loc\"},/*#__PURE__*/React.createElement(Label,{className:\"hash-label\"},\"Related Hashtag's\"),/*#__PURE__*/React.createElement(\"br\",null),typeof listing.hashtags!==\"undefined\"&&listing.hashtags.length>0?listing.hashtags.map((tag,idx)=>{return/*#__PURE__*/React.createElement(Badge,{key:idx,color:\"primary\",className:\"slim-border-badge\",style:{color:\"#fff\"}},tag.text);}):null),/*#__PURE__*/React.createElement(ReactMarkdown,{className:\"listing-desc-selectable\",children:listing.listingDescription,remarkPlugins:[remarkGfm]}),/*#__PURE__*/React.createElement(Row,{className:\"details\"},/*#__PURE__*/React.createElement(Col,{xs:\"6\"},/*#__PURE__*/React.createElement(\"span\",null,\"Total Applicants: \")),/*#__PURE__*/React.createElement(Col,{xs:\"6\",className:'text-primary'},listing.applicantIDArray.length),/*#__PURE__*/React.createElement(Col,{xs:\"6\"},\" \",/*#__PURE__*/React.createElement(\"span\",null,\"Likes: \")),/*#__PURE__*/React.createElement(Col,{xs:\"6\",className:'text-primary'},listing.likes),/*#__PURE__*/React.createElement(Col,{xs:\"6\"},\" \",/*#__PURE__*/React.createElement(\"span\",null,\"Dislikes: \")),/*#__PURE__*/React.createElement(Col,{xs:\"6\",className:'text-primary'},listing.dislikes)),/*#__PURE__*/React.createElement(\"div\",{className:\"customers\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(\"img\",{className:\"img-30 rounded-circle min-rounded\",src:require(\"../../../../../../../assets/images/placeholder.png\"),alt:\"\"})),/*#__PURE__*/React.createElement(\"li\",{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(\"img\",{className:\"img-30 rounded-circle min-rounded\",src:require(\"../../../../../../../assets/images/placeholder.png\"),alt:\"\"})),/*#__PURE__*/React.createElement(\"li\",{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(\"img\",{className:\"img-30 rounded-circle min-rounded\",src:require(\"../../../../../../../assets/images/placeholder.png\"),alt:\"\"})),/*#__PURE__*/React.createElement(\"li\",{className:\"d-inline-block ml-2\"},/*#__PURE__*/React.createElement(\"p\",{className:\"f-12\"},\"+\".concat(listing.viewedBy.length-3>0?listing.viewedBy.length:0,\" More\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"project-status mt-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"media mb-0\"},/*#__PURE__*/React.createElement(\"p\",null,progress,\"% \"),/*#__PURE__*/React.createElement(\"div\",{className:\"media-body text-right\"},/*#__PURE__*/React.createElement(\"span\",null,\"Time Till Est. Completion Date\"))),progress===\"100\"?/*#__PURE__*/React.createElement(Progress,{className:\"sm-progress-bar\",color:\"success\",value:progress,style:{height:\"5px\"}}):/*#__PURE__*/React.createElement(Progress,{className:\"sm-progress-bar\",striped:true,color:\"primary\",value:progress,style:{height:\"5px\"}})),/*#__PURE__*/React.createElement(\"div\",{className:\"project-status mt-4\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-info\",color:\"info-2x\",outline:true,style:{width:\"100%\"}},\"Promote This Listing!\"))));}):null)))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary b-r-primary bordered-shadowed-card-deposit\"},/*#__PURE__*/React.createElement(\"h2\",{style:{textDecorationLine:\"underline\"},className:\"header-deposit-card-funds\"},\"Please select the payment method you'd like to use for this transaction..\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},ready===true?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-primary b-r-primary project-boxed-shadowized-min-second\"},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"h4-two-col-header\"},\"Enter your \",/*#__PURE__*/React.createElement(\"strong\",null,\"card details\"),\" in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Add your payment details in the live form collection unit below. This will not only use \",/*#__PURE__*/React.createElement(\"strong\",null,\"THIS CARD AS A PAYMENT METHOD\"),\" but will also save this card information to your account for a later date and/or future purchases down the road..\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Card Number\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.number,name:\"number\",className:\"form-control\",maxLength:19,size:19,type:\"number\",placeholder:\"Debit/Credit Card Number\",\"aria-label\":\"Debit/Credit Card Number\"}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Full Name\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.name,name:\"name\",maxLength:\"35\",size:\"35\",className:\"form-control\",type:\"text\",placeholder:\"Full Name\",\"aria-label\":\"Full Name\"})))),/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Expiration\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Select,{value:selectedMonth,onChange:value=>{setSelectedMonth(value);setSelectedCardPayment(null);},onBlur:()=>{handleSelectBlur(\"selectedMonth\",selectedMonth,selectedMonth.value);},className:\"stretch\",placeholder:\"MONTH\",options:monthOptions}),/*#__PURE__*/React.createElement(Select,{value:selectedYear,onChange:value=>{setSelectedYear(value);setSelectedCardPayment(null);},onBlur:()=>{handleSelectBlur(\"selectedYear\",selectedYear,selectedYear.value);},className:\"stretch-two\",placeholder:\"YEAR\",options:yearOptions})))),/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"CVC\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.cvc,name:\"cvc\",className:\"form-control\",maxLength:\"4\",size:\"4\",type:\"number\",placeholder:\"CVC\",\"aria-label\":\"CVC\"}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Cards,{cvc:cardData.cvc,expiry:cardData.expiry,focused:cardData.focus,name:cardData.name,number:cardData.number})))))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#d4d4d4\",highlightColor:\"#8f8f8f\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{containerClassName:\"stretch-bars\",count:25}))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},ready===true?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-primary b-r-primary project-boxed-shadowized-min-second\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"h4-two-col-header\"},\"Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(Row,{style:{paddingBottom:\"10px\"}},/*#__PURE__*/React.createElement(Label,null,\"Select An Existing Registered Card (Previously registered on a different date/time)\"),/*#__PURE__*/React.createElement(Select,{value:cardPaymentSelected,onChange:handleCardSelectionChange,options:previousCards})))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#d4d4d4\",highlightColor:\"#8f8f8f\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{containerClassName:\"stretch-bars\",count:25})))))),/*#__PURE__*/React.createElement(Row,{style:{marginBottom:\"37.5px\"}},/*#__PURE__*/React.createElement(Button,{disabled:calculateDisabled(),outline:calculateDisabled()?true:false,className:\"btn-square-success\",onClick:handleSubmission,style:{width:\"100%\"},color:\"success\"},\"Submit & Purchase Boost/Promotion!\"))))))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)));};export default BoostAlreadyPostedEmployerListingPaneHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostEmployerListing/boostListingPosted.js"],"names":["React","useState","useEffect","Fragment","Sheet","Button","Container","Row","Col","Card","CardHeader","CardBody","Progress","Badge","Label","Input","InputGroup","FormGroup","axios","ReactMarkdown","remarkGfm","ReactPlayer","moment","NotificationManager","Cards","Select","Skeleton","SkeletonTheme","monthOptions","value","label","yearOptions","BoostAlreadyPostedEmployerListingPaneHelper","userData","listingBoostSelected","employerListingPromotePane","setSheetOpenEmployerListingPromote","listings","setListingData","selected","setSelected","fullySelected","setFullySelected","cardPaymentSelected","setSelectedCardPayment","previousCards","setPreviousCardsData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","ready","setReady","cardData","setCardData","focus","cvc","name","number","expiry","config","params","id","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","cards","convertedPaymentsArr","index","length","method","last4","card","push","warning","catch","err","configuration","calculateBoostCost","tier","calculateTier","calculateFirstImage","listing","uploadedFiles","files","file","type","includes","REACT_APP_ASSET_LINK","link","handleInputChange","e","target","filtered","replace","prevState","handleInputFocus","handleSelectBlur","full","monthOrYear","setTimeout","handleCardSelectionChange","clearPreviousState","handleSubmission","employerId","fullListing","listingID","listingTierSelected","manuallyEntered","post","cost","success","publicCompanyName","error","calculateDisabled","width","marginTop","color","textDecorationLine","map","views","totalViews","progress","Math","round","requiredRankToApply","systemDate","fromNow","hashtags","tag","idx","text","listingDescription","applicantIDArray","likes","dislikes","require","viewedBy","height","paddingBottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup }  from \"reactstrap\";\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst monthOptions = [\n  { value: '01', label: '01' },\n  { value: '02', label: '02' },\n  { value: '03', label: '03' },\n  { value: '04', label: '04' },\n  { value: '05', label: '05' },\n  { value: '06', label: '06' },\n  { value: '07', label: '07' },\n  { value: '08', label: '08' },\n  { value: '09', label: '09' },\n  { value: '10', label: '10' },\n  { value: '11', label: '11' },\n  { value: '12', label: '12' },\n];\nconst yearOptions = [\n    { label: \"2022\", value: \"22\" },\n    { label: \"2023\", value: \"23\" },\n    { label: \"2024\", value: \"24\" },\n    { label: \"2025\", value: \"25\" },\n    { label: \"2026\", value: \"26\" },\n    { label: \"2027\", value: \"27\" },\n    { label: \"2028\", value: \"28\" },\n    { label: \"2029\", value: \"29\" },\n    { label: \"2030\", value: \"30\" },\n    { label: \"2031\", value: \"31\" },\n    { label: \"2032\", value: \"32\" },\n    { label: \"2033\", value: \"33\" },\n    { label: \"2034\", value: \"34\" },\n    { label: \"2035\", value: \"35\" }\n];\n\nconst BoostAlreadyPostedEmployerListingPaneHelper = ({ userData, listingBoostSelected, employerListingPromotePane, setSheetOpenEmployerListingPromote }) => {\n\n    const [ listings, setListingData ] = useState([]);\n    const [ selected, setSelected ] = useState(null);\n    const [ fullySelected, setFullySelected ] = useState(null);\n    const [ cardPaymentSelected, setSelectedCardPayment ] = useState(null);\n    const [ previousCards, setPreviousCardsData ] = useState([]);\n    const [ selectedMonth, setSelectedMonth ] = useState(null);\n    const [ selectedYear, setSelectedYear ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ cardData, setCardData ] = useState({\n        focus: \"\",\n        cvc: \"\",\n        name: \"\",\n        number: \"\",\n        expiry: \"\"\n    })\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                const convertedPaymentsArr = [];\n\n                for (let index = 0; index < cards.data.length; index++) {\n                    const method = cards.data[index];\n\n                    const { last4 } = method.card;\n                    \n                    convertedPaymentsArr.push({ label: `**** **** **** ${last4}`, value: method })\n                }\n\n                setPreviousCardsData(convertedPaymentsArr);\n\n                setReady(true);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n        })\n    }, [])\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, configuration).then((res) => {\n            if (res.data.message === \"Gathered related listings to choose from!\") {\n                console.log(res.data);\n\n                const { listings } = res.data;\n\n                setListingData(listings);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const calculateBoostCost = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"$10.00 (plus applicable taxes)\";\n                break;\n            case \"tier-2\":\n                return \"$30.00 (plus applicable taxes)\";\n                break;\n            case \"tier-3\":\n                return \"50.00 (plus applicable taxes)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateTier = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"Tier One (1)\";\n                break;\n            case \"tier-2\":\n                return \"Tier Two (2)\";\n                break;\n            case \"tier-3\":\n                return \"Tier Three (3)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateFirstImage = (listing) => {\n        console.log(\"uploadedFiles\", listing.uploadedFiles);\n\n        const files = listing.uploadedFiles;\n\n        for (let index = 0; index < files.length; index++) {\n            const file = files[index];\n            if (file.type.includes(\"image\")) {\n                return (\n                    <Fragment>\n                        <img src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} className={\"last-displayed rounded-circle mr-1\"} />\n                    </Fragment>\n                );\n                break;\n            } else if (file.type.includes(\"video\")) {\n                return (\n                    <Fragment>\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"last-displayed rounded-circle mr-1\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Fragment>\n                );\n                break;\n            }\n        }\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === \"number\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else if (name === \"cvc\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else {\n\n            setCardData(prevState => {\n                return {\n                    ...prevState,\n                    [name]: value\n                }\n            });\n            setSelectedCardPayment(null);\n        }\n    }\n    const handleInputFocus = (e) => {\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                focus: e.target.name\n            }\n        });\n    }\n    const handleSelectBlur = (type, full, monthOrYear) => {\n        if (type === \"selectedMonth\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n                    }\n                });\n            }, 500)\n        } else if (type === \"selectedYear\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n                    }\n                });\n            }, 500)\n        }\n    }\n    const handleCardSelectionChange = (value) => {\n        console.log(\"handleCardSelectionChange ran/running..:\", value);\n\n        setSelectedCardPayment(value);\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                cvc: \"\",\n                expiry: \"\",\n                focus: \"\",\n                name: \"\",\n                number: \"\"\n            }\n        });\n    }\n    const clearPreviousState = () => {\n        setSelected(null);\n        setFullySelected(null);\n\n        setSelectedCardPayment(null);\n        setSelectedMonth(null);\n        setSelectedYear(null);\n        setCardData({\n            focus: \"\",\n            cvc: \"\",\n            name: \"\",\n            number: \"\",\n            expiry: \"\"\n        });\n    }\n    const handleSubmission = () => {\n        console.log(\"handle handleSubmission submission!\");\n        \n        const configuration = {\n            employerId: userData.uniqueId,\n            fullListing: fullySelected,\n            listingID: fullySelected.uniqueId,\n            listingTierSelected: listingBoostSelected,\n            card: cardData,\n            manuallyEntered: cardPaymentSelected !== null ? false : true,\n            cardPaymentSelected\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/listing/period/time`, configuration).then((res) => {\n            if (res.data.message === \"Successfully boosted your selected listing!\") {\n                console.log(res.data);\n\n                const { listing, cost } = res.data;\n\n                setSheetOpenEmployerListingPromote(false);\n\n                clearPreviousState();\n\n                NotificationManager.success(`We've successfully boosted your listing with the company name of '${listing.publicCompanyName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted listing & it is NOW LIVE!`, \"Successfully charged desired card and listing is NOW PROMOTED!\", 5000);\n\n            } else if (res.data.message === \"Already boosted this listing!\") {\n\n                setSheetOpenEmployerListingPromote(false);\n\n                NotificationManager.warning(\"You've ALREADY boosted this listing, you CANNOT double boost a listing as it would be a waste of your money. Please wait for this boosted listing to expire (check back periodically if you'd like) before boosting again or select another listing!\", \"Listing is already boosted!\", 4750);\n            } else {\n                console.log(\"Err\", res.data);\n\n                setSheetOpenEmployerListingPromote(false);\n\n                clearPreviousState();\n\n                NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            setSheetOpenEmployerListingPromote(false);\n\n            clearPreviousState();\n\n            NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n        })\n    }\n    const calculateDisabled = () => {\n\n        const  { name, number, expiry, cvc } = cardData;\n\n        if ((fullySelected !== null) && ((typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5) || (cardPaymentSelected !== null))) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n    return (\n        <div>\n            <Sheet disableDrag={true} isOpen={employerListingPromotePane} onClose={() => setSheetOpenEmployerListingPromote(false)}>\n                <Sheet.Container>\n                <Sheet.Header>\n                    <div className='margin-medium-button-pane'>\n                        <Button className={\"btn-square-danger\"} color={\"danger-2x\"} outline style={{ width: \"100%\" }} onClick={() => setSheetOpenEmployerListingPromote(false)}>Close/Exit Pane</Button>\n                    </div>\n                </Sheet.Header>\n                <Sheet.Content>\n                    <Container fluid={true}>\n                        <Row style={{ marginTop: \"25px\" }}>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card className='bordered-shadowed-card-deposit'>\n                                    <CardHeader className={\"b-l-info b-r-info\"}>\n                                        <h2 className='header-deposit-card-funds'>You've selected {listingBoostSelected} which means you have selected the <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{calculateTier(listingBoostSelected)}</strong> boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>{calculateBoostCost(listingBoostSelected)}</strong></h2>\n                                        <p className='lead'>Please select the <strong style={{ color: \"#7366ff\" }}>previously posted employer listing</strong> you'd like to promote and select your payment method (if applicable - you may need to add a payment method). We will display your previously posted <strong style={{ color: \"#7366ff\" }}>ACTIVE</strong> contracts to allow you to choose from..</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row className='row-infinite-pane'>\n                                            <div className='scroller-custom-horizontally-pane'>\n                                                {typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, index) => {\n                                                    const views = listing.totalViews;\n                                                    const progress = Math.round(views / 1000);\n                                                    return (\n                                                        <Col key={index} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                            <div onClick={() => {\n                                                                setSelected(listing.uniqueId);\n                                                                setFullySelected(listing);\n                                                            }} className={selected === listing.uniqueId ? \"project-box project-boxed-shadowized-selected\" : \"project-box project-boxed-shadowized\"}>\n                                                                <span className={`badge badge-primary`}>Min Lvl. To Apply: {listing.requiredRankToApply.label}</span>\n                                                                <h6 className='publicCompanyName'>{listing.publicCompanyName}</h6>\n                                                                <div className=\"media\">\n                                                                    {/* {<img className=\"img-20 mr-1 rounded-circle\" src={calculateFirstImage(listing)} alt=\"\" />} */}\n                                                                    {calculateFirstImage(listing)}\n                                                                    <p className='posted-by-date'>Posted {moment(listing.systemDate).fromNow()}</p>\n                                                                </div>\n                                                                <div className='align-proper-loc'>\n                                                                    <Label className={\"hash-label\"}>Related Hashtag's</Label><br />\n                                                                    {typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, idx) => {\n                                                                        return (\n                                                                            <Badge key={idx} color={\"primary\"} className={\"slim-border-badge\"} style={{ color: \"#fff\" }}>{tag.text}</Badge>\n                                                                        );\n                                                                    }) : null}\n                                                                </div>\n                                                                <ReactMarkdown className='listing-desc-selectable' children={listing.listingDescription} remarkPlugins={[remarkGfm]} />\n                                                                <Row className=\"details\">\n                                                                    <Col xs=\"6\"><span>Total Applicants: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.applicantIDArray.length}</Col>\n                                                                    <Col xs=\"6\"> <span>Likes: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.likes}</Col>\n                                                                    <Col xs=\"6\"> <span>Dislikes: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.dislikes}</Col>\n                                                                </Row>\n                                                                <div className=\"customers\">\n                                                                    <ul>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block ml-2\">\n                                                                        <p className=\"f-12\">{`+${listing.viewedBy.length - 3 > 0 ? listing.viewedBy.length : 0} More`}</p>\n                                                                        </li>\n                                                                    </ul>\n                                                                </div>\n                                                                <div className=\"project-status mt-4\">\n                                                                    <div className=\"media mb-0\">\n                                                                        <p>{progress}% </p>\n                                                                        <div className=\"media-body text-right\"><span>Time Till Est. Completion Date</span></div>\n                                                                    </div>\n                                                                    {progress === \"100\" ?\n                                                                        <Progress className=\"sm-progress-bar\" color=\"success\" value={progress} style={{ height: \"5px\" }} />\n                                                                        :\n                                                                        <Progress className=\"sm-progress-bar\" striped color=\"primary\" value={progress} style={{ height: \"5px\" }} />\n                                                                    }\n                                                                    \n                                                                </div>\n                                                                <div className=\"project-status mt-4\">\n                                                                    <Button className='btn-square-info' color='info-2x' outline style={{ width: \"100%\" }}>Promote This Listing!</Button>\n                                                                </div>\n                                                            </div>\n                                                        </Col>\n                                                    );\n                                                }) : null}\n                                            </div>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card>\n                                    <CardHeader className='b-l-primary b-r-primary bordered-shadowed-card-deposit'>\n                                        <h2 style={{ textDecorationLine: \"underline\" }} className='header-deposit-card-funds'>Please select the payment method you'd like to use for this transaction..</h2>\n                                        <hr />\n                                        <p className='lead'>Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                            <Row>\n                                                                <h4 className='h4-two-col-header'>Enter your <strong>card details</strong> in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).</h4>\n                                                                <hr />\n                                                                <p className='lead'>Add your payment details in the live form collection unit below. This will not only use <strong>THIS CARD AS A PAYMENT METHOD</strong> but will also save this card information to your account for a later date and/or future purchases down the road..</p>\n                                                                <hr />\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <FormGroup>\n                                                                        <Label>Card Number</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.number} name=\"number\" className=\"form-control\" maxLength={19} size={19} type=\"number\" placeholder=\"Debit/Credit Card Number\" aria-label=\"Debit/Credit Card Number\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Full Name</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.name} name=\"name\" maxLength=\"35\" size=\"35\" className=\"form-control\" type=\"text\" placeholder=\"Full Name\" aria-label=\"Full Name\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Expiration</Label>\n                                                                        <InputGroup>\n                                                                            <Select\n                                                                                value={selectedMonth}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedMonth(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n                                                                                }}\n                                                                                className=\"stretch\"\n                                                                                placeholder={\"MONTH\"}\n                                                                                options={monthOptions}\n                                                                            />\n                                                                            <Select\n                                                                                value={selectedYear}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedYear(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n                                                                                }}\n                                                                                className=\"stretch-two\"\n                                                                                placeholder={\"YEAR\"}\n                                                                                options={yearOptions}\n                                                                            />\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>CVC</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.cvc} name=\"cvc\" className=\"form-control\" maxLength=\"4\" size=\"4\" type=\"number\" placeholder=\"CVC\" aria-label=\"CVC\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <Cards\n                                                                        cvc={cardData.cvc}\n                                                                        expiry={cardData.expiry}\n                                                                        focused={cardData.focus}\n                                                                        name={cardData.name}\n                                                                        number={cardData.number}\n                                                                    />\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Row>\n                                                            <h4 className='h4-two-col-header'>Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.</h4>\n                                                            <hr />\n                                                            <p className='lead'>Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!</p>\n                                                            <hr />\n                                                        </Row>\n                                                        <Row style={{ paddingBottom: \"10px\" }}>\n                                                            <Label>Select An Existing Registered Card (Previously registered on a different date/time)</Label>\n                                                            <Select\n                                                                value={cardPaymentSelected}\n                                                                onChange={handleCardSelectionChange}\n                                                                options={previousCards}\n                                                            />\n                                                        </Row>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginBottom: \"37.5px\" }}>\n                                            <Button disabled={calculateDisabled()} outline={calculateDisabled() ? true : false} className='btn-square-success' onClick={handleSubmission} style={{ width: \"100%\" }} color={\"success\"}>Submit & Purchase Boost/Promotion!</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Sheet.Content>\n                </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </div>\n    );\n}\n\nexport default BoostAlreadyPostedEmployerListingPaneHelper;"]},"metadata":{},"sourceType":"module"}