{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/hackers/main/mainLandingPage.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageHackerHelper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitude is :\", position.coords.latitude); //\n\n        console.log(\"Longitude is :\", position.coords.longitude);\n        const location = {\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude\n        };\n        const {\n          uniqueId\n        } = this.props.userData;\n        axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n          accountType: \"hackers\",\n          location,\n          id: uniqueId\n        }).then(res => {\n          if (res.data.message === \"Successfully saved location data to account!\") {\n            console.log(res.data);\n            const {\n              user\n            } = res.data;\n            console.log(\"user\", user.value);\n\n            if (user.value !== null) {\n              this.props.authentication(user.value);\n              NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n            }\n\n            NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n          } else {\n            console.log(\"err\", res.data);\n            NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }, error => {\n        console.log(\"error gathering location - : \", error.message);\n\n        if (error.message === \"User denied geolocation prompt\") {\n          this.setState({\n            locationError: error.message\n          });\n        }\n      });\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  render() {\n    const {\n      locationError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"~ dashboard hacker! ~\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), typeof locationError !== \"undefined\" && locationError.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 85\n      }\n    }, locationError) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authentication\n})(MainLandingPageHackerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/hackers/main/mainLandingPage.js"],"names":["React","Component","axios","connect","authentication","NotificationManager","MainLandingPageHackerHelper","constructor","props","state","locationError","componentDidMount","navigator","console","log","geolocation","getCurrentPosition","position","coords","latitude","longitude","location","uniqueId","userData","post","process","env","REACT_APP_BASE_URL","accountType","id","then","res","data","message","user","value","success","error","catch","err","setState","render","length","color","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageHackerHelper extends Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        locationError: \"\"\n    }\n}\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            console.log(\"Available\");\n\n            navigator.geolocation.getCurrentPosition((position) => {\n                console.log(\"Latitude is :\", position.coords.latitude);\n                //\n                console.log(\"Longitude is :\", position.coords.longitude);\n\n                const location = {\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude\n                };\n\n                const { uniqueId } = this.props.userData;\n\n                axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n                    accountType: \"hackers\",\n                    location,\n                    id: uniqueId\n                }).then((res) => {\n                    if (res.data.message === \"Successfully saved location data to account!\") {\n                        console.log(res.data);\n\n                        const { user } = res.data;\n\n                        console.log(\"user\", user.value);\n\n                        if (user.value !== null) {\n                            this.props.authentication(user.value);\n\n                            NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n                        }\n\n                        NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n                    } else {\n                        console.log(\"err\", res.data);\n\n                        NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                });\n            }, (error) => {\n                console.log(\"error gathering location - : \", error.message);\n\n                if (error.message === \"User denied geolocation prompt\") {\n                    this.setState({\n                        locationError: error.message\n                    })\n                }\n            });\n          } else {\n            console.log(\"Not Available\");\n        }\n    }\n    render() {\n        const { locationError } = this.state;\n        return (\n            <div>\n                <h1>~ dashboard hacker! ~</h1>\n                <hr />\n                {typeof locationError !== \"undefined\" && locationError.length > 0 ? <p style={{ color: \"red\" }} className=\"lead\">{locationError}</p> : null}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { authentication })(MainLandingPageHackerHelper);"]},"metadata":{},"sourceType":"module"}