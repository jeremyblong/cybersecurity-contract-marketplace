{"ast":null,"code":"import React,{Fragment}from\"react\";import{Button}from'reactstrap';import axios from\"axios\";import{NotificationManager}from'react-notifications';import{updateCourseInformationData}from\"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";import{confirmAlert}from'react-confirm-alert';const handleSubmit=(runSubmit,currentFileSelectedUpload,fileMetaData,setProgress,setShowInitialState,setVideoFileState,setLoadedState,alreadyExisted,setCurrentFilePathData)=>{const data=new FormData();data.append(\"file\",currentFileSelectedUpload);data.append(\"meta\",fileMetaData);const config={onUploadProgress:progressEvent=>{let percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);},headers:{'Content-Type':'multipart/form-data'}};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/upload/misc/file/softare/listing/sale\"),data,config).then(res=>{if(res.data.message===\"Successfully uploaded file!\"){console.log(res.data);const{file}=res.data;// save file to redux state...\nif(alreadyExisted===true){const configuration={method:'get',url:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(file.link),responseType:'blob'};axios(configuration).then(response=>{// create fileready\nconst fileeee=new File([response.data],file.name);// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(fileeee));setVideoFileState(file);setShowInitialState(false);setLoadedState(true);});}else{setVideoFileState(file);setShowInitialState(false);setLoadedState(true);}NotificationManager.success(\"We've successfully uploaded your file! Please proceed filling out your information or add more files.\",'Successfully uploaded file!',4500);runSubmit();}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(err);});};const renderCustomButtonDropzone=(data,setMetaFileData,currentFileSelectedUpload,fileMetaData,fileReady,setFileReadyStatus,setProgress,setVideoFileState,setShowInitialState,setLoadedState,alreadyExisted,setCurrentFilePathData)=>{const{meta}=data.files[0];if(currentFileSelectedUpload===null){return null;}else{if(fileReady===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"7.5px\"},onClick:e=>{e.preventDefault();// file meta data for next action\nsetMetaFileData(meta);// set file status as ready or prepared.\nsetFileReadyStatus(false);const runSubmit=data.onSubmit;handleSubmit(runSubmit,currentFileSelectedUpload,fileMetaData,setProgress,setShowInitialState,setVideoFileState,setLoadedState,alreadyExisted,setCurrentFilePathData);},className:\"btn-air-info\",color:\"info\",size:\"md\"},\"Submit & Upload New File!\"));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"7.5px\"},onClick:()=>{NotificationManager.warning(\"File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.\",'Still preparing!',4500);},className:\"btn-air-light\",color:\"light\",size:\"md\"},\"Submit & Upload New File!\"));}}};const handleDeletionConfirmationOpen=()=>{const defaultState=[{sections:[]}];confirmAlert({title:'Clear/Delete ALL Items?',message:\"Are you SURE you'd like to clear your ENTIRE 'Course Content' already filled out information? This will start a clear-slate and you will start from the beginning. You can also save this data to your account before deleting so please consider that as well.\",buttons:[{label:'Yes, CLEAR!',onClick:()=>{updateCourseInformationData(defaultState);}},{label:'No, CANCEL',onClick:()=>{// do nothing.\n}}]});};const calculateFileType=type=>{switch(type){case\"video/mp4\":return\"mp4\";break;case\"image/png\":return\"png\";break;case\"image/jpeg\":return\"jpeg\";break;case\"image/jpg\":return\"jpg\";break;case\"image/gif\":return\"gif\";break;case\"image/bmp\":return\"bmp\";break;case\"application/pdf\":return\"pdf\";break;case\"text/csv\":return\"csv\";break;case\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":return\"xlsx\";break;case\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":return\"docx\";break;case\"video/webm\":return\"webm\";break;case\"audio/mpeg\":return\"mp3\";break;default:break;}};const onSubmitHelper=(files,allFiles)=>{allFiles.forEach(file=>{file.remove();});};export default{renderCustomButtonDropzone,handleSubmit,onSubmitHelper,calculateFileType,handleDeletionConfirmationOpen};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/miscFunctions.js"],"names":["React","Fragment","Button","axios","NotificationManager","updateCourseInformationData","confirmAlert","handleSubmit","runSubmit","currentFileSelectedUpload","fileMetaData","setProgress","setShowInitialState","setVideoFileState","setLoadedState","alreadyExisted","setCurrentFilePathData","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","console","log","file","configuration","method","url","REACT_APP_ASSET_LINK","link","responseType","response","fileeee","File","name","URL","createObjectURL","success","catch","err","renderCustomButtonDropzone","setMetaFileData","fileReady","setFileReadyStatus","meta","files","marginTop","e","preventDefault","onSubmit","warning","handleDeletionConfirmationOpen","defaultState","sections","title","buttons","label","onClick","calculateFileType","type","onSubmitHelper","allFiles","forEach","remove"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { confirmAlert } from 'react-confirm-alert';\n\n\nconst handleSubmit = (runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setShowInitialState, setVideoFileState, setLoadedState, alreadyExisted, setCurrentFilePathData) => {\n\n    const data = new FormData();\n\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n\n    const config = {\n        onUploadProgress: (progressEvent) => {\n            let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n            setProgress(percentCompleted);\n        },\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n            console.log(res.data);\n\n            const { file } = res.data;\n\n            // save file to redux state...\n\n            if (alreadyExisted === true) {\n                const configuration = {\n                    method: 'get',\n                    url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n                    responseType: 'blob'\n                };\n    \n                axios(configuration).then((response) => {\n                    // create fileready\n                    const fileeee = new File([response.data], file.name); \n                    // set current file path to convert to readable URL later\n                    setCurrentFilePathData(URL.createObjectURL(fileeee));\n                    setVideoFileState(file);\n                    setShowInitialState(false);\n                    setLoadedState(true);\n                })\n            } else {\n                setVideoFileState(file);\n                setShowInitialState(false);\n                setLoadedState(true);   \n            }\n\n            NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n            runSubmit();\n        } else {\n            console.log(\"Err\", res.data);\n        }\n    }).catch((err) => {\n        console.log(err);\n    })\n};\n\nconst renderCustomButtonDropzone = (data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData) => {\n\n    const { meta } = data.files[0];\n\n    if (currentFileSelectedUpload === null) {\n        return null;\n    } else {\n        if (fileReady === true) {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"7.5px\" }} onClick={(e) => {\n                        e.preventDefault();\n                        // file meta data for next action\n                        setMetaFileData(meta);\n                        // set file status as ready or prepared.\n                        setFileReadyStatus(false);\n\n                        const runSubmit = data.onSubmit;\n\n                        handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setShowInitialState, setVideoFileState, setLoadedState, alreadyExisted, setCurrentFilePathData);\n                    }} className=\"btn-air-info\" color=\"info\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <Button style={{ marginTop: \"7.5px\" }} onClick={() => {\n                        NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                    }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                </Fragment>\n            );\n        }\n    }\n}\nconst handleDeletionConfirmationOpen = () => {\n    const defaultState = [{\n        sections: []\n    }];\n    confirmAlert({\n        title: 'Clear/Delete ALL Items?',\n        message: \"Are you SURE you'd like to clear your ENTIRE 'Course Content' already filled out information? This will start a clear-slate and you will start from the beginning. You can also save this data to your account before deleting so please consider that as well.\",\n        buttons: [\n          {\n            label: 'Yes, CLEAR!',\n            onClick: () => {\n                updateCourseInformationData(defaultState);\n            }\n          },\n          {\n            label: 'No, CANCEL',\n            onClick: () => {\n                // do nothing.\n            }\n          }\n        ]\n    });\n}\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach((file) => {\n        file.remove();\n    })\n}\nexport default {\n    renderCustomButtonDropzone,\n    handleSubmit,\n    onSubmitHelper,\n    calculateFileType,\n    handleDeletionConfirmationOpen\n};"]},"metadata":{},"sourceType":"module"}