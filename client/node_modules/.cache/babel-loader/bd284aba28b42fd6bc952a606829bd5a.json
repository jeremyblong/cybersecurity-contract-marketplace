{"ast":null,"code":"import _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/employer/introduction/introVideo.js\";\n\nimport React, { Fragment, useRef, useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport { Button, Container, Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport LoadingBar from 'react-top-loading-bar';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\n\nvar IntroVideoEmployerAccountHelper = function IntroVideoEmployerAccountHelper(_ref) {\n  var userData = _ref.userData;\n  var dropzoneRef = useRef(null); // start of state logic...\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileReady = _useState2[0],\n      setFileReadyStatus = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentFileSelectedUpload = _useState4[0],\n      setCurrentUploadFileStatus = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fileMetaData = _useState6[0],\n      setMetaFileData = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      progress = _useState8[0],\n      setProgress = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      changeOptions = _useState10[0],\n      setChangeOptions = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filePathData = _useState12[0],\n      setCurrentFilePathData = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      alreadyUploaded = _useState14[0],\n      setAlreadyUploaded = _useState14[1];\n\n  useEffect(function () {\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/general/user/data\"), {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    }).then(function (res) {\n      if (res.data.message === \"Gathered user!\") {\n        console.log(\"gathered!\", res.data);\n        var user = res.data.user;\n\n        if (_.has(user, \"companyIntroductionVideo\")) {\n          setAlreadyUploaded(true);\n        }\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    });\n  }, []);\n\n  var renderPreviewOfFile = function renderPreviewOfFile(data, fileReady, filePathData) {\n    var file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: function onError(err) {\n          return NotificationManager.warning(\"Error 'loading' your recently selected 'preview' file - please select another file & try again...\", 'File loading error!', 4500);\n        },\n        key: file.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  var calculateFileType = function calculateFileType(type) {\n    switch (type) {\n      case \"video/mp4\":\n        return \"mp4\";\n        break;\n\n      case \"image/png\":\n        return \"png\";\n        break;\n\n      case \"image/jpeg\":\n        return \"jpeg\";\n        break;\n\n      case \"image/jpg\":\n        return \"jpg\";\n        break;\n\n      case \"image/gif\":\n        return \"gif\";\n        break;\n\n      case \"image/bmp\":\n        return \"bmp\";\n        break;\n\n      case \"application/pdf\":\n        return \"pdf\";\n        break;\n\n      case \"text/csv\":\n        return \"csv\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n        return \"xlsx\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n        return \"docx\";\n        break;\n\n      case \"video/webm\":\n        return \"webm\";\n        break;\n\n      case \"audio/mpeg\":\n        return \"mp3\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var CustomInputHelper = function CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) {\n    var text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: function onChange(e) {\n        var file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(runSubmit) {\n    console.log(\"handleSubmit\"); // upload file to aws S3\n\n    var data = new FormData();\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n    data.append(\"uniqueId\", userData.uniqueId);\n    var config = {\n      onUploadProgress: function onUploadProgress(progressEvent) {\n        var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(percentCompleted);\n      },\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/upload/file/intro/video/employer/save/data\"), data, config).then(function (res) {\n      if (res.data.message === \"Successfully uploaded file!\") {\n        console.log(res.data);\n        var file = res.data.file;\n        setAlreadyUploaded(true);\n        NotificationManager.success(\"We've successfully uploaded your file! You've now successfully update your 'company video' and it is now active & live! Check your profile to see the reflected changes..\", 'Successfully uploaded file!', 4500);\n        clearData();\n        runSubmit();\n      } else {\n        console.log(\"Err\", res.data);\n        clearData();\n        NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n        runSubmit();\n      }\n    }).catch(function (err) {\n      console.log(err);\n      clearData();\n      NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n      runSubmit();\n    });\n  };\n\n  var clearData = function clearData() {\n    setMetaFileData(null);\n    setFileReadyStatus(false);\n    setCurrentUploadFileStatus(null);\n    setCurrentFilePathData(null);\n  };\n\n  var renderCustomButtonDropzone = function renderCustomButtonDropzone(data, e) {\n    var meta = data.files[0].meta;\n    console.log(\"meta\", meta);\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: function onClick(e) {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            var runSubmit = data.onSubmit;\n            handleSubmit(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: function onClick() {\n            NotificationManager.warning(\"File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.\", 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  var onSubmitHelper = function onSubmitHelper(files, allFiles) {\n    allFiles.forEach(function (file) {\n      file.remove();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: '#51bb25',\n    height: 9,\n    progress: progress,\n    onLoaderFinished: function onLoaderFinished() {\n      setProgress(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Upload A 'Introductory' Company Video\",\n    title: \"Upload A Video Accurately Depicting Your Company\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, \"Upload a company 'introductory video' explaining your company & what you do!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Upload a video (up-to 7 1/2 minutes in length) accurately \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#f73164\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 111\n    }\n  }, \"depicting you, your company, your goals, aspirations or really whatever you'd like to tell potential contractors (hackers) BEFORE\"), \" they apply to your listings/jobs so they have a better understanding of what they're getting themselves into. This is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 421\n    }\n  }, \"NOT\"), \" mandatory, however it is \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 467\n    }\n  }, \"HIGHLY SUGGESTED.\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, filePathData !== null && currentFileSelectedUpload !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-viewer-uploadedvideo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 104\n    }\n  }, /*#__PURE__*/React.createElement(FileViewer, {\n    fileType: calculateFileType(currentFileSelectedUpload.type),\n    filePath: filePathData,\n    onError: function onError(err) {\n      return NotificationManager.warning(\"Error 'loading' your recently selected 'preview' file - please select another file & try again...\", 'File loading error!', 4500);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  })) : alreadyUploaded === false ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../assets/images/not-uploaded.png\"),\n    className: \"stretch-both-ways-upload-employer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 78\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../assets/images/updated-company-video.png\"),\n    className: \"stretch-both-ways-upload-employer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 199\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: function PreviewComponent(data) {\n      return renderPreviewOfFile(data, fileReady, filePathData);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: function onChangeStatus(functions) {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: function InputComponent(_ref2) {\n      var accept = _ref2.accept,\n          onFiles = _ref2.onFiles;\n      return CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus);\n    },\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: function SubmitButtonComponent(data, e) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 57\n        }\n      }, renderCustomButtonDropzone(data, e));\n    },\n    accept: \"video/*\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 525,\n        minWidth: \"100%\"\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 45\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 63\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: function onClick(e) {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      setCurrentFilePathData(null); // remove selected\n\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 49\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(IntroVideoEmployerAccountHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/employer/introduction/introVideo.js"],"names":["React","Fragment","useRef","useState","useEffect","Dropzone","axios","NotificationManager","FileViewer","_","Button","Container","Row","Col","Card","CardBody","CardHeader","LoadingBar","Breadcrumb","connect","IntroVideoEmployerAccountHelper","userData","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","progress","setProgress","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","alreadyUploaded","setAlreadyUploaded","get","process","env","REACT_APP_BASE_URL","params","id","uniqueId","accountType","then","res","data","message","console","log","user","has","renderPreviewOfFile","file","fileWithMeta","calculateFileType","type","err","warning","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","URL","createObjectURL","handleSubmit","runSubmit","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","success","clearData","error","catch","renderCustomButtonDropzone","meta","marginTop","preventDefault","onSubmit","onSubmitHelper","allFiles","forEach","remove","fontWeight","require","functions","dropzone","height","minWidth","dropzoneActive","borderColor","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport { Button, Container, Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport LoadingBar from 'react-top-loading-bar';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\n\nconst IntroVideoEmployerAccountHelper = ({ userData }) => {\n\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ progress, setProgress ] = useState(0);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ alreadyUploaded, setAlreadyUploaded ] = useState(false);\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(\"gathered!\", res.data);\n\n                const { user } = res.data;\n\n                if (_.has(user, \"companyIntroductionVideo\")) {\n                    setAlreadyUploaded(true);\n                }\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        })\n    }, [])\n\n    const renderPreviewOfFile = (data, fileReady, filePathData) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/jpg\":\n                return \"jpg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => {\n        console.log(\"handleSubmit\");\n\n        // upload file to aws S3\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n        data.append(\"uniqueId\", userData.uniqueId);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/file/intro/video/employer/save/data`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                setAlreadyUploaded(true);\n\n                NotificationManager.success(`We've successfully uploaded your file! You've now successfully update your 'company video' and it is now active & live! Check your profile to see the reflected changes..`, 'Successfully uploaded file!', 4500);\n\n                clearData();\n\n                runSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n\n                clearData();\n\n                NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n\n                runSubmit();\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            clearData();\n\n            NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n\n            runSubmit();\n        })\n    }\n    const clearData = () => {\n        setMetaFileData(null);\n        setFileReadyStatus(false);\n        setCurrentUploadFileStatus(null);\n        setCurrentFilePathData(null);\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        console.log(\"meta\", meta);\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    return (\n        <Fragment>\n            <LoadingBar\n                color={'#51bb25'}\n                height={9}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Breadcrumb parent=\"Upload A 'Introductory' Company Video\" title=\"Upload A Video Accurately Depicting Your Company\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Upload a company 'introductory video' explaining your company & what you do!</h2>\n                                <p className=\"lead\">Upload a video (up-to 7 1/2 minutes in length) accurately <span style={{ color: \"#f73164\", fontWeight: \"bold\" }}>depicting you, your company, your goals, aspirations or really whatever you'd like to tell potential contractors (hackers) BEFORE</span> they apply to your listings/jobs so they have a better understanding of what they're getting themselves into. This is <strong>NOT</strong> mandatory, however it is <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGESTED.</strong></p>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        {filePathData !== null && currentFileSelectedUpload !== null ? <div className={\"file-viewer-uploadedvideo\"}>\n                                            <FileViewer\n                                                fileType={calculateFileType(currentFileSelectedUpload.type)}\n                                                filePath={filePathData}\n                                                onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                                            />\n                                        </div> : alreadyUploaded === false ? <img src={require(\"../../../../../assets/images/not-uploaded.png\")} className={\"stretch-both-ways-upload-employer\"} /> : <img src={require(\"../../../../../assets/images/updated-company-video.png\")} className={\"stretch-both-ways-upload-employer\"} />}\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"dz-message needsclick\">\n                                            <Dropzone\n                                                ref={dropzoneRef}\n                                                PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                maxFiles={1}\n                                                autoUpload={true}\n                                                onChangeStatus={(functions) => {\n                                                    setChangeOptions(functions);\n                                                }}\n                                                submitButtonDisabled={false}\n                                                InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                onSubmit={onSubmitHelper}\n                                                SubmitButtonComponent={(data, e) => {\n                                                    return (\n                                                        <div className=\"absolutely-position-submit-btn\">\n                                                            {renderCustomButtonDropzone(data, e)}\n                                                        </div>\n                                                    );\n                                                }}\n                                                accept={\"video/*\"}\n                                                multiple={false}\n                                                canCancel={false}\n                                                styles={{\n                                                    dropzone: { height: 525, minWidth: \"100%\" },\n                                                    dropzoneActive: { borderColor: 'green' },\n                                                }}\n                                            />\n                                        </div>\n                                        {fileReady === true ? <Fragment>\n                                            <hr className=\"secondary-hr\" />\n                                            <div className=\"centered-both-ways\">\n                                                <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                    setMetaFileData(null);\n                                                    setFileReadyStatus(false);\n                                                    setCurrentUploadFileStatus(null);\n                                                    setCurrentFilePathData(null);\n\n                                                    // remove selected\n                                                    changeOptions.remove();\n                                                }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                            </div>\n                                        </Fragment> : null}\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(IntroVideoEmployerAccountHelper); "]},"metadata":{},"sourceType":"module"}