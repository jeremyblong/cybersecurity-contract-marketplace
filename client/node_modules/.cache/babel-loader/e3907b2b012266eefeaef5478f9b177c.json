{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/viewPostFileContents/helpers/renderComments/commentsHelper.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media } from 'reactstrap';\nimport axios from 'axios';\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./otherHelpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"../../../../../../../universal/pagination/paginationHelper.js\";\nconst {\n  RenderPopoverEmojiLogic,\n  RenderEmojiLogic\n} = helpers; // pagination settings and/or setup\n\nconst itemsPerPage = 5;\n\nconst renderCommentPicOrVideo = (file, id) => {\n  if (file !== null) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"media-body align-self-center maxed-out-video-course-profile\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      })));\n    }\n  } else {\n    return /*#__PURE__*/React.createElement(Media, {\n      key: id,\n      className: \"align-self-center\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }\n}; // main function starts\n\n\nconst CommentsIndividualPostReturnCommentsHelper = _ref => {\n  let {\n    comments,\n    setCommentsState,\n    userData,\n    data\n  } = _ref;\n  // state initialization\n  const [popover, setPopoverState] = useState({});\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [allComments, setAllCommentsState] = useState([]);\n  const [localComments, setLocalComments] = useState([]); // render EVERY CHANGE to pagination\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    setAllCommentsState(data.comments);\n    console.log(\"Booyahhhhh.\", itemOffset, endOffset);\n    setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n    setLocalComments(data.comments.slice(itemOffset, endOffset));\n  }, [itemOffset, itemsPerPage]);\n  useEffect(() => {\n    console.log(\"currentPage CHANGED...\");\n    const endOffset = itemOffset + itemsPerPage;\n    setLocalComments(comments.slice(itemOffset, endOffset));\n  }, [currentPage]);\n  console.log(\"all comment variations...:\", allComments, data.comments, comments); // render ONLY ONCE\n\n  useEffect(() => {\n    setPopoverState(() => {\n      const newObjCount = {};\n      const comments = data.comments; // reassign state items in preperation for future state changes...\n\n      for (const keyyy in comments) {\n        newObjCount[`comment${keyyy}`] = false;\n      }\n\n      return newObjCount;\n    });\n  }, []);\n\n  const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n    console.log(\"emojiName\", emojiName);\n    const configuration = {\n      emojiName,\n      id: userData.uniqueId,\n      listingId: data.uniqueId,\n      commentID: comment.id,\n      comment\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/`, configuration).then(res => {\n      if (res.data.message === \"Successfully reacted to comment!\") {\n        console.log(res.data);\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setLocalComments(copy);\n        closePopover(targetAndPopState);\n      } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setLocalComments(copy);\n        closePopover(targetAndPopState);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  console.log(\"LAST COMPONENT COMMENT.LENGTH...:\", comments.length);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-list-course-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, typeof localComments !== \"undefined\" && localComments.length > 0 ? localComments.map((comment, index) => {\n    const popoverIDTarget = `comment${index}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: `${comment.uniqueId}-${comments.length}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, renderCommentPicOrVideo(comment.posterPicOrVideo, index), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 53\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 94\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 184\n      }\n    }, /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n      comments: comments,\n      reactions: comment.reactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 189\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: popoverIDTarget,\n      onClick: () => {\n        setPopoverState(prevState => {\n          return { ...prevState,\n            [`comment${index}`]: true\n          };\n        });\n      },\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 100\n      }\n    }), \"React to post w/emoji\"), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogic, {\n      handleRespondEmoji: handleRespondEmoji,\n      userData: userData,\n      comment: comment,\n      data: data,\n      userData: userData,\n      reactions: comment.reactions,\n      setPopoverState: setPopoverState,\n      popoverState: popover,\n      targetAndPopState: popoverIDTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"27.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PaginationEmployerListingHelper, {\n    itemsPerPage: itemsPerPage,\n    setItemOffset: setItemOffset,\n    loopingData: allComments,\n    setPageCount: setPageCount,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CommentsIndividualPostReturnCommentsHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/viewPostFileContents/helpers/renderComments/commentsHelper.js"],"names":["React","Fragment","useState","useEffect","useRef","Row","Col","Media","axios","ReactPlayer","helpers","NotificationManager","uuid","PaginationEmployerListingHelper","RenderPopoverEmojiLogic","RenderEmojiLogic","itemsPerPage","renderCommentPicOrVideo","file","id","type","includes","process","env","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","CommentsIndividualPostReturnCommentsHelper","comments","setCommentsState","userData","data","popover","setPopoverState","currentPage","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","allComments","setAllCommentsState","localComments","setLocalComments","endOffset","console","log","Math","ceil","length","slice","newObjCount","keyyy","handleRespondEmoji","emojiName","comment","closePopover","targetAndPopState","configuration","uniqueId","listingId","commentID","post","REACT_APP_BASE_URL","then","res","message","listing","commenttt","success","indexed","findIndex","x","copy","warning","catch","err","map","index","popoverIDTarget","posterPicOrVideo","posterName","posterAccountType","reactions","prevState","commentText","subComments","subcomment","idx","require","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media } from 'reactstrap';\nimport axios from 'axios';\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./otherHelpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"../../../../../../../universal/pagination/paginationHelper.js\";\n\nconst { RenderPopoverEmojiLogic, RenderEmojiLogic } = helpers;\n\n// pagination settings and/or setup\nconst itemsPerPage = 5;\n\nconst renderCommentPicOrVideo = (file, id) => {\n    if (file !== null) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment key={id}>\n                    <Media className=\"align-self-center\">\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"media-body align-self-center maxed-out-video-course-profile\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Media> \n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment key={id}>\n                    <Media className=\"align-self-center\">\n                        <Media className=\"align-self-center\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} alt=\"\"/>\n                    </Media>\n                </Fragment>\n            );\n        }  \n    } else {\n        return <Media key={id} className=\"align-self-center\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} alt=\"\"/>;\n    }\n}\n\n// main function starts\nconst CommentsIndividualPostReturnCommentsHelper = ({ comments, setCommentsState, userData, data }) => {\n    // state initialization\n    const [ popover, setPopoverState ] = useState({}); \n    const [ currentPage, setCurrentPage ] = useState(0);\n    const [ pageCount, setPageCount ] = useState(0);\n    const [ itemOffset, setItemOffset ] = useState(0);\n    const [ allComments, setAllCommentsState ] = useState([]);\n    const [ localComments, setLocalComments ] = useState([]);\n    \n    // render EVERY CHANGE to pagination\n    useEffect(() => {\n        const endOffset = itemOffset + itemsPerPage;\n\n        setAllCommentsState(data.comments);\n\n        console.log(\"Booyahhhhh.\", itemOffset, endOffset);\n\n        setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n\n        setLocalComments(data.comments.slice(itemOffset, endOffset));\n        \n    }, [itemOffset, itemsPerPage]);\n\n    useEffect( () => {\n        console.log(\"currentPage CHANGED...\");\n\n        const endOffset = itemOffset + itemsPerPage;\n\n        setLocalComments(comments.slice(itemOffset, endOffset));\n    }, [currentPage] );\n    \n    console.log(\"all comment variations...:\", allComments, data.comments, comments);\n\n    // render ONLY ONCE\n    useEffect(() => {\n        setPopoverState(() => {\n            const newObjCount = {};\n            const comments = data.comments;\n            // reassign state items in preperation for future state changes...\n            for (const keyyy in comments) {\n                newObjCount[`comment${keyyy}`] = false;\n            }\n            return newObjCount;\n        })\n    }, []);\n    const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n        console.log(\"emojiName\", emojiName);\n\n        const configuration = {\n            emojiName,\n            id: userData.uniqueId,\n            listingId: data.uniqueId,\n            commentID: comment.id,\n            comment\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/`, configuration).then((res) => {\n            if (res.data.message === \"Successfully reacted to comment!\") {\n                console.log(res.data);\n\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setLocalComments(copy);\n\n                closePopover(targetAndPopState);\n            } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setLocalComments(copy);\n\n                closePopover(targetAndPopState);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    console.log(\"LAST COMPONENT COMMENT.LENGTH...:\", comments.length);\n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <hr />\n                <ul className={\"comment-list-course-ul\"}>\n                    {typeof localComments !== \"undefined\" && localComments.length > 0 ? localComments.map((comment, index) => {\n                        const popoverIDTarget = `comment${index}`;\n                        return (\n                            <Fragment key={`${comment.uniqueId}-${comments.length}-${index}`}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {renderCommentPicOrVideo(comment.posterPicOrVideo, index)}\n                                        <Media body>\n                                            <Row>\n                                                <Col md=\"4 xl-100\">\n                                                    <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"}</span></h6><Row><RenderEmojiLogic comments={comments} reactions={comment.reactions} /></Row>\n                                                </Col>\n                                                <Col md=\"8 xl-100\">\n                                                    <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                    {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                    <li id={popoverIDTarget} onClick={() => {\n                                                        setPopoverState(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                [`comment${index}`]: true\n                                                            }\n                                                        });\n                                                    }} className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"React to post w/emoji\"}</li>\n                                                    <RenderPopoverEmojiLogic handleRespondEmoji={handleRespondEmoji} userData={userData} comment={comment} data={data} userData={userData} reactions={comment.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                                                    </ul>\n                                                </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n            <Row style={{ marginTop: \"27.5px\" }}>\n                <div className=\"centered-both-ways\">\n                    <PaginationEmployerListingHelper itemsPerPage={itemsPerPage} setItemOffset={setItemOffset} loopingData={allComments} setPageCount={setPageCount} pageCount={pageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n                </div>\n            </Row>\n        </Fragment>\n    );\n}\nexport default CommentsIndividualPostReturnCommentsHelper;"]},"metadata":{},"sourceType":"module"}