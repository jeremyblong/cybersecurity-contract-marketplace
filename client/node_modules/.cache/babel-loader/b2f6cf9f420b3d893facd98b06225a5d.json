{"ast":null,"code":"import React,{Fragment,useState,useMemo,useEffect,useRef}from\"react\";import Dropzone from'react-dropzone-uploader';import{Row,Col,Card,CardBody,Form,FormGroup,Label,Input,Button,InputGroup,InputGroupText,InputGroupAddon,Progress}from'reactstrap';import{useForm,Controller}from'react-hook-form';import{connect}from'react-redux';import{withRouter,Link}from'react-router-dom';import{ProgressLevel,UploadProjectFile}from'../../../../../../../../constant';import reduxFormHelpers from\"./helpers/reduxFormHelpers.js\";import optionHelper from\"./helpers/options/options.js\";import Select from\"react-select\";import helperFunctions from\"./helpers/helperFunctions/index.js\";import SimpleMDE from\"react-simplemde-editor\";import\"./styles.css\";import uuid from\"react-uuid\";import{Plus,Trash}from\"react-feather\";import{NotificationManager}from\"react-notifications\";import{updateCourseInformationData}from\"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";import _ from\"lodash\";const courseTitle=reduxFormHelpers().courseTitle;const courseCategory=reduxFormHelpers().courseCategory;const descriptionChecks=reduxFormHelpers().descriptionChecks;const pricing=reduxFormHelpers().pricing;const objectiveChecks=reduxFormHelpers().objectiveChecks;const courseDesignedForChecks=reduxFormHelpers().courseDesignedForChecks;const prerequisitesChecks=reduxFormHelpers().prerequisitesChecks;const{courseCategoryOptions,pricingOptions}=optionHelper;const{CourseCreationHashtagHelper}=helperFunctions;const CreateNewCoursePageOne=_ref=>{let{overallProgress,setOverallProgress,updateCourseInformationData}=_ref;// create ref's local\nconst courseCategoryGeneratedRef=useRef(null);const pricingGeneratedRef=useRef(null);const customHashtagsRef=useRef(null);let cursor=useRef(null);// state initialization\nconst[objectives,setObjectiveState]=useState([{partCount0:\"\",id:uuid()},{partCount1:\"\",id:uuid()},{partCount2:\"\",id:uuid()},{partCount3:\"\",id:uuid()}]);const[requirements,setRequirements]=useState([{partCount0:\"\",id:uuid()}]);const[courseContentConcepts,setCourseContentConcepts]=useState([{partCount0:\"\",id:uuid()}]);useEffect(()=>{setOverallProgress(25);},[]);// state init\nconst[hashtags,setHashtags]=useState([]);const[wordCount,setWordCount]=useState(0);// redux form logic\nconst{register,handleSubmit,control,resetField,unregister,getValues,array,setValue,setError,clearErrors,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});// collect redux-hook-form values\nconst currentValues=getValues();const renderErrorsFormUploadContent=(e,errors)=>{console.log(\"renderErrorsFormUploadContent ran...\",e,errors);};const onSubmission=(data,e)=>{console.log(\"onSubmission ran...\",e,data);const{objective0,objective1,objective2,objective3,concept0,courseCategory,courseHashtags,courseTitle,description,pricing,requirement0}=data;// LEFT OUT ~ concept1, concept2\nconst whatStudentsWillLearn={objective0:typeof objective0!==\"undefined\"?objective0:null,objective1:typeof objective1!==\"undefined\"?objective1:null,objective2:typeof objective2!==\"undefined\"?objective2:null,objective3:typeof objective3!==\"undefined\"?objective3:null,objective4:typeof data.objective4!==\"undefined\"?data.objective4:null,objective5:typeof data.objective5!==\"undefined\"?data.objective5:null};const mainData={courseTitle,courseCategory,courseHashtags,pricing,description};const requirementOrPreReqs={requirement0:typeof requirement0!==\"undefined\"?requirement0:null,requirement1:typeof data.requirement1!==\"undefined\"?data.requirement1:null,requirement2:typeof data.requirement2!==\"undefined\"?data.requirement2:null};const whoIsThisCourseFor={concept0:typeof concept0!==\"undefined\"?concept0:null,concept1:typeof data.concept1!==\"undefined\"?data.concept1:null,concept2:typeof data.concept2!==\"undefined\"?data.concept2:null};updateCourseInformationData({currentPage:2,makingEdits:false,pageOneData:{whatStudentsWillLearn,mainData,requirementOrPreReqs,whoIsThisCourseFor}});};const autofocusNoSpellcheckerOptions=useMemo(()=>{return{autofocus:false,spellChecker:false};},[]);const handleDeletionRow=(item,index,type,reduxType)=>{console.log(\"index main -:\",index);// objective requirements concepts\nif(type===\"objective\"){const relevant=getValues([\"objective0\",\"objective1\",\"objective2\",\"objective3\",\"objective4\",\"objective5\"]);setObjectiveState(prevState=>{// loop thru array\nfor(let idxxxx=index;idxxxx<relevant.length;idxxxx++){const val=relevant[idxxxx];if(typeof val===\"undefined\"){unregister([\"objective0\",\"objective1\",\"objective2\",\"objective3\",\"objective4\",\"objective5\"]);}else{setValue(\"objective\".concat(idxxxx-1),val,{shouldValidate:true});}}return prevState.filter(x=>{if(x.id===item.id){return false;}else{return true;}});});}else if(type===\"requirements\"){const relevant=getValues([\"requirement0\",\"requirement1\",\"requirement2\"]);setRequirements(prevState=>{// loop thru array\nfor(let idxxxx=index;idxxxx<relevant.length;idxxxx++){const val=relevant[idxxxx];if(typeof val===\"undefined\"){unregister([\"requirement0\",\"requirement1\",\"requirement2\"]);}else{setValue(\"requirement\".concat(idxxxx-1),val,{shouldValidate:true});}}return prevState.filter(x=>{if(x.id===item.id){return false;}else{return true;}});});}else if(type===\"concepts\"){const relevant=getValues([\"concept0\",\"concept1\",\"concept2\"]);setCourseContentConcepts(prevState=>{// loop thru array\nfor(let idxxxx=index;idxxxx<relevant.length;idxxxx++){const val=relevant[idxxxx];if(typeof val===\"undefined\"){unregister([\"concept0\",\"concept1\",\"concept2\"]);}else{setValue(\"concept\".concat(idxxxx-1),val,{shouldValidate:true});}}return prevState.filter(x=>{if(x.id===item.id){return false;}else{return true;}});});}};console.log(\"CURRENT VALUES! :\",currentValues,currentValues.length);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"centered-horizontally-course\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-above-bar-percentage\"},/*#__PURE__*/React.createElement(\"h1\",null,overallProgress,\"% Complete\")),/*#__PURE__*/React.createElement(Progress,{className:\"course-creation-progress-bar\",animated:true,color:\"info\",value:overallProgress})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit(onSubmission,(e,errors)=>{return renderErrorsFormUploadContent(e,errors);})},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,courseTitle.label),/*#__PURE__*/React.createElement(Input,Object.assign({},courseTitle.check(setError,register),{ref:cursor,className:\"form-control\",type:courseTitle.type,name:courseTitle.name,placeholder:courseTitle.placeholder,onChange:e=>{courseTitle.onChange(e,setValue);const caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues.courseTitle})),errors.courseTitle?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.courseTitle.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,courseCategory.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:courseCategory.name},courseCategory.check(setError,register,clearErrors),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:courseCategoryGeneratedRef,autoBlur:true,placeholder:courseCategory.placeholder,defaultValue:null,onMenuClose:()=>{courseCategoryGeneratedRef.current.blur();},value:currentValues.courseCategory,onChange:selectedOption=>courseCategory.onChange(selectedOption,setValue,clearErrors),options:courseCategoryOptions}));}})),errors.courseCategory?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.courseCategory.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,pricing.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:pricing.name},pricing.check(setError,register,clearErrors),{render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:pricingGeneratedRef,autoBlur:true,placeholder:pricing.placeholder,defaultValue:null,onMenuClose:()=>{pricingGeneratedRef.current.blur();},value:currentValues.pricing,onChange:selectedOption=>pricing.onChange(selectedOption,setValue,clearErrors),options:pricingOptions}));}})),errors.pricing?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.pricing.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(CourseCreationHashtagHelper,{customHashtagsRef:customHashtagsRef,setHashtags:setHashtags,hashtags:hashtags,setError:setError,register:register,values:currentValues,errors:errors,setValue:setValue,clearErrors:clearErrors,control:control}))),/*#__PURE__*/React.createElement(Row,{style:{paddingTop:\"20px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Label,null,\"Enter a description for your listing (markdown is accepted - use the attached buttons to customize the way your content looks)\"),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:descriptionChecks.name,value:currentValues.description},descriptionChecks.check(clearErrors,register,setError,currentValues,wordCount),{render:_ref4=>{let{field:{ref,onChange,value,...field}}=_ref4;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SimpleMDE,Object.assign({ref:ref},field,{placeholder:descriptionChecks.placeholder,name:descriptionChecks.name,onFocus:()=>{clearErrors(\"description\");},onBlur:()=>descriptionChecks.onBlur(clearErrors,setError,currentValues,wordCount),id:\"editor_container\",onChange:value=>{onChange(value);// return value for hook-form logic\nreturn value;},value:value,options:autofocusNoSpellcheckerOptions})),errors.description?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.description.message):null);}})))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"course-custom-title\"},\"The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"p\",{className:\"couse-create-p\"},\"The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.\"),/*#__PURE__*/React.createElement(\"h5\",{className:\"h5-custom-course\"},\"What will students learn in your course?\"),\"You must enter at least 4 learning \",/*#__PURE__*/React.createElement(\"a\",{href:\"\",className:\"important-course-link\"},\"objectives or outcomes\"),\" that learners can expect to achieve after completing your course.\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},objectives.map((objective,index)=>{return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(FormGroup,{style:{paddingTop:\"17.5px\"}},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{onClick:()=>{// reset input (recalculate order)\nresetField(\"objective\".concat(index));// make changes to state (redux-hook-form)\nhandleDeletionRow(objective,index,\"objective\");},addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,{style:{backgroundColor:\"#dc3545\"}},/*#__PURE__*/React.createElement(Trash,{style:{color:\"white\"}}))),/*#__PURE__*/React.createElement(Input,Object.assign({},objectiveChecks.check(register,\"objective\".concat(index)),{onChange:e=>{// value\nconst value=e.target.value;// create shallow array copy\nconst newArr=[...objectives];// create new object w/changes\nconst newObj={[\"partCount\".concat(index)]:value,id:objective.id};// replace item\nnewArr[index]=newObj;// render onChange logic\nobjectiveChecks.onChange(setValue,\"objective\".concat(index),value);// update relevant state\nsetObjectiveState(newArr);// logic to KEEP current cursor position\nconst caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues[\"objective\".concat(index)],name:\"objective\".concat(index),className:\"form-control no-right-border-input\",type:\"text\",placeholder:objectiveChecks.placeholder})),/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"counter-addon-transparent\",addonType:\"append\"},/*#__PURE__*/React.createElement(InputGroupText,null,typeof currentValues[\"objective\".concat(index)]!==\"undefined\"?160-currentValues[\"objective\".concat(index)].length:160))),errors[\"objective\".concat(index)]?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors[\"objective\".concat(index)].message):null,/*#__PURE__*/React.createElement(\"hr\",null)));}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"float-right-absolute\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{if(objectives.length<=5){setObjectiveState(prevState=>{return[...prevState,{[\"partOne\".concat(objectives.length)]:\"\",id:uuid()}];});}else{NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 6 TOTAL inputs/fields...Please use your existing fields.\",\"Too many fields/inputs!\",4500);}},outline:true,color:\"primary-2x\",className:\"btn-square primary\",style:{width:\"35%\",border:\"none\"}},/*#__PURE__*/React.createElement(Plus,{style:{fontSize:35,marginBottom:\"-7.5px\"}}),\" Add Another Field\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"course-custom-title\"},\"What are the requirements or prerequisites for taking your course?\"))),/*#__PURE__*/React.createElement(Row,{style:{marginBottom:\"25px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"p\",{className:\"couse-create-p\"},\"List the required skills, experience, tools or equipment learners should have prior to taking your course. \",/*#__PURE__*/React.createElement(\"br\",null),\" If there are no requirements, use this space as an opportunity to lower the barrier for beginners.\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},requirements.map((requirement,index)=>{return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(FormGroup,{style:{paddingTop:\"17.5px\"}},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{onClick:()=>{// reset input (recalculate order)\nresetField(\"requirement\".concat(index));// make changes to state (redux-hook-form)\nhandleDeletionRow(requirement,index,\"requirements\");},addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,{style:{backgroundColor:\"#dc3545\"}},/*#__PURE__*/React.createElement(Trash,{style:{color:\"white\"}}))),/*#__PURE__*/React.createElement(Input,Object.assign({},prerequisitesChecks.check(register,\"requirement\".concat(index)),{onChange:e=>{// value from input\nconst value=e.target.value;// shallow copy\nconst newArr=[...requirements];// new data obj\nconst newObj={[\"partCount\".concat(index)]:value,id:requirement.id};// replace item\nnewArr[index]=newObj;// render onChange logic\nprerequisitesChecks.onChange(setValue,\"requirement\".concat(index),value);// update the main state\nsetRequirements(newArr);// logic to KEEP current cursor position\nconst caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues[\"requirement\".concat(index)],name:\"requirement\".concat(index),className:\"form-control no-right-border-input\",type:\"text\",placeholder:prerequisitesChecks.placeholder})),/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"counter-addon-transparent\",addonType:\"append\"},/*#__PURE__*/React.createElement(InputGroupText,null,typeof currentValues[\"requirement\".concat(index)]!==\"undefined\"?160-currentValues[\"requirement\".concat(index)].length:160))),errors[\"requirement\".concat(index)]?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors[\"requirement\".concat(index)].message):null,/*#__PURE__*/React.createElement(\"hr\",null)));}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"float-right-absolute\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{if(requirements.length<=2){setRequirements(prevState=>{return[...prevState,{[\"partOne\".concat(requirements.length)]:\"\",id:uuid()}];});}else{NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\",\"Too many field's!\",4500);}},outline:true,color:\"primary-2x\",className:\"btn-square primary\",style:{width:\"35%\",border:\"none\"}},/*#__PURE__*/React.createElement(Plus,{style:{fontSize:35,marginBottom:\"-7.5px\"}}),\" Add Another Field\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"course-custom-title\"},\"Who is this course for?\"))),/*#__PURE__*/React.createElement(Row,{style:{marginBottom:\"25px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"p\",{className:\"couse-create-p\"},\"Write a clear description of the intended learners for your course who will find your course content valuable. \",/*#__PURE__*/React.createElement(\"br\",null),\" This will help you attract the right learners to your course.\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},courseContentConcepts.map((concept,index)=>{console.log(\"currentValues[`partCount${index}`]\",currentValues[\"partCount\".concat(index)],concept);return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(FormGroup,{style:{paddingTop:\"17.5px\"}},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{onClick:()=>{// reset input (recalculate order)\nresetField(\"concept\".concat(index));// make changes to state (redux-hook-form)\nhandleDeletionRow(concept,index,\"concepts\",\"concept\".concat(index),currentValues[\"concept\".concat(index)]);},addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,{style:{backgroundColor:\"#dc3545\"}},/*#__PURE__*/React.createElement(Trash,{style:{color:\"white\"}}))),/*#__PURE__*/React.createElement(Input,Object.assign({},courseDesignedForChecks.check(register,\"concept\".concat(index)),{onChange:e=>{// value from input\nconst value=e.target.value;// shallow copy\nconst newArr=[...courseContentConcepts];// new data obj\nconst newObj={[\"partCount\".concat(index)]:value,id:concept.id};// replace item\nnewArr[index]=newObj;// onchange handler\ncourseDesignedForChecks.onChange(setValue,\"concept\".concat(index),value);// update the main state\nsetCourseContentConcepts(newArr);// logic to KEEP current cursor position\nconst caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues[\"concept\".concat(index)],className:\"form-control no-right-border-input\",type:\"text\",placeholder:courseDesignedForChecks.placeholder})),/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"counter-addon-transparent\",addonType:\"append\"},/*#__PURE__*/React.createElement(InputGroupText,null,typeof currentValues[\"concept\".concat(index)]!==\"undefined\"?160-currentValues[\"concept\".concat(index)].length:160))),errors[\"concept\".concat(index)]?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors[\"concept\".concat(index)].message):null,/*#__PURE__*/React.createElement(\"hr\",null)));}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"float-right-absolute\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{if(courseContentConcepts.length<=2){setCourseContentConcepts(prevState=>{return[...prevState,{[\"partOne\".concat(courseContentConcepts.length)]:\"\",id:uuid()}];});}else{NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\",\"Too many field's!\",\"Too many field's!\",4500);}},outline:true,color:\"primary-2x\",className:\"btn-square primary\",style:{width:\"35%\",border:\"none\"}},/*#__PURE__*/React.createElement(Plus,{style:{fontSize:35,marginBottom:\"-7.5px\"}}),\" Add Another Field\"))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:\"42.5px\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-0\"},/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},color:\"info-2x\",outline:true,className:\"btn-square-info\",className:\"mr-3\"},\"Submit & Continue w/Process\"))))))))));};const mapStateToProps=state=>{return{userData:state.auth.data,courseData:_.has(state.courseData,\"courseData\")?state.courseData.courseData:null};};export default connect(mapStateToProps,{updateCourseInformationData})(withRouter(CreateNewCoursePageOne));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/index.js"],"names":["React","Fragment","useState","useMemo","useEffect","useRef","Dropzone","Row","Col","Card","CardBody","Form","FormGroup","Label","Input","Button","InputGroup","InputGroupText","InputGroupAddon","Progress","useForm","Controller","connect","withRouter","Link","ProgressLevel","UploadProjectFile","reduxFormHelpers","optionHelper","Select","helperFunctions","SimpleMDE","uuid","Plus","Trash","NotificationManager","updateCourseInformationData","_","courseTitle","courseCategory","descriptionChecks","pricing","objectiveChecks","courseDesignedForChecks","prerequisitesChecks","courseCategoryOptions","pricingOptions","CourseCreationHashtagHelper","CreateNewCoursePageOne","overallProgress","setOverallProgress","courseCategoryGeneratedRef","pricingGeneratedRef","customHashtagsRef","cursor","objectives","setObjectiveState","partCount0","id","partCount1","partCount2","partCount3","requirements","setRequirements","courseContentConcepts","setCourseContentConcepts","hashtags","setHashtags","wordCount","setWordCount","register","handleSubmit","control","resetField","unregister","getValues","array","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","renderErrorsFormUploadContent","e","console","log","onSubmission","data","objective0","objective1","objective2","objective3","concept0","courseHashtags","description","requirement0","whatStudentsWillLearn","objective4","objective5","mainData","requirementOrPreReqs","requirement1","requirement2","whoIsThisCourseFor","concept1","concept2","currentPage","makingEdits","pageOneData","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleDeletionRow","item","index","type","reduxType","relevant","prevState","idxxxx","length","val","shouldValidate","filter","x","label","check","name","placeholder","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","message","field","current","blur","selectedOption","paddingTop","ref","value","onBlur","map","objective","backgroundColor","color","newArr","newObj","warning","width","border","fontSize","marginBottom","requirement","concept","marginTop","mapStateToProps","state","userData","auth","courseData","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useMemo, useEffect, useRef } from \"react\";\nimport Dropzone from 'react-dropzone-uploader';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button, InputGroup, InputGroupText, InputGroupAddon, Progress } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { ProgressLevel, UploadProjectFile } from '../../../../../../../../constant';\nimport reduxFormHelpers from \"./helpers/reduxFormHelpers.js\";\nimport optionHelper from \"./helpers/options/options.js\";\nimport Select from \"react-select\";\nimport helperFunctions from \"./helpers/helperFunctions/index.js\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { Plus, Trash } from \"react-feather\";\nimport { NotificationManager } from \"react-notifications\";\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\n\nconst courseTitle = reduxFormHelpers().courseTitle;\nconst courseCategory = reduxFormHelpers().courseCategory;\nconst descriptionChecks = reduxFormHelpers().descriptionChecks;\nconst pricing = reduxFormHelpers().pricing;\nconst objectiveChecks = reduxFormHelpers().objectiveChecks;\nconst courseDesignedForChecks = reduxFormHelpers().courseDesignedForChecks;\nconst prerequisitesChecks = reduxFormHelpers().prerequisitesChecks;\n\nconst { courseCategoryOptions, pricingOptions } = optionHelper;\n\nconst { CourseCreationHashtagHelper } = helperFunctions;\n\n\nconst CreateNewCoursePageOne = ({ overallProgress, setOverallProgress, updateCourseInformationData }) => {\n    // create ref's local\n    const courseCategoryGeneratedRef = useRef(null);\n    const pricingGeneratedRef = useRef(null);\n    const customHashtagsRef = useRef(null);\n    let cursor = useRef(null);\n\n    // state initialization\n    const [ objectives, setObjectiveState ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }, {\n            partCount1: \"\",\n            id: uuid()\n        }, {\n            partCount2: \"\",\n            id: uuid()\n        }, {\n            partCount3: \"\",\n            id: uuid()\n        }\n    ]);\n    const [ requirements, setRequirements ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }\n    ]);\n    const [ courseContentConcepts, setCourseContentConcepts ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }\n    ]);\n    useEffect(() => {\n        setOverallProgress(25);\n    }, []);\n    // state init\n    const [ hashtags, setHashtags ] = useState([]);\n    const [ wordCount, setWordCount ] = useState(0);\n    // redux form logic\n    const { register, handleSubmit, control, resetField, unregister, getValues, array, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n    // collect redux-hook-form values\n    const currentValues = getValues();\n\n    const renderErrorsFormUploadContent = (e, errors) => {\n        console.log(\"renderErrorsFormUploadContent ran...\", e, errors);\n    }\n    const onSubmission = (data, e) => {\n        console.log(\"onSubmission ran...\", e, data);\n\n        const { objective0, objective1, objective2, objective3, concept0, courseCategory, courseHashtags, courseTitle, description, pricing, requirement0 } = data;\n\n        // LEFT OUT ~ concept1, concept2\n\n        const whatStudentsWillLearn = {\n            objective0: typeof objective0 !== \"undefined\" ? objective0 : null,\n            objective1: typeof objective1 !== \"undefined\" ? objective1 : null,\n            objective2: typeof objective2 !== \"undefined\" ? objective2 : null,\n            objective3: typeof objective3 !== \"undefined\" ? objective3 : null,\n            objective4: typeof data.objective4 !== \"undefined\" ? data.objective4 : null,\n            objective5: typeof data.objective5 !== \"undefined\" ? data.objective5 : null\n        };\n        const mainData = {\n            courseTitle,\n            courseCategory,\n            courseHashtags,\n            pricing,\n            description\n        };\n        const requirementOrPreReqs = {\n            requirement0: typeof requirement0 !== \"undefined\" ? requirement0 : null,\n            requirement1: typeof data.requirement1 !== \"undefined\" ? data.requirement1 : null,\n            requirement2: typeof data.requirement2 !== \"undefined\" ? data.requirement2 : null\n        }\n        const whoIsThisCourseFor = {\n            concept0: typeof concept0 !== \"undefined\" ? concept0 : null,\n            concept1: typeof data.concept1 !== \"undefined\" ? data.concept1 : null,\n            concept2: typeof data.concept2 !== \"undefined\" ? data.concept2 : null\n        }\n\n        updateCourseInformationData({\n            currentPage: 2,\n            makingEdits: false,\n            pageOneData: {\n                whatStudentsWillLearn,\n                mainData,\n                requirementOrPreReqs,\n                whoIsThisCourseFor\n            }\n        });\n    }\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        };\n    }, []);\n\n    const handleDeletionRow = (item, index, type, reduxType) => {\n        console.log(\"index main -:\", index);\n        // objective requirements concepts\n        if (type === \"objective\") {\n            \n            const relevant = getValues([\"objective0\", \"objective1\", \"objective2\", \"objective3\", \"objective4\", \"objective5\"]);\n            \n            setObjectiveState(prevState => {\n                // loop thru array\n                for (let idxxxx = index; idxxxx < relevant.length; idxxxx++) {\n                    const val = relevant[idxxxx];\n\n                    if (typeof val === \"undefined\") {\n                        unregister([\"objective0\", \"objective1\", \"objective2\", \"objective3\", \"objective4\", \"objective5\"])\n                    } else {\n                        setValue(`objective${idxxxx - 1}`, val, { shouldValidate: true });\n                    }\n                }\n                return prevState.filter((x => {\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            });\n        } else if (type === \"requirements\") {\n\n            const relevant = getValues([\"requirement0\", \"requirement1\", \"requirement2\"]);\n            \n            setRequirements(prevState => {\n                // loop thru array\n                for (let idxxxx = index; idxxxx < relevant.length; idxxxx++) {\n                    const val = relevant[idxxxx];\n\n                    if (typeof val === \"undefined\") {\n                        unregister([\"requirement0\", \"requirement1\", \"requirement2\"])\n                    } else {\n                        setValue(`requirement${idxxxx - 1}`, val, { shouldValidate: true });\n                    }\n                }\n                return prevState.filter((x => {\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            });\n        } else if (type === \"concepts\") {\n\n            const relevant = getValues([\"concept0\", \"concept1\", \"concept2\"]);\n            \n            setCourseContentConcepts(prevState => {\n                // loop thru array\n                for (let idxxxx = index; idxxxx < relevant.length; idxxxx++) {\n                    const val = relevant[idxxxx];\n\n                    if (typeof val === \"undefined\") {\n                        unregister([\"concept0\", \"concept1\", \"concept2\"])\n                    } else {\n                        setValue(`concept${idxxxx - 1}`, val, { shouldValidate: true });\n                    }\n                }\n                return prevState.filter((x => {\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            });\n        }\n    }\n    console.log(\"CURRENT VALUES! :\", currentValues, currentValues.length);\n    return (\n        <Fragment>\n            <div className={\"centered-horizontally-course\"}>\n                <div className={\"position-above-bar-percentage\"}>\n                    <h1>{overallProgress}% Complete</h1>\n                </div>\n                <Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} />\n            </div>\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit(onSubmission, (e, errors) => {\n                                return renderErrorsFormUploadContent(e, errors);\n                            })}>\n                            <Row>\n                                <Col>\n                                    <FormGroup>\n                                        <Label>{courseTitle.label}</Label>\n                                        <Input {...courseTitle.check(setError, register)} ref={cursor} className=\"form-control\" type={courseTitle.type} name={courseTitle.name} placeholder={courseTitle.placeholder} onChange={(e) => {\n                                            courseTitle.onChange(e, setValue);\n                                            const caret = e.target.selectionStart;\n                                            const element = e.target;\n                                            window.requestAnimationFrame(() => {\n                                                element.selectionStart = caret\n                                                element.selectionEnd = caret\n                                            })\n                                        }} value={currentValues.courseTitle} />\n                                        {errors.courseTitle ? <span className=\"span-tooltip\">{errors.courseTitle.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{courseCategory.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={courseCategory.name}\n                                            {...courseCategory.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={courseCategoryGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={courseCategory.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={() => {\n                                                        courseCategoryGeneratedRef.current.blur();\n                                                    }}\n                                                    value={currentValues.courseCategory}\n                                                    onChange={(selectedOption) => courseCategory.onChange(selectedOption, setValue, clearErrors)}\n                                                    options={courseCategoryOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.courseCategory ? <span className=\"span-tooltip\">{errors.courseCategory.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{pricing.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={pricing.name}\n                                            {...pricing.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={pricingGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={pricing.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={() => {\n                                                        pricingGeneratedRef.current.blur();\n                                                    }}\n                                                    value={currentValues.pricing}\n                                                    onChange={(selectedOption) => pricing.onChange(selectedOption, setValue, clearErrors)}\n                                                    options={pricingOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.pricing ? <span className=\"span-tooltip\">{errors.pricing.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <CourseCreationHashtagHelper customHashtagsRef={customHashtagsRef} setHashtags={setHashtags} hashtags={hashtags} setError={setError} register={register} values={currentValues} errors={errors} setValue={setValue} clearErrors={clearErrors} control={control} />\n                                </Col>\n                            </Row>\n                            <Row style={{ paddingTop: \"20px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Label>Enter a description for your listing (markdown is accepted - use the attached buttons to customize the way your content looks)</Label>\n                                    <Controller\n                                        control={control}\n                                        name={descriptionChecks.name}\n                                        value={currentValues.description}\n                                        {...descriptionChecks.check(clearErrors, register, setError, currentValues, wordCount)}\n                                        render={({ field: { ref, onChange, value, ...field }}) => (\n                                            <Fragment>\n                                                <SimpleMDE\n                                                    ref={ref}\n                                                    {...field}\n                                                    placeholder={descriptionChecks.placeholder}\n                                                    name={descriptionChecks.name}\n                                                    onFocus={() => {\n                                                        clearErrors(\"description\");\n                                                    }}\n                                                    onBlur={() => descriptionChecks.onBlur(clearErrors, setError, currentValues, wordCount)}\n                                                    id=\"editor_container\"\n                                                    onChange={(value) => {\n                                                        onChange(value);\n                                                        // return value for hook-form logic\n                                                        return value;\n                                                    }}\n                                                    value={value}\n                                                    options={autofocusNoSpellcheckerOptions}\n                                                />\n                                                {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                                            </Fragment>\n                                        )}\n                                    />\n                                </Col>\n                            </Row>\n                            <hr />\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.</h4>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.</p>\n                                    <h5 className={\"h5-custom-course\"}>What will students learn in your course?</h5>\n                                    You must enter at least 4 learning <a href={\"\"} className={\"important-course-link\"}>objectives or outcomes</a> that learners can expect to achieve after completing your course.\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {objectives.map((objective, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => {\n                                                            // reset input (recalculate order)\n                                                            resetField(`objective${index}`);\n                                                            // make changes to state (redux-hook-form)\n                                                            handleDeletionRow(objective, index, \"objective\");\n                                                        }} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...objectiveChecks.check(register, `objective${index}`)} onChange={(e) => {\n                                                            // value\n                                                            const value = e.target.value;\n                                                            // create shallow array copy\n                                                            const newArr = [...objectives];\n                                                            // create new object w/changes\n                                                            const newObj = { [`partCount${index}`]: value, id: objective.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // render onChange logic\n                                                            objectiveChecks.onChange(setValue, `objective${index}`, value);\n                                                            // update relevant state\n                                                            setObjectiveState(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`objective${index}`]} name={`objective${index}`} className=\"form-control no-right-border-input\" type=\"text\" placeholder={objectiveChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`objective${index}`] !== \"undefined\" ? 160 - currentValues[`objective${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`objective${index}`] ? <span className=\"span-tooltip\">{errors[`objective${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (objectives.length <= 5) {\n                                            setObjectiveState(prevState => {\n                                                return [...prevState, { [`partOne${objectives.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 6 TOTAL inputs/fields...Please use your existing fields.\", \"Too many fields/inputs!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>What are the requirements or prerequisites for taking your course?</h4>\n                                </Col>\n                            </Row>\n                            <Row style={{ marginBottom: \"25px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>List the required skills, experience, tools or equipment learners should have prior to taking your course. <br /> If there are no requirements, use this space as an opportunity to lower the barrier for beginners.</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {requirements.map((requirement, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => {\n                                                            // reset input (recalculate order)\n                                                            resetField(`requirement${index}`);\n                                                            // make changes to state (redux-hook-form)\n                                                            handleDeletionRow(requirement, index, \"requirements\")\n                                                        }} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...prerequisitesChecks.check(register, `requirement${index}`)} onChange={(e) => {\n                                                            // value from input\n                                                            const value = e.target.value;\n                                                            // shallow copy\n                                                            const newArr = [...requirements];\n                                                            // new data obj\n                                                            const newObj = { [`partCount${index}`]: value, id: requirement.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // render onChange logic\n                                                            prerequisitesChecks.onChange(setValue, `requirement${index}`, value);\n                                                            // update the main state\n                                                            setRequirements(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`requirement${index}`]} name={`requirement${index}`} className=\"form-control no-right-border-input\" type=\"text\" placeholder={prerequisitesChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`requirement${index}`] !== \"undefined\" ? 160 - currentValues[`requirement${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`requirement${index}`] ? <span className=\"span-tooltip\">{errors[`requirement${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (requirements.length <= 2) {\n                                            setRequirements(prevState => {\n                                                return [...prevState, { [`partOne${requirements.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>Who is this course for?</h4>\n                                </Col>\n                            </Row>\n                            <Row style={{ marginBottom: \"25px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>Write a clear description of the intended learners for your course who will find your course content valuable. <br /> This will help you attract the right learners to your course.</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {courseContentConcepts.map((concept, index) => {\n                                        console.log(\"currentValues[`partCount${index}`]\", currentValues[`partCount${index}`], concept);\n                                        return (\n                                            <Fragment key={index}>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => {\n                                                            // reset input (recalculate order)\n                                                            resetField(`concept${index}`);\n                                                            // make changes to state (redux-hook-form)\n                                                            handleDeletionRow(concept, index, \"concepts\", `concept${index}`, currentValues[`concept${index}`]);\n                                                        }} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...courseDesignedForChecks.check(register, `concept${index}`)} onChange={(e) => {\n                                                            // value from input\n                                                            const value = e.target.value;\n                                                            // shallow copy\n                                                            const newArr = [...courseContentConcepts];\n                                                            // new data obj\n                                                            const newObj = { [`partCount${index}`]: value, id: concept.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // onchange handler\n                                                            courseDesignedForChecks.onChange(setValue, `concept${index}`, value);\n                                                            // update the main state\n                                                            setCourseContentConcepts(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`concept${index}`]} className=\"form-control no-right-border-input\" type=\"text\" placeholder={courseDesignedForChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`concept${index}`] !== \"undefined\" ? 160 - currentValues[`concept${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`concept${index}`] ? <span className=\"span-tooltip\">{errors[`concept${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (courseContentConcepts.length <= 2) {\n                                            setCourseContentConcepts(prevState => {\n                                                return [...prevState, { [`partOne${courseContentConcepts.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", \"Too many field's!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row style={{ marginTop: \"42.5px\" }}>\n                                <Col>\n                                    <FormGroup className=\"mb-0\">\n                                        <Button style={{ width: \"100%\" }} color=\"info-2x\" outline className={\"btn-square-info\"} className=\"mr-3\">Submit & Continue w/Process</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : null\n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData })(withRouter(CreateNewCoursePageOne));"]},"metadata":{},"sourceType":"module"}