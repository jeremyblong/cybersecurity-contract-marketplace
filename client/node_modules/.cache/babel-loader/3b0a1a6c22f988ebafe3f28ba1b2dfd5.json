{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/employers/main/mainLandingPage.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageEmployerHelper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.authentication({}); // if (\"geolocation\" in navigator) {\n    //     console.log(\"Available\");\n    //     navigator.geolocation.getCurrentPosition((position) => {\n    //         console.log(\"Latitude is :\", position.coords.latitude);\n    //         //\n    //         console.log(\"Longitude is :\", position.coords.longitude);\n    //         const location = {\n    //             longitude: position.coords.longitude,\n    //             latitude: position.coords.latitude\n    //         };\n    //         const { uniqueId } = this.props.userData;\n    //         axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n    //             accountType: \"employers\",\n    //             location,\n    //             id: uniqueId\n    //         }).then((res) => {\n    //             if (res.data.message === \"Successfully saved location data to account!\") {\n    //                 console.log(res.data);\n    //                 const { user } = res.data;\n    //                 // this.props.authentication(user);\n    //                 NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n    //             } else {\n    //                 console.log(\"err\", res.data);\n    //                 NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n    //             }\n    //         }).catch((err) => {\n    //             console.log(err);\n    //         });\n    //     }, (error) => {\n    //         console.log(\"error gathering location - : \", error.message);\n    //         if (error.message === \"User denied geolocation prompt\") {\n    //             this.setState({\n    //                 locationError: error.message\n    //             })\n    //         }\n    //     });\n    //   } else {\n    //     console.log(\"Not Available\");\n    // }\n  }\n\n  render() {\n    const {\n      locationError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"~ dashboard employer! ~\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), typeof locationError !== \"undefined\" && locationError.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 85\n      }\n    }, locationError) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authentication\n})(MainLandingPageEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/employers/main/mainLandingPage.js"],"names":["React","Component","axios","connect","authentication","NotificationManager","MainLandingPageEmployerHelper","constructor","props","state","locationError","componentDidMount","render","length","color","mapStateToProps","userData","auth","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qDAA/B;AACA,SAASC,mBAAT,QAAoC,qBAApC;;AAEA,MAAMC,6BAAN,SAA4CL,SAA5C,CAAsD;AACtDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAGH;;AACGC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWJ,cAAX,CAA0B,EAA1B,EADgB,CAEhB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,OAAOC,aAAP,KAAyB,WAAzB,IAAwCA,aAAa,CAACG,MAAd,GAAuB,CAA/D,gBAAmE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAA4B,MAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CJ,aAA9C,CAAnE,GAAsI,IAH3I,CADJ;AAOH;;AApEiD;;AAsEtD,MAAMK,eAAe,GAAIN,KAAD,IAAW;AAC/B,SAAO;AACHO,IAAAA,QAAQ,EAAEP,KAAK,CAACQ,IAAN,CAAWC;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAef,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,6BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageEmployerHelper extends Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        locationError: \"\"\n    }\n}\n    componentDidMount() {\n        this.props.authentication({});\n        // if (\"geolocation\" in navigator) {\n        //     console.log(\"Available\");\n\n        //     navigator.geolocation.getCurrentPosition((position) => {\n        //         console.log(\"Latitude is :\", position.coords.latitude);\n        //         //\n        //         console.log(\"Longitude is :\", position.coords.longitude);\n\n        //         const location = {\n        //             longitude: position.coords.longitude,\n        //             latitude: position.coords.latitude\n        //         };\n\n        //         const { uniqueId } = this.props.userData;\n\n        //         axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n        //             accountType: \"employers\",\n        //             location,\n        //             id: uniqueId\n        //         }).then((res) => {\n        //             if (res.data.message === \"Successfully saved location data to account!\") {\n        //                 console.log(res.data);\n\n        //                 const { user } = res.data;\n\n        //                 // this.props.authentication(user);\n\n        //                 NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n        //             } else {\n        //                 console.log(\"err\", res.data);\n\n        //                 NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n        //             }\n        //         }).catch((err) => {\n        //             console.log(err);\n        //         });\n        //     }, (error) => {\n        //         console.log(\"error gathering location - : \", error.message);\n\n        //         if (error.message === \"User denied geolocation prompt\") {\n        //             this.setState({\n        //                 locationError: error.message\n        //             })\n        //         }\n        //     });\n        //   } else {\n        //     console.log(\"Not Available\");\n        // }\n    }\n    render() {\n        const { locationError } = this.state;\n        return (\n            <div>\n                <h1>~ dashboard employer! ~</h1>\n                <hr />\n                {typeof locationError !== \"undefined\" && locationError.length > 0 ? <p style={{ color: \"red\" }} className=\"lead\">{locationError}</p> : null}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { authentication })(MainLandingPageEmployerHelper);\n"]},"metadata":{},"sourceType":"module"}