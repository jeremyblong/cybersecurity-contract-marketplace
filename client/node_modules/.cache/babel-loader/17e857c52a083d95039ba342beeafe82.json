{"ast":null,"code":"import React,{Fragment,useState,useRef}from'react';import{Row,Col,Form,Label,Button}from'reactstrap';import{NotificationManager}from\"react-notifications\";import Dropzone from'react-dropzone-uploader';import axios from\"axios\";import FileViewer from'react-file-viewer';import _ from\"lodash\";import ReactPlayer from'react-player';import\"./styles.css\";const PageTwoVideoCreationHelper=_ref=>{let{saveNewDetails,allData,jumpToStep,progress,setProgress}=_ref;const dropzoneRef=useRef(null);const[fileReady,setFileReadyStatus]=useState(false);const[currentFileSelectedUpload,setCurrentUploadFileStatus]=useState(null);const[filePathData,setCurrentFilePathData]=useState(null);const[fileMetaData,setMetaFileData]=useState(null);const[changeOptions,setChangeOptions]=useState(null);const CustomInputHelper=_ref2=>{let{accept,onFiles}=_ref2;const text=\"Drop a file OR select to browse local data\";return/*#__PURE__*/React.createElement(\"label\",{className:\"custom-input-dropzone-copy\",style:{backgroundColor:'#007bff',color:'#fff',cursor:'pointer',padding:15,borderRadius:3}},text,/*#__PURE__*/React.createElement(\"input\",{style:{display:'none'},type:\"file\",accept:accept,multiple:false,className:\"custom-dropzone-input-actual-input\",onChange:e=>{const file=e.target.files[0];// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(file));// set status update for current file\nsetCurrentUploadFileStatus(file);// mark file as READY \nsetFileReadyStatus(true);// update \"Dropzone\" component state (NOT this react component state).\nonFiles([file]);}}));};const handleSubmit=runSubmit=>{console.log(\"submitted!\",currentFileSelectedUpload,fileMetaData);const data=new FormData();data.append(\"file\",currentFileSelectedUpload);data.append(\"meta\",fileMetaData);const config={onUploadProgress:progressEvent=>{let percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);},headers:{'Content-Type':'multipart/form-data'}};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/upload/misc/file/softare/listing/sale\"),data,config).then(res=>{if(res.data.message===\"Successfully uploaded file!\"){console.log(res.data);const{file}=res.data;NotificationManager.success(\"We've successfully uploaded your file! Please proceed filling out your information or add more files.\",'Successfully uploaded file!',4500);saveNewDetails({courseContent:file});setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);runSubmit();}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(err);});};const onError=e=>{console.log(e,'error in file-viewer');};const calculateFileType=type=>{switch(type){case\"video/mp4\":return\"mp4\";break;case\"image/png\":return\"png\";break;case\"image/jpeg\":return\"jpeg\";break;case\"image/jpg\":return\"jpg\";break;case\"image/gif\":return\"gif\";break;case\"image/bmp\":return\"bmp\";break;case\"application/pdf\":return\"pdf\";break;case\"text/csv\":return\"csv\";break;case\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":return\"xlsx\";break;case\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":return\"docx\";break;case\"video/webm\":return\"webm\";break;case\"audio/mpeg\":return\"mp3\";break;default:break;}};const renderCustomButtonDropzone=(data,e)=>{const{meta}=data.files[0];if(currentFileSelectedUpload===null){return null;}else{if(fileReady===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{e.preventDefault();// file meta data for next action\nsetMetaFileData(meta);// set file status as ready or prepared.\nsetFileReadyStatus(false);const runSubmit=data.onSubmit;handleSubmit(runSubmit);},className:\"btn-air-secondary\",color:\"secondary\",size:\"md\"},\"Submit & Upload New File!\"));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:()=>{NotificationManager.warning(\"File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.\",'Still preparing!',4500);},className:\"btn-air-light\",color:\"light\",size:\"md\"},\"Submit & Upload New File!\"));}}};const renderPreviewOfFile=data=>{const file=data.fileWithMeta.file;// return preview data via FileViewer (to not exclude documents such as .docx and such...);\nif(fileReady===true){return/*#__PURE__*/React.createElement(\"div\",{className:\"filereader-preview-dropzone\"},/*#__PURE__*/React.createElement(FileViewer,{fileType:calculateFileType(file.type),filePath:filePathData,onError:onError,key:file.id}));}else{return null;}};const onSubmitHelper=(files,allFiles)=>{allFiles.forEach(file=>{file.remove();});};const handleSubmissionData=()=>{console.log(\"handleSubmissionData clicked/ran\");if(_.has(allData,\"courseContent\")&&Object.keys(allData.courseContent).length>0){jumpToStep(2);}else{NotificationManager.warning(\"You MUST upload a video and/or data-content before attempting to proceed - upload a video up-to 30 minutes in length. Please upload a video before attempting to proceed..\",\"Upload a tutorial video before proceeding!\",4750);}};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Form,{className:\"needs-validation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,{style:{marginTop:\"17.5px\",marginBottom:\"17.5px\"}},\"Upload your video content (up-to 30 minutes in length)\"),_.has(allData,\"courseContent\")&&Object.keys(allData.courseContent).length>0?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dz-message needsclick\"},/*#__PURE__*/React.createElement(Dropzone,{ref:dropzoneRef,PreviewComponent:data=>renderPreviewOfFile(data),maxFiles:1,autoUpload:true,onChangeStatus:functions=>{setChangeOptions(functions);},submitButtonDisabled:false,InputComponent:CustomInputHelper,onSubmit:onSubmitHelper,SubmitButtonComponent:(data,e)=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-position-submit-btn\"},renderCustomButtonDropzone(data,e));},multiple:false,canCancel:false,styles:{dropzone:{height:325},dropzoneActive:{borderColor:'green'}}}))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(ReactPlayer,{controls:true,loop:true,width:\"100%\",className:\"video-uploaded-course-data-tutorial\",wrapper:\"div\",url:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(allData.courseContent.link)})))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"dz-message needsclick\"},/*#__PURE__*/React.createElement(Dropzone,{ref:dropzoneRef,PreviewComponent:data=>renderPreviewOfFile(data),maxFiles:1,autoUpload:true,onChangeStatus:functions=>{setChangeOptions(functions);},submitButtonDisabled:false,InputComponent:CustomInputHelper,onSubmit:onSubmitHelper,SubmitButtonComponent:(data,e)=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-position-submit-btn\"},renderCustomButtonDropzone(data,e));},multiple:false,canCancel:false,styles:{dropzone:{height:325},dropzoneActive:{borderColor:'green'}}}))),fileReady===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"hr\",{className:\"secondary-hr\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);changeOptions.remove();},className:\"btn-air-danger cancel-button-upload\",color:\"danger\",size:\"md\"},\"Cancel Current/Pending Upload\"))):null)),/*#__PURE__*/React.createElement(Button,{onClick:handleSubmissionData,className:\"btn-square-success\",color:\"success\",style:{width:\"100%\",marginBottom:\"12.5px\",marginTop:\"12.5px\"}},\"Proceed Forward W/Next Step\")))));};export default PageTwoVideoCreationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageTwo/pageTwoSection.js"],"names":["React","Fragment","useState","useRef","Row","Col","Form","Label","Button","NotificationManager","Dropzone","axios","FileViewer","_","ReactPlayer","PageTwoVideoCreationHelper","saveNewDetails","allData","jumpToStep","progress","setProgress","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","URL","createObjectURL","handleSubmit","runSubmit","console","log","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","courseContent","catch","err","onError","calculateFileType","type","renderCustomButtonDropzone","meta","marginTop","preventDefault","onSubmit","warning","renderPreviewOfFile","fileWithMeta","id","onSubmitHelper","allFiles","forEach","remove","handleSubmissionData","has","Object","keys","length","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","REACT_APP_ASSET_LINK","link","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,MAApC,KAAkD,OAAlD,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,KAAzB,CAAgCC,MAAhC,KAA8C,YAA9C,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAO,cAAP,CAEA,KAAMC,CAAAA,0BAA0B,CAAG,MAAoE,IAAnE,CAAEC,cAAF,CAAkBC,OAAlB,CAA2BC,UAA3B,CAAuCC,QAAvC,CAAiDC,WAAjD,CAAmE,MAEnG,KAAMC,CAAAA,WAAW,CAAGlB,MAAM,CAAC,IAAD,CAA1B,CAEA,KAAM,CAACmB,SAAD,CAAYC,kBAAZ,EAAkCrB,QAAQ,CAAC,KAAD,CAAhD,CACA,KAAM,CAACsB,yBAAD,CAA4BC,0BAA5B,EAA0DvB,QAAQ,CAAC,IAAD,CAAxE,CACA,KAAM,CAACwB,YAAD,CAAeC,sBAAf,EAAyCzB,QAAQ,CAAC,IAAD,CAAvD,CACA,KAAM,CAAC0B,YAAD,CAAeC,eAAf,EAAkC3B,QAAQ,CAAC,IAAD,CAAhD,CACA,KAAM,CAAE4B,aAAF,CAAiBC,gBAAjB,EAAsC7B,QAAQ,CAAC,IAAD,CAApD,CAEA,KAAM8B,CAAAA,iBAAiB,CAAG,OAAyB,IAAxB,CAAEC,MAAF,CAAUC,OAAV,CAAwB,OAE/C,KAAMC,CAAAA,IAAI,CAAG,4CAAb,CAEA,mBACI,6BAAO,SAAS,CAAC,4BAAjB,CAA8C,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,KAAK,CAAE,MAArC,CAA6CC,MAAM,CAAE,SAArD,CAAgEC,OAAO,CAAE,EAAzE,CAA6EC,YAAY,CAAE,CAA3F,CAArD,EACKL,IADL,cAEI,6BACI,KAAK,CAAE,CAAEM,OAAO,CAAE,MAAX,CADX,CAEI,IAAI,CAAC,MAFT,CAGI,MAAM,CAAER,MAHZ,CAII,QAAQ,CAAE,KAJd,CAKI,SAAS,CAAE,oCALf,CAMI,QAAQ,CAAES,CAAC,EAAI,CACX,KAAMC,CAAAA,IAAI,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CACA;AACAlB,sBAAsB,CAACmB,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAD,CAAtB,CACA;AACAlB,0BAA0B,CAACkB,IAAD,CAA1B,CACA;AACApB,kBAAkB,CAAC,IAAD,CAAlB,CACA;AACAW,OAAO,CAAC,CAACS,IAAD,CAAD,CAAP,CACH,CAhBL,EAFJ,CADJ,CAuBH,CA3BD,CA4BA,KAAMK,CAAAA,YAAY,CAAIC,SAAD,EAAe,CAEhCC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0B3B,yBAA1B,CAAqDI,YAArD,EAEA,KAAMwB,CAAAA,IAAI,CAAG,GAAIC,CAAAA,QAAJ,EAAb,CAEAD,IAAI,CAACE,MAAL,CAAY,MAAZ,CAAoB9B,yBAApB,EACA4B,IAAI,CAACE,MAAL,CAAY,MAAZ,CAAoB1B,YAApB,EAEA,KAAM2B,CAAAA,MAAM,CAAG,CACXC,gBAAgB,CAAGC,aAAD,EAAmB,CACjC,GAAIC,CAAAA,gBAAgB,CAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,CAAuB,GAAxB,CAA+BJ,aAAa,CAACK,KAAxD,CAAvB,CAEA1C,WAAW,CAACsC,gBAAD,CAAX,CACH,CALU,CAMXK,OAAO,CAAE,CACL,eAAgB,qBADX,CANE,CAAf,CAWApD,KAAK,CAACqD,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,kBAA1B,2CAAsFf,IAAtF,CAA4FG,MAA5F,EAAoGa,IAApG,CAA0GC,GAAD,EAAS,CAC9G,GAAIA,GAAG,CAACjB,IAAJ,CAASkB,OAAT,GAAqB,6BAAzB,CAAwD,CACpDpB,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAACjB,IAAhB,EAEA,KAAM,CAAET,IAAF,EAAW0B,GAAG,CAACjB,IAArB,CAEA3C,mBAAmB,CAAC8D,OAApB,yGAAqI,6BAArI,CAAoK,IAApK,EAEAvD,cAAc,CAAC,CACXwD,aAAa,CAAE7B,IADJ,CAAD,CAAd,CAIAd,eAAe,CAAC,IAAD,CAAf,CACAN,kBAAkB,CAAC,KAAD,CAAlB,CACAE,0BAA0B,CAAC,IAAD,CAA1B,CAEAwB,SAAS,GACZ,CAhBD,IAgBO,CACHC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBkB,GAAG,CAACjB,IAAvB,EACH,CACJ,CApBD,EAoBGqB,KApBH,CAoBUC,GAAD,EAAS,CACdxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,EACH,CAtBD,EAuBH,CA3CD,CA4CA,KAAMC,CAAAA,OAAO,CAAIjC,CAAD,EAAO,CACnBQ,OAAO,CAACC,GAAR,CAAYT,CAAZ,CAAe,sBAAf,EACH,CAFD,CAGA,KAAMkC,CAAAA,iBAAiB,CAAIC,IAAD,EAAU,CAChC,OAAQA,IAAR,EACI,IAAK,WAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,WAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,YAAL,CACI,MAAO,MAAP,CACA,MACJ,IAAK,WAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,WAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,WAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,iBAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,UAAL,CACI,MAAO,KAAP,CACA,MACJ,IAAK,mEAAL,CACI,MAAO,MAAP,CACA,MACJ,IAAK,yEAAL,CACI,MAAO,MAAP,CACA,MACJ,IAAK,YAAL,CACI,MAAO,MAAP,CACA,MACJ,IAAK,YAAL,CACI,MAAO,KAAP,CACA,MACJ,QACI,MAtCR,CAwCH,CAzCD,CA0CA,KAAMC,CAAAA,0BAA0B,CAAG,CAAC1B,IAAD,CAAOV,CAAP,GAAa,CAE5C,KAAM,CAAEqC,IAAF,EAAW3B,IAAI,CAACP,KAAL,CAAW,CAAX,CAAjB,CAEA,GAAIrB,yBAAyB,GAAK,IAAlC,CAAwC,CACpC,MAAO,KAAP,CACH,CAFD,IAEO,CACH,GAAIF,SAAS,GAAK,IAAlB,CAAwB,CACpB,mBACI,oBAAC,QAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAE0D,SAAS,CAAE,MAAb,CAAf,CAAsC,OAAO,CAAGtC,CAAD,EAAO,CAClDA,CAAC,CAACuC,cAAF,GACA;AACApD,eAAe,CAACkD,IAAD,CAAf,CACA;AACAxD,kBAAkB,CAAC,KAAD,CAAlB,CAEA,KAAM0B,CAAAA,SAAS,CAAGG,IAAI,CAAC8B,QAAvB,CAEAlC,YAAY,CAACC,SAAD,CAAZ,CACH,CAVD,CAUG,SAAS,CAAC,mBAVb,CAUiC,KAAK,CAAC,WAVvC,CAUmD,IAAI,CAAC,IAVxD,8BADJ,CADJ,CAeH,CAhBD,IAgBO,CACH,mBACI,oBAAC,QAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAE+B,SAAS,CAAE,MAAb,CAAf,CAAsC,OAAO,CAAE,IAAM,CACjDvE,mBAAmB,CAAC0E,OAApB,yGAAqI,kBAArI,CAAyJ,IAAzJ,EACH,CAFD,CAEG,SAAS,CAAC,eAFb,CAE6B,KAAK,CAAC,OAFnC,CAE2C,IAAI,CAAC,IAFhD,8BADJ,CADJ,CAOH,CACJ,CACJ,CAjCD,CAkCA,KAAMC,CAAAA,mBAAmB,CAAIhC,IAAD,EAAU,CAElC,KAAMT,CAAAA,IAAI,CAAGS,IAAI,CAACiC,YAAL,CAAkB1C,IAA/B,CACA;AACA,GAAIrB,SAAS,GAAK,IAAlB,CAAwB,CACpB,mBACI,2BAAK,SAAS,CAAC,6BAAf,eACI,oBAAC,UAAD,EACI,QAAQ,CAAEsD,iBAAiB,CAACjC,IAAI,CAACkC,IAAN,CAD/B,CAEI,QAAQ,CAAEnD,YAFd,CAGI,OAAO,CAAEiD,OAHb,CAII,GAAG,CAAEhC,IAAI,CAAC2C,EAJd,EADJ,CADJ,CAUH,CAXD,IAWO,CACH,MAAO,KAAP,CACH,CACJ,CAlBD,CAmBA,KAAMC,CAAAA,cAAc,CAAG,CAAC1C,KAAD,CAAQ2C,QAAR,GAAqB,CACxCA,QAAQ,CAACC,OAAT,CAAkB9C,IAAD,EAAU,CACvBA,IAAI,CAAC+C,MAAL,GACH,CAFD,EAGH,CAJD,CAKA,KAAMC,CAAAA,oBAAoB,CAAG,IAAM,CAC/BzC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAEA,GAAItC,CAAC,CAAC+E,GAAF,CAAM3E,OAAN,CAAe,eAAf,GAAmC4E,MAAM,CAACC,IAAP,CAAY7E,OAAO,CAACuD,aAApB,EAAmCuB,MAAnC,CAA4C,CAAnF,CAAsF,CAClF7E,UAAU,CAAC,CAAD,CAAV,CACH,CAFD,IAEO,CACHT,mBAAmB,CAAC0E,OAApB,CAA4B,4KAA5B,CAA0M,4CAA1M,CAAwP,IAAxP,EACH,CACJ,CARD,CASA,mBACI,oBAAC,QAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,kBAAhB,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,SAAR,eACI,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEH,SAAS,CAAE,QAAb,CAAuBgB,YAAY,CAAE,QAArC,CAAd,2DADJ,CAEKnF,CAAC,CAAC+E,GAAF,CAAM3E,OAAN,CAAe,eAAf,GAAmC4E,MAAM,CAACC,IAAP,CAAY7E,OAAO,CAACuD,aAApB,EAAmCuB,MAAnC,CAA4C,CAA/E,cAAmF,oBAAC,QAAD,mBAChF,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,2BAAK,SAAS,CAAC,uBAAf,eACI,oBAAC,QAAD,EACI,GAAG,CAAE1E,WADT,CAEI,gBAAgB,CAAG+B,IAAD,EAAUgC,mBAAmB,CAAChC,IAAD,CAFnD,CAGI,QAAQ,CAAE,CAHd,CAII,UAAU,CAAE,IAJhB,CAKI,cAAc,CAAG6C,SAAD,EAAe,CAC3BlE,gBAAgB,CAACkE,SAAD,CAAhB,CACH,CAPL,CAQI,oBAAoB,CAAE,KAR1B,CASI,cAAc,CAAEjE,iBATpB,CAUI,QAAQ,CAAEuD,cAVd,CAWI,qBAAqB,CAAE,CAACnC,IAAD,CAAOV,CAAP,GAAa,CAChC,mBACI,2BAAK,SAAS,CAAC,gCAAf,EACKoC,0BAA0B,CAAC1B,IAAD,CAAOV,CAAP,CAD/B,CADJ,CAKH,CAjBL,CAkBI,QAAQ,CAAE,KAlBd,CAmBI,SAAS,CAAE,KAnBf,CAoBI,MAAM,CAAE,CACJwD,QAAQ,CAAE,CAAEC,MAAM,CAAE,GAAV,CADN,CAEJC,cAAc,CAAE,CAAEC,WAAW,CAAE,OAAf,CAFZ,CApBZ,EADJ,CADJ,CADJ,cA8BI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,WAAD,EAAa,QAAQ,CAAE,IAAvB,CAA6B,IAAI,CAAE,IAAnC,CAAyC,KAAK,CAAE,MAAhD,CAAwD,SAAS,CAAE,qCAAnE,CAA0G,OAAO,CAAE,KAAnH,CAA0H,GAAG,WAAKpC,OAAO,CAACC,GAAR,CAAYoC,oBAAjB,aAAyCrF,OAAO,CAACuD,aAAR,CAAsB+B,IAA/D,CAA7H,EADJ,CA9BJ,CADgF,CAAnF,cAmCa,oBAAC,QAAD,mBACV,2BAAK,SAAS,CAAC,uBAAf,eACI,oBAAC,QAAD,EACI,GAAG,CAAElF,WADT,CAEI,gBAAgB,CAAG+B,IAAD,EAAUgC,mBAAmB,CAAChC,IAAD,CAFnD,CAGI,QAAQ,CAAE,CAHd,CAII,UAAU,CAAE,IAJhB,CAKI,cAAc,CAAG6C,SAAD,EAAe,CAC3BlE,gBAAgB,CAACkE,SAAD,CAAhB,CACH,CAPL,CAQI,oBAAoB,CAAE,KAR1B,CASI,cAAc,CAAEjE,iBATpB,CAUI,QAAQ,CAAEuD,cAVd,CAWI,qBAAqB,CAAE,CAACnC,IAAD,CAAOV,CAAP,GAAa,CAChC,mBACI,2BAAK,SAAS,CAAC,gCAAf,EACKoC,0BAA0B,CAAC1B,IAAD,CAAOV,CAAP,CAD/B,CADJ,CAKH,CAjBL,CAkBI,QAAQ,CAAE,KAlBd,CAmBI,SAAS,CAAE,KAnBf,CAoBI,MAAM,CAAE,CACJwD,QAAQ,CAAE,CAAEC,MAAM,CAAE,GAAV,CADN,CAEJC,cAAc,CAAE,CAAEC,WAAW,CAAE,OAAf,CAFZ,CApBZ,EADJ,CADU,CArClB,CAkEK/E,SAAS,GAAK,IAAd,cAAqB,oBAAC,QAAD,mBAClB,0BAAI,SAAS,CAAC,cAAd,EADkB,cAElB,2BAAK,SAAS,CAAC,oBAAf,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAE0D,SAAS,CAAE,MAAb,CAAf,CAAsC,OAAO,CAAGtC,CAAD,EAAO,CAClDb,eAAe,CAAC,IAAD,CAAf,CACAN,kBAAkB,CAAC,KAAD,CAAlB,CACAE,0BAA0B,CAAC,IAAD,CAA1B,CAEAK,aAAa,CAAC4D,MAAd,GACH,CAND,CAMG,SAAS,CAAC,qCANb,CAMmD,KAAK,CAAC,QANzD,CAMkE,IAAI,CAAC,IANvE,kCADJ,CAFkB,CAArB,CAWa,IA7ElB,CADJ,CADJ,cAkFI,oBAAC,MAAD,EAAQ,OAAO,CAAEC,oBAAjB,CAAuC,SAAS,CAAE,oBAAlD,CAAwE,KAAK,CAAE,SAA/E,CAA0F,KAAK,CAAE,CAAEa,KAAK,CAAE,MAAT,CAAiBR,YAAY,CAAE,QAA/B,CAAyChB,SAAS,CAAE,QAApD,CAAjG,gCAlFJ,CADJ,CADJ,CADJ,CADJ,CA4FH,CA9RD,CAgSA,cAAejE,CAAAA,0BAAf","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport { Row, Col, Form, Label, Button } from 'reactstrap';\nimport { NotificationManager } from \"react-notifications\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\nimport \"./styles.css\";\n\nconst PageTwoVideoCreationHelper = ({ saveNewDetails, allData, jumpToStep, progress, setProgress }) => {\n\n    const dropzoneRef = useRef(null);\n\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => {\n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                saveNewDetails({\n                    courseContent: file\n                });\n\n                setMetaFileData(null);\n                setFileReadyStatus(false);\n                setCurrentUploadFileStatus(null);\n\n                runSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n    const onError = (e) => {\n        console.log(e, 'error in file-viewer');\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/jpg\":\n                return \"jpg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={onError}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    const handleSubmissionData = () => {\n        console.log(\"handleSubmissionData clicked/ran\");\n\n        if (_.has(allData, \"courseContent\") && Object.keys(allData.courseContent).length > 0) {\n            jumpToStep(2);\n        } else {\n            NotificationManager.warning(\"You MUST upload a video and/or data-content before attempting to proceed - upload a video up-to 30 minutes in length. Please upload a video before attempting to proceed..\", \"Upload a tutorial video before proceeding!\", 4750);\n        }\n    }\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Form className=\"needs-validation\">\n                        <div className=\"form-row\">\n                            <Col md=\"12 mb-3\">\n                                <Label style={{ marginTop: \"17.5px\", marginBottom: \"17.5px\" }}>Upload your video content (up-to 30 minutes in length)</Label>\n                                {_.has(allData, \"courseContent\") && Object.keys(allData.courseContent).length > 0 ? <Fragment>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <div className=\"dz-message needsclick\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    onSubmit={onSubmitHelper}\n                                                    SubmitButtonComponent={(data, e) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, e)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 325 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                            </div>\n                                        </Col>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <ReactPlayer controls={true} loop={true} width={\"100%\"} className={\"video-uploaded-course-data-tutorial\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${allData.courseContent.link}`} />\n                                        </Col>\n                                    </Row>\n                                </Fragment> : <Fragment>\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            ref={dropzoneRef}\n                                            PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                            maxFiles={1}\n                                            autoUpload={true}\n                                            onChangeStatus={(functions) => {\n                                                setChangeOptions(functions);\n                                            }}\n                                            submitButtonDisabled={false}\n                                            InputComponent={CustomInputHelper}\n                                            onSubmit={onSubmitHelper}\n                                            SubmitButtonComponent={(data, e) => {\n                                                return (\n                                                    <div className=\"absolutely-position-submit-btn\">\n                                                        {renderCustomButtonDropzone(data, e)}\n                                                    </div>\n                                                );\n                                            }}\n                                            multiple={false}\n                                            canCancel={false}\n                                            styles={{\n                                                dropzone: { height: 325 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                </Fragment>}\n                                {fileReady === true ? <Fragment>\n                                    <hr className=\"secondary-hr\" />\n                                    <div className=\"centered-both-ways\">\n                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                            setMetaFileData(null);\n                                            setFileReadyStatus(false);\n                                            setCurrentUploadFileStatus(null);\n\n                                            changeOptions.remove();\n                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                    </div>\n                                </Fragment> : null}\n                            </Col>\n                        </div>\n                        <Button onClick={handleSubmissionData} className={\"btn-square-success\"} color={\"success\"} style={{ width: \"100%\", marginBottom: \"12.5px\", marginTop: \"12.5px\" }}>Proceed Forward W/Next Step</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default PageTwoVideoCreationHelper;"]},"metadata":{},"sourceType":"module"}