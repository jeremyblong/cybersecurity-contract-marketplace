{"ast":null,"code":"import _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/createListing/create/helpers/location/searchAddress.js\";\nimport React, { Component, Fragment } from 'react';\nimport Autocomplete from \"react-autocomplete\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport \"./styles.css\";\nimport { saveListingData } from \"../../../../../../../../redux/actions/employer/listings/listingData.js\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nvar LocationSearchInput = /*#__PURE__*/function (_Component) {\n  _inherits(LocationSearchInput, _Component);\n\n  var _super = _createSuper(LocationSearchInput);\n\n  function LocationSearchInput(props) {\n    var _this;\n\n    _classCallCheck(this, LocationSearchInput);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        address: value\n      }, function () {\n        axios.get(\"https://api.tomtom.com/search/2/search/\".concat(_this.state.address, \".json?key=\").concat(process.env.REACT_APP_TOMTOM_API_KEY, \"&language=en-US&limit=10&idxSet=PAD\")).then(function (res) {\n          var results = res.data.results;\n\n          _this.setState({\n            results: results\n          });\n        }).catch(function (err) {\n          console.log(\"tomtom err: \", err);\n        });\n      });\n    };\n\n    _this.state = {\n      address: '',\n      results: []\n    };\n    return _this;\n  }\n\n  _createClass(LocationSearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          address = _this$state.address,\n          results = _this$state.results;\n      console.log(\"this.state:\", this.state);\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        menuStyle: {\n          zIndex: 999999999999999999999999,\n          backgroundColor: \"white\"\n        },\n        getItemValue: function getItemValue(item) {\n          return item.address.freeformAddress;\n        },\n        items: results,\n        inputProps: {\n          placeholder: \"Enter an address...\",\n          className: \"form-control\"\n        },\n        renderItem: function renderItem(item, isHighlighted) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: item.id,\n            className: \"list-group-item-action flex-column align-items-start customized-list-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex w-100 justify-content-between\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h5\", {\n            className: \"mb-1\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }\n          }, item.address.freeformAddress), /*#__PURE__*/React.createElement(\"small\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 93\n            }\n          }, item.type)), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"mb-1\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }\n          }, \"\".concat(item.address.municipality, \", \").concat(item.address.countrySubdivisionName || item.address.countrySubdivision, \" \").concat(item.address.extendedPostalCode || item.address.postalCode)));\n        },\n        value: address,\n        onChange: this.handleChange,\n        onSelect: function onSelect(val, obj) {\n          console.log(\"selected: \", val, obj);\n\n          _this2.props.saveListingData(_objectSpread(_objectSpread({}, _this2.props.previousData), {}, {\n            businessAddress: obj\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return LocationSearchInput;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    previousData: _.has(state.listingData, \"listingData\") ? state.listingData.listingData : {}\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveListingData: saveListingData\n})(LocationSearchInput);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/createListing/create/helpers/location/searchAddress.js"],"names":["React","Component","Fragment","Autocomplete","axios","ListGroup","ListGroupItem","saveListingData","connect","_","LocationSearchInput","props","handleChange","e","value","target","setState","address","get","state","process","env","REACT_APP_TOMTOM_API_KEY","then","res","results","data","catch","err","console","log","zIndex","backgroundColor","item","freeformAddress","placeholder","className","isHighlighted","id","type","municipality","countrySubdivisionName","countrySubdivision","extendedPostalCode","postalCode","val","obj","previousData","businessAddress","mapStateToProps","has","listingData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Autocomplete from \"react-autocomplete\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport \"./styles.css\";\nimport { saveListingData } from \"../../../../../../../../redux/actions/employer/listings/listingData.js\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\n\nclass LocationSearchInput extends Component {\nconstructor(props) {\n    super(props);\n    \n    this.state = { \n        address: '',\n        results: []\n    };\n}\n \n    handleChange = e => {\n        const { value } = e.target;\n\n        this.setState({\n            address: value\n        }, () => {\n            axios.get(`https://api.tomtom.com/search/2/search/${this.state.address}.json?key=${process.env.REACT_APP_TOMTOM_API_KEY}&language=en-US&limit=10&idxSet=PAD`).then((res) => {\n\n                const { results } = res.data;\n                \n                this.setState({\n                    results\n                })\n            }).catch((err) => {\n                console.log(\"tomtom err: \", err);\n            })\n        })\n    };\n    render() {\n        const { address, results } = this.state;\n\n        console.log(\"this.state:\", this.state);\n\n        return (\n        <Fragment>\n            <ListGroup>\n                <Autocomplete\n                    menuStyle={{\n                        zIndex: 999999999999999999999999,\n                        backgroundColor: \"white\"\n                    }}\n                    getItemValue={(item) => item.address.freeformAddress}\n                    items={results}\n                    inputProps={{\n                        placeholder: \"Enter an address...\",\n                        className: \"form-control\"\n                    }}\n                    renderItem={(item, isHighlighted) => {\n                        return (\n                            <div key={item.id} className={`list-group-item-action flex-column align-items-start customized-list-item`}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{item.address.freeformAddress}</h5><small>{item.type}</small>\n                                </div>\n                                <p className=\"mb-1\">{`${item.address.municipality}, ${item.address.countrySubdivisionName || item.address.countrySubdivision} ${item.address.extendedPostalCode || item.address.postalCode}`}</p>\n                            </div>\n                        );\n                    }}\n                    value={address}\n                    onChange={this.handleChange}\n                    onSelect={(val, obj) => {\n\n                        console.log(\"selected: \", val, obj);\n\n                        this.props.saveListingData({\n                            ...this.props.previousData,\n                            businessAddress: obj\n                        })\n                    }}\n                />\n            </ListGroup>\n        </Fragment>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        previousData: _.has(state.listingData, \"listingData\") ? state.listingData.listingData : {}\n    }\n}\nexport default connect(mapStateToProps, { saveListingData })(LocationSearchInput);\n"]},"metadata":{},"sourceType":"module"}