{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/cashout/cashoutRemainingBal.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { Col, Container, Row, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { NotificationManager } from \"react-notifications\";\nimport { connect } from \"react-redux\";\nimport Slider from 'rc-slider';\n\nconst CashoutAvailiableBalanceHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [previousPayoutMethods, setPreviousPayoutMethods] = useState([]);\n  const [selectedCard, setSelected] = useState(null);\n  const [percentageToBePaid, setPercentageToBePaid] = useState(25);\n  const [balance, setBalance] = useState(null);\n  const [cost, setCost] = useState(0);\n  const [marks, setMarks] = useState({});\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const config = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then(res => {\n      if (res.data.message === \"Gathered balance!\") {\n        const {\n          bal\n        } = res.data;\n        console.log(res.data);\n\n        if (userData.accountType === \"employers\") {\n          setBalance(bal);\n\n          if (bal > 0) {\n            const dividedBy10 = bal / 10;\n            setMarks({\n              0: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 0).toFixed(2)}`\n              },\n              10: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 1).toFixed(2)}`\n              },\n              20: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 2).toFixed(2)}`\n              },\n              30: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 3).toFixed(2)}`\n              },\n              40: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 4).toFixed(2)}`\n              },\n              50: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 5).toFixed(2)}`\n              },\n              60: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 6).toFixed(2)}`\n              },\n              70: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 7).toFixed(2)}`\n              },\n              80: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 8).toFixed(2)}`\n              },\n              90: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 9).toFixed(2)}`\n              },\n              100: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 10).toFixed(2)}`\n              }\n            });\n            setReady(true);\n          }\n        } else {\n          const {\n            instant_available,\n            available\n          } = res.data.bal;\n\n          for (let index = 0; index < instant_available.length; index++) {\n            const item = instant_available[index];\n\n            if (item.currency === \"usd\") {\n              const dividedBy10 = item.amount / 10;\n              setBalance(item.amount / 100);\n              setMarks({\n                0: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 0).toFixed(2)}`\n                },\n                10: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 1).toFixed(2)}`\n                },\n                20: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 2).toFixed(2)}`\n                },\n                30: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 3).toFixed(2)}`\n                },\n                40: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 4).toFixed(2)}`\n                },\n                50: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 5).toFixed(2)}`\n                },\n                60: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 6).toFixed(2)}`\n                },\n                70: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 7).toFixed(2)}`\n                },\n                80: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 8).toFixed(2)}`\n                },\n                90: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 9).toFixed(2)}`\n                },\n                100: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 10).toFixed(2)}`\n                }\n              });\n              setReady(true);\n              break;\n            }\n          }\n        }\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"mounted..\");\n    const config = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        const {\n          cards\n        } = res.data;\n        console.log(res.data);\n        setPreviousPayoutMethods(cards);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  console.log(\"balance\", balance);\n\n  const handleSliderValueChange = percentage => {\n    console.log(\"handleSliderValueChange percentage\", percentage);\n    setPercentageToBePaid(percentage);\n  };\n\n  const onAfterChange = percentage => {\n    console.log(\"onAfterChange percentage\", percentage);\n    const totalCost = balance / 100;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    setCost(converted);\n  };\n\n  const calculateCurrentSelectedCost = percentage => {\n    const totalCost = balance / 100;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    return `$${converted.toFixed(2)} selected to be deposited into your desired account/card immediately! (-3% associated fee)`;\n  };\n\n  const calculateDisabled = () => {\n    if (typeof cost !== \"undefined\" && cost !== 0 && typeof selectedCard !== \"undefined\" && selectedCard !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handlePayout = () => {\n    console.log(\"handlePayout clicked..\");\n    const config = {\n      id: userData.uniqueId,\n      accountType: userData.accountType,\n      cost,\n      selectedCard\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/create/payout/and/cashout/both/account/types`, config).then(res => {\n      if (res.data.message === \"Cashed out funds!\") {\n        NotificationManager.success(\"Successfully 'cashed-out' your desired amount of funding to the desired card/account! We've successfully deposited the desired funds into your account and all actions were initiated successfully..\", \"Successfully 'cashed-out' desired funds/funding!\", 4750);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Cashout Availiable Account Balance!\",\n    title: \"Cashout Your Available Fund/Funding To A Linked Account..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-r-secondary b-l-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, \"Manage your active payout/cashout methods, add a new payout method, process a \\\"cash-out\\\" & much more!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 49\n    }\n  }, \"Manage Your Payout/Cashout Method's\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 49\n    }\n  }, \"You will be able to manage your \\\"payout/cashout\\\" methods via this page and the logic below.. You may be asking, what is a \\\"payout/cashout\\\"? \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 209\n    }\n  }, \"Good question! Let us explain...\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 49\n    }\n  }, \"Payouts also known as \\\"cashouts\\\" are when you \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#51bb25\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 115\n    }\n  }, \"TRANSFER FUNDS (earned funds)\"), \" to your personal bank account or card!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 49\n    }\n  }, \"We regularly send out payouts/cashouts periodically but it's good policy to make sure you know where your automatic payment's are going and when they are hitting your account(s). Through this page, you can \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 275\n    }\n  }, \"IMMEDIATELY\"), \" recieve funds for a minor fee (percentage - 3%) for access to your funds faster than the typical system requirements/procedure(s).\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, \"You \\\"already linked\\\" accounts are below..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"customlistgroup-payment-methods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 49\n    }\n  }, typeof previousPayoutMethods !== \"undefined\" && previousPayoutMethods.length > 0 ? previousPayoutMethods.map((method, index) => {\n    console.log(\"method\", method);\n\n    if (userData.accountType === \"hackers\") {\n      const {\n        brand,\n        exp_month,\n        exp_year,\n        funding,\n        last4,\n        country\n      } = method;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        onClick: () => setSelected(method),\n        className: selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 77\n        }\n      }, `This is a ${funding} card - ${country} based`), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: \"#f73164\"\n        },\n        className: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 151\n        }\n      }, `Payment #${index + 1}`)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 73\n        }\n      }, `**** **** **** ${last4}`), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"special\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 73\n        }\n      }, `Exp. ${exp_month}/${exp_year}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 134\n        }\n      }, \"Card Type: \", brand))));\n    } else {\n      const {\n        brand,\n        exp_month,\n        exp_year,\n        funding,\n        last4,\n        country\n      } = method.card;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        onClick: () => setSelected(method),\n        className: selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 77\n        }\n      }, `This is a ${funding} card - ${country} based`), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: \"#f73164\"\n        },\n        className: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 151\n        }\n      }, `Payment #${index + 1}`)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 73\n        }\n      }, `**** **** **** ${last4}`), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"special\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 73\n        }\n      }, `Exp. ${exp_month}/${exp_year}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 134\n        }\n      }, \"Card Type: \", brand))));\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../assets/images/nocashout.png\"),\n    className: \"nocashout-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 57\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-slider-adjustment-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  }, \"Please drag the marker to the appropriate position marking 'how much' you'd like ''withdrawl' on this specific transaction (the maxed value is your current \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 221\n    }\n  }, \"available\"), \" account balance - this doesn't include pending funding).\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: percentageToBePaid,\n    startPoint: 0,\n    onAfterChange: onAfterChange,\n    onChange: handleSliderValueChange,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"current-selected-cost\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 49\n    }\n  }, calculateCurrentSelectedCost(percentageToBePaid))))) : null), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: calculateDisabled(),\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handlePayout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 45\n    }\n  }, \"Submit & Cashout Selected Amount!\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CashoutAvailiableBalanceHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/cashout/cashoutRemainingBal.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Col","Container","Row","Card","CardHeader","CardBody","ListGroup","ListGroupItem","Button","axios","NotificationManager","connect","Slider","CashoutAvailiableBalanceHelper","userData","previousPayoutMethods","setPreviousPayoutMethods","selectedCard","setSelected","percentageToBePaid","setPercentageToBePaid","balance","setBalance","cost","setCost","marks","setMarks","ready","setReady","config","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","bal","console","log","dividedBy10","style","color","label","toFixed","instant_available","available","index","length","item","currency","amount","warning","catch","err","id","cards","handleSliderValueChange","percentage","onAfterChange","totalCost","perc","parseFloat","converted","calculateCurrentSelectedCost","calculateDisabled","handlePayout","post","success","textDecorationLine","map","method","brand","exp_month","exp_year","funding","last4","country","card","require","textAlign","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { Col, Container, Row, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { NotificationManager } from \"react-notifications\";\nimport { connect } from \"react-redux\";\nimport Slider from 'rc-slider';\n\n\nconst CashoutAvailiableBalanceHelper = ({ userData }) => {\n\n    const [ previousPayoutMethods, setPreviousPayoutMethods ] = useState([]);\n    const [ selectedCard, setSelected ] = useState(null);\n    const [ percentageToBePaid, setPercentageToBePaid ] = useState(25);\n    const [ balance, setBalance ] = useState(null);\n    const [ cost, setCost ] = useState(0);\n    const [ marks, setMarks ] = useState({});\n    const [ ready, setReady ] = useState(false);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then((res) => {\n            if (res.data.message === \"Gathered balance!\") {\n\n                const { bal } = res.data;\n\n                console.log(res.data);\n\n                if (userData.accountType === \"employers\") {\n\n                    setBalance(bal);\n\n                    if (bal > 0) {\n                        const dividedBy10 = bal / 10;\n\n                        setMarks({\n                            0: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 0).toFixed(2)}` },\n                            10: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 1).toFixed(2)}` },\n                            20: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 2).toFixed(2)}` },\n                            30: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 3).toFixed(2)}` },\n                            40: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 4).toFixed(2)}` },\n                            50: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 5).toFixed(2)}` },\n                            60: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 6).toFixed(2)}` },\n                            70: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 7).toFixed(2)}` },\n                            80: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 8).toFixed(2)}` },\n                            90: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 9).toFixed(2)}` },\n                            100: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 10).toFixed(2)}`  }\n                        });\n\n                        setReady(true);\n                    }\n                } else {\n                    const { instant_available, available } = res.data.bal;\n\n                    for (let index = 0; index < instant_available.length; index++) {\n                        const item = instant_available[index];\n                        if (item.currency === \"usd\") {\n                            const dividedBy10 = item.amount / 10;\n\n                            setBalance(item.amount / 100);\n\n                            setMarks({\n                                0: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 0).toFixed(2)}` },\n                                10: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 1).toFixed(2)}` },\n                                20: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 2).toFixed(2)}` },\n                                30: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 3).toFixed(2)}` },\n                                40: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 4).toFixed(2)}` },\n                                50: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 5).toFixed(2)}` },\n                                60: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 6).toFixed(2)}` },\n                                70: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 7).toFixed(2)}` },\n                                80: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 8).toFixed(2)}` },\n                                90: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 9).toFixed(2)}` },\n                                100: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 10).toFixed(2)}`  }\n                            });\n\n                            setReady(true);\n\n                            break;\n                        }\n                    }\n                }\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, [])\n\n    useEffect(() => {\n        console.log(\"mounted..\");\n\n        const config = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                const { cards } = res.data;\n\n                console.log(res.data);\n\n                setPreviousPayoutMethods(cards);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, []);\n\n    console.log(\"balance\", balance);\n\n    const handleSliderValueChange = (percentage) => {\n        console.log(\"handleSliderValueChange percentage\", percentage);\n\n        setPercentageToBePaid(percentage);\n    }\n    const onAfterChange = (percentage) => {\n        console.log(\"onAfterChange percentage\", percentage);\n\n        const totalCost = balance / 100;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        setCost(converted);\n    }\n    const calculateCurrentSelectedCost = (percentage) => {\n        const totalCost = balance / 100;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        return `$${converted.toFixed(2)} selected to be deposited into your desired account/card immediately! (-3% associated fee)`;\n    }\n\n    const calculateDisabled = () => {\n        if ((typeof cost !== \"undefined\" && cost !== 0) && (typeof selectedCard !== \"undefined\" && selectedCard !== null)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    const handlePayout = () => {\n        console.log(\"handlePayout clicked..\");\n\n        const config = {\n            id: userData.uniqueId,\n            accountType: userData.accountType,\n            cost,\n            selectedCard\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/create/payout/and/cashout/both/account/types`, config).then((res) => {\n            if (res.data.message === \"Cashed out funds!\") {\n\n                NotificationManager.success(\"Successfully 'cashed-out' your desired amount of funding to the desired card/account! We've successfully deposited the desired funds into your account and all actions were initiated successfully..\", \"Successfully 'cashed-out' desired funds/funding!\", 4750);\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Cashout Availiable Account Balance!\" title=\"Cashout Your Available Fund/Funding To A Linked Account..\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"shadow\"}>\n                            <CardHeader className={\"b-r-secondary b-l-secondary\"}>\n                                <h3>Manage your active payout/cashout methods, add a new payout method, process a \"cash-out\" & much more!</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className=\"card-absolute\">\n                                            <CardHeader className=\"bg-primary\">\n                                                <h5 style={{ color: \"#fff\" }}>Manage Your Payout/Cashout Method's</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <p className='lead'>You will be able to manage your \"payout/cashout\" methods via this page and the logic below.. You may be asking, what is a \"payout/cashout\"? <strong style={{ textDecorationLine: \"underline\" }}>Good question! Let us explain...</strong></p>\n                                                <br />\n                                                <p className='lead'>Payouts also known as \"cashouts\" are when you <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>TRANSFER FUNDS (earned funds)</strong> to your personal bank account or card!</p>\n                                                <hr />\n                                                <p className='lead'>We regularly send out payouts/cashouts periodically but it's good policy to make sure you know where your automatic payment's are going and when they are hitting your account(s). Through this page, you can <strong style={{ textDecorationLine: \"underline\" }}>IMMEDIATELY</strong> recieve funds for a minor fee (percentage - 3%) for access to your funds faster than the typical system requirements/procedure(s).</p>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className=\"card-absolute\">\n                                            <CardHeader className=\"bg-secondary\">\n                                                <h5 style={{ color: \"#fff\" }}>You \"already linked\" accounts are below..</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <ListGroup className='customlistgroup-payment-methods'> \n                                                    {typeof previousPayoutMethods !== \"undefined\" && previousPayoutMethods.length > 0 ? previousPayoutMethods.map((method, index) => {\n                                                        console.log(\"method\", method);\n                                                        if (userData.accountType === \"hackers\") {\n                                                            const { brand, exp_month, exp_year, funding, last4, country } = method;\n                                                            return (\n                                                                <Fragment key={index}>\n                                                                    <ListGroupItem onClick={() => setSelected(method)} className={selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\"}>\n                                                                        <div className=\"d-flex w-100 justify-content-between\">\n                                                                            <h5 className=\"mb-1\">{`This is a ${funding} card - ${country} based`}</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">{`Payment #${index + 1}`}</small>\n                                                                        </div>\n                                                                        <p className=\"mb-1\">{`**** **** **** ${last4}`}</p>\n                                                                        <small className=\"special\">{`Exp. ${exp_month}/${exp_year}`} <small className=\"float-right\">Card Type: {brand}</small></small>\n                                                                    </ListGroupItem>\n                                                                </Fragment>\n                                                            );\n                                                        } else {\n                                                            const { brand, exp_month, exp_year, funding, last4, country } = method.card;\n                                                            return (\n                                                                <Fragment key={index}>\n                                                                    <ListGroupItem onClick={() => setSelected(method)} className={selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\"}>\n                                                                        <div className=\"d-flex w-100 justify-content-between\">\n                                                                            <h5 className=\"mb-1\">{`This is a ${funding} card - ${country} based`}</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">{`Payment #${index + 1}`}</small>\n                                                                        </div>\n                                                                        <p className=\"mb-1\">{`**** **** **** ${last4}`}</p>\n                                                                        <small className=\"special\">{`Exp. ${exp_month}/${exp_year}`} <small className=\"float-right\">Card Type: {brand}</small></small>\n                                                                    </ListGroupItem>\n                                                                </Fragment>\n                                                            );\n                                                        }\n                                                    }) : <Fragment>\n                                                        <img src={require(\"../../../../assets/images/nocashout.png\")} className={\"nocashout-img\"} />\n                                                    </Fragment>}\n                                                </ListGroup>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                </Row>\n                                <Row>\n                                    {ready === true ? <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <div className='center-slider-adjustment-bar'>\n                                            <p className='lead'>Please drag the marker to the appropriate position marking 'how much' you'd like ''withdrawl' on this specific transaction (the maxed value is your current <strong style={{ textDecorationLine: \"underline\" }}>available</strong> account balance - this doesn't include pending funding).</p>\n                                            <hr />\n                                            <Slider value={percentageToBePaid} startPoint={0} onAfterChange={onAfterChange} onChange={handleSliderValueChange} marks={marks} />\n                                            <div className='centered-both-ways'>\n                                                <h3 className='current-selected-cost' style={{ textAlign: \"center\" }}>{calculateCurrentSelectedCost(percentageToBePaid)}</h3>\n                                            </div>\n                                        </div>\n                                    </Col> : null}\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='shadow'>\n                                            <Button disabled={calculateDisabled()} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={() => handlePayout()}>Submit & Cashout Selected Amount!</Button>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(CashoutAvailiableBalanceHelper);"]},"metadata":{},"sourceType":"module"}