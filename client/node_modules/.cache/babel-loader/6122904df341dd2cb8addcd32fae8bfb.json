{"ast":null,"code":"import React from \"react\";\nimport { NotificationManager } from 'react-notifications'; // functions with export ability to slim down main component (pageThreeMain.js)..\n\nconst CalculateWhetherURLIsLegit = data => {\n  // check wether http/https is legitmate and correct...    \n  const isValidHttpUrl = string => {\n    let url;\n\n    try {\n      url = new URL(string);\n    } catch (_) {\n      return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n  }; // create function variable in preparation for conditional check\n\n\n  const isValid = isValidHttpUrl(data); // check if valid URL\n\n  if (isValid) {\n    return true;\n  } else {\n    return false;\n  }\n\n  ;\n};\n\nconst listingTimespanOptions = [{\n  value: 1440,\n  label: \"1 Day (24 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 2160,\n  label: \"1.5 Days (36 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 2880,\n  label: \"2 Days (48 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 3600,\n  label: \"2.5 Days (60 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 4320,\n  label: \"3 Days (72 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 5760,\n  label: \"4 Days (96 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 7200,\n  label: \"5 Days (120 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 8640,\n  label: \"6 Days (144 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 10080,\n  label: \"7 Days (168 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 14400,\n  label: \"10 Days (240 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 20160,\n  label: \"14 Days (336 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 30240,\n  label: \"21 Days (504 Hours)\",\n  countMethod: \"minute(s)\"\n}];\n\nconst handleDelete = i => {\n  const {\n    tags\n  } = this.state;\n  this.setState({\n    tags: tags.filter((tag, index) => index !== i)\n  });\n};\n\nconst handleAddition = tag => {\n  this.setState(state => ({\n    tags: [...state.tags, tag]\n  }));\n};\n\nconst handleDrag = (tag, currPos, newPos) => {\n  const tags = [...this.state.tags];\n  const newTags = tags.slice();\n  newTags.splice(currPos, 1);\n  newTags.splice(newPos, 0, tag); // re-render\n\n  this.setState({\n    tags: newTags\n  });\n};\n\nconst suggestionsPreselected = [{\n  id: \"snippet\",\n  text: \"snippet\"\n}, {\n  id: \"code\",\n  text: \"code\"\n}, {\n  id: \"cloud\",\n  text: \"cloud\"\n}, {\n  id: \"software\",\n  text: \"software\"\n}, {\n  id: \"domain\",\n  text: \"domain\"\n}, {\n  id: \"exploit\",\n  text: \"exploit\"\n}, {\n  id: \"breach\",\n  text: \"breach\"\n}, {\n  id: \"malware\",\n  text: \"malware\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}, {\n  id: \"randsomware\",\n  text: \"randsomware\"\n}, {\n  id: \"trojan-horse\",\n  text: \"trojan-horse\"\n}, {\n  id: \"worm\",\n  text: \"worm\"\n}, {\n  id: \"spyware\",\n  text: \"spyware\"\n}, {\n  id: \"rootkit\",\n  text: \"rootkit\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}, {\n  id: \"virus\",\n  text: \"virus\"\n}]; // export functions for pageThreeMain.js component\n\nexport default {\n  CalculateWhetherURLIsLegit,\n  listingTimespanOptions,\n  handleDrag,\n  // hashtag input related\n  handleAddition,\n  // hashtag input related\n  handleDelete,\n  // hashtag input related\n  suggestionsPreselected\n}; // NotificationManager.success(\"It fuckin' worked!\", \"YAY!\", 45000);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/mainFunctions.js"],"names":["React","NotificationManager","CalculateWhetherURLIsLegit","data","isValidHttpUrl","string","url","URL","_","protocol","isValid","listingTimespanOptions","value","label","countMethod","handleDelete","i","tags","state","setState","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","suggestionsPreselected","id","text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NotificationManager } from 'react-notifications';\n\n// functions with export ability to slim down main component (pageThreeMain.js)..\nconst CalculateWhetherURLIsLegit = (data) => {\n    // check wether http/https is legitmate and correct...    \n    const isValidHttpUrl = (string) => {\n        let url;\n        \n        try {\n            url = new URL(string);\n        } catch (_) {\n            return false;  \n        }\n        \n        return url.protocol === \"http:\" || url.protocol === \"https:\";\n    }\n    // create function variable in preparation for conditional check\n    const isValid = isValidHttpUrl(data);\n    // check if valid URL\n    if (isValid) {\n        return true;\n    } else {\n        return false;\n    };\n}\nconst listingTimespanOptions = [\n    { value: 1440, label: \"1 Day (24 Hours)\", countMethod: \"minute(s)\" },\n    { value: 2160, label: \"1.5 Days (36 Hours)\", countMethod: \"minute(s)\" },\n    { value: 2880, label: \"2 Days (48 Hours)\", countMethod: \"minute(s)\" },\n    { value: 3600, label: \"2.5 Days (60 Hours)\", countMethod: \"minute(s)\" },\n    { value: 4320, label: \"3 Days (72 Hours)\", countMethod: \"minute(s)\" },\n    { value: 5760, label: \"4 Days (96 Hours)\", countMethod: \"minute(s)\" },\n    { value: 7200, label: \"5 Days (120 Hours)\", countMethod: \"minute(s)\" },\n    { value: 8640, label: \"6 Days (144 Hours)\", countMethod: \"minute(s)\" },\n    { value: 10080, label: \"7 Days (168 Hours)\", countMethod: \"minute(s)\" },\n    { value: 14400, label: \"10 Days (240 Hours)\", countMethod: \"minute(s)\" },\n    { value: 20160, label: \"14 Days (336 Hours)\", countMethod: \"minute(s)\" },\n    { value: 30240, label: \"21 Days (504 Hours)\", countMethod: \"minute(s)\" }\n];\nconst handleDelete = (i) => {\n    const { tags } = this.state;\n    this.setState({\n     tags: tags.filter((tag, index) => index !== i),\n    });\n}\n\nconst handleAddition = (tag) => {\n    this.setState(state => ({ tags: [...state.tags, tag] }));\n}\n\nconst handleDrag = (tag, currPos, newPos) => {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    // re-render\n    this.setState({ tags: newTags });\n}\nconst suggestionsPreselected = [\n    { id: \"snippet\", text: \"snippet\" },\n    { id: \"code\", text: \"code\" },\n    { id: \"cloud\", text: \"cloud\" },\n    { id: \"software\", text: \"software\" },\n    { id: \"domain\", text: \"domain\" },\n    { id: \"exploit\", text: \"exploit\" },\n    { id: \"breach\", text: \"breach\" },\n    { id: \"malware\", text: \"malware\" },\n    { id: \"virus\", text: \"virus\" },\n    { id: \"randsomware\", text: \"randsomware\" },\n    { id: \"trojan-horse\", text: \"trojan-horse\" },\n    { id: \"worm\", text: \"worm\" },\n    { id: \"spyware\", text: \"spyware\" },\n    { id: \"rootkit\", text: \"rootkit\" },\n    { id: \"virus\", text: \"virus\" },\n    { id: \"virus\", text: \"virus\" },\n    { id: \"virus\", text: \"virus\" },\n    { id: \"virus\", text: \"virus\" },\n    { id: \"virus\", text: \"virus\" }\n];\n// export functions for pageThreeMain.js component\nexport default { \n    CalculateWhetherURLIsLegit, \n    listingTimespanOptions, \n    handleDrag, // hashtag input related\n    handleAddition, // hashtag input related\n    handleDelete, // hashtag input related\n    suggestionsPreselected \n};\n\n// NotificationManager.success(\"It fuckin' worked!\", \"YAY!\", 45000);"]},"metadata":{},"sourceType":"module"}