{"ast":null,"code":"import React,{Fragment,useState,useRef}from\"react\";import Sheet from'react-modal-sheet';import{Button,Container,Col,Row,Card,FormGroup,Label,CardBody,Form,InputGroupAddon,InputGroup,InputGroupText}from\"reactstrap\";import\"./styles.css\";import Breadcrumb from\"../../../../../../../../../layout/breadcrumb\";import helpers from\"./helpers/reactHookFormRelated.js\";import functions from\"./helpers/helperFunctions.js\";import{useForm,Controller}from'react-hook-form';import{connect}from\"react-redux\";import{shiftCoreStyles}from\"../../../../../../../../../redux/actions/universal/index.js\";import Select from'react-select';import{saveSoftwareListingInfo}from\"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";import{NotificationManager}from'react-notifications';import{disableBodyScroll,enableBodyScroll}from'body-scroll-lock';import _ from\"lodash\";import Switch from\"react-switch\";// ~ helper function rendered in main component (bottom of this component) ~\nconst RenderConditionalBasedUponSellingType=_ref=>{let{clearAllBodyScrollLocks,handleDynamicFormReset,quantityAvailabilityOptions,acceptCouponsDiscountsOptions,reset,type,setValue,getValues,errors,setError,register,control,clearErrors,biddingIncrementIntervalOptions,handleSubmit,shiftCoreStyles,setModalOpenStatus,saveSoftwareListingInfo,previouslySavedSoftwareData}=_ref;// ref's below...\nconst biddingIncrementIntervalGeneratedRef=useRef(null);const quantityAvailableForSaleGeneratedRef=useRef(null);const discountCodeAcceptanceGeneratedRef=useRef(null);// imported helper functions below...\nconst startBidCheck=helpers().startBidCheck;const reservePrice=helpers().reservePrice;const biddingIncrementIntervalHelper=helpers().biddingIncrementIntervalHelper;const quantityAvailability=helpers().quantityAvailability;const acceptCouponsDiscounts=helpers().acceptCouponsDiscounts;const whatsIncludedInfoListing=helpers().whatsIncludedInfoListing;const buyItNowHelper=helpers().buyItNowHelper;const automaticAcceptBestOffer=helpers().automaticAcceptBestOffer;const minimumRequiredOffer=helpers().minimumRequiredOffer;// gather redux-hook-form values (basically a \"state\" replacement).\nconst currentValues=getValues();const[buyitnowChecked,setBuyitnowState]=useState(true);const[auctionChecked,setAuctionCheckedState]=useState(true);const[switchText,setSwitchTextState]=useState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");const[switchTextAuctionBuyitnow,setSwitchTextAuctionBuyitnowState]=useState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");// console.log(\"startBidCheck : \", startBidCheck);\nconst handleInputChange=e=>{const{name,value}=e.target;// clearErrors(name);\nsetValue(name,value,{shouldValidate:true});return value;};const handleTimespanSelectChange=selectedOption=>{// run conditionals\nsetValue('biddingIncrementInterval',selectedOption,{shouldValidate:false});biddingIncrementIntervalGeneratedRef.current.blur();};const handleQuantityAvailabilityChange=selectedOption=>{// run conditionals\nsetValue('quantityAvailableForSale',selectedOption,{shouldValidate:false});quantityAvailableForSaleGeneratedRef.current.blur();};const handleAcceptCouponsDiscountsChange=selectedOption=>{// run conditionals\nsetValue('discountCodeAcceptance',selectedOption,{shouldValidate:false});discountCodeAcceptanceGeneratedRef.current.blur();};const menuClosedSelectInput=()=>{if(currentValues.biddingIncrementInterval){// setSelectOneErrorStatus(true);\n}};const onSubmit=(data,e,selectedType)=>{console.log(\"DATA@!\",data,currentValues);e.preventDefault();if(data!==''){const{reservePrice,startBid}=data;switch(selectedType){case\"auction-ONLY\":const omittedKeysAuctionOnly=_.omit(data,[\"reservePrice\",\"startBid\"]);const newDataObj={auctionPriceRelatedData:{...omittedKeysAuctionOnly,reservePrice:Number(Math.round(Number(reservePrice))),startBid:Number(Math.round(Number(startBid))),auctionSelectedType:selectedType}};const mergedPreviousNewState={...previouslySavedSoftwareData,...newDataObj};saveSoftwareListingInfo(mergedPreviousNewState);shiftCoreStyles(false);setModalOpenStatus(false);handleDynamicFormReset(\"auction-ONLY\");break;case\"auction-AND-buy-it-now\":const omittedKeysAuctionAndBuyitnow=_.omit(data,[\"reservePrice\",\"startBid\",\"buyItNowPrice\"]);const newDataObjAuctionAndBuyitnow={auctionPriceRelatedData:{...omittedKeysAuctionAndBuyitnow,reservePrice:Number(Math.round(Number(reservePrice))),startBid:Number(Math.round(Number(startBid))),buyItNowData:auctionChecked===true?{active:true,buyItNowPrice:Number(Math.round(Number(data.buyItNowPrice)))}:{active:false,buyItNowPrice:undefined},auctionSelectedType:selectedType}};const mergedPreviousNewStateAuctionAndBuyitnow={...previouslySavedSoftwareData,...newDataObjAuctionAndBuyitnow};saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);shiftCoreStyles(false);setModalOpenStatus(false);handleDynamicFormReset(\"auction-AND-buy-it-now\");break;case\"buy-it-now-ONLY\":const omittedKeysBuyitnowOnlyConcattenated=_.omit(data,[\"buyItNowPrice\"]);const newDataObjBuyitnowOnly={auctionPriceRelatedData:{...omittedKeysBuyitnowOnlyConcattenated,buyItNowPrice:Number(Math.round(Number(data.buyItNowPrice))),auctionSelectedType:selectedType}};const mergedPreviousNewStateBuyitnowOnly={...previouslySavedSoftwareData,...newDataObjBuyitnowOnly};saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOnly);shiftCoreStyles(false);setModalOpenStatus(false);handleDynamicFormReset(\"buy-it-now-ONLY\");break;case\"buy-it-now-OR-best-offer\":const omittedKeysBuyitnowOrBestOffer=_.omit(data,[\"buyItNowPrice\",\"minimumRequiredOfferValue\",\"automaticBestOfferAccept\"]);const newDataObjBuyitnowOrBestOffer={auctionPriceRelatedData:{...omittedKeysBuyitnowOrBestOffer,buyItNowPrice:Number(Math.round(Number(data.buyItNowPrice))),offerFeatureData:buyitnowChecked===true?{minimumRequiredOfferValue:Number(Math.round(Number(data.minimumRequiredOfferValue))),automaticBestOfferAccept:Number(Math.round(Number(data.automaticBestOfferAccept))),active:true}:{active:false,automaticBestOfferAccept:undefined,minimumRequiredOfferValue:undefined},auctionSelectedType:selectedType}};const mergedPreviousNewStateBuyitnowOrBestOffer={...previouslySavedSoftwareData,...newDataObjBuyitnowOrBestOffer};saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOrBestOffer);shiftCoreStyles(false);setModalOpenStatus(false);handleDynamicFormReset(\"buy-it-now-OR-best-offer\");break;default:break;}clearAllBodyScrollLocks();NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\",\"Successfully updated listing information!\",4500);}else{console.log(\"onSubmit failure :(\");errors.showMessages();}};const onError=async(errors,e,innerRun)=>{console.log(\"error submitting...!\",errors,e,innerRun);};console.log(\"currentValues : \",currentValues);const handleSwitchValueChange=value=>{if(value===true){const option={label:\"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\",value:\"1\",numericalAmount:1,min:1,max:1};setSwitchTextState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");// check if quanitity value already selected\nif(currentValues.quantityAvailableForSale&&Object.keys(currentValues.quantityAvailableForSale).length>0){// update switch state\nsetBuyitnowState(value);}else{// update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\nsetValue('quantityAvailableForSale',option,{shouldValidate:false});// quantity value NOT already selected - do nothing but update switch state\nsetBuyitnowState(value);}}else{setSwitchTextState(\"MULTIPLE quantities are selected (ALLOWING MULTIPLE SALES) and available so you can sell multiples of whatever software you're selling (Can be sold an unlimited amount of times - basically 1 per purchase per user). You've SELECTED to DISABLE the 'BEST-OFFER' setting.\");// clear non-used redux-hook-form value (since its not being used anymore temporarily)\nreset({automaticBestOfferAccept:\"\",minimumRequiredOfferValue:\"\"});// update switch state\nsetBuyitnowState(value);}};const handleSwitchValueChangeAuctionBuyitnow=value=>{if(value===true){const option={label:\"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\",value:\"1\",numericalAmount:1,min:1,max:1};// setSwitchTextAuctionBuyitnowState\nsetSwitchTextAuctionBuyitnowState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");// check if quanitity value already selected\nif(currentValues.quantityAvailableForSale&&Object.keys(currentValues.quantityAvailableForSale).length>0){// update switch state\nsetAuctionCheckedState(value);}else{// update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\nsetValue('quantityAvailableForSale',option,{shouldValidate:false});// quantity value NOT already selected - do nothing but update switch state\nsetAuctionCheckedState(value);}}else{setSwitchTextAuctionBuyitnowState(\"'AUCTION-ONLY' is enabled/selected currently and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION-ONLY' is now SELECTED!\");// clear non-used redux-hook-form value (since its not being used anymore temporarily)\nreset({buyItNowPrice:\"\"});// update switch state\nsetAuctionCheckedState(value);}};const renderMainContentPassedConditional=selectedType=>{switch(selectedType){case\"auction-ONLY\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h5\",null,\"This is a \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"blue\"}},\"SINGLE ITEM AUCTION\"),\" listing which means only \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"blue\"}},\"ONE\"),\" person will be able to purchase what you're selling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Only one person will be able to purchase this listing - if you'd like to either sell multiple copies of your \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"red\"}},\"software/code (or related)\"),\" then you should check out the other listing pricing options such as \\\"auction AND buy-it-now\\\", \\\"buy-it-now ONLY\\\" or \\\"Buy-it-now\\\" OR \\\"best-offer ONLY\\\" which may include options that're more applicable to your personal preferences...\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit((data,e)=>{return onSubmit(data,e,selectedType);},(errors,e)=>{return onError(errors,e,true);})},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,startBidCheck.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},startBidCheck.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:startBidCheck.type,name:startBidCheck.name,placeholder:startBidCheck.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.startBid}))),errors.startBid?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.startBid.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,reservePrice.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},reservePrice.check(setError,register,currentValues),{pattern:\"[0-9]*\",className:\"form-control\",type:reservePrice.type,name:reservePrice.name,placeholder:reservePrice.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.reservePrice}))),errors.reservePrice?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.reservePrice.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,biddingIncrementIntervalHelper.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:biddingIncrementIntervalHelper.name},biddingIncrementIntervalHelper.check(setError,register,clearErrors),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:biddingIncrementIntervalGeneratedRef,autoBlur:true,placeholder:biddingIncrementIntervalHelper.placeholder,defaultValue:null,onMenuClose:menuClosedSelectInput,value:currentValues.biddingIncrementInterval,onChange:selectedOption=>{return handleTimespanSelectChange(selectedOption);},options:biddingIncrementIntervalOptions}));}})),errors.biddingIncrementInterval?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.biddingIncrementInterval.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,whatsIncludedInfoListing.label),/*#__PURE__*/React.createElement(\"textarea\",Object.assign({rows:10},whatsIncludedInfoListing.check(setError,register),{className:\"form-control\",type:whatsIncludedInfoListing.type,name:whatsIncludedInfoListing.name,placeholder:whatsIncludedInfoListing.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.whatsIncluded})),errors.whatsIncluded?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.whatsIncluded.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",style:{width:\"100%\"},color:\"success\",onClick:()=>{// ~ run form submission (redux-hook-form) ~\n}},\"Submit responses, close modal & return to primary form\"))))));break;case\"auction-AND-buy-it-now\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit((data,e)=>{return onSubmit(data,e,selectedType);},(errors,e)=>{return onError(errors,e,true);})},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,startBidCheck.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},startBidCheck.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:startBidCheck.type,name:startBidCheck.name,placeholder:startBidCheck.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.startBid}))),errors.startBid?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.startBid.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,reservePrice.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},reservePrice.check(setError,register,currentValues),{pattern:\"[0-9]*\",className:\"form-control\",type:reservePrice.type,name:reservePrice.name,placeholder:reservePrice.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.reservePrice}))),errors.reservePrice?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.reservePrice.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,biddingIncrementIntervalHelper.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:biddingIncrementIntervalHelper.name},biddingIncrementIntervalHelper.check(setError,register,clearErrors),{render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:biddingIncrementIntervalGeneratedRef,autoBlur:true,placeholder:biddingIncrementIntervalHelper.placeholder,defaultValue:null,onMenuClose:menuClosedSelectInput,value:currentValues.biddingIncrementInterval,onChange:selectedOption=>{return handleTimespanSelectChange(selectedOption);},options:biddingIncrementIntervalOptions}));}})),errors.biddingIncrementInterval?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.biddingIncrementInterval.message):null))),/*#__PURE__*/React.createElement(Row,null,auctionChecked===true?/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,buyItNowHelper.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},buyItNowHelper.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:buyItNowHelper.type,name:buyItNowHelper.name,placeholder:buyItNowHelper.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.buyItNowPrice}))),errors.buyItNowPrice?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.buyItNowPrice.message):null)):null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Would you like to have this listing as an \\\"AUCTION-ONLY\\\" listing OR a an \\\"AUCTION W/BUY-IT-NOW\\\" listing? (***auction W/BUY-IT-NOW allows for both bids/offers as well as a 'Buy-it-now' option IF ONLY ONE item is being sold)\"),/*#__PURE__*/React.createElement(Row,{className:\"selector-container\"},/*#__PURE__*/React.createElement(Col,{sm:\"2\",md:\"2\",lg:\"2\",xl:\"2\"},/*#__PURE__*/React.createElement(Switch,{width:72.5,boxShadow:\"0px 0px 15px 4.5px #6A6A6A\",offColor:\"#888\",className:\"buyitnow-switch-class\",onColor:\"#51bb25\",onChange:handleSwitchValueChangeAuctionBuyitnow,checked:auctionChecked})),/*#__PURE__*/React.createElement(Col,{sm:\"10\",md:\"10\",lg:\"10\",xl:\"10\"},/*#__PURE__*/React.createElement(\"p\",{className:\"switch-text-custom\"},switchTextAuctionBuyitnow)))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,quantityAvailability.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:quantityAvailability.name},quantityAvailability.check(setError,register,clearErrors),{render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:quantityAvailableForSaleGeneratedRef,autoBlur:true,placeholder:quantityAvailability.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.quantityAvailableForSale,onChange:selectedOption=>{return handleQuantityAvailabilityChange(selectedOption);},options:buyitnowChecked===true?[quantityAvailabilityOptions[0]]:quantityAvailabilityOptions}));}})),errors.quantityAvailableForSale?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.quantityAvailableForSale.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,acceptCouponsDiscounts.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:acceptCouponsDiscounts.name},acceptCouponsDiscounts.check(setError,register,clearErrors),{render:_ref5=>{let{field}=_ref5;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:discountCodeAcceptanceGeneratedRef,autoBlur:true,placeholder:acceptCouponsDiscounts.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.discountCodeAcceptance,onChange:selectedOption=>{return handleAcceptCouponsDiscountsChange(selectedOption);},options:acceptCouponsDiscountsOptions}));}})),errors.discountCodeAcceptance?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.discountCodeAcceptance.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,whatsIncludedInfoListing.label),/*#__PURE__*/React.createElement(\"textarea\",Object.assign({rows:10},whatsIncludedInfoListing.check(setError,register),{className:\"form-control\",type:whatsIncludedInfoListing.type,name:whatsIncludedInfoListing.name,placeholder:whatsIncludedInfoListing.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.whatsIncluded})),errors.whatsIncluded?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.whatsIncluded.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",style:{width:\"100%\"},color:\"success\",onClick:()=>{// ~ run form submission (redux-hook-form) ~\n}},\"Submit responses, close modal & return to primary form\"))))));break;case\"buy-it-now-OR-best-offer\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit((data,e)=>{return onSubmit(data,e,selectedType);},(errors,e)=>{return onError(errors,e,true);})},buyitnowChecked===true?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,automaticAcceptBestOffer.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},automaticAcceptBestOffer.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:automaticAcceptBestOffer.type,name:automaticAcceptBestOffer.name,placeholder:automaticAcceptBestOffer.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.automaticBestOfferAccept}))),errors.automaticBestOfferAccept?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.automaticBestOfferAccept.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,minimumRequiredOffer.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},minimumRequiredOffer.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:minimumRequiredOffer.type,name:minimumRequiredOffer.name,placeholder:minimumRequiredOffer.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.minimumRequiredOfferValue}))),errors.minimumRequiredOfferValue?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.minimumRequiredOfferValue.message):null))):null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,buyItNowHelper.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},buyItNowHelper.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:buyItNowHelper.type,name:buyItNowHelper.name,placeholder:buyItNowHelper.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.buyItNowPrice}))),errors.buyItNowPrice?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.buyItNowPrice.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Would you like to offer \\\"buy-it-now\\\" AND \\\"best-offer\\\" options? Select to ALLOW buy it now (will limit quanitity for sale to 1-ONE) or disallow to allow multiple sales\"),/*#__PURE__*/React.createElement(Row,{className:\"selector-container\"},/*#__PURE__*/React.createElement(Col,{sm:\"2\",md:\"2\",lg:\"2\",xl:\"2\"},/*#__PURE__*/React.createElement(Switch,{width:72.5,boxShadow:\"0px 0px 15px 4.5px #6A6A6A\",offColor:\"#888\",className:\"buyitnow-switch-class\",onColor:\"#51bb25\",onChange:handleSwitchValueChange,checked:buyitnowChecked})),/*#__PURE__*/React.createElement(Col,{sm:\"10\",md:\"10\",lg:\"10\",xl:\"10\"},/*#__PURE__*/React.createElement(\"p\",{className:\"switch-text-custom\"},switchText)))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,quantityAvailability.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:quantityAvailability.name},quantityAvailability.check(setError,register,clearErrors),{render:_ref6=>{let{field}=_ref6;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:quantityAvailableForSaleGeneratedRef,autoBlur:true,placeholder:quantityAvailability.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.quantityAvailableForSale,onChange:selectedOption=>{return handleQuantityAvailabilityChange(selectedOption);},options:buyitnowChecked===true?[quantityAvailabilityOptions[0]]:quantityAvailabilityOptions}));}})),errors.quantityAvailableForSale?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.quantityAvailableForSale.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,acceptCouponsDiscounts.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:acceptCouponsDiscounts.name},acceptCouponsDiscounts.check(setError,register,clearErrors),{render:_ref7=>{let{field}=_ref7;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:discountCodeAcceptanceGeneratedRef,autoBlur:true,placeholder:acceptCouponsDiscounts.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.discountCodeAcceptance,onChange:selectedOption=>{return handleAcceptCouponsDiscountsChange(selectedOption);},options:acceptCouponsDiscountsOptions}));}})),errors.discountCodeAcceptance?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.discountCodeAcceptance.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,whatsIncludedInfoListing.label),/*#__PURE__*/React.createElement(\"textarea\",Object.assign({rows:10},whatsIncludedInfoListing.check(setError,register),{className:\"form-control\",type:whatsIncludedInfoListing.type,name:whatsIncludedInfoListing.name,placeholder:whatsIncludedInfoListing.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.whatsIncluded})),errors.whatsIncluded?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.whatsIncluded.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",style:{width:\"100%\"},color:\"success\",onClick:()=>{// ~ run form submission (redux-hook-form) ~\n}},\"Submit responses, close modal & return to primary form\"))))));break;case\"buy-it-now-ONLY\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit((data,e)=>{return onSubmit(data,e,selectedType);},(errors,e)=>{return onError(errors,e,true);})},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,biddingIncrementIntervalHelper.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:biddingIncrementIntervalHelper.name},biddingIncrementIntervalHelper.check(setError,register,clearErrors),{render:_ref8=>{let{field}=_ref8;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:biddingIncrementIntervalGeneratedRef,autoBlur:true,placeholder:biddingIncrementIntervalHelper.placeholder,defaultValue:null,onMenuClose:menuClosedSelectInput,value:currentValues.biddingIncrementInterval,onChange:selectedOption=>{return handleTimespanSelectChange(selectedOption);},options:biddingIncrementIntervalOptions}));}})),errors.biddingIncrementInterval?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.biddingIncrementInterval.message):null))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,buyItNowHelper.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{className:\"custom-dollarsign-addon\",addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"$ (USD)\")),/*#__PURE__*/React.createElement(\"input\",Object.assign({},buyItNowHelper.check(setError,register),{pattern:\"[0-9]*\",className:\"form-control\",type:buyItNowHelper.type,name:buyItNowHelper.name,placeholder:buyItNowHelper.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.buyItNowPrice}))),errors.buyItNowPrice?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.buyItNowPrice.message):null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,quantityAvailability.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:quantityAvailability.name},quantityAvailability.check(setError,register,clearErrors),{render:_ref9=>{let{field}=_ref9;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:quantityAvailableForSaleGeneratedRef,autoBlur:true,placeholder:quantityAvailability.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.quantityAvailableForSale,onChange:selectedOption=>{return handleQuantityAvailabilityChange(selectedOption);},options:quantityAvailabilityOptions}));}})),errors.quantityAvailableForSale?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.quantityAvailableForSale.message):null)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,acceptCouponsDiscounts.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:acceptCouponsDiscounts.name},acceptCouponsDiscounts.check(setError,register,clearErrors),{render:_ref10=>{let{field}=_ref10;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:discountCodeAcceptanceGeneratedRef,autoBlur:true,placeholder:acceptCouponsDiscounts.placeholder,defaultValue:null,onMenuClose:null,value:currentValues.discountCodeAcceptance,onChange:selectedOption=>{return handleAcceptCouponsDiscountsChange(selectedOption);},options:acceptCouponsDiscountsOptions}));}})),errors.discountCodeAcceptance?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.discountCodeAcceptance.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,whatsIncludedInfoListing.label),/*#__PURE__*/React.createElement(\"textarea\",Object.assign({rows:10},whatsIncludedInfoListing.check(setError,register),{className:\"form-control\",type:whatsIncludedInfoListing.type,name:whatsIncludedInfoListing.name,placeholder:whatsIncludedInfoListing.placeholder,onChange:e=>{return handleInputChange(e);},value:currentValues.whatsIncluded})),errors.whatsIncluded?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.whatsIncluded.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",style:{width:\"100%\"},color:\"success\",onClick:()=>{// ~ run form submission (redux-hook-form) ~\n}},\"Submit responses, close modal & return to primary form\"))))));break;default:break;}};return renderMainContentPassedConditional(type);};const SlideUpPaneAuctionPurchaseSelectionData=_ref11=>{let{clearAllBodyScrollLocks,typeOfListing,setIsTourOpenStatus,selected,shiftCoreStyles,previouslySavedSoftwareData,saveSoftwareListingInfo,onSubmit,onErrorMainForm,scrollToTourWrapper}=_ref11;const{register,handleSubmit,control,reset,getValues,setValue,setError,clearErrors,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});const[isOpen,setModalOpenStatus]=useState(false);const handleDynamicFormReset=selectedType=>{switch(selectedType){case\"buy-it-now-ONLY\":reset({biddingIncrementInterval:undefined,reservePrice:undefined,startBid:undefined,whatsIncluded:undefined,buyItNowPrice:undefined,quantityAvailableForSale:undefined,discountCodeAcceptance:undefined});break;case\"auction-AND-buy-it-now\":reset({biddingIncrementInterval:undefined,reservePrice:undefined,startBid:undefined,whatsIncluded:undefined,buyItNowPrice:undefined,discountCodeAcceptance:undefined,quantityAvailableForSale:undefined});break;case\"auction-ONLY\":reset({biddingIncrementInterval:undefined,reservePrice:undefined,startBid:undefined,whatsIncluded:undefined});break;case\"buy-it-now-OR-best-offer\":reset({automaticBestOfferAccept:undefined,discountCodeAcceptance:undefined,buyItNowPrice:undefined,minimumRequiredOfferValue:undefined,quantityAvailableForSale:undefined,whatsIncluded:undefined});break;default:break;}};const startBidCheck=helpers().startBidCheck;const{handleFinalSubmissionInputs,biddingIncrementIntervalOptions,quantityAvailabilityOptions,acceptCouponsDiscountsOptions}=functions;return/*#__PURE__*/React.createElement(\"div\",{id:\"sheet-container\"},/*#__PURE__*/React.createElement(\"div\",{style:{paddingTop:\"27.5px\",paddingBottom:\"12.5px\"},className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{// DISABLE clicking background\nshiftCoreStyles(true);// set modal sheet pane OPEN/true\nsetModalOpenStatus(true);// scroll to target and LOCK SCREEN until closed.\nscrollToTourWrapper.current.scrollIntoView();// alter slightly to account for top-NAV\nsetTimeout(()=>{window.scrollBy(0,-135);},750);// lock after appropriate position change\nsetTimeout(()=>{const select=document.querySelector(\".enact-nonclick\");disableBodyScroll(select);},1000);},outline:true,className:\"btn-pill btn-air-success stretched-purchase-options-btn\",color:\"success\",size:\"lg\"},\"Select & modify listing pricing and purchase options\")),/*#__PURE__*/React.createElement(Sheet,{id:\"sheet-ultimate\",disableDrag:true,isOpen:isOpen,onClose:()=>setModalOpenStatus(false)},/*#__PURE__*/React.createElement(Sheet.Container,{className:\"sheetcontainer\"},/*#__PURE__*/React.createElement(Sheet.Header,{className:\"sheetheader\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{// run submission logic\nhandleFinalSubmissionInputs(setModalOpenStatus,shiftCoreStyles,setIsTourOpenStatus,clearErrors,handleDynamicFormReset,typeOfListing,clearAllBodyScrollLocks);},className:\"btn-square stretch-and-space-btn-left\",active:true,color:\"primary\",size:\"md\"},\"Close/Exit Pane & Go Back To Listing Selection Area\")),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{// allow background clicking again\nshiftCoreStyles(false);// close modal\nsetModalOpenStatus(false);// clear errors\nclearErrors();clearAllBodyScrollLocks();handleDynamicFormReset(typeOfListing);},className:\"btn-square stretch-and-space-btn-right\",active:true,color:\"secondary\",size:\"md\"},\"Cancel/Close\")))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(\"div\",{className:\"add-normal-backer\"},/*#__PURE__*/React.createElement(Breadcrumb,{passedClassname:\"custom-breadcrumb-class\",parent:\"Auction purchase options/settings\",title:\"Select your preferred auction type\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Card,{className:\"card-main-container\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(RenderConditionalBasedUponSellingType,{clearAllBodyScrollLocks:clearAllBodyScrollLocks,handleDynamicFormReset:handleDynamicFormReset,quantityAvailabilityOptions:quantityAvailabilityOptions,acceptCouponsDiscountsOptions:acceptCouponsDiscountsOptions,reset:reset,type:selected,setValue:setValue,getValues:getValues,errors:errors,setError:setError,register:register,control:control,clearErrors:clearErrors,biddingIncrementIntervalOptions:biddingIncrementIntervalOptions,handleSubmit:handleSubmit,shiftCoreStyles:shiftCoreStyles,setModalOpenStatus:setModalOpenStatus,onSubmit:onSubmit,onErrorMainForm:onErrorMainForm,saveSoftwareListingInfo:saveSoftwareListingInfo,previouslySavedSoftwareData:previouslySavedSoftwareData})))))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,{style:{zIndex:\"-100\"},id:\"custom-backdrop-noclick\"})));};const mapStateToProps=state=>{// return desired selected redux-state\nreturn{previouslySavedSoftwareData:state.softwareListingSale.softwareListingSaleInfo};};const ConnectedSlideUpPaneAuctionPurchase=connect(mapStateToProps,{shiftCoreStyles,saveSoftwareListingInfo})(SlideUpPaneAuctionPurchaseSelectionData);// export helper functions\nexport default{ConnectedSlideUpPaneAuctionPurchase,RenderConditionalBasedUponSellingType};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js"],"names":["React","Fragment","useState","useRef","Sheet","Button","Container","Col","Row","Card","FormGroup","Label","CardBody","Form","InputGroupAddon","InputGroup","InputGroupText","Breadcrumb","helpers","functions","useForm","Controller","connect","shiftCoreStyles","Select","saveSoftwareListingInfo","NotificationManager","disableBodyScroll","enableBodyScroll","_","Switch","RenderConditionalBasedUponSellingType","clearAllBodyScrollLocks","handleDynamicFormReset","quantityAvailabilityOptions","acceptCouponsDiscountsOptions","reset","type","setValue","getValues","errors","setError","register","control","clearErrors","biddingIncrementIntervalOptions","handleSubmit","setModalOpenStatus","previouslySavedSoftwareData","biddingIncrementIntervalGeneratedRef","quantityAvailableForSaleGeneratedRef","discountCodeAcceptanceGeneratedRef","startBidCheck","reservePrice","biddingIncrementIntervalHelper","quantityAvailability","acceptCouponsDiscounts","whatsIncludedInfoListing","buyItNowHelper","automaticAcceptBestOffer","minimumRequiredOffer","currentValues","buyitnowChecked","setBuyitnowState","auctionChecked","setAuctionCheckedState","switchText","setSwitchTextState","switchTextAuctionBuyitnow","setSwitchTextAuctionBuyitnowState","handleInputChange","e","name","value","target","shouldValidate","handleTimespanSelectChange","selectedOption","current","blur","handleQuantityAvailabilityChange","handleAcceptCouponsDiscountsChange","menuClosedSelectInput","biddingIncrementInterval","onSubmit","data","selectedType","console","log","preventDefault","startBid","omittedKeysAuctionOnly","omit","newDataObj","auctionPriceRelatedData","Number","Math","round","auctionSelectedType","mergedPreviousNewState","omittedKeysAuctionAndBuyitnow","newDataObjAuctionAndBuyitnow","buyItNowData","active","buyItNowPrice","undefined","mergedPreviousNewStateAuctionAndBuyitnow","omittedKeysBuyitnowOnlyConcattenated","newDataObjBuyitnowOnly","mergedPreviousNewStateBuyitnowOnly","omittedKeysBuyitnowOrBestOffer","newDataObjBuyitnowOrBestOffer","offerFeatureData","minimumRequiredOfferValue","automaticBestOfferAccept","mergedPreviousNewStateBuyitnowOrBestOffer","success","showMessages","onError","innerRun","handleSwitchValueChange","option","label","numericalAmount","min","max","quantityAvailableForSale","Object","keys","length","handleSwitchValueChangeAuctionBuyitnow","renderMainContentPassedConditional","color","textDecorationLine","check","placeholder","message","field","whatsIncluded","width","discountCodeAcceptance","SlideUpPaneAuctionPurchaseSelectionData","typeOfListing","setIsTourOpenStatus","selected","onErrorMainForm","scrollToTourWrapper","formState","mode","reValidateMode","isOpen","handleFinalSubmissionInputs","paddingTop","paddingBottom","scrollIntoView","setTimeout","window","scrollBy","select","document","querySelector","zIndex","mapStateToProps","state","softwareListingSale","softwareListingSaleInfo","ConnectedSlideUpPaneAuctionPurchase"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form, InputGroupAddon, InputGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport { NotificationManager } from 'react-notifications';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport _ from \"lodash\";\nimport Switch from \"react-switch\";\n\n// ~ helper function rendered in main component (bottom of this component) ~\nconst RenderConditionalBasedUponSellingType = ({ clearAllBodyScrollLocks, handleDynamicFormReset, quantityAvailabilityOptions, acceptCouponsDiscountsOptions, reset, type, setValue, getValues, errors, setError, register, control, clearErrors, biddingIncrementIntervalOptions, handleSubmit, shiftCoreStyles, setModalOpenStatus, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n    // ref's below...\n    const biddingIncrementIntervalGeneratedRef = useRef(null);\n    const quantityAvailableForSaleGeneratedRef = useRef(null);\n    const discountCodeAcceptanceGeneratedRef = useRef(null);\n    // imported helper functions below...\n    const startBidCheck = helpers().startBidCheck;\n    const reservePrice = helpers().reservePrice;\n    const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n    const quantityAvailability = helpers().quantityAvailability;\n    const acceptCouponsDiscounts = helpers().acceptCouponsDiscounts;\n    const whatsIncludedInfoListing = helpers().whatsIncludedInfoListing;\n    const buyItNowHelper = helpers().buyItNowHelper;\n    const automaticAcceptBestOffer = helpers().automaticAcceptBestOffer;\n    const minimumRequiredOffer = helpers().minimumRequiredOffer;\n    // gather redux-hook-form values (basically a \"state\" replacement).\n    const currentValues = getValues();\n\n    const [ buyitnowChecked, setBuyitnowState ] = useState(true);\n    const [ auctionChecked, setAuctionCheckedState ] = useState(true);\n    const [ switchText, setSwitchTextState ] = useState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");\n    const [ switchTextAuctionBuyitnow, setSwitchTextAuctionBuyitnowState ] = useState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");\n\n    // console.log(\"startBidCheck : \", startBidCheck);\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        // clearErrors(name);\n\n        setValue(name, value, { shouldValidate: true })\n    \n        return value;\n    };\n    const handleTimespanSelectChange = (selectedOption) => {\n        // run conditionals\n        setValue('biddingIncrementInterval', selectedOption, { shouldValidate: false });\n\n        biddingIncrementIntervalGeneratedRef.current.blur();\n    }\n    const handleQuantityAvailabilityChange = (selectedOption) => {\n        // run conditionals\n        setValue('quantityAvailableForSale', selectedOption, { shouldValidate: false });\n\n        quantityAvailableForSaleGeneratedRef.current.blur();\n    }\n    const handleAcceptCouponsDiscountsChange = (selectedOption) => {\n        // run conditionals\n        setValue('discountCodeAcceptance', selectedOption, { shouldValidate: false });\n\n        discountCodeAcceptanceGeneratedRef.current.blur();\n    }\n\n    const menuClosedSelectInput = () => {\n        if (currentValues.biddingIncrementInterval) {\n            // setSelectOneErrorStatus(true);\n        } \n    }\n    const onSubmit = (data, e, selectedType) => {\n\n        console.log(\"DATA@!\", data, currentValues);\n\n        e.preventDefault();\n\n        if (data !== '') {\n\n            const { reservePrice, startBid } = data;\n\n            switch (selectedType) {\n                case \"auction-ONLY\":\n                        const omittedKeysAuctionOnly = _.omit(data, [\"reservePrice\", \"startBid\"]);\n\n                        const newDataObj = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionOnly,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewState = {...previouslySavedSoftwareData, ...newDataObj};\n\n                        saveSoftwareListingInfo(mergedPreviousNewState);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"auction-ONLY\");\n                    break;\n                case \"auction-AND-buy-it-now\":\n                        const omittedKeysAuctionAndBuyitnow = _.omit(data, [\"reservePrice\", \"startBid\", \"buyItNowPrice\"]);\n\n                        const newDataObjAuctionAndBuyitnow = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionAndBuyitnow,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                buyItNowData: auctionChecked === true ? {\n                                    active: true,\n                                    buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice)))\n                                } : {\n                                    active: false,\n                                    buyItNowPrice: undefined\n                                },\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewStateAuctionAndBuyitnow = {...previouslySavedSoftwareData, ...newDataObjAuctionAndBuyitnow};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"auction-AND-buy-it-now\");\n                    break;\n                case \"buy-it-now-ONLY\":\n                        const omittedKeysBuyitnowOnlyConcattenated = _.omit(data, [\"buyItNowPrice\"]);\n\n                        const newDataObjBuyitnowOnly = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysBuyitnowOnlyConcattenated,\n                                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewStateBuyitnowOnly = {...previouslySavedSoftwareData, ...newDataObjBuyitnowOnly};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOnly);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"buy-it-now-ONLY\");\n                    break;\n                case \"buy-it-now-OR-best-offer\":\n                        const omittedKeysBuyitnowOrBestOffer = _.omit(data, [\"buyItNowPrice\", \"minimumRequiredOfferValue\", \"automaticBestOfferAccept\"]);\n\n                        const newDataObjBuyitnowOrBestOffer = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysBuyitnowOrBestOffer,\n                                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n                                offerFeatureData: buyitnowChecked === true ? {\n                                    minimumRequiredOfferValue: Number(Math.round(Number(data.minimumRequiredOfferValue))),\n                                    automaticBestOfferAccept: Number(Math.round(Number(data.automaticBestOfferAccept))),\n                                    active: true\n                                } : {\n                                    active: false,\n                                    automaticBestOfferAccept: undefined,\n                                    minimumRequiredOfferValue: undefined\n                                },\n                                auctionSelectedType: selectedType\n                            }\n                        };\n\n                        const mergedPreviousNewStateBuyitnowOrBestOffer = {...previouslySavedSoftwareData, ...newDataObjBuyitnowOrBestOffer};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOrBestOffer);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"buy-it-now-OR-best-offer\");\n                    break;\n                default:\n                    break;\n            }\n\n            clearAllBodyScrollLocks();\n\n            NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\", \"Successfully updated listing information!\", 4500);\n        } else {\n            console.log(\"onSubmit failure :(\");\n\n            errors.showMessages();\n        }\n    };\n    const onError = async (errors, e, innerRun) => {\n        console.log(\"error submitting...!\", errors, e, innerRun);\n    };\n\n    console.log(\"currentValues : \", currentValues);\n\n    const handleSwitchValueChange = (value) => {\n        if (value === true) {\n            const option = { label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\", value: \"1\", numericalAmount: 1, min: 1, max: 1 };\n\n            setSwitchTextState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");\n            // check if quanitity value already selected\n            if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n                // update switch state\n                setBuyitnowState(value);\n            } else {\n                // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n                setValue('quantityAvailableForSale', option, { shouldValidate: false });\n                // quantity value NOT already selected - do nothing but update switch state\n                setBuyitnowState(value);\n            }\n        } else {\n            setSwitchTextState(\"MULTIPLE quantities are selected (ALLOWING MULTIPLE SALES) and available so you can sell multiples of whatever software you're selling (Can be sold an unlimited amount of times - basically 1 per purchase per user). You've SELECTED to DISABLE the 'BEST-OFFER' setting.\");\n            // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n            reset({ automaticBestOfferAccept: \"\", minimumRequiredOfferValue: \"\" });\n            // update switch state\n            setBuyitnowState(value);\n        }\n    }\n    const handleSwitchValueChangeAuctionBuyitnow = (value) => {\n        if (value === true) {\n            const option = { label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\", value: \"1\", numericalAmount: 1, min: 1, max: 1 };\n            // setSwitchTextAuctionBuyitnowState\n            setSwitchTextAuctionBuyitnowState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");\n            // check if quanitity value already selected\n            if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n                // update switch state\n                setAuctionCheckedState(value);\n            } else {\n                // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n                setValue('quantityAvailableForSale', option, { shouldValidate: false });\n                // quantity value NOT already selected - do nothing but update switch state\n                setAuctionCheckedState(value);\n            }\n        } else {\n            setSwitchTextAuctionBuyitnowState(\"'AUCTION-ONLY' is enabled/selected currently and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION-ONLY' is now SELECTED!\");\n            // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n            reset({ buyItNowPrice: \"\" });\n            // update switch state\n            setAuctionCheckedState(value);\n        }\n    }\n    const renderMainContentPassedConditional = (selectedType) => {\n        switch (selectedType) {\n            case \"auction-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <h5>This is a <strong style={{ color: \"blue\" }}>SINGLE ITEM AUCTION</strong> listing which means only <strong style={{ color: \"blue\" }}>ONE</strong> person will be able to purchase what you're selling</h5>\n                            <p>Only one person will be able to purchase this listing - if you'd like to either sell multiple copies of your <strong style={{ textDecorationLine: \"underline\", color: \"red\" }}>software/code (or related)</strong> then you should check out the other listing pricing options such as \"auction AND buy-it-now\", \"buy-it-now ONLY\" or \"Buy-it-now\" OR \"best-offer ONLY\" which may include options that're more applicable to your personal preferences...</p>\n                            <hr />\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"auction-AND-buy-it-now\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    {auctionChecked === true ? <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{buyItNowHelper.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.buyItNowPrice} />\n                                            </InputGroup>\n                                            {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col> : null}\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>Would you like to have this listing as an \"AUCTION-ONLY\" listing OR a an \"AUCTION W/BUY-IT-NOW\" listing? (***auction W/BUY-IT-NOW allows for both bids/offers as well as a 'Buy-it-now' option IF ONLY ONE item is being sold)</Label>\n                                            <Row className=\"selector-container\">\n                                                <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                                    <Switch width={72.5} boxShadow={\"0px 0px 15px 4.5px #6A6A6A\"} offColor={\"#888\"} className={\"buyitnow-switch-class\"} onColor={\"#51bb25\"} onChange={handleSwitchValueChangeAuctionBuyitnow} checked={auctionChecked} />\n                                                </Col>\n                                                <Col sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\">\n                                                    <p className=\"switch-text-custom\">{switchTextAuctionBuyitnow}</p> \n                                                </Col>\n                                            </Row>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                {buyitnowChecked === true ? <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{automaticAcceptBestOffer.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...automaticAcceptBestOffer.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={automaticAcceptBestOffer.type} name={automaticAcceptBestOffer.name} placeholder={automaticAcceptBestOffer.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.automaticBestOfferAccept} />\n                                            </InputGroup>\n                                            {errors.automaticBestOfferAccept ? <span className=\"span-tooltip\">{errors.automaticBestOfferAccept.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{minimumRequiredOffer.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...minimumRequiredOffer.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={minimumRequiredOffer.type} name={minimumRequiredOffer.name} placeholder={minimumRequiredOffer.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.minimumRequiredOfferValue} />\n                                            </InputGroup>\n                                            {errors.minimumRequiredOfferValue ? <span className=\"span-tooltip\">{errors.minimumRequiredOfferValue.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row> : null}\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{buyItNowHelper.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.buyItNowPrice} />\n                                            </InputGroup>\n                                            {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>Would you like to offer \"buy-it-now\" AND \"best-offer\" options? Select to ALLOW buy it now (will limit quanitity for sale to 1-ONE) or disallow to allow multiple sales</Label>\n                                            <Row className=\"selector-container\">\n                                                <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                                    <Switch width={72.5} boxShadow={\"0px 0px 15px 4.5px #6A6A6A\"} offColor={\"#888\"} className={\"buyitnow-switch-class\"} onColor={\"#51bb25\"} onChange={handleSwitchValueChange} checked={buyitnowChecked} />\n                                                </Col>\n                                                <Col sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\">\n                                                    <p className=\"switch-text-custom\">{switchText}</p> \n                                                </Col>\n                                            </Row>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup>\n                                        <Label>{buyItNowHelper.label}</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                            <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.buyItNowPrice} />\n                                        </InputGroup>\n                                        {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n\n    return renderMainContentPassedConditional(type);\n};\n\n\nconst SlideUpPaneAuctionPurchaseSelectionData = ({ clearAllBodyScrollLocks, typeOfListing, setIsTourOpenStatus, selected, shiftCoreStyles, previouslySavedSoftwareData, saveSoftwareListingInfo, onSubmit, onErrorMainForm, scrollToTourWrapper }) => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const [ isOpen, setModalOpenStatus ] = useState(false);\n\n    const handleDynamicFormReset = (selectedType) => {\n        switch (selectedType) {\n            case \"buy-it-now-ONLY\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined, buyItNowPrice: undefined, quantityAvailableForSale: undefined, discountCodeAcceptance: undefined });\n                break;\n            case \"auction-AND-buy-it-now\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined, buyItNowPrice: undefined, discountCodeAcceptance: undefined, quantityAvailableForSale: undefined });\n                break;\n            case \"auction-ONLY\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined });\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                reset({ automaticBestOfferAccept: undefined, discountCodeAcceptance: undefined, buyItNowPrice: undefined, minimumRequiredOfferValue: undefined, quantityAvailableForSale: undefined, whatsIncluded: undefined })\n                break;\n            default:\n                break;\n        }\n    }\n\n    const startBidCheck = helpers().startBidCheck;\n\n    const { handleFinalSubmissionInputs, biddingIncrementIntervalOptions, quantityAvailabilityOptions, acceptCouponsDiscountsOptions } = functions;\n\n    return (\n        <div id=\"sheet-container\">\n            <div style={{ paddingTop: \"27.5px\", paddingBottom: \"12.5px\" }} className=\"centered-both-ways\">\n                <Button onClick={() => {\n                    // DISABLE clicking background\n                    shiftCoreStyles(true);\n                    // set modal sheet pane OPEN/true\n                    setModalOpenStatus(true);\n                    // scroll to target and LOCK SCREEN until closed.\n                    scrollToTourWrapper.current.scrollIntoView();\n                    // alter slightly to account for top-NAV\n                    setTimeout(() => {\n                        window.scrollBy(0, -135);\n                    }, 750);\n                    // lock after appropriate position change\n                    setTimeout(() => {\n\n                        const select = document.querySelector(\".enact-nonclick\");\n                        \n                        disableBodyScroll(select);\n                    }, 1000)\n                }} outline className=\"btn-pill btn-air-success stretched-purchase-options-btn\" color=\"success\" size=\"lg\">Select & modify listing pricing and purchase options</Button>\n            </div>\n            <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setModalOpenStatus(false)}>\n                <Sheet.Container className=\"sheetcontainer\">\n                    <Sheet.Header className=\"sheetheader\">\n                        <Row>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // run submission logic\n                                    handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles, setIsTourOpenStatus, clearErrors, handleDynamicFormReset, typeOfListing, clearAllBodyScrollLocks);\n                                }} className=\"btn-square stretch-and-space-btn-left\" active color=\"primary\" size=\"md\">Close/Exit Pane & Go Back To Listing Selection Area</Button>\n                            </Col>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // allow background clicking again\n                                    shiftCoreStyles(false);\n                                    // close modal\n                                    setModalOpenStatus(false);\n                                    // clear errors\n                                    clearErrors();\n                                    \n                                    clearAllBodyScrollLocks();\n\n                                    handleDynamicFormReset(typeOfListing);\n                                }} className=\"btn-square stretch-and-space-btn-right\" active color=\"secondary\" size=\"md\">Cancel/Close</Button>\n                            </Col>\n                        </Row>\n                    </Sheet.Header>\n                    <Sheet.Content> \n                        <div className=\"add-normal-backer\">\n                            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent=\"Auction purchase options/settings\" title=\"Select your preferred auction type\"/>\n                            <Container fluid={true}>\n                                <Card className=\"card-main-container\">\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            {/* render sub component with SWITCH logic */}\n                                            <RenderConditionalBasedUponSellingType clearAllBodyScrollLocks={clearAllBodyScrollLocks} handleDynamicFormReset={handleDynamicFormReset} quantityAvailabilityOptions={quantityAvailabilityOptions} acceptCouponsDiscountsOptions={acceptCouponsDiscountsOptions} reset={reset} type={selected} setValue={setValue} getValues={getValues} errors={errors} setError={setError} register={register} control={control} clearErrors={clearErrors} biddingIncrementIntervalOptions={biddingIncrementIntervalOptions} handleSubmit={handleSubmit} shiftCoreStyles={shiftCoreStyles} setModalOpenStatus={setModalOpenStatus} onSubmit={onSubmit} onErrorMainForm={onErrorMainForm} saveSoftwareListingInfo={saveSoftwareListingInfo} previouslySavedSoftwareData={previouslySavedSoftwareData} />\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop style={{ zIndex: \"-100\" }} id=\"custom-backdrop-noclick\" />\n            </Sheet>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    // return desired selected redux-state\n    return {\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, { shiftCoreStyles, saveSoftwareListingInfo })(SlideUpPaneAuctionPurchaseSelectionData);\n// export helper functions\nexport default {\n    ConnectedSlideUpPaneAuctionPurchase,\n    RenderConditionalBasedUponSellingType\n};"]},"metadata":{},"sourceType":"module"}