{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/employers/onboardingFlow/mainOnboardingFlow.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, CardHeader, Container, Row, Col, Card } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport ReactPlayer from 'react-player';\n\nconst MainOnboardingFlowHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        userID: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/onboarding/stripe/link/data`, configuration).then(res => {\n      if (res.data.message === \"Successfully activated stripe onboarding process!\") {\n        console.log(res.data);\n        setLoaded(true);\n      } else {\n        console.log(\"res.data err:\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Authenticate & Verify Your Account\",\n    title: \"You MUST verify your account before any transaction's will process..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, \"Stripe\"), \" onboarding process/flow to enable payments, transfer's and anything payment related..\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subheader-preview-onboarding-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \"You will momentarily see (if properly loaded) the onboarding process/flow for stripe. Please follow the proceeding steps and complete any/all required information. You \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 247\n    }\n  }, \"MUST\"), \" complete this information before you may fully participate in our platform including but not limited to payments.\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    playing: true,\n    loop: true,\n    muted: true,\n    width: \"100%\",\n    className: \"video-loading-payment-onboarding\",\n    wrapper: \"div\",\n    url: require(\"../../../../../assets/video/loading-onboarding.mp4\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(MainOnboardingFlowHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/employers/onboardingFlow/mainOnboardingFlow.js"],"names":["React","Fragment","useEffect","useState","CardBody","CardHeader","Container","Row","Col","Card","Breadcrumb","axios","connect","ReactPlayer","MainOnboardingFlowHelper","userData","loaded","setLoaded","configuration","params","userID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","catch","err","textDecorationLine","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, CardHeader, Container, Row, Col, Card } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport ReactPlayer from 'react-player';\n\nconst MainOnboardingFlowHelper = ({ userData }) => {\n\n    const [ loaded, setLoaded ] = useState(false);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                userID: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/onboarding/stripe/link/data`, configuration).then((res) => {\n            if (res.data.message === \"Successfully activated stripe onboarding process!\") {\n                console.log(res.data);\n\n                setLoaded(true);\n            } else {\n                console.log(\"res.data err:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Authenticate & Verify Your Account\" title=\"You MUST verify your account before any transaction's will process..\"/>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h1><strong style={{ textDecorationLine: \"underline\" }}>Stripe</strong> onboarding process/flow to enable payments, transfer's and anything payment related..</h1>\n                                <p className='subheader-preview-onboarding-p'>You will momentarily see (if properly loaded) the onboarding process/flow for stripe. Please follow the proceeding steps and complete any/all required information. You <strong>MUST</strong> complete this information before you may fully participate in our platform including but not limited to payments.</p>\n                            </CardHeader>\n                            <CardBody>\n                            <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"video-loading-payment-onboarding\"} wrapper={\"div\"} url={require(\"../../../../../assets/video/loading-onboarding.mp4\")} />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(MainOnboardingFlowHelper);"]},"metadata":{},"sourceType":"module"}