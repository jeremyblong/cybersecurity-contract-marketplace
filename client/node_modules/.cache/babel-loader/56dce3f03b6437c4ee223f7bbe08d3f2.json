{"ast":null,"code":"import React,{Fragment,useEffect,useState}from'react';import{Row,Col,Card,CardBody,Button,Media,Badge}from'reactstrap';import ReactMapboxGl,{Marker}from'react-mapbox-gl';import LeftBar from'./leftBar';import RightBar from'./rightBar';import axios from\"axios\";import Skeleton,{SkeletonTheme}from'react-loading-skeleton';import helpers from\"./miscFunctions/helperFunctions.js\";import _ from\"lodash\";import{Link,useHistory}from'react-router-dom';import ReactMarkdown from'react-markdown';import remarkGfm from'remark-gfm';import{connect}from\"react-redux\";import moment from\"moment\";const{renderProfilePicVideoSmallRounded}=helpers;const Map=ReactMapboxGl({accessToken:process.env.REACT_APP_MAPBOX_TOKEN,interactive:false});const TimelineTabEmployerProfileHelper=_ref=>{let{employerData,activeHearts,userData}=_ref;const[location,setLocation]=useState(null);const[ready,setReady]=useState(false);const[listings,setListingsData]=useState([]);const history=useHistory();const handleRedirectIndividualPage=listing=>{console.log(\"listing passed: \",listing);history.push(\"/view/individual/employer/listing/public/\".concat(listing.uniqueId),{listing});};useEffect(()=>{setTimeout(()=>{if(_.has(employerData,\"currentCompanyAddress\")){axios.get(\"https://api.tomtom.com/search/2/geocode/\".concat(encodeURIComponent(employerData.currentCompanyAddress.addressPostalCode),\".json?key=\").concat(process.env.REACT_APP_TOMTOM_API_KEY,\"&countrySet=US\")).then(res=>{if(res.data){console.log(\"res.data\",res.data);const{results}=res.data;for(let index=0;index<results.length;index++){const el=results[index];if(el.type===\"Geography\"){setLocation(el);setReady(true);break;}}}}).catch(err=>{console.log(err);});}else{setReady(true);}},575);},[]);useEffect(()=>{axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/fetch/related/employer/listings/employer/account\"),{params:{id:employerData.uniqueId}}).then(res=>{if(res.data.message===\"Gathered related listings to choose from!\"){console.log(res.data);const{listings}=res.data;setListingsData(listings);}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(err);});},[]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:\"3 xl-40 box-col-4\",lg:\"12\",md:\"5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"default-according style-1 faq-accordion job-accordion\",id:\"accordionoc4\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(LeftBar,{activeHearts:activeHearts,employerData:employerData})))),/*#__PURE__*/React.createElement(Col,{xl:\"6 xl-60 box-col-8\",lg:\"12\",md:\"7\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-card-employer\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"new-users-social\"},/*#__PURE__*/React.createElement(Media,null,renderProfilePicVideoSmallRounded(_.has(employerData,\"profilePicsVideos\")&&typeof employerData.profilePicsVideos!==\"undefined\"&&employerData.profilePicsVideos.length>0?employerData.profilePicsVideos[employerData.profilePicsVideos.length-1]:null),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"mb-0 f-w-700\"},\"Employer Approx. Location\"),/*#__PURE__*/React.createElement(\"p\",null,\"\".concat(employerData.firstName,\" \").concat(employerData.lastName))))),/*#__PURE__*/React.createElement(\"div\",{className:\"map-content-wrapper\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"map-header-employer-profile\"},\"Employer \",/*#__PURE__*/React.createElement(\"strong\",null,\"GENERAL\"),\" location (NOT the employer's actual location - ONLY APPROX.)\"),/*#__PURE__*/React.createElement(\"p\",{className:\"leader-employer-profile\"},\"This is the employer's approx. location so you can 'ballpark' which contracted gigs are appropriate VS which jobs arent \",/*#__PURE__*/React.createElement(\"strong\",null,\"IF\"),\" you're looking for a \",/*#__PURE__*/React.createElement(\"strong\",null,\"physical hack contract\"),\" - this will generally just show the relevant city based on a \",/*#__PURE__*/React.createElement(\"strong\",null,\"zip-code lookup\"),\".\"),location!==null?/*#__PURE__*/React.createElement(Map,{center:[location.position.lon,location.position.lat],zoom:[10],style:\"mapbox://styles/mapbox/streets-v9\",containerStyle:{height:\"275px\",width:'100%',border:\"2px solid grey\"}},/*#__PURE__*/React.createElement(Marker,{coordinates:[location.position.lon,location.position.lat],anchor:\"bottom\"},/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../../assets/icons/location.png\")}))):ready===true?/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../../assets/images/no-loc.png\"),className:\"no-loc-image\"}):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:35})))))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\"},typeof listings!==\"undefined\"&&listings.length>0?listings.map((listing,i)=>{console.log(\"listing\",listing);return/*#__PURE__*/React.createElement(Card,{key:i,className:\"\".concat(false?'shadow-card-employer':'ribbon-vertical-left-wrapper shadow-card-employer')},/*#__PURE__*/React.createElement(\"div\",{className:\"job-search\"},/*#__PURE__*/React.createElement(CardBody,{id:\"custom-cardbody-listing-map\"},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(\"img\",{className:\"img-40 img-fluid m-r-20\",src:require(\"../../../../../../assets/images/user/6.jpg\"),alt:\"\"}),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"f-w-600\"},/*#__PURE__*/React.createElement(Link,{className:\"heavy-blue\",to:\"\".concat(process.env.PUBLIC_URL,\"/app/jobSearch/job-detail\")},listing.publicCompanyName),listing.applicants.includes(userData.uniqueId)?/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-primary pull-right\"},\"Already Applied!\"):/*#__PURE__*/React.createElement(\"div\",{className:\"ribbon ribbon-bookmark ribbon-vertical-left ribbon-secondary\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icofont icofont-love\"}))),/*#__PURE__*/React.createElement(\"p\",null,\"XP Reward: \",/*#__PURE__*/React.createElement(\"em\",{className:\"heavy-blue\"},listing.experienceAndCost.experience),\" \",/*#__PURE__*/React.createElement(\"strong\",null,\"~\"),\" \",/*#__PURE__*/React.createElement(\"em\",{className:\"heavy-blue\"},listing.tokensRequiredToApply.value),\" tokens required to apply...\"))),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"0px\"}},\"Preferred applicant rank: \",/*#__PURE__*/React.createElement(\"em\",{className:\"heavy-blue\"},listing.requiredRankToApply.label)),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"-15px\"}},\"Posted on: \",/*#__PURE__*/React.createElement(\"em\",{className:\"heavy-blue\"},moment(listing.systemDate).fromNow())),/*#__PURE__*/React.createElement(\"div\",{className:\"spacing-bottom\"},typeof listing.hashtags!==\"undefined\"&&listing.hashtags.length>0?listing.hashtags.map((tag,indexxxx)=>{return/*#__PURE__*/React.createElement(Badge,{key:indexxxx,color:\"info\",pill:true},tag.text);}):null),/*#__PURE__*/React.createElement(ReactMarkdown,{className:\"custom-markdown-container\",children:listing.listingDescription,remarkPlugins:[remarkGfm]}),/*#__PURE__*/React.createElement(\"div\",{className:\"btn-redirect-listing-container-wrapper\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>{handleRedirectIndividualPage(listing);},style:{width:\"100%\"},className:\"btn-pill btn-air-info\",outline:true,color:\"info-2x\"},\"Visit/View Listing\")))));}):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../../assets/images/no-listings-availiable.png\"),className:\"no-listings-availiable\"}))))))),/*#__PURE__*/React.createElement(Col,{xl:\"3 xl-100 box-col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"default-according style-1 faq-accordion job-accordion\",id:\"accordionoc1\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(RightBar,{employerData:employerData}))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(TimelineTabEmployerProfileHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/timelineTab.js"],"names":["React","Fragment","useEffect","useState","Row","Col","Card","CardBody","Button","Media","Badge","ReactMapboxGl","Marker","LeftBar","RightBar","axios","Skeleton","SkeletonTheme","helpers","_","Link","useHistory","ReactMarkdown","remarkGfm","connect","moment","renderProfilePicVideoSmallRounded","Map","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","interactive","TimelineTabEmployerProfileHelper","employerData","activeHearts","userData","location","setLocation","ready","setReady","listings","setListingsData","history","handleRedirectIndividualPage","listing","console","log","push","uniqueId","setTimeout","has","get","encodeURIComponent","currentCompanyAddress","addressPostalCode","REACT_APP_TOMTOM_API_KEY","then","res","data","results","index","length","el","type","catch","err","REACT_APP_BASE_URL","params","id","message","profilePicsVideos","firstName","lastName","position","lon","lat","height","width","border","require","map","i","PUBLIC_URL","publicCompanyName","applicants","includes","experienceAndCost","experience","tokensRequiredToApply","value","marginTop","requiredRankToApply","label","systemDate","fromNow","hashtags","tag","indexxxx","text","listingDescription","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Row, Col, Card, CardBody, Button, Media, Badge } from 'reactstrap';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport LeftBar from './leftBar';\nimport RightBar from './rightBar';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport helpers from \"./miscFunctions/helperFunctions.js\";\nimport _ from \"lodash\";\nimport { Link, useHistory }  from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\n\nconst { renderProfilePicVideoSmallRounded } = helpers;\n\nconst Map = ReactMapboxGl({\n    accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    interactive: false\n});\n   \n\nconst TimelineTabEmployerProfileHelper = ({ employerData, activeHearts, userData }) => {\n\n    const [ location, setLocation ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ listings, setListingsData ] = useState([]);\n\n    const history = useHistory();\n\n    const handleRedirectIndividualPage = (listing) => {\n        console.log(\"listing passed: \", listing);\n\n        history.push(`/view/individual/employer/listing/public/${listing.uniqueId}`, { listing });\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (_.has(employerData, \"currentCompanyAddress\")) {\n                axios.get(`https://api.tomtom.com/search/2/geocode/${encodeURIComponent(employerData.currentCompanyAddress.addressPostalCode)}.json?key=${process.env.REACT_APP_TOMTOM_API_KEY}&countrySet=US`).then((res) => {\n                    if (res.data) {\n                        console.log(\"res.data\", res.data);\n                        \n                        const { results } = res.data;\n\n                        for (let index = 0; index < results.length; index++) {\n                            const el = results[index];\n                            \n                            if (el.type === \"Geography\") {\n                                setLocation(el);\n                                setReady(true);\n                                break;\n                            }\n                        }\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                })\n            } else {\n                setReady(true);\n            }\n        }, 575)\n    }, []);\n\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, {\n            params: {\n                id: employerData.uniqueId\n            }\n        }).then((res) => {\n            if (res.data.message === \"Gathered related listings to choose from!\") {\n                console.log(res.data);\n\n                const { listings } = res.data;\n\n                setListingsData(listings);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    return (\n        <Fragment>\n            <Row>\n                <Col xl=\"3 xl-40 box-col-4\" lg=\"12\" md=\"5\">\n                    <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc4\">\n                        <Row>\n                            <LeftBar activeHearts={activeHearts} employerData={employerData} />\n                        </Row>\n                    </div>\n                </Col>\n                <Col xl=\"6 xl-60 box-col-8\" lg=\"12\" md=\"7\">\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card className='shadow-card-employer'>\n                                <CardBody>\n                                    <div className=\"new-users-social\">\n                                        <Media>\n                                            {renderProfilePicVideoSmallRounded(_.has(employerData, \"profilePicsVideos\") && typeof employerData.profilePicsVideos !== \"undefined\" && employerData.profilePicsVideos.length > 0 ? employerData.profilePicsVideos[employerData.profilePicsVideos.length - 1] : null)}\n                                            <Media body>\n                                                <h6 className=\"mb-0 f-w-700\">Employer Approx. Location</h6>\n                                                <p>{`${employerData.firstName} ${employerData.lastName}`}</p>\n                                            </Media>\n                                        </Media>\n                                    </div>\n                                    <div className='map-content-wrapper'>\n                                        <h4 className='map-header-employer-profile'>Employer <strong>GENERAL</strong> location (NOT the employer's actual location - ONLY APPROX.)</h4>\n                                        <p className='leader-employer-profile'>This is the employer's approx. location so you can 'ballpark' which contracted gigs are appropriate VS which jobs arent <strong>IF</strong> you're looking for a <strong>physical hack contract</strong> - this will generally just show the relevant city based on a <strong>zip-code lookup</strong>.</p>\n                                        {location !== null ? <Map\n                                            center={[location.position.lon, location.position.lat]}\n                                            zoom={[10]}\n                                            style=\"mapbox://styles/mapbox/streets-v9\"\n                                            containerStyle={{\n                                                height: \"275px\",\n                                                width: '100%',\n                                                border: \"2px solid grey\"\n                                            }}\n                                        >\n                                            <Marker\n                                                coordinates={[location.position.lon, location.position.lat]}\n                                                anchor=\"bottom\"\n                                            >\n                                                <img src={require(\"../../../../../../assets/icons/location.png\")}/>\n                                            </Marker>\n                                        </Map> : ready === true ? <img src={require(\"../../../../../../assets/images/no-loc.png\")} className={\"no-loc-image\"} /> : <Fragment>\n                                            <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                                <p>\n                                                    <Skeleton count={35} />\n                                                </p>\n                                            </SkeletonTheme>\n                                        </Fragment>}\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\">\n                            {typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, i) => {\n                                console.log(\"listing\", listing);\n                                return (\n                                    <Card key={i} className={`${false ? 'shadow-card-employer' : 'ribbon-vertical-left-wrapper shadow-card-employer'}`}>\n                                        <div className=\"job-search\">\n                                            <CardBody id=\"custom-cardbody-listing-map\">\n                                                <Media>\n                                                    <img className=\"img-40 img-fluid m-r-20\" src={require(`../../../../../../assets/images/user/6.jpg`)} alt=\"\" />\n                                                    <Media body>\n                                                        <h6 className=\"f-w-600\">\n                                                            <Link className=\"heavy-blue\" to={`${process.env.PUBLIC_URL}/app/jobSearch/job-detail`}> \n                                                                {listing.publicCompanyName}\n                                                            </Link>\n                                                            {(listing.applicants.includes(userData.uniqueId) ?\n                                                                <span className=\"badge badge-primary pull-right\">\n                                                                    {\"Already Applied!\"}\n                                                                </span>\n                                                                : <div className=\"ribbon ribbon-bookmark ribbon-vertical-left ribbon-secondary\">\n                                                                    <i className=\"icofont icofont-love\"></i>\n                                                                </div>\n                                                            )}\n                                                        </h6>\n                                                        <p>XP Reward: <em className=\"heavy-blue\">{listing.experienceAndCost.experience}</em> <strong>~</strong> <em className=\"heavy-blue\">{listing.tokensRequiredToApply.value}</em> tokens required to apply...</p>\n                                                    </Media>\n                                                </Media>\n                                                <p style={{ marginTop: \"0px\" }}>Preferred applicant rank: <em className=\"heavy-blue\">{listing.requiredRankToApply.label}</em></p>\n                                                <p style={{ marginTop: \"-15px\" }}>Posted on: <em className=\"heavy-blue\">{moment(listing.systemDate).fromNow()}</em></p>\n                                                <div className=\"spacing-bottom\">\n                                                    {typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, indexxxx) => {\n                                                        return <Badge key={indexxxx} color=\"info\" pill>{tag.text}</Badge>;\n                                                    }) : null}\n                                                </div>\n                                                <ReactMarkdown className=\"custom-markdown-container\" children={listing.listingDescription} remarkPlugins={[remarkGfm]} />\n                                                <div className=\"btn-redirect-listing-container-wrapper\">\n                                                    <Button onClick={() => {\n                                                        handleRedirectIndividualPage(listing);\n                                                    }} style={{ width: \"100%\" }} className=\"btn-pill btn-air-info\" outline color=\"info-2x\">Visit/View Listing</Button>\n                                                </div>\n                                            </CardBody>\n                                        </div>\n                                    </Card>\n                                )\n                            }) : <Fragment>\n                                <Card>\n                                    <CardBody>\n                                        <img src={require(\"../../../../../../assets/images/no-listings-availiable.png\")} className={\"no-listings-availiable\"} />\n                                    </CardBody>\n                                </Card>\n                            </Fragment>}\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xl=\"3 xl-100 box-col-12\">\n                        <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc1\">\n                            <Row>\n                                <RightBar employerData={employerData} />\n                            </Row>\n                        </div>\n                    </Col>\n            </Row>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {})(TimelineTabEmployerProfileHelper);"]},"metadata":{},"sourceType":"module"}