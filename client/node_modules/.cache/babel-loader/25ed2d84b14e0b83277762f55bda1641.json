{"ast":null,"code":"import _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js\";\n\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart';\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport messagingHelpers from \"./helpers/displayMessages/displayMessages.js\";\nimport _ from \"lodash\";\nimport typingIndicator from \"../../../../../assets/gifs/typing-white.gif\";\nvar RenderMessagListStreaming = messagingHelpers.RenderMessagListStreaming;\n\nvar renderProfilePictureOrVideo = function renderProfilePictureOrVideo(arr) {\n  // last image will be rendered\n  var reversed = arr.reverse();\n\n  for (var index = 0; index < reversed.length; index++) {\n    var item = reversed[index];\n\n    if (item.type.includes(\"image\")) {\n      return /*#__PURE__*/React.createElement(Media, {\n        src: \"\".concat(process.env.REACT_APP_ASSET_LINK, \"/\").concat(item.link),\n        className: \"rounded-circle\",\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  ;\n};\n\nvar RenderLiveStreamPlayer = React.memo(function (_ref) {\n  var videoUrl = _ref.videoUrl;\n  console.log(\"videoUrl\", videoUrl);\n  useEffect(function () {\n    return false;\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: \"100%\"\n    },\n    className: \"ribbon-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"ribbon-wrapped-streaming-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ribbon ribbon-clip ribbon-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"LIVE FEED!\"), videoUrl !== null ? /*#__PURE__*/React.createElement(ReactHlsPlayer, {\n    className: \"custom-streaming-player\",\n    src: videoUrl,\n    autoPlay: true,\n    controls: true,\n    width: \"100%\",\n    height: \"95%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#d4d4d4\",\n    highlightColor: \"#8f8f8f\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    containerClassName: \"stretch-bars\",\n    count: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }))))));\n});\n\nvar ViewIndividualLiveStreamHelper = function ViewIndividualLiveStreamHelper(_ref2) {\n  var _selectedUser, _React$createElement;\n\n  var location = _ref2.location,\n      information = _ref2.information,\n      SBData = _ref2.SBData;\n  // create history obj for redirects\n  var history = useHistory();\n\n  var _useState = useState({\n    nav1: null,\n    nav2: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userCount = _useState4[0],\n      setUserCount = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      streamData = _useState6[0],\n      setStreamData = _useState6[1]; // eslint-disable-next-line\n\n\n  var generated = uuid(); // chat begin\n\n  var allMembers = [];\n  var chats = [];\n  var selectedUser = (_selectedUser = {\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    online: false,\n    id: generated,\n    name: \"Jeremy Blong\"\n  }, _defineProperty(_selectedUser, \"image\", require(\"../../../../../assets/images/placeholder.png\")), _defineProperty(_selectedUser, \"lastSeenDate\", moment().format(\"MM/DD/YYYY hh:mm:ss a\")), _selectedUser);\n  var currentUser = {\n    id: generated\n  };\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageInput = _useState8[0],\n      setMessageInput = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showEmojiPicker = _useState10[0],\n      setShowEmojiPicker = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      menuToggle = _useState12[0],\n      setMenuToggle = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      videoUrl = _useState14[0],\n      setVideoUrlState = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userData = _useState16[0],\n      setUserData = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      channel = _useState18[0],\n      setChannelData = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      userList = _useState20[0],\n      setUserListState = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      messages = _useState22[0],\n      setMessagesState = _useState22[1]; // chat end\n\n\n  var slider1 = useRef();\n  var slider2 = useRef();\n  useEffect(function () {\n    return function () {\n      console.log(\"Unmounted....\");\n      var CHANNEL_URL = location.state.stream.channelUrl;\n      SBData.OpenChannel.getChannel(CHANNEL_URL, function (openChannel, error) {\n        if (error) {\n          // Handle error.\n          console.log(\"error getting channel to LEAVE group...:\", error);\n        } else {\n          openChannel.exit(function (response, error) {\n            if (error) {\n              // Handle error.\n              console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n            } else {\n              console.log(\"EXIT channel SUCCESS!\", response);\n            }\n          });\n        }\n      });\n    };\n  }, []);\n  useEffect(function () {\n    if (_.has(location.state, \"stream\") && typeof location.state.stream !== \"undefined\") {\n      setVideoUrlState(\"https://stream.mux.com/\".concat(location.state.stream.playback_id, \".m3u8\"));\n      setStreamData(location.state.stream);\n      var configuration = {\n        params: {\n          uniqueId: information.uniqueId\n        }\n      };\n      axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/core/anonymous/user/data\"), configuration).then(function (res) {\n        if (res.data.message === \"Successfully gathered core user information!\") {\n          console.log(res.data);\n          var user = res.data.user;\n          var CHANNEL_URL = location.state.stream.channelUrl;\n          SBData.OpenChannel.getChannel(CHANNEL_URL, function (openChannel, error) {\n            if (error) {\n              // Handle error.\n              console.log(\"error GETTING channel...:\", error);\n            }\n\n            var listQuery = openChannel.createPreviousMessageListQuery();\n            listQuery.limit = 100;\n            listQuery.reverse = true;\n            listQuery.customType = \"public\"; // Retrieving previous messages.\n\n            listQuery.load(function (messageList, error) {\n              if (error) {\n                // Handle error.\n                console.log(\"error gathering old messages...:\", error);\n              } else {\n                setMessagesState(messageList);\n              }\n            }); // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n\n            openChannel.enter(function (response, error) {\n              if (error) {\n                // Handle error.\n                console.log(\"error entering channel...:\", error);\n              } else {\n                console.log(\"successfully entered channel...\", response);\n                setChannelData(openChannel);\n                setUserData(user);\n              }\n            });\n          });\n        } else {\n          console.log(\"Err\", res.data);\n          NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n        }\n      }).catch(function (err) {\n        console.log(err);\n        NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n      });\n      setState({\n        nav1: slider1.current,\n        nav2: slider2.current\n      });\n    } else {\n      history.push(\"/view/all/live/streams/general\");\n    }\n  }, []);\n\n  var toggleEmojiPicker = function toggleEmojiPicker() {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  var addEmoji = function addEmoji(emoji) {\n    var text = \"\".concat(messageInput).concat(emoji.native);\n    setShowEmojiPicker(false);\n    setMessageInput(text);\n  };\n\n  var handleMessageChange = function handleMessageChange(message) {\n    setMessageInput(message);\n  };\n\n  var renderSendbirdLiveCommands = function renderSendbirdLiveCommands() {\n    var channelHandler = new SBData.ChannelHandler();\n\n    channelHandler.onUserEntered = function (openChannel, user) {\n      console.log(\"onUserEntered entered\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [user]);\n      });\n    };\n\n    channelHandler.onUserExited = function (openChannel, user) {\n      console.log(\"onUserExited exited\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(function (prevState) {\n        return prevState.filter(function (item, idx) {\n          if (item.userId !== user.userId) {\n            return true;\n          }\n        });\n      });\n    };\n\n    channelHandler.onMessageReceived = function (channelRecieved, message) {\n      console.log(\"message recieved~! : \", channelRecieved, message);\n\n      if (channel !== null && channelRecieved.url === channel.url) {\n        setMessagesState(function (prevState) {\n          return [message].concat(_toConsumableArray(prevState));\n        });\n      }\n    };\n\n    if (_.has(location.state, \"stream\")) {\n      var CHANNEL_URL = location.state.stream.channelUrl;\n      SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n    }\n  };\n\n  var handleMessagePress = function handleMessagePress(e) {\n    if (e.key === \"Enter\" || e === \"send\") {}\n  };\n\n  var chatMenuToggle = function chatMenuToggle() {\n    setMenuToggle(!menuToggle);\n  };\n\n  var handleOpenMessageSend = function handleOpenMessageSend() {\n    var params = new SBData.UserMessageParams();\n    params.message = messageInput;\n    params.translationTargetLanguages = ['en']; // French and German\n\n    params.pushNotificationDeliveryOption = 'default'; // Either 'default' or 'suppress'\n\n    channel.sendUserMessage(params, function (userMessage, error) {\n      if (error) {\n        // Handle error.\n        console.log(\"error sending message...:\", error);\n      } else {\n        var messageId = userMessage.messageId;\n        console.log(\"successfully sent msg!\", messageId, userMessage);\n        setMessagesState(function (prevState) {\n          return [userMessage].concat(_toConsumableArray(prevState));\n        });\n        setMessageInput(\"\");\n      }\n    });\n  };\n\n  console.log(\"userData\", userData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Live Streaming\",\n    title: \"Individual Live Stream (Currently LIVE)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, renderSendbirdLiveCommands(), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"7\",\n    xl: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RenderLiveStreamPlayer, {\n    videoUrl: videoUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"5\",\n    xl: \"5 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"streaming-chat-card-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, userData !== null ? /*#__PURE__*/React.createElement(CardBody, {\n    className: \"streaming-chat-card-body p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"chat-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"pr-0 chat-right-aside\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header clearfix\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }\n  }, renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos : /*#__PURE__*/React.createElement(Media, {\n    src: \"../../../../../assets/images/placeholder.png\",\n    className: \"rounded-circle\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 187\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 53\n    }\n  }, \"Streamed by \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 69\n    }\n  }, \"\".concat(userData.firstName, \" \").concat(userData.lastName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status digits\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 53\n    }\n  }, true ? 'online' : selectedUser.lastSeenDate, \" w/\", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 105\n    }\n  }, userCount), \" Current Viewer's\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline float-left float-sm-right chat-menu-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-clip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-headphone-alt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-video-camera\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item toogle-bar\",\n    onClick: function onClick() {\n      return chatMenuToggle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 130\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 145\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history chat-msg-box custom-scrollbar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(RenderMessagListStreaming, (_React$createElement = {\n    userData: information,\n    messageList: messages,\n    channel: channel\n  }, _defineProperty(_React$createElement, \"userData\", userData), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 49\n  }), _React$createElement))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message clearfix\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 49\n    }\n  }, showEmojiPicker ? /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 57\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    xl: \"12\",\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smiley-box bg-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker\",\n    onClick: function onClick() {\n      return toggleEmojiPicker();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: require('../../../../../assets/images/smiley.png'),\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control input-txt-bx\",\n    placeholder: \"Type a message......\",\n    value: messageInput,\n    onKeyPress: function onKeyPress(e) {\n      handleMessagePress(e);\n    },\n    onChange: function onChange(e) {\n      return handleMessageChange(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleOpenMessageSend();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 61\n    }\n  }, Send)))))))))) : null)))), /*#__PURE__*/React.createElement(BottomContainerHelper, {\n    channel: channel,\n    userData: userData,\n    streamData: streamData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    information: state.auth.data,\n    SBData: state.sendbirdInitData.sendbirdInitData\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewIndividualLiveStreamHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","Button","Media","CardBody","Form","FormGroup","Input","InputGroup","InputGroupAddon","Nav","NavItem","NavLink","TabPane","TabContent","BottomContainerHelper","useHistory","withRouter","connect","start_conversion","Picker","Send","uuid","moment","ReactHlsPlayer","Skeleton","SkeletonTheme","NotificationManager","axios","messagingHelpers","_","typingIndicator","RenderMessagListStreaming","renderProfilePictureOrVideo","arr","reversed","reverse","index","length","item","type","includes","process","env","REACT_APP_ASSET_LINK","link","RenderLiveStreamPlayer","memo","videoUrl","console","log","height","ViewIndividualLiveStreamHelper","location","information","SBData","history","nav1","nav2","state","setState","userCount","setUserCount","streamData","setStreamData","generated","allMembers","chats","selectedUser","image","require","online","id","name","format","currentUser","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","menuToggle","setMenuToggle","setVideoUrlState","userData","setUserData","channel","setChannelData","userList","setUserListState","messages","setMessagesState","slider1","slider2","CHANNEL_URL","stream","channelUrl","OpenChannel","getChannel","openChannel","error","exit","response","has","playback_id","configuration","params","uniqueId","get","REACT_APP_BASE_URL","then","res","data","message","user","listQuery","createPreviousMessageListQuery","limit","customType","load","messageList","enter","catch","err","current","push","toggleEmojiPicker","addEmoji","emoji","text","native","handleMessageChange","renderSendbirdLiveCommands","channelHandler","ChannelHandler","onUserEntered","participantCount","prevState","onUserExited","filter","idx","userId","onMessageReceived","channelRecieved","url","addChannelHandler","handleMessagePress","e","key","chatMenuToggle","handleOpenMessageSend","UserMessageParams","translationTargetLanguages","pushNotificationDeliveryOption","sendUserMessage","userMessage","messageId","profilePicsVideos","textDecorationLine","firstName","lastName","lastSeenDate","color","target","value","mapStateToProps","auth","sendbirdInitData"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart'\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport messagingHelpers from \"./helpers/displayMessages/displayMessages.js\";\nimport _ from \"lodash\";\nimport typingIndicator from \"../../../../../assets/gifs/typing-white.gif\";\n\n\nconst { RenderMessagListStreaming } = messagingHelpers;\n\nconst renderProfilePictureOrVideo = (arr) => {\n    // last image will be rendered\n    const reversed = arr.reverse();\n\n    for (let index = 0; index < reversed.length; index++) {\n        const item = reversed[index];\n        if (item.type.includes(\"image\")) {\n            return <Media src={`${process.env.REACT_APP_ASSET_LINK}/${item.link}`} className=\"rounded-circle\" alt=\"\" />;\n        }\n    };\n}\nconst RenderLiveStreamPlayer = React.memo(({ videoUrl }) => {\n    console.log(\"videoUrl\", videoUrl);\n    useEffect(() => {\n      return false;\n    }, [])\n    return (\n        <Fragment>\n            <Card style={{ height: \"100%\" }} className=\"ribbon-wrapper\">\n                <CardBody className={\"ribbon-wrapped-streaming-card\"}>\n                    <div className=\"ribbon ribbon-clip ribbon-info\">LIVE FEED!</div>\n                    {videoUrl !== null ? <ReactHlsPlayer \n                        className={\"custom-streaming-player\"}\n                        src={videoUrl}\n                        autoPlay={true}\n                        controls={true}\n                        width=\"100%\"\n                        height=\"95%\"\n                    /> : <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"stretch-bars\"} count={30} />\n                        </p>\n                    </SkeletonTheme>}\n                </CardBody>\n            </Card>\n        </Fragment>\n    );\n});\n\nconst  ViewIndividualLiveStreamHelper = ({ location, information, SBData })  => {\n    // create history obj for redirects\n    const history = useHistory();\n    const [ state, setState ] = useState({ nav1: null, nav2: null });\n    const [ userCount, setUserCount ] = useState(0);\n    const [ streamData, setStreamData ] = useState(null);\n    // eslint-disable-next-line\n    const generated = uuid();\n    // chat begin\n    const allMembers = [];\n    const chats = [];\n    const selectedUser = {\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        online: false,\n        id: generated,\n        name: \"Jeremy Blong\",\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n    };\n    const currentUser = {\n        id: generated\n    };\n    const [ messageInput, setMessageInput ] = useState('');\n    const [ showEmojiPicker, setShowEmojiPicker ] = useState(false)\n    const [ menuToggle, setMenuToggle ] = useState(false);\n    const [ videoUrl, setVideoUrlState ] = useState(null);\n    const [ userData, setUserData ] = useState(null);\n    const [ channel, setChannelData ] = useState(null);\n    const [ userList, setUserListState ] = useState([]);\n    const [ messages, setMessagesState ] = useState([]);\n    // chat end\n    const slider1 = useRef();\n    const slider2 = useRef();\n\n    useEffect(() => () => {\n        console.log(\"Unmounted....\");\n\n        const CHANNEL_URL = location.state.stream.channelUrl;\n\n        SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"error getting channel to LEAVE group...:\", error);\n            } else {\n                openChannel.exit((response, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n                    } else {\n                        console.log(\"EXIT channel SUCCESS!\", response);\n                    }\n                });\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n\n        if (_.has(location.state, \"stream\") && typeof location.state.stream !== \"undefined\") {\n            setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n            setStreamData(location.state.stream);\n\n            const configuration = {\n                params: {\n                    uniqueId: information.uniqueId\n                }\n            }\n\n            axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then((res) => {\n                if (res.data.message === \"Successfully gathered core user information!\") {\n                    console.log(res.data);\n\n                    const { user } = res.data;\n\n                    const CHANNEL_URL = location.state.stream.channelUrl;\n\n                    SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n                        if (error) {\n                            // Handle error.\n                            console.log(\"error GETTING channel...:\", error);\n                        }\n\n                        const listQuery = openChannel.createPreviousMessageListQuery();\n                        listQuery.limit = 100;\n                        listQuery.reverse = true;\n                        listQuery.customType = \"public\";\n\n                        // Retrieving previous messages.\n                        listQuery.load((messageList, error) => {\n                            if (error) {\n                                // Handle error.\n                                console.log(\"error gathering old messages...:\", error);\n                            } else {\n                                setMessagesState(messageList);\n                            }\n                        });\n                    \n                        // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n                        openChannel.enter((response, error) => {\n                            if (error) {\n                                // Handle error.\n                                console.log(\"error entering channel...:\", error);\n                            } else {\n                                console.log(\"successfully entered channel...\", response);\n\n                                setChannelData(openChannel);\n\n                                setUserData(user);\n                            }\n                        });\n                    });\n                } else {\n                    console.log(\"Err\", res.data);\n\n                    NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n                }\n            }).catch((err) => {\n                console.log(err);\n\n                NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n            })\n\n            setState({\n                nav1: slider1.current,\n                nav2: slider2.current\n            });\n        } else {\n            history.push(\"/view/all/live/streams/general\")\n        }\n      } , []);\n\n    const toggleEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n  \n    const addEmoji = (emoji) =>  {\n        const text = `${messageInput}${emoji.native}`;\n        setShowEmojiPicker(false);\n        setMessageInput(text)\n    }\n\n    const handleMessageChange = (message) => {\n        setMessageInput(message)\n    }\n    const renderSendbirdLiveCommands = () => {\n        const channelHandler = new SBData.ChannelHandler();\n\n        channelHandler.onUserEntered = (openChannel, user) => {\n            console.log(\"onUserEntered entered\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n             // update current user list...\n            setUserListState(prevState => {\n                return [...prevState, user];\n            });\n        };\n        channelHandler.onUserExited = (openChannel, user) => {\n            console.log(\"onUserExited exited\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n            // update current user list...\n            setUserListState(prevState => {\n                return prevState.filter((item, idx) => {\n                    if (item.userId !== user.userId) {\n                        return true;\n                    }\n                })\n            });\n        };\n        channelHandler.onMessageReceived = (channelRecieved, message) => {\n            console.log(\"message recieved~! : \", channelRecieved, message);\n\n            if (channel !== null && channelRecieved.url === channel.url) {\n                setMessagesState(prevState => {\n                    return [message, ...prevState]\n                })\n            } \n        };\n        if (_.has(location.state, \"stream\")) {\n            const CHANNEL_URL = location.state.stream.channelUrl;\n\n            SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n        }\n    }\n    const handleMessagePress = (e) => {\n        if (e.key === \"Enter\" || e === \"send\") {\n\n        }\n    }\n    const chatMenuToggle = () => {\n        setMenuToggle(!menuToggle)\n    }\n    const handleOpenMessageSend = () => {\n        const params = new SBData.UserMessageParams();\n\n        params.message = messageInput;\n        params.translationTargetLanguages = ['en'];   // French and German\n        params.pushNotificationDeliveryOption = 'default';  // Either 'default' or 'suppress'\n\n        channel.sendUserMessage(params, (userMessage, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"error sending message...:\", error);\n            } else {\n                const messageId = userMessage.messageId;\n\n                console.log(\"successfully sent msg!\", messageId, userMessage);\n\n                setMessagesState(prevState => {\n                    return [userMessage, ...prevState]\n                })\n                setMessageInput(\"\");\n            }\n        });\n    }\n    console.log(\"userData\", userData);\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Live Streaming\" title=\"Individual Live Stream (Currently LIVE)\"/>\n            <Container fluid={true}>\n                {renderSendbirdLiveCommands()}\n                <Row>\n                    <Col>\n                    <Card>\n                        <Row className=\"product-page-main\">\n                            <Col sm=\"12\" md=\"12\" lg=\"7\" xl=\"7\">\n                                <RenderLiveStreamPlayer videoUrl={videoUrl} />\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"5\" xl=\"5 xl-100\">\n                                <Card className={\"streaming-chat-card-wrapper\"}>\n                                    {userData !== null ? <CardBody className={\"streaming-chat-card-body p-0\"}>\n                                        <Row className=\"chat-box\">\n                                        <Col className=\"pr-0 chat-right-aside\">\n                                            <div className=\"chat\">\n                                            <div className=\"chat-header clearfix\">\n                                                {renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos : <Media src={\"../../../../../assets/images/placeholder.png\"} className=\"rounded-circle\" alt=\"\" />)}\n                                                <div className=\"about\">\n                                                    <div className=\"name\">\n                                                        Streamed by <strong style={{ textDecorationLine: \"underline\" }}>{`${userData.firstName} ${userData.lastName}`}</strong>\n                                                    </div>\n                                                    <div className=\"status digits\" >\n                                                        {true ? 'online' : selectedUser.lastSeenDate} w/<strong style={{ color: \"blue\", textDecorationLine: \"underline\" }}>{userCount}</strong> Current Viewer's\n                                                    </div>\n                                                </div>\n                                                <ul className=\"list-inline float-left float-sm-right chat-menu-icons\">\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-search\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-clip\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-headphone-alt\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-video-camera\"></i></a></li>\n                                                    <li className=\"list-inline-item toogle-bar\" onClick={() => chatMenuToggle()}><a href={null}><i className=\"icon-menu\"></i></a></li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-history chat-msg-box custom-scrollbar\" >\n                                                <RenderMessagListStreaming userData={information} messageList={messages} channel={channel} userData={userData} />\n                                            </div>\n                                            <div className=\"chat-message clearfix\">\n                                                <Row>\n                                                <div className=\"mb-2\">\n                                                {showEmojiPicker ? (\n                                                        <Picker set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                                                ) : null}\n                                                </div>\n                                                <Col xl=\"12\" className=\"d-flex\">\n                                                    <div className=\"smiley-box bg-primary\">\n                                                    \n                                                        <div className=\"picker\" onClick={() => toggleEmojiPicker()}>\n                                                        <Media src={require('../../../../../assets/images/smiley.png')}  alt=\"\"/>\n                                                        </div>\n\n                                                    </div>\n                                                    <InputGroup className=\"text-box\">\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control input-txt-bx\"\n                                                            placeholder=\"Type a message......\"\n                                                            value={messageInput}\n                                                            onKeyPress={(e) => {\n                                                                handleMessagePress(e)\n                                                            }}\n                                                            onChange={(e) => handleMessageChange(e.target.value)}\n                                                        />\n                                                        <InputGroupAddon addonType=\"append\">\n                                                            <Button color=\"primary\" onClick={() => handleOpenMessageSend()} >{Send}</Button>\n                                                        </InputGroupAddon>\n                                                    </InputGroup>\n                                                </Col>\n                                                </Row>\n                                            </div>\n                                            </div>\n                                            {/* {typingStatus === true ? <div className={\"typing-indicator-wrapper\"}>\n                                                <img src={typingIndicator} className={\"typing-animation\"} />\n                                            </div> : null} */}\n                                        </Col>\n                                    </Row>\n                                </CardBody> : null}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n                <BottomContainerHelper channel={channel} userData={userData} streamData={streamData} /></Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        information: state.auth.data,\n        SBData: state.sendbirdInitData.sendbirdInitData\n    }\n}\nexport default connect(mapStateToProps, {  })(withRouter(ViewIndividualLiveStreamHelper));\n"]},"metadata":{},"sourceType":"module"}