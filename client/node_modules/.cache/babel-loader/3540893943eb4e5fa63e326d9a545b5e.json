{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{CardBody,CardHeader,Container,Row,Col,Card}from'reactstrap';import\"./styles.css\";import Breadcrumb from'../../../../../../layout/breadcrumb';import axios from'axios';import{connect}from\"react-redux\";import{NotificationManager}from'react-notifications';import{useHistory}from'react-router-dom';const SuccessfulOnboardCompletionHelper=_ref=>{let{userData}=_ref;const history=useHistory();useEffect(()=>{const configuration={userID:userData.uniqueId};// run checks for authenticated/onboarded stripe account..\naxios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/check/account/mark/verified/applicable/hacker\"),configuration).then(res=>{if(res.data.message===\"Successfully marked onboarding as complete!\"){console.log(\"Scucess! :\",res.data);NotificationManager.success(\"You've ALREADY completed the payment onboarding process/flow & you may now make the appropriate changes or charges to various payment methods/accounts. You may still need to verify other information however the main important data has already been collected!\",\"Onboarding process/flow already completed!\",4750);}else if(res.data.message===\"User has NOT verified or onboarded their account yet successfully..\"){NotificationManager.warning(\"You have NOT verified your account yet & are NOT permitted to actively hire any hacker's or make any payment's until the verification process is completed. To redirect to verify your account - click this notification!\",\"Click notification to redirect to onboarding flow/process!\",5250,()=>{// redirec to appropriate page..\nhistory.push(\"/hacker/account/signup/flow/payment/related\");});}else{console.log(\"res.data err:\",res.data);NotificationManager.error(\"An unknown errror has occurred while attempting to detect whether or not your account has been properly authenticated/onboarded via stripe's payment system. Please try verifiying your account via the onboarding process/flow by clicking this notification!\",\"Click notification to redirect to onboarding flow/process!\",5250,()=>{// redirec to appropriate page..\nhistory.push(\"/hacker/account/signup/flow/payment/related\");});}}).catch(err=>{console.log(err);NotificationManager.error(\"An unknown errror has occurred while attempting to detect whether or not your account has been properly authenticated/onboarded via stripe's payment system. Please try verifiying your account via the onboarding process/flow by clicking this notification!\",\"Click notification to redirect to onboarding flow/process!\",5250,()=>{// redirec to appropriate page..\nhistory.push(\"/hacker/account/signup/flow/payment/related\");});});},[]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Successful Onboarding Flow/Process Completion\",title:\"You've Successfully Completed The Required Payment Onboarding Process!\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Thank you for taking the time to \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\"}},\"complete the onboarding process/flow!\")),/*#__PURE__*/React.createElement(\"p\",{className:\"subheader-preview-onboarding-p\"},\"Your account now has \",/*#__PURE__*/React.createElement(\"strong\",null,\"payment privileges\"),\" & you may now \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\"}},\"HIRE & PAY\"),\" any desired hacker's for jobs/gig's they may complete that you've posted. Employer account's are NOT allowed to \",/*#__PURE__*/React.createElement(\"strong\",null,\"hire\"),\" any hacker's although employer account may \",/*#__PURE__*/React.createElement(\"strong\",null,\"post listings\"),\" without onboarding completion however they will not be able to start the actual process of hiring a hacker(s).\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../../assets/images/onboarding-complete.png\"),className:\"very-tall-completion-onboarding-image\"})))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(SuccessfulOnboardCompletionHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/employers/onboardingFlow/successfulOnboardConfirmation/success.js"],"names":["React","Fragment","useEffect","CardBody","CardHeader","Container","Row","Col","Card","Breadcrumb","axios","connect","NotificationManager","useHistory","SuccessfulOnboardCompletionHelper","userData","history","configuration","userID","uniqueId","post","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","success","warning","push","error","catch","err","textDecorationLine","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { CardBody, CardHeader, Container, Row, Col, Card } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { useHistory } from 'react-router-dom';\n\n\nconst SuccessfulOnboardCompletionHelper = ({ userData }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const configuration = {\n            userID: userData.uniqueId\n        };\n\n        // run checks for authenticated/onboarded stripe account..\n        axios.post(`${process.env.REACT_APP_BASE_URL}/check/account/mark/verified/applicable/hacker`, configuration).then((res) => {\n            if (res.data.message === \"Successfully marked onboarding as complete!\") {\n                console.log(\"Scucess! :\", res.data);\n\n                NotificationManager.success(`You've ALREADY completed the payment onboarding process/flow & you may now make the appropriate changes or charges to various payment methods/accounts. You may still need to verify other information however the main important data has already been collected!`, \"Onboarding process/flow already completed!\", 4750);\n            } else if (res.data.message === \"User has NOT verified or onboarded their account yet successfully..\") {\n                NotificationManager.warning(`You have NOT verified your account yet & are NOT permitted to actively hire any hacker's or make any payment's until the verification process is completed. To redirect to verify your account - click this notification!`, \"Click notification to redirect to onboarding flow/process!\", 5250, () => {\n                    // redirec to appropriate page..\n                    history.push(\"/hacker/account/signup/flow/payment/related\");\n                });\n            } else {\n                console.log(\"res.data err:\", res.data);\n\n                NotificationManager.error(`An unknown errror has occurred while attempting to detect whether or not your account has been properly authenticated/onboarded via stripe's payment system. Please try verifiying your account via the onboarding process/flow by clicking this notification!`, \"Click notification to redirect to onboarding flow/process!\", 5250, () => {\n                    // redirec to appropriate page..\n                    history.push(\"/hacker/account/signup/flow/payment/related\");\n                });\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(`An unknown errror has occurred while attempting to detect whether or not your account has been properly authenticated/onboarded via stripe's payment system. Please try verifiying your account via the onboarding process/flow by clicking this notification!`, \"Click notification to redirect to onboarding flow/process!\", 5250, () => {\n                // redirec to appropriate page..\n                history.push(\"/hacker/account/signup/flow/payment/related\");\n            });\n        })\n    }, []);\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Successful Onboarding Flow/Process Completion\" title=\"You've Successfully Completed The Required Payment Onboarding Process!\"/>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardHeader className='b-l-info b-r-info'>\n                                <h1>Thank you for taking the time to <strong style={{ textDecorationLine: \"underline\" }}>complete the onboarding process/flow!</strong></h1>\n                                <p className='subheader-preview-onboarding-p'>Your account now has <strong>payment privileges</strong> & you may now <strong style={{ textDecorationLine: \"underline\" }}>HIRE & PAY</strong> any desired hacker's for jobs/gig's they may complete that you've posted. Employer account's are NOT allowed to <strong>hire</strong> any hacker's although employer account may <strong>post listings</strong> without onboarding completion however they will not be able to start the actual process of hiring a hacker(s).</p>\n                            </CardHeader>\n                            <CardBody>\n                                <img src={require(\"../../../../../../assets/images/onboarding-complete.png\")} className={\"very-tall-completion-onboarding-image\"} />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(SuccessfulOnboardCompletionHelper);"]},"metadata":{},"sourceType":"module"}