{"ast":null,"code":"import React,{Fragment,useState,useEffect}from'react';import Sheet from'react-modal-sheet';import{Container,Row,Col,Card,CardBody,Button,CardHeader,CardFooter,Form,Label,Input,InputGroup,InputGroupAddon,InputGroupText}from'reactstrap';import\"./styles.css\";import{NotificationManager}from'react-notifications';import Breadcrumb from'../../../../../../../../layout/breadcrumb';import{Calendar}from'react-date-range';import Select from\"react-select\";import moment from'moment';import axios from\"axios\";const currentDate=new Date();const timeSlotsOptions=[{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),0,0,0),label:'12:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),1,0,0),label:'1:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),2,0,0),label:'2:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),3,0,0),label:'3:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),4,0,0),label:'4:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),5,0,0),label:'5:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),6,0,0),label:'6:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),7,0,0),label:'7:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),8,0,0),label:'8:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),9,0,0),label:'9:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),10,0,0),label:'10:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),11,0,0),label:'11:00AM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),12,0,0),label:'12:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),13,0,0),label:'1:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),14,0,0),label:'2:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),15,0,0),label:'3:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),16,0,0),label:'4:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),17,0,0),label:'5:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),18,0,0),label:'6:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),19,0,0),label:'7:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),20,0,0),label:'8:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),21,0,0),label:'9:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),22,0,0),label:'10:00PM'},{value:new Date(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate(),23,0,0),label:'11:00PM'}];const VideoInvitePaneInviteEmployerHelper=_ref=>{let{otherUserID,employerData,userData,videoInterviewPane,setVideoInterviewStartPane}=_ref;const[selectedDate,setSelectedDate]=useState(new Date());const[selectedOption,setSelectedOption]=useState(null);const handleSelect=date=>{console.log(date);if(new Date(date)>new Date()){setSelectedDate(date);}else{NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\",\"Date is BEFORE the current date! Reselect..\",4750);}};const handleTimeChange=selected=>{setSelectedOption(selected);};console.log(\"selectedDate\",selectedDate);const calculateShow=()=>{if(selectedDate!==null&&selectedOption!==null){return false;}else{return true;}};const handleTimeDateSubmission=()=>{console.log(\"handleTimeDateSubmission clicked/ran..\");const configuration={id:userData.uniqueId,accountType:userData.accountType,otherUserID,otherUserName:\"\".concat(employerData.firstName,\" \").concat(employerData.lastName),date:selectedDate,time:selectedOption,signedinFullName:\"\".concat(userData.firstName,\" \").concat(userData.lastName),otherUserAccountType:\"employers\"};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/send/invite/video/chat/notification\"),configuration).then(res=>{if(res.data.message===\"Sent invite successfully!\"){console.log(res.data);setVideoInterviewStartPane(false);NotificationManager.success(\"Successfully sent invite to the desired user inviting them to this video-chat at the scheduled date and/or time!\",\"Successfully sent invite!\",4750);}else{console.log(\"Err\",res.data);setVideoInterviewStartPane(false);NotificationManager.error(\"An unknown error has occurred while attempting to process your request, please try again and contact support if the problem persists!\",\"Unknown error has occurred!\",4750);}}).catch(err=>{console.log(err);setVideoInterviewStartPane(false);NotificationManager.error(\"An unknown error has occurred while attempting to process your request, please try again and contact support if the problem persists!\",\"Unknown error has occurred!\",4750);});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Sheet,{isOpen:videoInterviewPane,onClose:()=>setVideoInterviewStartPane(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{className:\"marginized-header\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-danger\",color:\"danger-2x\",style:{width:\"100%\"},outline:true,onClick:()=>setVideoInterviewStartPane(false)},\"Cancel/Close Pane\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"inner-container-invite\"},/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Send An Invite & Start A Video Interview!\",title:\"Initialize A Video Interview With This User!\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Col,{lg:\"12 box-col-12\",xl:\"12 xl-100\",md:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-shadow-messaging-initialize\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Calendar,{date:selectedDate,onChange:handleSelect,shownDate:new Date(),className:\"custom-date-range-picker\",showMonthAndYearPickers:false,staticRanges:[],direction:\"horizontal\",showMonthArrow:true,months:2,showDateDisplay:false,inputRanges:[],rangeColors:[\"#f73164\",\"#a927f9\",\"#f73164\",\"#a927f9\",\"#f73164\",\"#a927f9\"]})),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"label-time-selector\"},\"Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..\"),/*#__PURE__*/React.createElement(Select,{value:selectedOption,onChange:handleTimeChange,options:timeSlotsOptions}),/*#__PURE__*/React.createElement(\"hr\",null),selectedOption!==null?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"selectedtext\"},\"You've selected the timeslot of \",selectedOption.label,\" on the date of \",selectedDate!==null?moment(selectedDate).format(\"MM/DD/YYYY\"):\"-------\",\"!\"),/*#__PURE__*/React.createElement(\"hr\",null)):null,/*#__PURE__*/React.createElement(Button,{className:\"btn-square-success\",disabled:calculateShow(),onClick:handleTimeDateSubmission,style:{width:\"100%\"},color:\"success-2x\",outline:true},\"Submit & Continue Sending Invite!\")))),/*#__PURE__*/React.createElement(CardFooter,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"This is going to invite \",\"\",\" to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..\")))))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)));};export default VideoInvitePaneInviteEmployerHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/panes/videoInvitePane/videoInvite.js"],"names":["React","Fragment","useState","useEffect","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","CardFooter","Form","Label","Input","InputGroup","InputGroupAddon","InputGroupText","NotificationManager","Breadcrumb","Calendar","Select","moment","axios","currentDate","Date","timeSlotsOptions","value","getFullYear","getMonth","getDate","label","VideoInvitePaneInviteEmployerHelper","otherUserID","employerData","userData","videoInterviewPane","setVideoInterviewStartPane","selectedDate","setSelectedDate","selectedOption","setSelectedOption","handleSelect","date","console","log","warning","handleTimeChange","selected","calculateShow","handleTimeDateSubmission","configuration","id","uniqueId","accountType","otherUserName","firstName","lastName","time","signedinFullName","otherUserAccountType","post","process","env","REACT_APP_BASE_URL","then","res","data","message","success","error","catch","err","width","format"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport axios from \"axios\";\n\n\nconst currentDate = new Date();\n\nconst timeSlotsOptions = [\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0), label: '12:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 1, 0, 0), label: '1:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 2, 0, 0), label: '2:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 3, 0, 0), label: '3:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 4, 0, 0), label: '4:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 5, 0, 0), label: '5:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 6, 0, 0), label: '6:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 7, 0, 0), label: '7:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 8, 0, 0), label: '8:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 9, 0, 0), label: '9:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 10, 0, 0), label: '10:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 11, 0, 0), label: '11:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 12, 0, 0), label: '12:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 13, 0, 0), label: '1:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 14, 0, 0), label: '2:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 15, 0, 0), label: '3:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 16, 0, 0), label: '4:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 17, 0, 0), label: '5:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 18, 0, 0), label: '6:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 19, 0, 0), label: '7:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 20, 0, 0), label: '8:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 21, 0, 0), label: '9:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 22, 0, 0), label: '10:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 23, 0, 0), label: '11:00PM' }\n]\n\nconst VideoInvitePaneInviteEmployerHelper = ({ otherUserID, employerData, userData, videoInterviewPane, setVideoInterviewStartPane }) => {\n\n    const [ selectedDate, setSelectedDate ] = useState(new Date());\n    const [ selectedOption, setSelectedOption ] = useState(null);\n\n    const handleSelect = (date) => {\n        console.log(date);\n\n        if (new Date(date) > new Date()) {\n            setSelectedDate(date);\n        } else {\n            NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\", \"Date is BEFORE the current date! Reselect..\", 4750);\n        }\n    }\n\n    const handleTimeChange = (selected) => {\n        setSelectedOption(selected);\n    }\n\n    console.log(\"selectedDate\", selectedDate);\n\n    const calculateShow = () => {\n        if (selectedDate !== null && selectedOption !== null) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const handleTimeDateSubmission = () => {\n        console.log(\"handleTimeDateSubmission clicked/ran..\");\n\n        const configuration = {\n            id: userData.uniqueId,\n            accountType: userData.accountType,\n            otherUserID,\n            otherUserName: `${employerData.firstName} ${employerData.lastName}`,\n            date: selectedDate,\n            time: selectedOption,\n            signedinFullName: `${userData.firstName} ${userData.lastName}`,\n            otherUserAccountType: \"employers\"\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/send/invite/video/chat/notification`, configuration).then((res) => {\n            if (res.data.message === \"Sent invite successfully!\") {\n                console.log(res.data);\n\n                setVideoInterviewStartPane(false)\n\n                NotificationManager.success(\"Successfully sent invite to the desired user inviting them to this video-chat at the scheduled date and/or time!\", \"Successfully sent invite!\", 4750);\n\n            } else {\n                console.log(\"Err\", res.data);\n\n                setVideoInterviewStartPane(false)\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to process your request, please try again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            setVideoInterviewStartPane(false)\n\n            NotificationManager.error(\"An unknown error has occurred while attempting to process your request, please try again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n        })\n    }\n\n    return (\n        <Fragment>\n            <Sheet isOpen={videoInterviewPane} onClose={() => setVideoInterviewStartPane(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div className='marginized-header'>\n                            <Button className='btn-square-danger' color={\"danger-2x\"} style={{ width: \"100%\" }} outline onClick={() => setVideoInterviewStartPane(false)}>Cancel/Close Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                        <div className='inner-container-invite'>\n                            <Sheet.Content>\n                            <Breadcrumb parent=\"Send An Invite & Start A Video Interview!\" title=\"Initialize A Video Interview With This User!\" />\n                                <Container fluid={true}>\n                                    <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                        <Card className={\"card-shadow-messaging-initialize\"}>\n                                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                                <h3>Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!</h3>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Calendar\n                                                            date={selectedDate}\n                                                            onChange={handleSelect}\n                                                            shownDate={new Date()}\n                                                            className={\"custom-date-range-picker\"}\n                                                            showMonthAndYearPickers={false}\n                                                            staticRanges={[]}\n                                                            direction={\"horizontal\"}\n                                                            showMonthArrow={true}\n                                                            months={2}\n                                                            showDateDisplay={false}\n                                                            inputRanges={[]}\n                                                            rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                                        />\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Label className='label-time-selector'>Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..</Label>\n                                                        <Select\n                                                            value={selectedOption}\n                                                            onChange={handleTimeChange}\n                                                            options={timeSlotsOptions}\n                                                        />\n                                                        <hr />\n                                                        {selectedOption !== null ? <Fragment>\n                                                            <h4 className='selectedtext'>You've selected the timeslot of {selectedOption.label} on the date of {selectedDate !== null ? moment(selectedDate).format(\"MM/DD/YYYY\") : \"-------\"}!</h4>\n                                                            <hr />\n                                                        </Fragment> : null}\n                                                        <Button className='btn-square-success' disabled={calculateShow()} onClick={handleTimeDateSubmission} style={{ width: \"100%\" }} color={\"success-2x\"} outline>Submit & Continue Sending Invite!</Button>\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter className={\"b-l-primary b-r-primary\"}>\n                                                <p className='lead'>This is going to invite {\"\"} to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..</p>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Container>\n                            </Sheet.Content>\n                        </div>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\n\nexport default VideoInvitePaneInviteEmployerHelper;"]},"metadata":{},"sourceType":"module"}