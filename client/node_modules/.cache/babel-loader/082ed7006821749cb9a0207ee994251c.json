{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { Modal } from 'react-responsive-modal';\nimport { NotificationManager } from \"react-notifications\";\n\nconst renderPictureOrVideoLast = (file, index, onCloseModal, setSelectedModalIndex) => {\n  if (file !== null && _.has(file, \"link\")) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          // set current index for modal\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"img-fluid\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          // set current index for modal\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid\",\n        alt: \"post1\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }))));\n    }\n  } else {\n    // image logic - DEFAULT.\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => {\n        // set current index for modal\n        setSelectedModalIndex(index); // open modal and display\n\n        onCloseModal(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"latest-post profile-pic-video-sidebar-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      alt: \"post1\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nconst RenderGalleryModalHackerProfileHelper = _ref => {\n  let {\n    onCloseModal,\n    user,\n    isOpen,\n    modalIndexSelected,\n    setSelectedModalIndex\n  } = _ref;\n  const [picturesArr, setPicturesArr] = useState([]);\n  const [captions, setCaptions] = useState([]);\n  useEffect(async () => {\n    if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n      const captionArray = []; // pictures exist - run setup logic\n\n      const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n        console.log(\"el\", el);\n\n        if (idx + 1 === row.length) {\n          // Last one.\n          let result = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            caption: `You're viewing the ${el.name} file...`,\n            autoplay: false,\n            showControls: true,\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            link: el.link,\n            className: \"caption-thumbnail-custom-hacker-profile\"\n          };\n          let caption = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"SRLCustomCaption lightbox-custom-caption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"SRLCustomCaption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 27\n            }\n          }, \"You're viewing \", el.name)); // push appropriate caption for lightbox\n\n          captionArray.push({\n            id: idx,\n            caption\n          }); // return constructed obj for lightbox\n\n          return result;\n        } else {\n          // Not last one.\n          let resultNotLast = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            caption: `You're viewing the ${el.name} file...`,\n            autoplay: false,\n            showControls: true,\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            link: el.link,\n            className: \"caption-thumbnail-custom-hacker-profile\"\n          };\n          let caption = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"SRLCustomCaption lightbox-custom-caption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"SRLCustomCaption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 27\n            }\n          }, \"You're viewing \", el.name)); // push appropriate caption for lightbox\n\n          captionArray.push({\n            id: idx,\n            caption\n          }); // return constructed obj for lightbox\n\n          return resultNotLast;\n        }\n      }); // wait for .mapped to finish then set the local state.\n\n      if (newlyStructuredProfilePicsVids) {\n        setCaptions(captionArray);\n        setPicturesArr(newlyStructuredProfilePicsVids);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: isOpen,\n    onClose: onCloseModal,\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-spacer-hacker-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"text-center customized-row-profile-hacker-pics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, typeof picturesArr !== \"undefined\" && picturesArr.length > 0 ? picturesArr.map((file, idxxx) => renderPictureOrVideoLast(file, idxxx, onCloseModal)) : null))));\n};\n\nexport default {\n  renderPictureOrVideoLast,\n  RenderGalleryModalHackerProfileHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js"],"names":["React","Fragment","useState","useEffect","ReactDOM","ReactPlayer","_","Modal","NotificationManager","renderPictureOrVideoLast","file","index","onCloseModal","setSelectedModalIndex","has","type","includes","process","env","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","RenderGalleryModalHackerProfileHelper","user","isOpen","modalIndexSelected","picturesArr","setPicturesArr","captions","setCaptions","profilePicsVideos","length","captionArray","newlyStructuredProfilePicsVids","map","el","idx","row","console","log","result","src","caption","name","autoplay","showControls","thumbnail","className","push","id","resultNotLast","idxxx"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { Modal } from 'react-responsive-modal';\nimport { NotificationManager } from \"react-notifications\";\n\nconst renderPictureOrVideoLast = (file, index, onCloseModal, setSelectedModalIndex) => {\n    if (file !== null && _.has(file, \"link\")) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        // set current index for modal\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"img-fluid\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        // set current index for modal\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <img className=\"img-fluid\" alt=\"post1\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        }  \n    } else {\n        // image logic - DEFAULT.\n        return (\n            <Fragment>\n                <li onClick={() => {\n                    // set current index for modal\n                    setSelectedModalIndex(index);\n                    // open modal and display\n                    onCloseModal(true);\n                }}>\n                    <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                        <img className=\"img-fluid\" alt=\"post1\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} />\n                    </div>\n                </li>\n            </Fragment>\n        );\n    } \n}\nconst RenderGalleryModalHackerProfileHelper = ({ onCloseModal, user, isOpen, modalIndexSelected, setSelectedModalIndex }) => {\n\n    const [ picturesArr, setPicturesArr ] = useState([]);\n    const [ captions, setCaptions ] = useState([]);\n\n    useEffect(async () => {\n\n        if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n            const captionArray = [];\n            // pictures exist - run setup logic\n            const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n                console.log(\"el\", el);\n                if (idx + 1 === row.length) {\n                    // Last one.\n                    let result = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        caption: `You're viewing the ${el.name} file...`,\n                        autoplay: false,\n                        showControls: true,\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        link: el.link,\n                        className: \"caption-thumbnail-custom-hacker-profile\"\n                    };\n                    let caption = (\n                        <div className=\"SRLCustomCaption lightbox-custom-caption\">\n                          <span className=\"SRLCustomCaption\">You're viewing {el.name}</span>\n                        </div>\n                    );\n                    // push appropriate caption for lightbox\n                    captionArray.push({ id: idx, caption });\n                    // return constructed obj for lightbox\n                    return result;\n                } else {\n                    // Not last one.\n                    let resultNotLast = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        caption: `You're viewing the ${el.name} file...`,\n                        autoplay: false,\n                        showControls: true,\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        link: el.link,\n                        className: \"caption-thumbnail-custom-hacker-profile\"\n                    }\n                    let caption = (\n                        <div className=\"SRLCustomCaption lightbox-custom-caption\">\n                          <span className=\"SRLCustomCaption\">You're viewing {el.name}</span>\n                        </div>\n                    );\n                    // push appropriate caption for lightbox\n                    captionArray.push({ id: idx, caption });\n                    // return constructed obj for lightbox\n                    return resultNotLast;\n                }\n            });\n            // wait for .mapped to finish then set the local state.\n            if (newlyStructuredProfilePicsVids) {\n                setCaptions(captionArray);\n                setPicturesArr(newlyStructuredProfilePicsVids);\n            }\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            <Modal open={isOpen} onClose={onCloseModal} center>\n                <div className={\"gallery-spacer-hacker-profile\"}>\n                    <ul className=\"text-center customized-row-profile-hacker-pics\">\n                        {typeof picturesArr !== \"undefined\" && picturesArr.length > 0 ? picturesArr.map((file, idxxx) => renderPictureOrVideoLast(file, idxxx, onCloseModal)) : null}\n                    </ul>\n                </div>\n            </Modal>\n        </Fragment>\n    );\n}\nexport default {\n    renderPictureOrVideoLast,\n    RenderGalleryModalHackerProfileHelper\n};"]},"metadata":{},"sourceType":"module"}