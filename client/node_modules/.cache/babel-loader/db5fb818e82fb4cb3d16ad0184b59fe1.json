{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/jobManagement/hackers/alreadyApplied/viewAllAlreadyApplied.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Media, TabContent, TabPane, Nav, NavItem, NavLink, CardBody, CardHeader, ButtonGroup, Button } from 'reactstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst ViewAlreadyAppliedJobsHackerHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [applications, setApplicationData] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"1\");\n  useEffect(() => {\n    const configuration = {\n      params: {\n        uniqueId: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/active/applied/jobs/hacker/account`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered active/hired applications!\") {\n        console.log(\"Successfully gathered active/hired applications!\", res.data);\n        const {\n          applications\n        } = res.data;\n        setApplicationData(applications);\n      } else {\n        console.log(\"ERROR gathering active/hired applications...:\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"CRITICAL ERROR gathering active/hired applications...:\", err);\n    });\n  }, []);\n  console.log(\"hired applications state --- :\", applications);\n\n  const renderConditionalUponLoad = () => {\n    if (typeof applications !== \"undefined\" && applications.length > 0) {\n      return applications.map((application, index) => {\n        console.log(\"APPLICATION...:\", application); // return (\n        //     <Col md=\"6\" lg=\"6\" xl=\"4\" className=\"box-col-6\" key={index}>\n        //         <Card className=\"custom-card\">\n        //         <CardHeader className=\"card-header-banner-custom\">\n        //             <Media body className=\"img-fluid banner-banner-custom\" src={bannerImage} alt=\"banner-image-display\" />\n        //         </CardHeader>\n        //         <div className=\"card-profile customized-card-profile\">\n        //             {renderProfilePicVideo(profilePicture)}\n        //         </div>\n        //         <ul className=\"card-social\">\n        //             <li><a href={null}><i className=\"fa fa-facebook\"></i></a></li>\n        //             <li><a href={null}><i className=\"fa fa-google-plus\"></i></a></li>\n        //             <li><a href={null}><i className=\"fa fa-twitter\"></i></a></li>\n        //             <li><a href={null}><i className=\"fa fa-instagram\"></i></a></li>\n        //             <li><a href={null}><i className=\"fa fa-rss\"></i></a></li>\n        //         </ul>\n        //         <div className=\"text-center profile-details\">\n        //             <h4>{`${hacker.firstName} ${hacker.lastName}`}</h4>\n        //             <h6>{hacker.fullyVerified === true ? \"FULLY-VERIFIED!\" : \"Un-Verified.\"}</h6>\n        //             <hr />\n        //             <Button style={{ width: \"90%\" }} className=\"btn-pill btn-air-info\" outline color=\"info-2x\">View/Visit Company Profile</Button>\n        //             <hr />\n        //         </div>\n        //         <CardFooter className=\"row\">\n        //             <Col sm=\"4 col-4\">\n        //                 <h6>Successful/Completed Jobs</h6>\n        //                 <h3 className=\"counter\">{hacker.completedJobs} Jobs/Gigs Completed</h3>\n        //             </Col>\n        //             {hacker.reviews.length > 0 ? <Col sm=\"4 col-4\">\n        //                 <h6>Review Count</h6>\n        //                 <h3><span className=\"counter\">{hacker.reviews.length} Reviews (Total)</span></h3>\n        //             </Col> : <Col sm=\"4 col-4\">\n        //                 <h6>Experience</h6>\n        //                 <h3><span className=\"counter\">{hacker.points} XP-Experience Points</span></h3>\n        //             </Col>}\n        //             <Col sm=\"4 col-4\">\n        //                 <h6>Registration</h6>\n        //                 <h3><span className=\"counter\">Registered {moment(hacker.registrationDate).fromNow()}</span></h3>\n        //             </Col>\n        //         </CardFooter>\n        //         </Card>\n        //     </Col>\n        // );\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#c9c9c9\",\n        highlightColor: \"#444\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 45,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"active-hired-container-wrapper\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12 sm-100\",\n    md: \"12 md-100\",\n    lg: \"12 lg-100\",\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Active \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 44\n    }\n  }, \"HIRED\"), \" workers/hacker's that're still pending and actively employed.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"tabbed-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"nav-pills nav-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTab === '1' ? 'active' : '',\n    onClick: () => setActiveTab('1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-ui-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }), \" Employer Listing(s) Hired\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, renderConditionalUponLoad()))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewAlreadyAppliedJobsHackerHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/jobManagement/hackers/alreadyApplied/viewAllAlreadyApplied.js"],"names":["React","Fragment","useEffect","useState","axios","connect","withRouter","Container","Row","Col","Card","Media","TabContent","TabPane","Nav","NavItem","NavLink","CardBody","CardHeader","ButtonGroup","Button","Skeleton","SkeletonTheme","ViewAlreadyAppliedJobsHackerHelper","userData","applications","setApplicationData","activeTab","setActiveTab","configuration","params","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","catch","err","renderConditionalUponLoad","length","map","application","index","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Media, TabContent, TabPane, Nav, NavItem, NavLink, CardBody, CardHeader, ButtonGroup, Button } from 'reactstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst ViewAlreadyAppliedJobsHackerHelper = ({ userData }) => {\n\n    const [ applications, setApplicationData ] = useState([]);\n    const [ activeTab, setActiveTab ] = useState(\"1\");\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                uniqueId: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/active/applied/jobs/hacker/account`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered active/hired applications!\") {\n                console.log(\"Successfully gathered active/hired applications!\", res.data);\n                \n                const { applications } = res.data;\n\n                setApplicationData(applications);\n            } else {\n                console.log(\"ERROR gathering active/hired applications...:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"CRITICAL ERROR gathering active/hired applications...:\", err);\n        })\n    }, []);\n\n    console.log(\"hired applications state --- :\", applications);\n\n    const renderConditionalUponLoad = () => {\n        if (typeof applications !== \"undefined\" && applications.length > 0) {\n            return applications.map((application, index) => {\n                console.log(\"APPLICATION...:\", application);\n                // return (\n                //     <Col md=\"6\" lg=\"6\" xl=\"4\" className=\"box-col-6\" key={index}>\n                //         <Card className=\"custom-card\">\n                //         <CardHeader className=\"card-header-banner-custom\">\n                //             <Media body className=\"img-fluid banner-banner-custom\" src={bannerImage} alt=\"banner-image-display\" />\n                //         </CardHeader>\n                //         <div className=\"card-profile customized-card-profile\">\n                //             {renderProfilePicVideo(profilePicture)}\n                //         </div>\n                //         <ul className=\"card-social\">\n                //             <li><a href={null}><i className=\"fa fa-facebook\"></i></a></li>\n                //             <li><a href={null}><i className=\"fa fa-google-plus\"></i></a></li>\n                //             <li><a href={null}><i className=\"fa fa-twitter\"></i></a></li>\n                //             <li><a href={null}><i className=\"fa fa-instagram\"></i></a></li>\n                //             <li><a href={null}><i className=\"fa fa-rss\"></i></a></li>\n                //         </ul>\n                //         <div className=\"text-center profile-details\">\n                //             <h4>{`${hacker.firstName} ${hacker.lastName}`}</h4>\n                //             <h6>{hacker.fullyVerified === true ? \"FULLY-VERIFIED!\" : \"Un-Verified.\"}</h6>\n                //             <hr />\n                //             <Button style={{ width: \"90%\" }} className=\"btn-pill btn-air-info\" outline color=\"info-2x\">View/Visit Company Profile</Button>\n                //             <hr />\n                //         </div>\n                //         <CardFooter className=\"row\">\n                //             <Col sm=\"4 col-4\">\n                //                 <h6>Successful/Completed Jobs</h6>\n                //                 <h3 className=\"counter\">{hacker.completedJobs} Jobs/Gigs Completed</h3>\n                //             </Col>\n                //             {hacker.reviews.length > 0 ? <Col sm=\"4 col-4\">\n                //                 <h6>Review Count</h6>\n                //                 <h3><span className=\"counter\">{hacker.reviews.length} Reviews (Total)</span></h3>\n                //             </Col> : <Col sm=\"4 col-4\">\n                //                 <h6>Experience</h6>\n                //                 <h3><span className=\"counter\">{hacker.points} XP-Experience Points</span></h3>\n                //             </Col>}\n                //             <Col sm=\"4 col-4\">\n                //                 <h6>Registration</h6>\n                //                 <h3><span className=\"counter\">Registered {moment(hacker.registrationDate).fromNow()}</span></h3>\n                //             </Col>\n                //         </CardFooter>\n                //         </Card>\n                //     </Col>\n                // );\n            })\n        } else {\n            return (\n                <Fragment>\n                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                        <p>\n                            <Skeleton count={45} />\n                        </p>\n                    </SkeletonTheme>\n                </Fragment>\n            );\n        }\n    }\n\n    return (\n        <Fragment>\n            <Container className={\"active-hired-container-wrapper\"} fluid={true}>\n                <Row>\n                    <Col sm=\"12 sm-100\" md=\"12 md-100\" lg=\"12 lg-100\" xl=\"12 xl-100\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Active <strong>HIRED</strong> workers/hacker's that're still pending and actively employed.</h5>\n                            </CardHeader>\n                            <CardBody className=\"tabbed-card\">\n                                <Nav  className=\"nav-pills nav-secondary\">\n                                    <NavItem>\n                                        <NavLink className={activeTab === '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                            <i className=\"icofont icofont-ui-home\"></i> Employer Listing(s) Hired  \n                                        </NavLink>\n                                    </NavItem>\n                                </Nav>\n                                <TabContent activeTab={activeTab}>\n                                    <TabPane tabId=\"1\">\n                                        {renderConditionalUponLoad()}\n                                    </TabPane>\n                                </TabContent>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(withRouter(ViewAlreadyAppliedJobsHackerHelper))"]},"metadata":{},"sourceType":"module"}