{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/employers/createVideoInterview/createVideoChat.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\n\nconst CreateVideoChatEmployerHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]); // Create refs for the HTML elements to attach audio and video to in the DOM\n  // For now, set them to null\n\n  const videoRef = useRef(null);\n  const audioRef = useRef(null); // Get the audio and video tracks from the participant, filtering out the tracks that are null\n\n  const getExistingVideoTracks = participant => {\n    const videoPublications = Array.from(participant.videoTracks.values());\n    const existingVideoTracks = videoPublications.map(publication => publication.track).filter(track => track !== null);\n    return existingVideoTracks;\n  };\n\n  const getExistingAudioTracks = participant => {\n    const audioPublications = Array.from(participant.audioTracks.values());\n    const existingAudioTracks = audioPublications.map(publication => publication.track).filter(track => track !== null);\n    return existingAudioTracks;\n  };\n\n  const joinRoomVideoChat = async () => {\n    try {\n      const generatedRoomID = uuid();\n      const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n        params: {\n          uniqueId: userData.uniqueId,\n          accountType: userData.accountType,\n          generatedRoomID\n        }\n      });\n\n      if (response) {\n        console.log(\"response\", response);\n        const {\n          data\n        } = response;\n        const room = await twilioConnect(data.token, {\n          name: generatedRoomID,\n          audio: true,\n          video: true\n        }); // if (room) {\n        //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n        // }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then(res => {\n      if (res.data.message === \"Gathered user!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setUser(user);\n        Video.connect(user.activeVideoChatRoom.tokenized, {\n          name: user.activeVideoChatRoom.roomName\n        }).then(room => {\n          console.log('Connected to Room', room);\n\n          const participantConnected = participant => {\n            setParticipants(prevParticipants => [...prevParticipants, participant]);\n          };\n\n          const participantDisconnected = participant => {\n            setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n          };\n\n          setRoom(room);\n          room.on('participantConnected', participantConnected);\n          room.on('participantDisconnected', participantDisconnected);\n          room.participants.forEach(participantConnected);\n        });\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n\n    if (videoRef && videoRef.current) {\n      if (videoTrack) {\n        videoTrack.attach(videoRef.current);\n        return () => {\n          videoTrack.detach();\n        };\n      }\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n\n    if (audioRef && audioRef.current) {\n      if (audioTrack) {\n        audioTrack.attach(audioRef.current);\n        return () => {\n          audioTrack.detach();\n        };\n      }\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Invite Hacker(s) To Video Interview With You!\",\n    title: \"Find, Select & Invite Anyone On Our Platform..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"We \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 56\n    }\n  }, \"HIGHLY SUGGEST\"), \" video interviewing \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 136\n    }\n  }, \"any\"), \" potential candiates for a contracted gig and/or hacking job, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 247\n    }\n  }, \"ESPECIALLY\"), \" if testing \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 315\n    }\n  }, \"physical infrastructure\"), \" and other related on-site security.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-success b-r-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, room !== null ? /*#__PURE__*/React.createElement(Participant, {\n    key: room.localParticipant.sid,\n    participant: room.localParticipant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 58\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    width: \"100%\",\n    height: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: null,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }), \"Your browser does not support the video tag.\")))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"Initialize Room\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/employers/createVideoInterview/createVideoChat.js"],"names":["React","Fragment","useState","useEffect","useRef","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Button","Breadcrumb","connect","reduxConnect","useParams","Video","axios","Participant","twilioConnect","uuid","CreateVideoChatEmployerHelper","userData","user","setUser","videoTracks","setVideoTracks","audioTracks","setAudioTracks","room","setRoom","participants","setParticipants","videoRef","audioRef","getExistingVideoTracks","participant","videoPublications","Array","from","values","existingVideoTracks","map","publication","track","filter","getExistingAudioTracks","audioPublications","existingAudioTracks","joinRoomVideoChat","generatedRoomID","response","get","process","env","REACT_APP_BASE_URL","params","uniqueId","accountType","console","log","data","token","name","audio","video","err","configuration","id","then","res","message","activeVideoChatRoom","tokenized","roomName","participantConnected","prevParticipants","participantDisconnected","p","on","forEach","catch","videoTrack","current","attach","detach","audioTrack","color","localParticipant","sid","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\n\n\nconst CreateVideoChatEmployerHelper = ({ userData }) => {\n\n    const [ user, setUser ] = useState(null);\n    const [ videoTracks, setVideoTracks ] = useState([]);\n    const [ audioTracks, setAudioTracks ] = useState([]);\n    const [ room, setRoom ] = useState(null);\n    const [ participants, setParticipants ] = useState([]);\n  \n    // Create refs for the HTML elements to attach audio and video to in the DOM\n    // For now, set them to null\n    const videoRef = useRef(null);\n    const audioRef = useRef(null);\n  \n    // Get the audio and video tracks from the participant, filtering out the tracks that are null\n    const getExistingVideoTracks  = (participant) => {\n        const videoPublications = Array.from(participant.videoTracks.values());\n        const existingVideoTracks = videoPublications.map(publication => publication.track).filter(track => track !== null);\n        return existingVideoTracks;\n    }\n  \n    const getExistingAudioTracks = (participant) => {\n        const audioPublications = Array.from(participant.audioTracks.values());\n        const existingAudioTracks = audioPublications.map(publication => publication.track).filter(track => track !== null);\n        return existingAudioTracks;\n    }\n\n    const joinRoomVideoChat = async () => {\n        try {\n\n            const generatedRoomID = uuid();\n\n            const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType,\n                    generatedRoomID\n                }\n            });\n            if (response) {\n                console.log(\"response\", response);\n\n                const { data } = response;\n\n                const room = await twilioConnect(data.token, {\n                    name: generatedRoomID,\n                    audio: true,\n                    video: true\n                });\n            \n                // if (room) {\n                //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n                // }\n            }\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUser(user);\n\n                Video.connect(user.activeVideoChatRoom.tokenized, { name: user.activeVideoChatRoom.roomName }).then(room => {\n                    console.log('Connected to Room', room);\n\n                    const participantConnected = participant => {\n                        setParticipants(prevParticipants => [...prevParticipants, participant]);\n                    };\n                    const participantDisconnected = participant => {\n                        setParticipants(prevParticipants =>\n                            prevParticipants.filter(p => p !== participant)\n                        );\n                    };\n\n                    setRoom(room);\n                    room.on('participantConnected', participantConnected);\n                    room.on('participantDisconnected', participantDisconnected);\n                    room.participants.forEach(participantConnected);\n                });\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoRef && videoRef.current) {\n            if (videoTrack) {\n                videoTrack.attach(videoRef.current);\n                return () => {\n                    videoTrack.detach();\n                };\n            }\n        }\n    }, [ videoTracks ]);\n    \n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioRef && audioRef.current) {\n            if (audioTrack) {\n                audioTrack.attach(audioRef.current);\n                return () => {\n                    audioTrack.detach();\n                };\n            }\n        }\n    }, [ audioTracks ]);\n    \n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Invite Hacker(s) To Video Interview With You!\" title=\"Find, Select & Invite Anyone On Our Platform..\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)</h2>\n                                <p className=\"lead\">We <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGEST</strong> video interviewing <strong style={{ color: \"#f73164\" }}>any</strong> potential candiates for a contracted gig and/or hacking job, <strong style={{ color: \"#f73164\" }}>ESPECIALLY</strong> if testing <strong>physical infrastructure</strong> and other related on-site security.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-success b-r-success'>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        {room !== null ? <Participant\n                                            key={room.localParticipant.sid}\n                                            participant={room.localParticipant}\n                                        /> : null}\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <video width=\"100%\" height=\"100%\" controls>\n                                            <source src={null} type=\"video/mp4\" />\n                                            Your browser does not support the video tag.\n                                        </video>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <Button className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={null}>Initialize Room</Button>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);"]},"metadata":{},"sourceType":"module"}