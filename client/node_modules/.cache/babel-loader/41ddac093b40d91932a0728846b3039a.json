{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\n\nconst ViewNotificationListHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [notifications, setNotifications] = useState([]);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    const promises = [];\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/account/notifications`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered notifications!\") {\n        console.log(\"successfully bookmarked profile...:\", res.data);\n        const {\n          notifications\n        } = res.data;\n\n        for (let index = 0; index < notifications.length; index++) {\n          const notify = notifications[index];\n          promises.push(new Promise(async (resolve, reject) => {\n            const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n              params: {\n                uniqueId: notify.metadata.from\n              }\n            });\n\n            if (result.data.message === \"Gathered resource!\") {\n              const file = result.data.file;\n              notify.profilePicVideo = file;\n              resolve(notify);\n            } else {\n              resolve(null);\n            }\n          }));\n        }\n\n        Promise.all(promises).then(passedData => {\n          console.log(\"passedData\", passedData);\n          setNotifications(passedData);\n          setReady(true);\n        });\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n    });\n  }, []);\n\n  const renderProfilePicVideo = last => {\n    if (last !== null && _.has(last, \"link\")) {\n      if (last.type.includes(\"video\")) {\n        // video logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          playing: true,\n          loop: true,\n          muted: true,\n          width: \"100%\",\n          className: \"notification-pic-video\",\n          wrapper: \"div\",\n          url: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        // image logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          alt: \"profile-picture-sub\",\n          src: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n          \"data-intro\": \"This is Profile image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Media, {\n        className: \"notification-pic-video\",\n        body: true,\n        alt: \"profile-picture-sub\",\n        src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n        \"data-intro\": \"This is Profile image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Notification(s), Changes & Updates\",\n    title: \"View & Manage Your Notification's!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-notification-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"View your notifications, manage updates & more! (click notifications to be redirected approriately)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map((notification, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"list-group-item-action flex-column align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"1\",\n      lg: \"1\",\n      xl: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }\n    }, renderProfilePicVideo(notification.profilePicVideo)), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"11\",\n      lg: \"11\",\n      xl: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 65\n      }\n    }, \"List group item heading\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 118\n      }\n    }, \"3 days ago\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 61\n      }\n    }, \"Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 61\n      }\n    }, \"Donec id elit non mi porta.\")))));\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../assets/images/no-current-notifications.png\"),\n    className: \"no-notifications-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewNotificationListHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js"],"names":["React","Fragment","useState","useEffect","ListGroup","ListGroupItem","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Media","axios","connect","NotificationManager","Breadcrumb","_","ReactPlayer","ViewNotificationListHelper","userData","notifications","setNotifications","ready","setReady","configuration","params","uniqueId","accountType","promises","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","index","length","notify","push","Promise","resolve","reject","result","metadata","from","file","profilePicVideo","all","passedData","error","catch","err","renderProfilePicVideo","last","has","type","includes","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","map","notification","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\n\nconst ViewNotificationListHelper = ({ userData }) => {\n\n    const [ notifications, setNotifications ] = useState([]);\n    const [ ready, setReady ] = useState(false);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType \n            }\n        }\n\n        const promises = [];\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/account/notifications`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered notifications!\") {\n                console.log(\"successfully bookmarked profile...:\", res.data);\n\n                const { notifications } = res.data;\n\n                for (let index = 0; index < notifications.length; index++) {\n                    const notify = notifications[index];\n                    \n                    promises.push(new Promise(async (resolve, reject) => {\n                        const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n                            params: {\n                                uniqueId: notify.metadata.from\n                            }\n                        })\n\n                        if (result.data.message === \"Gathered resource!\") {\n                            const file = result.data.file;\n\n                            notify.profilePicVideo = file;\n\n                            resolve(notify);\n                        } else {\n                            resolve(null);\n                        }\n                    }))\n                }\n\n                Promise.all(promises).then((passedData) => {\n                    console.log(\"passedData\", passedData);\n\n                    setNotifications(passedData);\n                    setReady(true);\n                })\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        })\n    }, []);\n\n\n    const renderProfilePicVideo = (last) => {\n        if (last !== null && _.has(last, \"link\")) {\n            if (last.type.includes(\"video\")) {\n                // video logic\n                return (\n                    <Media className=\"notification-pic-video\" body>\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"notification-pic-video\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} />\n                    </Media>\n                );\n            } else {\n                // image logic\n                return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} data-intro=\"This is Profile image\" />;\n            }  \n        } else {\n            // image logic\n            return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} data-intro=\"This is Profile image\" />;\n        } \n    }\n\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Notification(s), Changes & Updates\" title=\"View & Manage Your Notification's!\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className='shadow-notification-card'>\n                            <CardHeader className='b-l-primary b-r-primary'>\n                                <h4 className='header-notification'>View your notifications, manage updates & more! (click notifications to be redirected approriately)</h4>\n                                <p className='lead'>Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...</p>\n                            </CardHeader>\n                            <CardBody>\n                                <ListGroup>\n                                    {typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map((notification, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <ListGroupItem className=\"list-group-item-action flex-column align-items-start\">\n                                                    <Row>\n                                                        <Col sm=\"12\" md=\"1\" lg=\"1\" xl=\"1\">\n                                                            {renderProfilePicVideo(notification.profilePicVideo)}\n                                                        </Col>\n                                                        <Col sm=\"12\" md=\"11\" lg=\"11\" xl=\"11\">\n                                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                                <h5 className=\"mb-1\">{\"List group item heading\"}</h5><small>{\"3 days ago\"}</small>\n                                                            </div>\n                                                            <p className=\"mb-1\">{\"Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\"}</p>\n                                                            <small>{\"Donec id elit non mi porta.\"}</small>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroupItem>\n                                            </Fragment>\n                                        );\n                                    }) : <Fragment>\n                                        <img src={require(\"../../../../../assets/images/no-current-notifications.png\")} className={\"no-notifications-img\"} />\n                                    </Fragment>}\n                                </ListGroup>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewNotificationListHelper);"]},"metadata":{},"sourceType":"module"}