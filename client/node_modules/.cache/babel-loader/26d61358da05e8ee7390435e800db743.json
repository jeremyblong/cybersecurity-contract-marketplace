{"ast":null,"code":"import _defineProperty from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/createNewBlogPost.js\";\n\nimport React, { useMemo, useRef, useState, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody, Input, Label, Form, FormGroup, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { useForm } from 'react-hook-form';\nimport helpers from \"./helpers/reduxFormHelpers.js\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport Dropzone from 'react-dropzone-uploader';\nimport miscFunctions from \"./helpers/miscFunctions.js\";\nvar onSubmitHelper = miscFunctions.onSubmitHelper,\n    renderPreviewOfFile = miscFunctions.renderPreviewOfFile,\n    renderCustomButtonDropzone = miscFunctions.renderCustomButtonDropzone,\n    CustomInputHelper = miscFunctions.CustomInputHelper;\nvar titleChecker = helpers().titleChecker;\nvar subtitleChecker = helpers().subtitleChecker;\nvar hashtagsChecker = helpers().hashtagsChecker;\nvar descriptionChecker = helpers().descriptionChecker;\nvar KeyCodes = {\n  comma: 188,\n  enter: [10, 13]\n};\nvar delimiters = [].concat(_toConsumableArray(KeyCodes.enter), [KeyCodes.comma]);\n\nvar CreateNewBlogPostHelper = function CreateNewBlogPostHelper(_ref) {\n  var _Object$assign, _Object$assign2;\n\n  var userData = _ref.userData;\n  // refs & such\n  var dropzoneRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileReady = _useState2[0],\n      setFileReadyStatus = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      progress = _useState4[0],\n      setProgress = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFiles = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentFileSelectedUpload = _useState8[0],\n      setCurrentUploadFileStatus = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileMetaData = _useState10[0],\n      setMetaFileData = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      changeOptions = _useState12[0],\n      setChangeOptions = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filePathData = _useState14[0],\n      setCurrentFilePathData = _useState14[1];\n\n  var history = useHistory(); // redux-form-hook values initialization\n\n  var _useForm = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\",\n    enableReinitialize: true\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      getValues = _useForm.getValues,\n      setValue = _useForm.setValue,\n      errors = _useForm.formState.errors;\n\n  var currentValues = getValues();\n  var autofocusNoSpellcheckerOptions = useMemo(function () {\n    return {\n      autofocus: false,\n      spellChecker: false\n    };\n  }, []);\n\n  var handleDelete = function handleDelete(i) {\n    setValue(\"hashtags\", currentValues.hashtags.filter(function (tag, index) {\n      return index !== i;\n    }), {\n      shouldValidate: true\n    });\n  };\n\n  var handleAddition = function handleAddition(tag) {\n    setValue(\"hashtags\", typeof currentValues.hashtags === \"undefined\" ? [tag] : [].concat(_toConsumableArray(currentValues.hashtags), [tag]), {\n      shouldValidate: true\n    });\n  };\n\n  var handleDrag = function handleDrag(tag, currPos, newPos) {\n    var tags = _toConsumableArray(currentValues.hashtags);\n\n    var newTags = tags.slice();\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n    setValue(\"hashtags\", newTags, {\n      shouldValidate: true\n    });\n  };\n\n  var handleFinalSubmission = function handleFinalSubmission(data) {\n    console.log(\"handleFinalSubmission\", data);\n    var title = data.title,\n        subtitle = data.subtitle,\n        description = data.description,\n        hashtags = data.hashtags;\n\n    if (file !== null) {\n      var config = {\n        title: title,\n        subtitle: subtitle,\n        description: description,\n        hashtags: hashtags,\n        userID: userData.uniqueId,\n        userFullName: \"\".concat(userData.firstName, \" \").concat(userData.lastName),\n        userAccountType: userData.accountType,\n        fileLink: file.link\n      };\n      axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/upload/new/blog/post/individual/public\"), config).then(function (res) {\n        if (res.data.message === \"Successfully updated/uploaded new blog post!\") {\n          console.log(res.data);\n          NotificationManager.success(\"We've successfully posted your desired blog post, it is now LIVE and ACTIVE! We are going to redirect you to the blog homepage where you may locate your blog posting...\", 'Successfully uploaded blog post!', 4750);\n          setTimeout(function () {\n            history.push(\"/blogging/main/page/display/all\");\n          }, 4500);\n        } else {\n          console.log(\"Err\", res.data);\n          NotificationManager.error(\"An unknown error occurred while attempting to upload your new blog post data, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n        }\n      }).catch(function (err) {\n        console.log(err);\n        NotificationManager.error(\"An unknown error occurred while attempting to upload your new blog post data, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n      });\n    } else {\n      NotificationManager.warning(\"You MUST upload a 'main display photo' before proceeding, this image will display on the list-view and will be seen while people are scrolling through bulk posts!\", \"Upload a 'main-display' photo before proceeding!\", 4750);\n    }\n  };\n\n  var renderFormError = function renderFormError(e, errors) {\n    console.log(e, errors);\n  };\n\n  console.log(\"currentValues\", currentValues);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Previously Received Review(s)\",\n    title: \"Previously Received Review's From Contracted Work\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"Create a new blog post and share your knowledge with the user's of our platform! This is an \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#7366ff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 129\n    }\n  }, \"excellent\"), \" way to promote your account and/or knowledge showing you know what you're doing. Share your thoughts & knowledge today!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Please fill in the required data to post your new blog post..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"m-form__group needs-validation streaming-start-form-wrapper\",\n    noValidate: \"\",\n    onSubmit: handleSubmit(handleFinalSubmission, function (e, errors) {\n      return renderFormError(e, errors);\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, \"Blog Title (Main display title) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 82\n    }\n  }, \"You must enter between 35 - 225 characters before posting..\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 82\n    }\n  }, \"Blog Title\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, titleChecker.check(register), {\n    value: currentValues.title,\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      return titleChecker.onChange(value, setValue);\n    },\n    name: titleChecker.name,\n    type: titleChecker.type,\n    placeholder: titleChecker.placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }))), errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 57\n    }\n  }, errors.title.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 41\n    }\n  }, \"Blog Sub-Title (Main display sub-title) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 90\n    }\n  }, \"You must enter between 35 - 225 characters before posting..\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 82\n    }\n  }, \"Blog Subtitle\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, subtitleChecker.check(register), (_Object$assign = {\n    className: \"form-control\",\n    value: currentValues.subtitle,\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      return subtitleChecker.onChange(value, setValue);\n    },\n    name: subtitleChecker.name\n  }, _defineProperty(_Object$assign, \"value\", currentValues.subtitle), _defineProperty(_Object$assign, \"type\", subtitleChecker.type), _defineProperty(_Object$assign, \"placeholder\", subtitleChecker.placeholder), _defineProperty(_Object$assign, \"__self\", _this), _defineProperty(_Object$assign, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 45\n  }), _Object$assign)))), errors.subtitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 60\n    }\n  }, errors.subtitle.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 41\n    }\n  }, \"Blog Hashtags (tags to be searched with - these will help people find your blog(s)) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 134\n    }\n  }, \"You must enter between 5 - 15 'hashtags' before posting..\")), /*#__PURE__*/React.createElement(ReactTags, Object.assign({}, hashtagsChecker.check(register), {\n    autofocus: false,\n    tags: currentValues.hashtags,\n    value: currentValues.hashtags,\n    name: \"hashtags\",\n    classNames: {\n      tags: 'tagsClass',\n      tagInput: 'tagInputClass',\n      tagInputField: 'form-control',\n      selected: 'selectedClass',\n      tag: 'badge badge-primary custom-tag-streaming',\n      remove: 'removeClass',\n      suggestions: 'suggestionsClass',\n      activeSuggestion: 'activeSuggestionClass'\n    },\n    placeholder: \"(OPTIONAL) Add hashtags to your comment...\",\n    maxLength: 10 // suggestions={suggestions}\n    ,\n    handleDelete: handleDelete,\n    handleAddition: handleAddition,\n    handleDrag: handleDrag,\n    delimiters: delimiters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  })), errors.hashtags ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 60\n    }\n  }, errors.hashtags.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }, \"Blog Main Content ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 68\n    }\n  }, \"You must enter between 500 - 3500 characters before posting..\")), /*#__PURE__*/React.createElement(SimpleMDE, Object.assign({}, descriptionChecker.check(register), (_Object$assign2 = {\n    id: \"post-content-custom\",\n    value: currentValues.body,\n    placeholder: \"## Summary:\\n                                                [Add summary of the vulnerability]\\n\\n                                                ## Steps to Reproduce:\\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\\n\\n                                                1. [add step]\\n                                                2. [add step]\\n                                                3. [add step]\\n\\n                                                ## Impact\\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\\n                                                How does the issue affect the business or the user? \\n                                                What can the attacker get through the issue? \\n                                                Can the issue be escalated further? If so, how?\\n\\n                                                ## Mitigation\\n                                                [Please give a brief description of how the bug could be fixed.]\\n\\n\\n                                                ## Supporting Material/References:\\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\\n\\n                                                * [attachment / reference]\\n                                            \",\n    name: \"body\",\n    onChange: function onChange(value) {\n      return descriptionChecker.onChange(value, setValue);\n    }\n  }, _defineProperty(_Object$assign2, \"value\", currentValues.body), _defineProperty(_Object$assign2, \"options\", autofocusNoSpellcheckerOptions), _defineProperty(_Object$assign2, \"__self\", _this), _defineProperty(_Object$assign2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 41\n  }), _Object$assign2))), errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 63\n    }\n  }, errors.description.message) : null), file === null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: function PreviewComponent(data) {\n      return renderPreviewOfFile(data, fileReady, filePathData);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: function onChangeStatus(functions) {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: function InputComponent(_ref2) {\n      var accept = _ref2.accept,\n          onFiles = _ref2.onFiles;\n      return CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus);\n    },\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: function SubmitButtonComponent(data, e) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 61\n        }\n      }, renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles));\n    },\n    multiple: false,\n    inputContent: \"Drag & drop or select more files from the computer (max. 250mb per file)\",\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 325,\n        minWidth: \"100%\"\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 49\n    }\n  })))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: function PreviewComponent(data) {\n      return renderPreviewOfFile(data, fileReady, filePathData);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: function onChangeStatus(functions) {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: function InputComponent(_ref3) {\n      var accept = _ref3.accept,\n          onFiles = _ref3.onFiles;\n      return CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus);\n    },\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: function SubmitButtonComponent(data, e) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 69\n        }\n      }, renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles));\n    },\n    multiple: false,\n    inputContent: \"Drag & drop or select more files from the computer (max. 250mb per file)\",\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 325,\n        minWidth: \"100%\"\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\".concat(process.env.REACT_APP_ASSET_LINK, \"/\").concat(file.link),\n    className: \"stretch-blog-creation-img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: {\n      width: \"100%\"\n    },\n    color: \"success-2x\",\n    outline: true,\n    className: \"btn-square-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }\n  }, \"Submit Blog Post Data!\"))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewBlogPostHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/createNewBlogPost.js"],"names":["React","useMemo","useRef","useState","Fragment","Container","Row","Col","Card","CardHeader","Button","CardBody","Input","Label","Form","FormGroup","InputGroup","InputGroupAddon","InputGroupText","Breadcrumb","connect","SimpleMDE","WithContext","ReactTags","useForm","helpers","axios","NotificationManager","useHistory","Dropzone","miscFunctions","onSubmitHelper","renderPreviewOfFile","renderCustomButtonDropzone","CustomInputHelper","titleChecker","subtitleChecker","hashtagsChecker","descriptionChecker","KeyCodes","comma","enter","delimiters","CreateNewBlogPostHelper","userData","dropzoneRef","fileReady","setFileReadyStatus","progress","setProgress","file","setFiles","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","history","mode","reValidateMode","enableReinitialize","register","handleSubmit","getValues","setValue","errors","formState","currentValues","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleDelete","i","hashtags","filter","tag","index","shouldValidate","handleAddition","handleDrag","currPos","newPos","tags","newTags","slice","splice","handleFinalSubmission","data","console","log","title","subtitle","description","config","userID","uniqueId","userFullName","firstName","lastName","userAccountType","accountType","fileLink","link","post","process","env","REACT_APP_BASE_URL","then","res","message","success","setTimeout","push","error","catch","err","warning","renderFormError","e","textDecorationLine","color","check","value","target","onChange","name","type","placeholder","tagInput","tagInputField","selected","remove","suggestions","activeSuggestion","body","functions","accept","onFiles","dropzone","height","minWidth","dropzoneActive","borderColor","REACT_APP_ASSET_LINK","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody, Input, Label, Form, FormGroup, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { useForm } from 'react-hook-form';\nimport helpers from \"./helpers/reduxFormHelpers.js\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport Dropzone from 'react-dropzone-uploader';\nimport miscFunctions from \"./helpers/miscFunctions.js\";\n\nconst {\n    onSubmitHelper,\n    renderPreviewOfFile,\n    renderCustomButtonDropzone,\n    CustomInputHelper\n} = miscFunctions;\n\n\nconst titleChecker = helpers().titleChecker;\nconst subtitleChecker = helpers().subtitleChecker;\nconst hashtagsChecker = helpers().hashtagsChecker;\nconst descriptionChecker = helpers().descriptionChecker;\n\nconst KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n};\n\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst CreateNewBlogPostHelper = ({ userData }) => {\n\n    // refs & such\n    const dropzoneRef = useRef(null);\n\n\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [file, setFiles] = useState(null);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [changeOptions, setChangeOptions] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n\n    const history = useHistory();\n\n    // redux-form-hook values initialization\n    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\",\n        enableReinitialize: true\n    });\n\n    const currentValues = getValues();\n\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n            autofocus: false,\n            spellChecker: false,\n        }\n    }, []);\n\n    const handleDelete = (i) => {\n        setValue(\"hashtags\", currentValues.hashtags.filter((tag, index) => index !== i), { shouldValidate: true });\n    };\n\n    const handleAddition = (tag) => {\n        setValue(\"hashtags\", typeof currentValues.hashtags === \"undefined\" ? [tag] : [...currentValues.hashtags, tag], { shouldValidate: true });\n    };\n\n    const handleDrag = (tag, currPos, newPos) => {\n        const tags = [...currentValues.hashtags];\n        const newTags = tags.slice();\n\n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n\n        setValue(\"hashtags\", newTags, { shouldValidate: true });\n    };\n\n    const handleFinalSubmission = (data) => {\n        console.log(\"handleFinalSubmission\", data);\n\n        const { title, subtitle, description, hashtags } = data;\n\n        if (file !== null) {\n            const config = {\n                title,\n                subtitle,\n                description,\n                hashtags,\n                userID: userData.uniqueId,\n                userFullName: `${userData.firstName} ${userData.lastName}`,\n                userAccountType: userData.accountType,\n                fileLink: file.link\n            }\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/new/blog/post/individual/public`, config).then((res) => {\n                if (res.data.message === \"Successfully updated/uploaded new blog post!\") {\n                    console.log(res.data);\n\n                    NotificationManager.success(`We've successfully posted your desired blog post, it is now LIVE and ACTIVE! We are going to redirect you to the blog homepage where you may locate your blog posting...`, 'Successfully uploaded blog post!', 4750);\n\n                    setTimeout(() => {\n                        history.push(\"/blogging/main/page/display/all\");\n                    }, 4500);\n                } else {\n                    console.log(\"Err\", res.data);\n\n                    NotificationManager.error(\"An unknown error occurred while attempting to upload your new blog post data, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n                }\n            }).catch((err) => {\n                console.log(err);\n\n                NotificationManager.error(\"An unknown error occurred while attempting to upload your new blog post data, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n            })\n        } else {\n            NotificationManager.warning(\"You MUST upload a 'main display photo' before proceeding, this image will display on the list-view and will be seen while people are scrolling through bulk posts!\", \"Upload a 'main-display' photo before proceeding!\", 4750);\n        }\n    }\n    const renderFormError = (e, errors) => {\n        console.log(e, errors);\n    }\n\n    console.log(\"currentValues\", currentValues);\n\n    return (\n        <div>\n            <Breadcrumb parent=\"Previously Received Review(s)\" title=\"Previously Received Review's From Contracted Work\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className='shadow'>\n                            <CardHeader className='b-l-primary b-r-primary'>\n                                <h3>Create a new blog post and share your knowledge with the user's of our platform! This is an <em style={{ textDecorationLine: \"underline\", color: \"#7366ff\" }}>excellent</em> way to promote your account and/or knowledge showing you know what you're doing. Share your thoughts & knowledge today!</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <h3>Please fill in the required data to post your new blog post..</h3>\n                                <hr />\n                                <Form className=\"m-form__group needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(handleFinalSubmission, (e, errors) => {\n                                    return renderFormError(e, errors)\n                                })}>\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Blog Title (Main display title) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 35 - 225 characters before posting..</em></Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Blog Title\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...titleChecker.check(register)} value={currentValues.title} className=\"form-control\" onChange={(e) => {\n\n                                                const value = e.target.value;\n\n                                                return titleChecker.onChange(value, setValue);\n                                            }} name={titleChecker.name} type={titleChecker.type} placeholder={titleChecker.placeholder} />\n                                        </InputGroup>\n                                        {errors.title ? <span className=\"span-tooltip\">{errors.title.message}</span> : null}\n                                    </FormGroup>\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Blog Sub-Title (Main display sub-title) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 35 - 225 characters before posting..</em></Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Blog Subtitle\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...subtitleChecker.check(register)} className=\"form-control\" value={currentValues.subtitle} onChange={(e) => {\n\n                                                const value = e.target.value;\n\n                                                return subtitleChecker.onChange(value, setValue);\n                                            }} name={subtitleChecker.name} value={currentValues.subtitle} type={subtitleChecker.type} placeholder={subtitleChecker.placeholder} />\n                                        </InputGroup>\n                                        {errors.subtitle ? <span className=\"span-tooltip\">{errors.subtitle.message}</span> : null}\n                                    </FormGroup>\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Blog Hashtags (tags to be searched with - these will help people find your blog(s)) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 5 - 15 'hashtags' before posting..</em></Label>\n                                        <ReactTags\n                                            {...hashtagsChecker.check(register)}\n                                            autofocus={false}\n                                            tags={currentValues.hashtags}\n                                            value={currentValues.hashtags}\n                                            name={\"hashtags\"}\n                                            classNames={{\n                                                tags: 'tagsClass',\n                                                tagInput: 'tagInputClass',\n                                                tagInputField: 'form-control',\n                                                selected: 'selectedClass',\n                                                tag: 'badge badge-primary custom-tag-streaming',\n                                                remove: 'removeClass',\n                                                suggestions: 'suggestionsClass',\n                                                activeSuggestion: 'activeSuggestionClass'\n                                            }}\n                                            placeholder={\"(OPTIONAL) Add hashtags to your comment...\"}\n                                            maxLength={10}\n                                            // suggestions={suggestions}\n                                            handleDelete={handleDelete}\n                                            handleAddition={handleAddition}\n                                            handleDrag={handleDrag}\n                                            delimiters={delimiters}\n                                        />\n                                        {errors.hashtags ? <span className=\"span-tooltip\">{errors.hashtags.message}</span> : null}\n                                    </FormGroup>\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Blog Main Content ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 500 - 3500 characters before posting..</em></Label>\n                                        <SimpleMDE\n                                            {...descriptionChecker.check(register)}\n                                            id=\"post-content-custom\"\n                                            value={currentValues.body}\n                                            placeholder={`## Summary:\n                                                [Add summary of the vulnerability]\n\n                                                ## Steps to Reproduce:\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\n\n                                                1. [add step]\n                                                2. [add step]\n                                                3. [add step]\n\n                                                ## Impact\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\n                                                How does the issue affect the business or the user? \n                                                What can the attacker get through the issue? \n                                                Can the issue be escalated further? If so, how?\n\n                                                ## Mitigation\n                                                [Please give a brief description of how the bug could be fixed.]\n\n\n                                                ## Supporting Material/References:\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\n\n                                                * [attachment / reference]\n                                            `}\n                                            name={\"body\"}\n                                            onChange={(value) => descriptionChecker.onChange(value, setValue)}\n                                            value={currentValues.body}\n                                            options={autofocusNoSpellcheckerOptions}\n                                        />\n                                        {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                                    </FormGroup>\n                                    {file === null ? <Fragment>\n                                        <Form>\n                                            <div className=\"dz-message needsclick\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                    onSubmit={onSubmitHelper}\n                                                    SubmitButtonComponent={(data, e) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    multiple={false}\n                                                    inputContent={\"Drag & drop or select more files from the computer (max. 250mb per file)\"}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 325, minWidth: \"100%\" },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                            </div>\n                                        </Form>\n                                    </Fragment> : <Fragment>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Form>\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneRef}\n                                                            PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                            maxFiles={1}\n                                                            autoUpload={true}\n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setFiles)}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            multiple={false}\n                                                            inputContent={\"Drag & drop or select more files from the computer (max. 250mb per file)\"}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 325, minWidth: \"100%\" },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </Form>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <img src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} className={\"stretch-blog-creation-img\"} />\n                                            </Col>\n                                        </Row>\n                                    </Fragment>}\n                                    <hr />\n                                    <Button type={\"submit\"} style={{ width: \"100%\" }} color={\"success-2x\"} outline className={\"btn-square-success\"}>Submit Blog Post Data!</Button>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {})(CreateNewBlogPostHelper);"]},"metadata":{},"sourceType":"module"}