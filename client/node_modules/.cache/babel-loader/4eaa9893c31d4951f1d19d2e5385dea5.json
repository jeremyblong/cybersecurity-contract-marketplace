{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/pages/sign-in.js\";\nimport React, { useState, Fragment } from 'react';\nimport Navbar from '../components/_App/Navbar';\nimport PageBanner from '../components/Common/PageBanner';\nimport Footer from '../components/_App/Footer';\nimport { Link, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport { authentication } from \"../redux/actions/authentication/auth.js\";\nimport { connect } from \"react-redux\";\nimport { deviceDetect, isBrowser, isMobile } from 'react-device-detect';\nimport ReactCodeInput from \"react-code-input\";\n\nconst SignIn = _ref => {\n  let {\n    authentication\n  } = _ref;\n  const history = useHistory();\n  const [code, setCode] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [checked, setchecked] = useState(false);\n  const [hidePassword, setHidePassword] = useState(false);\n  const [data, setData] = useState({});\n  const [switchAccountType, switchType] = useState(\"You're logging in as - 'Company/Employer'\");\n\n  const handleChange = checked => {\n    setchecked(checked);\n\n    if (checked === true) {\n      switchType(\"You're logging in as - 'Hacker/Security Expert'\");\n    } else {\n      switchType(\"You're logging in as - 'Company/Employer'\");\n    }\n  };\n\n  const handleSubmission = (e, ready) => {\n    e.preventDefault();\n    console.log(\"submitted.\");\n    const detectDeviceInfo = deviceDetect();\n    const {\n      password,\n      usernameOrEmail\n    } = data;\n\n    if (isBrowser === true) {\n      // computer, laptop, etc.. is being used.\n      axios.get(\"https://ipapi.co/json/\").then(responseeee => {\n        const {\n          country,\n          city,\n          ip,\n          region,\n          postal,\n          timezone,\n          version\n        } = responseeee.data;\n        const userDeviceData = { ...detectDeviceInfo,\n          isBrowser: true,\n          IPRelatedInformation: {\n            country,\n            city,\n            ip,\n            region,\n            postal,\n            timezone,\n            version\n          }\n        };\n        axios.post(`${process.env.REACT_APP_BASE_URL}/login/${checked === true ? \"hacker\" : \"employer\"}`, {\n          accountType: checked === true ? \"hackers\" : \"employers\",\n          password,\n          usernameOrEmail,\n          username: usernameOrEmail,\n          userDeviceData\n        }, {\n          withCredentials: true\n        }).then(res => {\n          if (res.data.message === \"Successfully logged in!\") {\n            console.log(\"success!\", res.data);\n            setPage(2);\n\n            if (ready === true) {\n              const configgg = {\n                authyId: res.data.data.authyId,\n                entryCode: code\n              };\n              axios.post(\"/twilio/verify/code\", configgg).then(innerResp => {\n                if (innerResp.data.message === \"Successfully verified account!\") {\n                  console.log(\"Code matches!\", innerResp.data);\n                  NotificationManager.success('Successful authentication! You will be logged-in momentarily...', 'Successfully authenticated!', 3000);\n                  setTimeout(() => {\n                    // do authentication - registration redux logic\n                    authentication(res.data.data);\n\n                    if (res.data.data.accountType === \"employers\") {\n                      history.push(\"/dashboard/employer\");\n                    } else {\n                      history.push(\"/dashboard/hacker\");\n                    }\n                  }, 3000);\n                } else {\n                  console.log(\"err with code!\", innerResp.data);\n                  NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                }\n              }).catch(errorCode => {\n                console.log(\"errorCode\", errorCode);\n                NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n              });\n            } else {\n              console.log(\"first page completed..!\");\n            }\n          } else {\n            console.log(\"err\", res.data);\n            NotificationManager.error(res.data.message, 'ERROR LOGGING-IN!.', 3500);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(errorrrrrrr => {\n        console.log(\"errrror fetching IP address information.\", errorrrrrrr);\n        NotificationManager.error(\"Error fetching device/IP information - CANNOT sign-in until this information is collected - please try again (not related to password/email).\", 'ERROR LOGGING-IN!.', 3500);\n      });\n    } else if (isMobile === true) {\n      // mobile device is being used.\n      axios.get(\"https://ipapi.co/json/\").then(responseeee => {\n        const {\n          country,\n          city,\n          ip,\n          region,\n          postal,\n          timezone,\n          version\n        } = responseeee.data;\n        const userDeviceData = { ...detectDeviceInfo,\n          isBrowser: false,\n          IPRelatedInformation: {\n            country,\n            city,\n            ip,\n            region,\n            postal,\n            timezone,\n            version\n          }\n        };\n        axios.post(`${process.env.REACT_APP_BASE_URL}/login/${checked === true ? \"hacker\" : \"employer\"}`, {\n          accountType: checked === true ? \"hackers\" : \"employers\",\n          password,\n          usernameOrEmail,\n          username: usernameOrEmail,\n          userDeviceData\n        }, {\n          withCredentials: true\n        }).then(res => {\n          if (res.data.message === \"Successfully logged in!\") {\n            console.log(\"success!\", res.data);\n            setPage(2);\n\n            if (ready === true) {\n              const configgg = {\n                authyId: res.data.data.authyId,\n                entryCode: code\n              };\n              axios.post(\"/twilio/verify/code\", configgg).then(innerResp => {\n                if (innerResp.data.message === \"Successfully verified account!\") {\n                  console.log(\"Code matches!\", innerResp.data);\n                  NotificationManager.success('Successful authentication! You will be logged-in momentarily...', 'Successfully authenticated!', 3000);\n                  setTimeout(() => {\n                    // do authentication - registration redux logic\n                    authentication(res.data.data);\n\n                    if (res.data.data.accountType === \"employers\") {\n                      history.push(\"/dashboard/employer\");\n                    } else {\n                      history.push(\"/dashboard/hacker\");\n                    }\n                  }, 3000);\n                } else {\n                  console.log(\"err with code!\", innerResp.data);\n                  NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                }\n              }).catch(errorCode => {\n                console.log(\"errorCode\", errorCode);\n                NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n              });\n            } else {\n              console.log(\"first page completed..!\");\n            }\n          } else {\n            console.log(\"err\", res.data);\n            NotificationManager.error(res.data.message, 'ERROR LOGGING-IN!.', 3500);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(errorrrrrrr => {\n        console.log(\"errrror fetching IP address information.\", errorrrrrrr);\n        NotificationManager.error(\"Error fetching device/IP information - CANNOT sign-in until this information is collected - please try again (not related to password/email).\", 'ERROR LOGGING-IN!.', 3500);\n      });\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const checkAndContinue = e => {\n    console.log(\"checkAndContinue clicked/ran..\");\n    handleSubmission(e, false);\n  };\n\n  const renderPagesScreens = () => {\n    if (page === 1) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: data.usernameOrEmail,\n        onChange: handleInputChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"usernameOrEmail\",\n        placeholder: \"Username or Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: data.password,\n        onChange: handleInputChange,\n        className: \"form-control custom-password-input-signin\",\n        type: hidePassword === true ? \"text\" : \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-text custom-input-text-group-transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => {\n          setHidePassword(!hidePassword);\n        },\n        src: require(\"../assets/icons/eye.png\"),\n        className: \"eye-icon-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 104\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingBottom: \"15px\"\n        },\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: \"row\",\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onColor: \"#00acee\",\n        onChange: handleChange,\n        checked: checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }\n      }, switchAccountType))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-6 col-sm-6 form-condition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"agree-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"chb1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        forhtml: \"chb1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, \"Remember Me\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-6 col-sm-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/forgot-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"forget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }\n      }, \"Forgot my password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"default-btn btn-two\",\n        onClick: e => checkAndContinue(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, \"Sign-in & Request Verification Code (Text Msg)\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"account-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }, \"Not a member? \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/sign-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 63\n        }\n      }, \"Sign Up\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, \"Enter the code we just texted you, this code should be entered exactly as it displays on your device..\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: \"22.5px\"\n        },\n        className: \"centered-both-ways\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactCodeInput, {\n        onChange: value => setCode(value),\n        type: \"number\",\n        fields: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"default-btn btn-two\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, \"Submit Phone Verification-Code\")));\n    }\n  };\n\n  console.log(\"data\", data);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageBanner, {\n    pageTitle: \"Sign In\",\n    homePageUrl: \"/\",\n    homePageText: \"Home\",\n    activePageText: \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-area-all-style log-in-area ptb-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, \"Log In to your \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 48\n    }\n  }, checked === true ? \"Hacker\" : \"Employer/Company\"), \" account\"), \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium quas cumque iste veniam id dolorem deserunt ratione error voluptas rem ullam possimus placeat, ut, odio\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmission(event, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, renderPagesScreens()))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(null, {\n  authentication\n})(SignIn);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/pages/sign-in.js"],"names":["React","useState","Fragment","Navbar","PageBanner","Footer","Link","useHistory","Switch","NotificationManager","axios","authentication","connect","deviceDetect","isBrowser","isMobile","ReactCodeInput","SignIn","history","code","setCode","page","setPage","checked","setchecked","hidePassword","setHidePassword","data","setData","switchAccountType","switchType","handleChange","handleSubmission","e","ready","preventDefault","console","log","detectDeviceInfo","password","usernameOrEmail","get","then","responseeee","country","city","ip","region","postal","timezone","version","userDeviceData","IPRelatedInformation","post","process","env","REACT_APP_BASE_URL","accountType","username","withCredentials","res","message","configgg","authyId","entryCode","innerResp","success","setTimeout","push","warning","catch","errorCode","error","err","errorrrrrrr","handleInputChange","name","value","target","prevState","checkAndContinue","renderPagesScreens","require","paddingBottom","flexDirection","display","alignItems","justifyContent","marginLeft","marginBottom","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,qBAAlD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,MAAM,GAAG,QAAwB;AAAA,MAAvB;AAAEN,IAAAA;AAAF,GAAuB;AAEnC,QAAMO,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEoB,IAAF,EAAQC,OAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAEsB,OAAF,EAAWC,UAAX,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAEwB,YAAF,EAAgBC,eAAhB,IAAoCzB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAE0B,IAAF,EAAQC,OAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAE4B,iBAAF,EAAqBC,UAArB,IAAoC7B,QAAQ,CAAC,2CAAD,CAAlD;;AAEA,QAAM8B,YAAY,GAAIR,OAAD,IAAa;AAC9BC,IAAAA,UAAU,CAACD,OAAD,CAAV;;AAEA,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClBO,MAAAA,UAAU,CAAC,iDAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,2CAAD,CAAV;AACH;AACJ,GARD;;AAUA,QAAME,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnCD,IAAAA,CAAC,CAACE,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,UAAMC,gBAAgB,GAAGzB,YAAY,EAArC;AAEA,UAAM;AAAE0B,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAgCb,IAAtC;;AAEA,QAAIb,SAAS,KAAK,IAAlB,EAAwB;AACpB;AACAJ,MAAAA,KAAK,CAAC+B,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAA0CC,WAAD,IAAiB;AAEtD,cAAM;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,IAAX;AAAiBC,UAAAA,EAAjB;AAAqBC,UAAAA,MAArB;AAA6BC,UAAAA,MAA7B;AAAqCC,UAAAA,QAArC;AAA+CC,UAAAA;AAA/C,YAA2DP,WAAW,CAAChB,IAA7E;AAEA,cAAMwB,cAAc,GAAG,EACnB,GAAGb,gBADgB;AAEnBxB,UAAAA,SAAS,EAAE,IAFQ;AAGnBsC,UAAAA,oBAAoB,EAAE;AAClBR,YAAAA,OADkB;AAElBC,YAAAA,IAFkB;AAGlBC,YAAAA,EAHkB;AAIlBC,YAAAA,MAJkB;AAKlBC,YAAAA,MALkB;AAMlBC,YAAAA,QANkB;AAOlBC,YAAAA;AAPkB;AAHH,SAAvB;AAaAxC,QAAAA,KAAK,CAAC2C,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,UAASjC,OAAO,KAAK,IAAZ,GAAmB,QAAnB,GAA8B,UAAW,EAA/F,EAAkG;AAC9FkC,UAAAA,WAAW,EAAElC,OAAO,KAAK,IAAZ,GAAmB,SAAnB,GAA+B,WADkD;AAE9FgB,UAAAA,QAF8F;AAG9FC,UAAAA,eAH8F;AAI9FkB,UAAAA,QAAQ,EAAElB,eAJoF;AAK9FW,UAAAA;AAL8F,SAAlG,EAMG;AACCQ,UAAAA,eAAe,EAAE;AADlB,SANH,EAQGjB,IARH,CAQSkB,GAAD,IAAS;AACb,cAAIA,GAAG,CAACjC,IAAJ,CAASkC,OAAT,KAAqB,yBAAzB,EAAoD;AAChDzB,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,GAAG,CAACjC,IAA5B;AAEAL,YAAAA,OAAO,CAAC,CAAD,CAAP;;AAEA,gBAAIY,KAAK,KAAK,IAAd,EAAoB;AAChB,oBAAM4B,QAAQ,GAAG;AACbC,gBAAAA,OAAO,EAAEH,GAAG,CAACjC,IAAJ,CAASA,IAAT,CAAcoC,OADV;AAEbC,gBAAAA,SAAS,EAAE7C;AAFE,eAAjB;AAIAT,cAAAA,KAAK,CAAC2C,IAAN,CAAW,qBAAX,EAAkCS,QAAlC,EAA4CpB,IAA5C,CAAkDuB,SAAD,IAAe;AAC5D,oBAAIA,SAAS,CAACtC,IAAV,CAAekC,OAAf,KAA2B,gCAA/B,EAAiE;AAC7DzB,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B4B,SAAS,CAACtC,IAAvC;AAEAlB,kBAAAA,mBAAmB,CAACyD,OAApB,CAA4B,iEAA5B,EAA+F,6BAA/F,EAA8H,IAA9H;AAEAC,kBAAAA,UAAU,CAAC,MAAM;AACb;AACAxD,oBAAAA,cAAc,CAACiD,GAAG,CAACjC,IAAJ,CAASA,IAAV,CAAd;;AAEA,wBAAIiC,GAAG,CAACjC,IAAJ,CAASA,IAAT,CAAc8B,WAAd,KAA8B,WAAlC,EAA+C;AAC3CvC,sBAAAA,OAAO,CAACkD,IAAR,CAAa,qBAAb;AACH,qBAFD,MAEO;AACHlD,sBAAAA,OAAO,CAACkD,IAAR,CAAa,mBAAb;AACH;AACJ,mBATS,EASP,IATO,CAAV;AAUH,iBAfD,MAeO;AACHhC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4B,SAAS,CAACtC,IAAxC;AAEAlB,kBAAAA,mBAAmB,CAAC4D,OAApB,CAA4B,iHAA5B,EAA+I,0CAA/I,EAA2L,IAA3L;AACH;AACJ,eArBD,EAqBGC,KArBH,CAqBUC,SAAD,IAAe;AACpBnC,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBkC,SAAzB;AAEA9D,gBAAAA,mBAAmB,CAAC4D,OAApB,CAA4B,iHAA5B,EAA+I,0CAA/I,EAA2L,IAA3L;AACH,eAzBD;AA0BH,aA/BD,MA+BO;AACHjC,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,WAvCD,MAuCO;AAEHD,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBuB,GAAG,CAACjC,IAAvB;AAEAlB,YAAAA,mBAAmB,CAAC+D,KAApB,CAA0BZ,GAAG,CAACjC,IAAJ,CAASkC,OAAnC,EAA4C,oBAA5C,EAAkE,IAAlE;AACH;AACJ,SAtDD,EAsDGS,KAtDH,CAsDUG,GAAD,IAAS;AACdrC,UAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACH,SAxDD;AAyDH,OA1ED,EA0EGH,KA1EH,CA0EUI,WAAD,IAAiB;AACtBtC,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDqC,WAAxD;AAEAjE,QAAAA,mBAAmB,CAAC+D,KAApB,CAA0B,+IAA1B,EAA2K,oBAA3K,EAAiM,IAAjM;AACH,OA9ED;AA+EH,KAjFD,MAiFO,IAAIzD,QAAQ,KAAK,IAAjB,EAAuB;AAC1B;AACAL,MAAAA,KAAK,CAAC+B,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAA0CC,WAAD,IAAiB;AAEtD,cAAM;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,IAAX;AAAiBC,UAAAA,EAAjB;AAAqBC,UAAAA,MAArB;AAA6BC,UAAAA,MAA7B;AAAqCC,UAAAA,QAArC;AAA+CC,UAAAA;AAA/C,YAA2DP,WAAW,CAAChB,IAA7E;AAEA,cAAMwB,cAAc,GAAG,EACnB,GAAGb,gBADgB;AAEnBxB,UAAAA,SAAS,EAAE,KAFQ;AAGnBsC,UAAAA,oBAAoB,EAAE;AAClBR,YAAAA,OADkB;AAElBC,YAAAA,IAFkB;AAGlBC,YAAAA,EAHkB;AAIlBC,YAAAA,MAJkB;AAKlBC,YAAAA,MALkB;AAMlBC,YAAAA,QANkB;AAOlBC,YAAAA;AAPkB;AAHH,SAAvB;AAaAxC,QAAAA,KAAK,CAAC2C,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,UAASjC,OAAO,KAAK,IAAZ,GAAmB,QAAnB,GAA8B,UAAW,EAA/F,EAAkG;AAC9FkC,UAAAA,WAAW,EAAElC,OAAO,KAAK,IAAZ,GAAmB,SAAnB,GAA+B,WADkD;AAE9FgB,UAAAA,QAF8F;AAG9FC,UAAAA,eAH8F;AAI9FkB,UAAAA,QAAQ,EAAElB,eAJoF;AAK9FW,UAAAA;AAL8F,SAAlG,EAMG;AACCQ,UAAAA,eAAe,EAAE;AADlB,SANH,EAQGjB,IARH,CAQSkB,GAAD,IAAS;AACb,cAAIA,GAAG,CAACjC,IAAJ,CAASkC,OAAT,KAAqB,yBAAzB,EAAoD;AAChDzB,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,GAAG,CAACjC,IAA5B;AAEAL,YAAAA,OAAO,CAAC,CAAD,CAAP;;AAEA,gBAAIY,KAAK,KAAK,IAAd,EAAoB;AAEhB,oBAAM4B,QAAQ,GAAG;AACbC,gBAAAA,OAAO,EAAEH,GAAG,CAACjC,IAAJ,CAASA,IAAT,CAAcoC,OADV;AAEbC,gBAAAA,SAAS,EAAE7C;AAFE,eAAjB;AAIAT,cAAAA,KAAK,CAAC2C,IAAN,CAAW,qBAAX,EAAkCS,QAAlC,EAA4CpB,IAA5C,CAAkDuB,SAAD,IAAe;AAC5D,oBAAIA,SAAS,CAACtC,IAAV,CAAekC,OAAf,KAA2B,gCAA/B,EAAiE;AAC7DzB,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B4B,SAAS,CAACtC,IAAvC;AAEAlB,kBAAAA,mBAAmB,CAACyD,OAApB,CAA4B,iEAA5B,EAA+F,6BAA/F,EAA8H,IAA9H;AAEAC,kBAAAA,UAAU,CAAC,MAAM;AACb;AACAxD,oBAAAA,cAAc,CAACiD,GAAG,CAACjC,IAAJ,CAASA,IAAV,CAAd;;AAEA,wBAAIiC,GAAG,CAACjC,IAAJ,CAASA,IAAT,CAAc8B,WAAd,KAA8B,WAAlC,EAA+C;AAC3CvC,sBAAAA,OAAO,CAACkD,IAAR,CAAa,qBAAb;AACH,qBAFD,MAEO;AACHlD,sBAAAA,OAAO,CAACkD,IAAR,CAAa,mBAAb;AACH;AACJ,mBATS,EASP,IATO,CAAV;AAUH,iBAfD,MAeO;AACHhC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4B,SAAS,CAACtC,IAAxC;AAEAlB,kBAAAA,mBAAmB,CAAC4D,OAApB,CAA4B,iHAA5B,EAA+I,0CAA/I,EAA2L,IAA3L;AACH;AACJ,eArBD,EAqBGC,KArBH,CAqBUC,SAAD,IAAe;AACpBnC,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBkC,SAAzB;AAEA9D,gBAAAA,mBAAmB,CAAC4D,OAApB,CAA4B,iHAA5B,EAA+I,0CAA/I,EAA2L,IAA3L;AACH,eAzBD;AA0BH,aAhCD,MAgCO;AACHjC,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,WAxCD,MAwCO;AAEHD,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBuB,GAAG,CAACjC,IAAvB;AAEAlB,YAAAA,mBAAmB,CAAC+D,KAApB,CAA0BZ,GAAG,CAACjC,IAAJ,CAASkC,OAAnC,EAA4C,oBAA5C,EAAkE,IAAlE;AACH;AACJ,SAvDD,EAuDGS,KAvDH,CAuDUG,GAAD,IAAS;AACdrC,UAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACH,SAzDD;AA0DH,OA3ED,EA2EGH,KA3EH,CA2EUI,WAAD,IAAiB;AACtBtC,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDqC,WAAxD;AAEAjE,QAAAA,mBAAmB,CAAC+D,KAApB,CAA0B,+IAA1B,EAA2K,oBAA3K,EAAiM,IAAjM;AACH,OA/ED;AAgFH;AACJ,GA7KD;;AA8KA,QAAMG,iBAAiB,GAAI1C,CAAD,IAAO;AAC7B,UAAM;AAAE2C,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB5C,CAAC,CAAC6C,MAA1B;AAEAlD,IAAAA,OAAO,CAACmD,SAAS,IAAI;AACjB,aAAO,EACH,GAAGA,SADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALM,CAAP;AAMH,GATD;;AAUA,QAAMG,gBAAgB,GAAI/C,CAAD,IAAO;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAEAL,IAAAA,gBAAgB,CAACC,CAAD,EAAI,KAAJ,CAAhB;AACH,GAJD;;AAKA,QAAMgD,kBAAkB,GAAG,MAAM;AAC7B,QAAI5D,IAAI,KAAK,CAAb,EAAgB;AACZ,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,KAAK,EAAEM,IAAI,CAACa,eAAnB;AAAoC,QAAA,QAAQ,EAAEmC,iBAA9C;AAAiE,QAAA,SAAS,EAAC,cAA3E;AAA0F,QAAA,IAAI,EAAC,MAA/F;AAAsG,QAAA,IAAI,EAAC,iBAA3G;AAA6H,QAAA,WAAW,EAAC,mBAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,eAOI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,KAAK,EAAEhD,IAAI,CAACY,QAAnB;AAA6B,QAAA,QAAQ,EAAEoC,iBAAvC;AAA0D,QAAA,SAAS,EAAC,2CAApE;AAAgH,QAAA,IAAI,EAAElD,YAAY,KAAK,IAAjB,GAAwB,MAAxB,GAAiC,UAAvJ;AAAmK,QAAA,IAAI,EAAC,UAAxK;AAAmL,QAAA,WAAW,EAAC,UAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,sDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuE;AAAK,QAAA,OAAO,EAAE,MAAM;AACvFC,UAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,SAFsE;AAEpE,QAAA,GAAG,EAAEyD,OAAO,CAAC,yBAAD,CAFwD;AAE3B,QAAA,SAAS,EAAC,iBAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvE,CAFJ,CADJ,CADJ,CAPJ,eAiBI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAZ;AAAuC,QAAA,SAAS,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,OAAO,EAAE,MAAjC;AAAyCC,UAAAA,UAAU,EAAE,QAArD;AAA+DC,UAAAA,cAAc,EAAE;AAA/E,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,SAAjB;AAA4B,QAAA,QAAQ,EAAExD,YAAtC;AAAoD,QAAA,OAAO,EAAER,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAO,QAAA,KAAK,EAAE;AAAEiE,UAAAA,UAAU,EAAE;AAAd,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC3D,iBAAvC,CAFJ,CADJ,CAjBJ,eAwBI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ,CAxBJ,eA+BI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ,CA/BJ,eAqCI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAGI,CAAD,IAAO+C,gBAAgB,CAAC/C,CAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,CArCJ,eA0CI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACkB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAApB,CADlB,CADJ,CA1CJ,CADJ;AAkDH,KAnDD,MAmDO;AACH,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAAEwD,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAwC,QAAA,SAAS,EAAC,oBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAGZ,KAAD,IAAWzD,OAAO,CAACyD,KAAD,CAA5C;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAmE,QAAA,MAAM,EAAE,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CANJ,CADJ;AAcH;AACJ,GApED;;AAqEAzC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBV,IAApB;AACA,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAC,SADd;AAEI,IAAA,WAAW,EAAC,GAFhB;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,cAAc,EAAC,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAUI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,OAAO,KAAK,IAAZ,GAAmB,QAAnB,GAA8B,kBAAvC,CAAJ,aAAnB,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oLAFJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAGmE,KAAD,IAAW1D,gBAAgB,CAAC0D,KAAD,EAAQ,IAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,kBAAkB,EADvB,CADJ,CADJ,CANJ,CADJ,CAVJ,eA2BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ;AA+BH,CAvTD;;AAwTA,eAAerE,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAAkCM,MAAlC,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport Navbar from '../components/_App/Navbar';\nimport PageBanner from '../components/Common/PageBanner';\nimport Footer from '../components/_App/Footer';\nimport {Link, useHistory} from 'react-router-dom'; \nimport Switch from \"react-switch\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport { authentication } from \"../redux/actions/authentication/auth.js\";\nimport { connect } from \"react-redux\";\nimport { deviceDetect, isBrowser, isMobile } from 'react-device-detect';\nimport ReactCodeInput from \"react-code-input\";\n\n\nconst SignIn = ({ authentication }) => {\n\n    const history = useHistory();\n\n    const [ code, setCode ] = useState(\"\");\n    const [ page, setPage ] = useState(1);\n    const [ checked, setchecked ] = useState(false);\n    const [ hidePassword, setHidePassword ] = useState(false);\n    const [ data, setData ] = useState({});\n    const [ switchAccountType, switchType ] = useState(\"You're logging in as - 'Company/Employer'\");\n\n    const handleChange = (checked) => {\n        setchecked(checked);\n\n        if (checked === true) {\n            switchType(\"You're logging in as - 'Hacker/Security Expert'\")\n        } else {\n            switchType(\"You're logging in as - 'Company/Employer'\");\n        }\n    }\n    \n    const handleSubmission = (e, ready) => {\n        e.preventDefault();\n\n        console.log(\"submitted.\");\n\n        const detectDeviceInfo = deviceDetect();\n\n        const { password, usernameOrEmail } = data;\n\n        if (isBrowser === true) {\n            // computer, laptop, etc.. is being used.\n            axios.get(\"https://ipapi.co/json/\").then((responseeee) => {\n\n                const { country, city, ip, region, postal, timezone, version } = responseeee.data;\n\n                const userDeviceData = {\n                    ...detectDeviceInfo,\n                    isBrowser: true,\n                    IPRelatedInformation: {\n                        country, \n                        city, \n                        ip, \n                        region, \n                        postal, \n                        timezone, \n                        version\n                    }\n                };\n                axios.post(`${process.env.REACT_APP_BASE_URL}/login/${checked === true ? \"hacker\" : \"employer\"}`, {\n                    accountType: checked === true ? \"hackers\" : \"employers\",\n                    password,\n                    usernameOrEmail,\n                    username: usernameOrEmail,\n                    userDeviceData\n                }, {\n                    withCredentials: true\n                }).then((res) => {\n                    if (res.data.message === \"Successfully logged in!\") {\n                        console.log(\"success!\", res.data);\n\n                        setPage(2);\n        \n                        if (ready === true) {\n                            const configgg = {\n                                authyId: res.data.data.authyId,\n                                entryCode: code\n                            }\n                            axios.post(\"/twilio/verify/code\", configgg).then((innerResp) => {\n                                if (innerResp.data.message === \"Successfully verified account!\") {\n                                    console.log(\"Code matches!\", innerResp.data);\n\n                                    NotificationManager.success('Successful authentication! You will be logged-in momentarily...', 'Successfully authenticated!', 3000);\n                    \n                                    setTimeout(() => {\n                                        // do authentication - registration redux logic\n                                        authentication(res.data.data);\n                    \n                                        if (res.data.data.accountType === \"employers\") {\n                                            history.push(\"/dashboard/employer\");\n                                        } else {\n                                            history.push(\"/dashboard/hacker\");\n                                        }\n                                    }, 3000);\n                                } else {\n                                    console.log(\"err with code!\", innerResp.data);\n\n                                    NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                                }\n                            }).catch((errorCode) => {\n                                console.log(\"errorCode\", errorCode);\n\n                                NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                            });\n                        } else {\n                            console.log(\"first page completed..!\");\n                        }\n                    } else {\n        \n                        console.log(\"err\", res.data);\n                        \n                        NotificationManager.error(res.data.message, 'ERROR LOGGING-IN!.', 3500);\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                })\n            }).catch((errorrrrrrr) => {\n                console.log(\"errrror fetching IP address information.\", errorrrrrrr);\n\n                NotificationManager.error(\"Error fetching device/IP information - CANNOT sign-in until this information is collected - please try again (not related to password/email).\", 'ERROR LOGGING-IN!.', 3500);\n            })\n        } else if (isMobile === true) {\n            // mobile device is being used.\n            axios.get(\"https://ipapi.co/json/\").then((responseeee) => {\n\n                const { country, city, ip, region, postal, timezone, version } = responseeee.data;\n\n                const userDeviceData = {\n                    ...detectDeviceInfo,\n                    isBrowser: false,\n                    IPRelatedInformation: {\n                        country, \n                        city, \n                        ip, \n                        region, \n                        postal, \n                        timezone, \n                        version\n                    }\n                };\n                axios.post(`${process.env.REACT_APP_BASE_URL}/login/${checked === true ? \"hacker\" : \"employer\"}`, {\n                    accountType: checked === true ? \"hackers\" : \"employers\",\n                    password,\n                    usernameOrEmail,\n                    username: usernameOrEmail,\n                    userDeviceData\n                }, {\n                    withCredentials: true\n                }).then((res) => {\n                    if (res.data.message === \"Successfully logged in!\") {\n                        console.log(\"success!\", res.data);\n\n                        setPage(2);\n\n                        if (ready === true) {\n\n                            const configgg = {\n                                authyId: res.data.data.authyId,\n                                entryCode: code\n                            }\n                            axios.post(\"/twilio/verify/code\", configgg).then((innerResp) => {\n                                if (innerResp.data.message === \"Successfully verified account!\") {\n                                    console.log(\"Code matches!\", innerResp.data);\n\n                                    NotificationManager.success('Successful authentication! You will be logged-in momentarily...', 'Successfully authenticated!', 3000);\n                \n                                    setTimeout(() => {\n                                        // do authentication - registration redux logic\n                                        authentication(res.data.data);\n                    \n                                        if (res.data.data.accountType === \"employers\") {\n                                            history.push(\"/dashboard/employer\");\n                                        } else {\n                                            history.push(\"/dashboard/hacker\");\n                                        }\n                                    }, 3000);\n                                } else {\n                                    console.log(\"err with code!\", innerResp.data);\n\n                                    NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                                }\n                            }).catch((errorCode) => {\n                                console.log(\"errorCode\", errorCode);\n\n                                NotificationManager.warning(\"The code your entered does NOT match the code that was sent to your cellular device, please enter a valid code!\", \"Enter does NOT match code sent to phone!\", 4750);\n                            });\n                        } else {\n                            console.log(\"first page completed..!\");\n                        }\n                    } else {\n        \n                        console.log(\"err\", res.data);\n                        \n                        NotificationManager.error(res.data.message, 'ERROR LOGGING-IN!.', 3500);\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                })\n            }).catch((errorrrrrrr) => {\n                console.log(\"errrror fetching IP address information.\", errorrrrrrr);\n                \n                NotificationManager.error(\"Error fetching device/IP information - CANNOT sign-in until this information is collected - please try again (not related to password/email).\", 'ERROR LOGGING-IN!.', 3500);\n            })\n        }\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n    }\n    const checkAndContinue = (e) => {\n        console.log(\"checkAndContinue clicked/ran..\");\n        \n        handleSubmission(e, false);\n    }\n    const renderPagesScreens = () => {\n        if (page === 1) {\n            return (\n                <Fragment>\n                    <div className=\"col-12\">\n                        <div className=\"form-group\">\n                            <input value={data.usernameOrEmail} onChange={handleInputChange} className=\"form-control\" type=\"text\" name=\"usernameOrEmail\" placeholder=\"Username or Email\" />\n                        </div>\n                    </div>\n\n                    <div className=\"col-12\">\n                        <div className=\"form-group\">\n                            <div className=\"input-group\">\n                                <input value={data.password} onChange={handleInputChange} className=\"form-control custom-password-input-signin\" type={hidePassword === true ? \"text\" : \"password\"} name=\"password\" placeholder=\"Password\" />\n                                <span className=\"input-group-text custom-input-text-group-transparent\"><img onClick={() => {\n                                    setHidePassword(!hidePassword);\n                                }} src={require(\"../assets/icons/eye.png\")} className=\"eye-icon-custom\" /></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ paddingBottom: \"15px\" }} className=\"col-12\">\n                        <div style={{ flexDirection: \"row\", display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            <Switch onColor={\"#00acee\"} onChange={handleChange} checked={checked} />\n                            <label style={{ marginLeft: \"10px\" }}>{switchAccountType}</label>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6 col-sm-6 form-condition\">\n                        <div className=\"agree-label\">\n                            <input type=\"checkbox\" id=\"chb1\" />\n                            <label forhtml=\"chb1\">Remember Me</label>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6 col-sm-6\">\n                        <Link to=\"/forgot-password\">\n                            <a className=\"forget\">Forgot my password?</a>\n                        </Link>\n                    </div>\n\n                    <div className=\"col-12\">\n                        <button className=\"default-btn btn-two\" onClick={(e) => checkAndContinue(e)}>\n                            Sign-in & Request Verification Code (Text Msg)\n                        </button>\n                    </div>\n                    <div className=\"col-12\">\n                        <p className=\"account-desc\">\n                            Not a member? <Link to=\"/sign-up\"><a>Sign Up</a></Link>\n                        </p>\n                    </div>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <h3 className='text-center'>Enter the code we just texted you, this code should be entered exactly as it displays on your device..</h3>\n                    <div style={{ marginBottom: \"22.5px\" }} className='centered-both-ways'>\n                        <ReactCodeInput onChange={(value) => setCode(value)} type='number' fields={7} />\n                    </div>\n\n                    <div className=\"col-12\">\n                        <button className=\"default-btn btn-two\" type=\"submit\">\n                            Submit Phone Verification-Code\n                        </button>\n                    </div>\n                </Fragment>\n            );\n        }\n    }\n    console.log(\"data\", data);\n    return (\n        <>\n            <Navbar />\n            \n            <PageBanner \n                pageTitle=\"Sign In\" \n                homePageUrl=\"/\" \n                homePageText=\"Home\" \n                activePageText=\"Sign In\" \n            /> \n\n            <div className=\"user-area-all-style log-in-area ptb-100\">\n                <div className=\"container\">\n                    <div className=\"section-title\">\n                        <h2>Log In to your <em><strong>{checked === true ? \"Hacker\" : \"Employer/Company\"}</strong> account</em>!</h2>\n                        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium quas cumque iste veniam id dolorem deserunt ratione error voluptas rem ullam possimus placeat, ut, odio</p>\n                    </div>\n\n                    <div className=\"contact-form-action\">\n                        <form onSubmit={(event) => handleSubmission(event, true)}>\n                            <div className=\"row\">\n                                {renderPagesScreens()}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <Footer />\n        </>\n    )\n}\nexport default connect(null, { authentication })(SignIn);"]},"metadata":{},"sourceType":"module"}