{"ast":null,"code":"import allReducers from\"../reducers/root.js\";import reduxThunk from\"redux-thunk\";import{createStore,applyMiddleware,compose}from\"redux\";import thunk from\"redux-thunk\";import{persistStore,persistReducer,createTransform}from'redux-persist';// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from'redux-persist/lib/storage';import promiseMiddleware from'redux-promise';import{stringify,parse}from'flatted';const transformCircular=createTransform((inboundState,key)=>stringify(inboundState),(outboundState,key)=>parse(outboundState));const persistConfig={key:'primary',storage:storage,transforms:[transformCircular]};const pReducer=persistReducer(persistConfig,allReducers);const middleware=[thunk];const composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;export const store=createStore(pReducer,composeEnhancers(applyMiddleware(reduxThunk,promiseMiddleware)));export const persistor=persistStore(store);store.subscribe(()=>{console.log(\"Store is now: \",store.getState());});","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/redux/store/store.js"],"names":["allReducers","reduxThunk","createStore","applyMiddleware","compose","thunk","persistStore","persistReducer","createTransform","storage","promiseMiddleware","stringify","parse","transformCircular","inboundState","key","outboundState","persistConfig","transforms","pReducer","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","subscribe","console","log","getState"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,CAAuBC,cAAvB,CAAuCC,eAAvC,KAA8D,eAA9D,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,eAA9B,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,SAAjC,CAEA,KAAMC,CAAAA,iBAAiB,CAAGL,eAAe,CACrC,CAACM,YAAD,CAAeC,GAAf,GAAuBJ,SAAS,CAACG,YAAD,CADK,CAErC,CAACE,aAAD,CAAgBD,GAAhB,GAAwBH,KAAK,CAACI,aAAD,CAFQ,CAAzC,CAKA,KAAMC,CAAAA,aAAa,CAAG,CACrBF,GAAG,CAAE,SADgB,CAErBN,OAAO,CAAEA,OAFY,CAGrBS,UAAU,CAAE,CAACL,iBAAD,CAHS,CAAtB,CAMA,KAAMM,CAAAA,QAAQ,CAAGZ,cAAc,CAACU,aAAD,CAAgBjB,WAAhB,CAA/B,CAEA,KAAMoB,CAAAA,UAAU,CAAG,CAACf,KAAD,CAAnB,CAEA,KAAMgB,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CnB,OAAxE,CAEA,MAAO,MAAMoB,CAAAA,KAAK,CAAGtB,WAAW,CAACiB,QAAD,CAAWE,gBAAgB,CAAClB,eAAe,CAACF,UAAD,CAAaS,iBAAb,CAAhB,CAA3B,CAAzB,CAEP,MAAO,MAAMe,CAAAA,SAAS,CAAGnB,YAAY,CAACkB,KAAD,CAA9B,CAEPA,KAAK,CAACE,SAAN,CAAgB,IAAM,CACrBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BJ,KAAK,CAACK,QAAN,EAA9B,EACA,CAFD","sourcesContent":["import allReducers from \"../reducers/root.js\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer, createTransform } from 'redux-persist';\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport promiseMiddleware from 'redux-promise';\nimport { stringify, parse } from 'flatted';\n\nconst transformCircular = createTransform(\n    (inboundState, key) => stringify(inboundState),\n    (outboundState, key) => parse(outboundState),\n)\n\nconst persistConfig = {\n key: 'primary',\n storage: storage,\n transforms: [transformCircular]\n};\n\nconst pReducer = persistReducer(persistConfig, allReducers);\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(pReducer, composeEnhancers(applyMiddleware(reduxThunk, promiseMiddleware)));\n\nexport const persistor = persistStore(store);\n\nstore.subscribe(() => {\n\tconsole.log(\"Store is now: \", store.getState());\n})"]},"metadata":{},"sourceType":"module"}