{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst MainHooksCustomHelpers = () => {\n  const coverLetterTextFormHelper = {\n    check: (setError, register, clearErrors) => {\n      return { ...register(\"demoURL\", {\n          required: true,\n          minLength: {\n            value: 8,\n            message: \"You must enter AT Least 8 characters\"\n          },\n          maxLength: {\n            value: 75,\n            message: \"You may ONLY enter 75 characters or less\"\n          },\n          onBlur: e => {\n            // check if valid url in helper file.\n            const validOrNot = helpers.CalculateWhetherURLIsLegit(e.target.value); // extracted final value from input\n\n            const value = e.target.value;\n\n            if (validOrNot === true) {\n              setValue('demoURL', value, {\n                shouldValidate: false\n              }); // clear error after setting proper change state\n\n              clearErrors(\"demoURL\");\n            } else {\n              setTimeout(() => {\n                if (!errors.demoURL) {\n                  setError(\"demoURL\", {\n                    type: \"manual\",\n                    message: \"You MUST enter a VALID URL including http/https and ://\"\n                  });\n                }\n              }, 75);\n            }\n          }\n        })\n      };\n    },\n    id: \"auction-ONLY\",\n    name: \"auctionPurchaseType\",\n    value: \"auction-ONLY\"\n  }; // return values to other component\n\n  return {\n    coverLetterTextFormHelper\n  };\n};\n\nexport default MainHooksCustomHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/reactHookFormHelpers.js"],"names":["MainHooksCustomHelpers","coverLetterTextFormHelper","check","setError","register","clearErrors","required","minLength","value","message","maxLength","onBlur","e","validOrNot","helpers","CalculateWhetherURLIsLegit","target","setValue","shouldValidate","setTimeout","errors","demoURL","type","id","name"],"mappings":"AAAA;AACA,MAAMA,sBAAsB,GAAG,MAAM;AAEjC,QAAMC,yBAAyB,GAAG;AAC9BC,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,WAArB,KAAqC;AACxC,aACI,EAAC,GAAGD,QAAQ,CAAC,SAAD,EAAY;AAAEE,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AACjDC,YAAAA,KAAK,EAAE,CAD0C;AAEjDC,YAAAA,OAAO,EAAE;AAFwC,WAA7B;AAGrBC,UAAAA,SAAS,EAAE;AACVF,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAHU;AAMrBE,UAAAA,MAAM,EAAGC,CAAD,IAAO;AACd;AACA,kBAAMC,UAAU,GAAGC,OAAO,CAACC,0BAAR,CAAmCH,CAAC,CAACI,MAAF,CAASR,KAA5C,CAAnB,CAFc,CAGd;;AACA,kBAAMA,KAAK,GAAGI,CAAC,CAACI,MAAF,CAASR,KAAvB;;AAEA,gBAAIK,UAAU,KAAK,IAAnB,EAAyB;AACrBI,cAAAA,QAAQ,CAAC,SAAD,EAAYT,KAAZ,EAAmB;AAAEU,gBAAAA,cAAc,EAAE;AAAlB,eAAnB,CAAR,CADqB,CAErB;;AACAb,cAAAA,WAAW,CAAC,SAAD,CAAX;AACH,aAJD,MAIO;AACHc,cAAAA,UAAU,CAAC,MAAM;AACb,oBAAI,CAACC,MAAM,CAACC,OAAZ,EAAqB;AACjBlB,kBAAAA,QAAQ,CAAC,SAAD,EAAY;AAChBmB,oBAAAA,IAAI,EAAE,QADU;AAEhBb,oBAAAA,OAAO,EAAE;AAFO,mBAAZ,CAAR;AAIH;AACJ,eAPS,EAOP,EAPO,CAAV;AAQH;AACJ;AA1BuB,SAAZ;AAAZ,OADJ;AA6BH,KA/B6B;AAgC9Bc,IAAAA,EAAE,EAAE,cAhC0B;AAiC9BC,IAAAA,IAAI,EAAE,qBAjCwB;AAkC9BhB,IAAAA,KAAK,EAAE;AAlCuB,GAAlC,CAFiC,CAsCjC;;AACA,SAAO;AACHP,IAAAA;AADG,GAAP;AAGH,CA1CD;;AA4CA,eAAeD,sBAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHooksCustomHelpers = () => {\n    \n    const coverLetterTextFormHelper = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"demoURL\", { required: true, minLength: {\n                    value: 8,\n                    message: \"You must enter AT Least 8 characters\"\n                }, maxLength: {\n                    value: 75,\n                    message: \"You may ONLY enter 75 characters or less\"\n                }, onBlur: (e) => {\n                    // check if valid url in helper file.\n                    const validOrNot = helpers.CalculateWhetherURLIsLegit(e.target.value);\n                    // extracted final value from input\n                    const value = e.target.value;\n\n                    if (validOrNot === true) {\n                        setValue('demoURL', value, { shouldValidate: false });\n                        // clear error after setting proper change state\n                        clearErrors(\"demoURL\");\n                    } else {\n                        setTimeout(() => {\n                            if (!errors.demoURL) {\n                                setError(\"demoURL\", {\n                                    type: \"manual\",\n                                    message: \"You MUST enter a VALID URL including http/https and ://\",\n                                });\n                            }\n                        }, 75)\n                    }\n                }})}\n            );\n        },\n        id: \"auction-ONLY\",\n        name: \"auctionPurchaseType\",\n        value: \"auction-ONLY\"\n    };\n    // return values to other component\n    return {\n        coverLetterTextFormHelper\n    }\n}\n\nexport default MainHooksCustomHelpers;"]},"metadata":{},"sourceType":"module"}