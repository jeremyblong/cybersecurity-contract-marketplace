{"ast":null,"code":"import React,{Fragment}from'react';import{useForm,Controller}from'react-hook-form';import{Row,Col,Form,Label,Input,ListGroupItem,ListGroup,Button}from'reactstrap';import{WithContext as ReactTags}from'react-tag-input';import{NotificationManager}from\"react-notifications\";const KeyCodes={comma:188,enter:[10,13]};const delimiters=[...KeyCodes.enter,KeyCodes.comma];const suggestions=[];const PageOneVideoCreationHelper=_ref=>{let{saveNewDetails,jumpToStep,progress,setProgress}=_ref;const{register,handleSubmit,control,getValues,setValue,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});const onSubmit=data=>{if(data!==''){console.log(\"Great success!\");saveNewDetails(data);jumpToStep(1);}else{errors.showMessages();}};const gatheredValues=getValues();console.log(\"gatheredValues\",gatheredValues);const handleDelete=i=>{setValue(\"hashtags\",gatheredValues.hashtags.filter((tag,index)=>index!==i),{shouldValidate:true});};const handleAddition=tag=>{setValue(\"hashtags\",[...gatheredValues.hashtags,tag],{shouldValidate:true});};const handleDrag=(tag,currPos,newPos,tagggs)=>{const tags=[...tagggs];const newTags=tags.slice();newTags.splice(currPos,1);newTags.splice(newPos,0,tag);// re-render\nreturn newTags;};const handleInputChange=e=>{const{value,name}=e.target;setValue(name,value,{shouldValidate:true});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Form,{className:\"needs-validation\",onSubmit:handleSubmit(onSubmit,(errorsss,e)=>{console.log(\"errrrrrs\",errorsss,e);})},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,\"Video Title\"),/*#__PURE__*/React.createElement(Input,Object.assign({},register(\"videoTitle\",{required:{value:true,message:\"You MUST enter a value between 15-125 characters\"},minLength:{value:15,message:\"You must enter AT Least 15 characters\"},maxLength:{value:125,message:\"You may ONLY enter 125 characters or less\"}}),{className:\"form-control\",onChange:e=>handleInputChange(e),value:gatheredValues.videoTitle,name:\"videoTitle\",type:\"text\",placeholder:\"Enter your 'video title' for this tutorial..\"})),errors.videoTitle?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.videoTitle.message):null),/*#__PURE__*/React.createElement(Col,{md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,\"Video Subtitle\"),/*#__PURE__*/React.createElement(Input,Object.assign({},register(\"videoSubtitle\",{required:{value:true,message:\"You MUST enter a value between 15-125 characters\"},minLength:{value:15,message:\"You must enter AT Least 15 characters\"},maxLength:{value:125,message:\"You may ONLY enter 125 characters or less\"}}),{className:\"form-control\",onChange:e=>handleInputChange(e),value:gatheredValues.videoSubtitle,name:\"videoSubtitle\",type:\"text\",placeholder:\"Enter your 'subtitle' for this tutorial..\"})),errors.videoSubtitle?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.videoSubtitle.message):null),/*#__PURE__*/React.createElement(Col,{sm:\"12 mb-3\",md:\"12 mb-3\",lg:\"12 mb-3\",xl:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,\"Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"blue\"}},\"5(MIN) - 15(MAX) Tags\")),/*#__PURE__*/React.createElement(ListGroup,null,/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:\"hashtags\"},register(\"hashtags\",{required:{value:true,message:\"You MUST enter AT least 5 (five) tags up to a maximum of 15 (fifteen) tags\"}}),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(ReactTags,Object.assign({},field,{tags:gatheredValues.hashtags,name:\"hashtags\",suggestions:suggestions,classNames:{tags:'hashtagsTagsClass',tagInput:'hashtagsTagInputClass',tagInputField:'hashtagsTagInputFieldClass',selected:'hashtagsSelectedClass',tag:'hashtagsTagClass badge badge-primary',remove:'hashtagsRemoveClass',suggestions:'hashtagsSuggestionsClass',activeSuggestion:'hashtagsActiveSuggestionClass'},handleDelete:index=>{setValue('hashtags',handleDelete(index,gatheredValues.hashtags),{shouldValidate:true});},renderSuggestion:suggestion=>{// return list item(s)\nreturn/*#__PURE__*/React.createElement(ListGroupItem,{className:\"custom-suggestion-groupitem\",key:suggestion.index,onClick:()=>{// run conditional checks\nif(typeof gatheredValues.hashtags!==\"undefined\"){if(gatheredValues.hashtags.length<15){if(gatheredValues.hashtags.length>0){setValue('hashtags',[...gatheredValues.hashtags,suggestion],{shouldValidate:true});}else{setValue('hashtags',[suggestion],{shouldValidate:true});}}else{NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.',\"Too many hashtags!\",4250);}}else{setValue('hashtags',[suggestion],{shouldValidate:true});}}},suggestion.text);},readOnly:false,placeholder:\"Enter a tag (these are how people search & find your listing)\",maxLength:15,handleAddition:tag=>{if(typeof gatheredValues.hashtags!==\"undefined\"){if(gatheredValues.hashtags.length<15){if(gatheredValues.hashtags.length>0){handleAddition(tag);}else{setValue('hashtags',[tag],{shouldValidate:true});}}else{NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.',\"Too many hashtags!\",4500);}}else{setValue('hashtags',[tag],{shouldValidate:true});}},handleDrag:(tag,currPos,newPos)=>{setValue('hashtags',handleDrag(tag,currPos,newPos,gatheredValues.hashtags),{shouldValidate:true});},delimiters:delimiters}));}}))),errors.hashtags?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.hashtags.message):null),/*#__PURE__*/React.createElement(Col,{sm:\"12 mb-3\",md:\"12 mb-3\",lg:\"12 mb-3\",xl:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,\"Video Description\"),/*#__PURE__*/React.createElement(Input,Object.assign({},register(\"description\",{required:{value:true,message:\"You MUST enter a value between 15-350 characters\"},minLength:{value:15,message:\"You must enter AT Least 15 characters\"},maxLength:{value:350,message:\"You may ONLY enter 350 characters or less\"}}),{className:\"form-control\",onChange:e=>handleInputChange(e),value:gatheredValues.description,name:\"description\",type:\"textarea\",rows:10,placeholder:\"Enter your 'video title' for this tutorial..\"})),errors.description?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.description.message):null)),/*#__PURE__*/React.createElement(Button,{type:\"submit\",className:\"btn-square-success\",color:\"success\",style:{width:\"100%\",marginBottom:\"12.5px\",marginTop:\"12.5px\"}},\"Proceed Forward W/Next Step\")))));};export default PageOneVideoCreationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageOne/formPageOne.js"],"names":["React","Fragment","useForm","Controller","Row","Col","Form","Label","Input","ListGroupItem","ListGroup","Button","WithContext","ReactTags","NotificationManager","KeyCodes","comma","enter","delimiters","suggestions","PageOneVideoCreationHelper","saveNewDetails","jumpToStep","progress","setProgress","register","handleSubmit","control","getValues","setValue","formState","errors","mode","reValidateMode","onSubmit","data","console","log","showMessages","gatheredValues","handleDelete","i","hashtags","filter","tag","index","shouldValidate","handleAddition","handleDrag","currPos","newPos","tagggs","tags","newTags","slice","splice","handleInputChange","e","value","name","target","errorsss","required","message","minLength","maxLength","videoTitle","videoSubtitle","color","field","tagInput","tagInputField","selected","remove","activeSuggestion","suggestion","length","warning","text","description","width","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Form, Label, Input, ListGroupItem, ListGroup, Button } from 'reactstrap';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { NotificationManager } from \"react-notifications\";\n\n\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13],\n};\n\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst suggestions = [];\n\nconst PageOneVideoCreationHelper = ({ saveNewDetails, jumpToStep, progress, setProgress }) => {\n\n    const { register, handleSubmit, control, getValues, setValue, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const onSubmit = data => {\n\n        if (data !== '') {\n            \n            console.log(\"Great success!\");\n\n            saveNewDetails(data);\n\n            jumpToStep(1);\n        } else {\n            errors.showMessages();\n        }\n    };\n\n    const gatheredValues = getValues();\n\n    console.log(\"gatheredValues\", gatheredValues);\n\n    const handleDelete = (i) => {\n        setValue(\"hashtags\", gatheredValues.hashtags.filter((tag, index) => index !== i), { shouldValidate: true });\n    }\n    const handleAddition = (tag) => {\n        setValue(\"hashtags\", [...gatheredValues.hashtags, tag], { shouldValidate: true });\n    }\n\n    const handleDrag = (tag, currPos, newPos, tagggs) => {\n        const tags = [...tagggs];\n        const newTags = tags.slice();\n\n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n\n        // re-render\n        return newTags;\n    }\n\n    const handleInputChange = (e) => {\n        const { value, name } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Form className=\"needs-validation\" onSubmit={handleSubmit(onSubmit, (errorsss, e) => {\n                        console.log(\"errrrrrs\", errorsss, e);\n                    })}>\n                        <div className=\"form-row\">\n                            \n                            <Col md=\"12 mb-3\">\n                                <Label>Video Title</Label>\n                                <Input {...register(\"videoTitle\", { required: {\n                                    value: true,\n                                    message: \"You MUST enter a value between 15-125 characters\"\n                                }, minLength: {\n                                    value: 15,\n                                    message: \"You must enter AT Least 15 characters\"\n                                }, maxLength: {\n                                    value: 125,\n                                    message: \"You may ONLY enter 125 characters or less\"\n                                }})} className=\"form-control\" onChange={(e) => handleInputChange(e)} value={gatheredValues.videoTitle} name=\"videoTitle\" type=\"text\" placeholder=\"Enter your 'video title' for this tutorial..\" />\n                                {errors.videoTitle ? <span className=\"span-tooltip\">{errors.videoTitle.message}</span> : null}\n                            </Col>\n                            \n                            <Col md=\"12 mb-3\">\n                                <Label>Video Subtitle</Label>\n                                <Input {...register(\"videoSubtitle\", { required: {\n                                    value: true,\n                                    message: \"You MUST enter a value between 15-125 characters\"\n                                }, minLength: {\n                                    value: 15,\n                                    message: \"You must enter AT Least 15 characters\"\n                                }, maxLength: {\n                                    value: 125,\n                                    message: \"You may ONLY enter 125 characters or less\"\n                                }})} className=\"form-control\" onChange={(e) => handleInputChange(e)} value={gatheredValues.videoSubtitle} name=\"videoSubtitle\" type=\"text\" placeholder=\"Enter your 'subtitle' for this tutorial..\" />\n                                {errors.videoSubtitle ? <span className=\"span-tooltip\">{errors.videoSubtitle.message}</span> : null}\n                            </Col>\n                            <Col sm=\"12 mb-3\" md=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\">\n                                <Label>Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - <strong style={{ color: \"blue\" }}>5(MIN) - 15(MAX) Tags</strong></Label>\n                                <ListGroup>\n                                    <Controller\n                                        control={control}\n                                        name=\"hashtags\"\n                                        {...register(\"hashtags\", { required: {\n                                            value: true,\n                                            message: \"You MUST enter AT least 5 (five) tags up to a maximum of 15 (fifteen) tags\"\n                                        }})}\n                                        render={({ field }) => (\n                                            <ReactTags \n                                                {...field}\n                                                tags={gatheredValues.hashtags}\n                                                name={\"hashtags\"}\n                                                suggestions={suggestions}\n                                                classNames={{\n                                                    tags: 'hashtagsTagsClass',\n                                                    tagInput: 'hashtagsTagInputClass',\n                                                    tagInputField: 'hashtagsTagInputFieldClass',\n                                                    selected: 'hashtagsSelectedClass',\n                                                    tag: 'hashtagsTagClass badge badge-primary',\n                                                    remove: 'hashtagsRemoveClass',\n                                                    suggestions: 'hashtagsSuggestionsClass',\n                                                    activeSuggestion: 'hashtagsActiveSuggestionClass'\n                                                }}\n                                                handleDelete={(index) => {\n                                                    setValue('hashtags', handleDelete(index, gatheredValues.hashtags), { shouldValidate: true });\n                                                }}\n                                                renderSuggestion={(suggestion) => {\n                                                    // return list item(s)\n                                                    return (\n                                                        <ListGroupItem className=\"custom-suggestion-groupitem\" key={suggestion.index} onClick={() => {\n                                                            // run conditional checks\n                                                            if (typeof gatheredValues.hashtags !== \"undefined\") {\n                                                                if (gatheredValues.hashtags.length < 15) {\n                                                                    if (gatheredValues.hashtags.length > 0) {\n                                                                        setValue('hashtags', [...gatheredValues.hashtags, suggestion], { shouldValidate: true });\n                                                                    } else {\n                                                                        setValue('hashtags', [suggestion], { shouldValidate: true });\n                                                                    }\n                                                                } else {\n                                                                    NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4250);\n                                                                }\n                                                            } else {\n                                                                setValue('hashtags', [suggestion], { shouldValidate: true });\n                                                            }\n                                                        }}>{suggestion.text}</ListGroupItem>\n                                                    );\n                                                }}\n                                                readOnly={false}\n                                                placeholder={\"Enter a tag (these are how people search & find your listing)\"}\n                                                maxLength={15}\n                                                handleAddition={(tag) => {\n                                                    if (typeof gatheredValues.hashtags !== \"undefined\") {\n                                                        if (gatheredValues.hashtags.length < 15) {\n                                                            if (gatheredValues.hashtags.length > 0) {\n                                                                handleAddition(tag);\n                                                            } else {\n                                                                setValue('hashtags', [tag], { shouldValidate: true });\n                                                            }\n                                                        } else {\n                                                            NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4500);\n                                                        }\n                                                    } else {\n                                                        setValue('hashtags', [tag], { shouldValidate: true });\n                                                    }\n                                                }}\n                                                handleDrag={(tag, currPos, newPos) => {\n                                                    setValue('hashtags', handleDrag(tag, currPos, newPos, gatheredValues.hashtags), { shouldValidate: true });\n                                                }}\n                                                delimiters={delimiters} \n                                            />\n                                            \n                                        )}\n                                    />\n                                </ListGroup>\n                                {errors.hashtags ? <span className=\"span-tooltip\">{errors.hashtags.message}</span> : null}\n                            </Col>\n                            <Col sm=\"12 mb-3\" md=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\">\n                                <Label>Video Description</Label>\n                                <Input {...register(\"description\", { required: {\n                                    value: true,\n                                    message: \"You MUST enter a value between 15-350 characters\"\n                                }, minLength: {\n                                    value: 15,\n                                    message: \"You must enter AT Least 15 characters\"\n                                }, maxLength: {\n                                    value: 350,\n                                    message: \"You may ONLY enter 350 characters or less\"\n                                }})} className=\"form-control\" onChange={(e) => handleInputChange(e)} value={gatheredValues.description} name=\"description\" type=\"textarea\" rows={10} placeholder=\"Enter your 'video title' for this tutorial..\" />\n                                {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                            </Col>\n                        </div>\n                        <Button type={\"submit\"} className={\"btn-square-success\"} color={\"success\"} style={{ width: \"100%\", marginBottom: \"12.5px\", marginTop: \"12.5px\" }}>Proceed Forward W/Next Step</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default PageOneVideoCreationHelper;"]},"metadata":{},"sourceType":"module"}