{"ast":null,"code":"import React,{Fragment,useState,useRef,useEffect}from'react';import Sheet from'react-modal-sheet';import helpers from\"./miscFunctions.js\";import FileViewer from'react-file-viewer';import{Button,Row,Col,Card,CardBody,FormGroup,Label,Input,Progress,InputGroup,InputGroupAddon,InputGroupText,ListGroup,ListGroupItem}from'reactstrap';import Dropzone from'react-dropzone-uploader';import _ from\"lodash\";import{connect}from\"react-redux\";import{shiftCoreStyles}from\"../../../../../../../../../redux/actions/universal/index.js\";import ReactPlayer from'react-player';import uuid from'react-uuid';import moment from\"moment\";import{updateCourseInformationData}from\"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";import{NotificationManager}from'react-notifications';import axios from\"axios\";import Skeleton,{SkeletonTheme}from'react-loading-skeleton';import\"../styles.css\";const{renderCustomButtonDropzone,onSubmitHelper,calculateFileType}=helpers;const SheetHelperPaneUploadCourseContent=_ref=>{let{isOpen,setIsOpen,setProgress,shiftCoreStyles,disableBodyScroll,clearAllBodyScrollLocks,courseData,updateCourseInformationData,selectedCourseContent,setCourseContentState,coursesArray}=_ref;const dropzoneRef=useRef(null);const[changeOptions,setChangeOptions]=useState(null);const[fileReady,setFileReadyStatus]=useState(false);const[currentFileSelectedUpload,setCurrentUploadFileStatus]=useState(null);const[filePathData,setCurrentFilePathData]=useState(null);const[fileMetaData,setMetaFileData]=useState(null);const[description,setDescription]=useState(\"\");const[showInitial,setShowInitialState]=useState(true);const[videoFile,setVideoFileState]=useState(null);const[loaded,setLoadedState]=useState(false);const[alreadyExisted,alreadyExistedState]=useState(false);const[videoLoadingProgress,setVideoLoadingProgressState]=useState(0);const[cancelToken,setCancelToken]=useState(null);const renderPreviewOfFile=data=>{const file=data.fileWithMeta.file;// return preview data via FileViewer (to not exclude documents such as .docx and such...);\nif(fileReady===true){return/*#__PURE__*/React.createElement(\"div\",{className:\"filereader-preview-dropzone\"},/*#__PURE__*/React.createElement(FileViewer,{fileType:calculateFileType(file.type),filePath:filePathData,onError:err=>console.log(\"fileviewer error - \",err),key:file.id}));}else{return null;}};useEffect(()=>{console.log(\"mounted/useeffect ran... sheet!\",selectedCourseContent);// check if previously already updated\nconst futureRequest=axios.CancelToken.source();// conditional checks\nif(selectedCourseContent!==null&&selectedCourseContent.video!==null&&_.has(selectedCourseContent,\"video\")&&Object.keys(selectedCourseContent.video).length>0){console.log(\"main chunk\");setDescription(selectedCourseContent.description);// check if rendering from previous upload\nalreadyExistedState(true);const configuration={method:'get',url:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(selectedCourseContent.video.link),responseType:'blob',onDownloadProgress:progressEvent=>{let percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setVideoLoadingProgressState(percentCompleted);},cancelToken:futureRequest.token};axios(configuration).then(response=>{console.log(\"response\",response);// create fileready\nconst file=new File([response.data],selectedCourseContent.video.name);// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(file));// set status update for current file\nsetCurrentUploadFileStatus(file);// mark file as READY \n// setFileReadyStatus(true);\n// mark pane READY to display content\nsetLoadedState(true);}).catch(error=>{console.log(\"error api request...:\",error);});}else{console.log(\"second chunk\");}return()=>{console.log(\"unmounting!!!!!!\");futureRequest.cancel();setVideoLoadingProgressState(0);};// update local component state to reflect already-made changes\n},[isOpen]);const CustomInputHelper=_ref2=>{let{accept,onFiles}=_ref2;const text=showInitial===false?\"You already selected a file to upload, please proceed with the 'course-creation' process\":\"Drop a file OR select to browse local data\";return/*#__PURE__*/React.createElement(\"label\",{className:\"custom-input-dropzone-copy\",style:{backgroundColor:'#007bff',color:'#fff',cursor:'pointer',padding:15,borderRadius:3}},/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(\"p\",{className:\"dropzone-text-courses\"},text)),/*#__PURE__*/React.createElement(\"input\",{style:{display:'none'},type:\"file\",accept:accept,multiple:false,className:\"custom-dropzone-input-actual-input\",onChange:e=>{const file=e.target.files[0];// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(file));// set status update for current file\nsetCurrentUploadFileStatus(file);// mark file as READY \nsetFileReadyStatus(true);// update \"Dropzone\" component state (NOT this react component state).\nonFiles([file]);}}));};const handleDescriptionChange=e=>{const value=e.target.value;setDescription(value);};const handleAdditionFileDescription=()=>{console.log(\"handleAdditionFileDescription clicked...\");if(videoFile!==null){if(typeof description!==\"undefined\"&&description.length>=25&&description.length<=750){// mock a copy of redux state\nconst shallowCopy=[...coursesArray];// newly created obj with desc and video info data\nconst newlyAddedData={description,video:videoFile,id:uuid(),systemDate:Date.now(),date:new Date(),formattedDate:moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),comments:[],likes:0,dislikes:0};// courseData\nconst matchingItem=shallowCopy.find((course,index)=>{if(course.id===selectedCourseContent.id){return true;}});// combined OLD and NEW state\nconst combinedPreviousPlusNew={...matchingItem,...newlyAddedData};// find index of matching item\nconst updatedStateIndex=shallowCopy.findIndex(item=>item.id===selectedCourseContent.id);// replace matching item\nshallowCopy[updatedStateIndex]=combinedPreviousPlusNew;// update redux state\nupdateCourseInformationData({...courseData,pageTwoData:{courseContentSections:shallowCopy}});// close modal\ncloseModalRelated();NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\",\"Updated Course Content Successfully!\",4500);}else{NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\",\"Check your description letter count!\",4500);}}else{NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\",\"UPLOAD a video before proceeding!\",4500);}};const closeModalRelated=()=>{// set state back to default\nalreadyExistedState(false);// clear video logic\nsetCourseContentState(null);// image upload logic CLEAR existing state\nsetCurrentUploadFileStatus(null);// revert image state back to default\nsetVideoFileState(null);// set current file path to default state\nsetCurrentFilePathData(null);// set description back to default\nsetDescription(\"\");// image upload logic CLEAR existing state\nsetMetaFileData(null);// image upload logic CLEAR existing state\nsetFileReadyStatus(false);// allow background clicking again\nshiftCoreStyles(false);// change loading state back to default\nsetLoadedState(false);// close modal\nsetIsOpen(false);// clear scroll locks as PANE is closed now...\nclearAllBodyScrollLocks();};const onBufferEnded=()=>{setVideoLoadingProgressState(0);};const renderPreChecks=()=>{if(loaded===true){// ready to display live content\nif(currentFileSelectedUpload===null){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"overlay-boxshadow-courses centered-both-ways\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"header-no-content\"},\"Current NO file(s) is selected/uploaded - please select a file.\")));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ReactPlayer,{onBufferEnd:onBufferEnded,progressInterval:1000,controls:true,playIcon:true,playing:false,loop:false,volume:1,width:\"100%\",height:\"100%\",url:filePathData}));}}else{// still loading display skelaton\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-positied-loading-courses\"},alreadyExisted===true?/*#__PURE__*/React.createElement(\"div\",{className:\"video-loading-wrapper-bar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-above-bar-percentage-video\"},/*#__PURE__*/React.createElement(\"h6\",null,\"Downloading video...\",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",fontSize:\"1.75rem\",textDecorationLine:\"underline\"}},videoLoadingProgress,\"%\"),\" of video loaded/complete...\")),/*#__PURE__*/React.createElement(Progress,{className:\"course-creation-progress-bar-video\",animated:true,color:\"secondary\",value:videoLoadingProgress})):null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#d4d4d4\",highlightColor:\"#8f8f8f\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{containerClassName:\"custom-loading-courses\",count:8}))));}};console.log(\"cancelToken\",cancelToken);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{id:\"sheet-container\"},/*#__PURE__*/React.createElement(Sheet,{id:\"sheet-ultimate\",disableDrag:true,isOpen:isOpen,onClose:()=>setIsOpen(false)},/*#__PURE__*/React.createElement(Sheet.Container,{className:\"sheetcontainer\"},/*#__PURE__*/React.createElement(Sheet.Header,{className:\"sheetheader\"},/*#__PURE__*/React.createElement(Row,{style:{margin:\"17.5px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},onClick:closeModalRelated,className:\"btn-square-danger\",outline:true,color:\"danger\",size:\"md-2x\"},\"Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)\")))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,{style:{marginBottom:\"20px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"h3\",null,\"This is the form that is \",/*#__PURE__*/React.createElement(\"strong\",null,\"primarily\"),\" used to upload/change content related to \\\"course content\\\". Use the form below to upload video's to each course \\\"clip/section\\\" and enter a description if you'd like...\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"add-video-overlay-courses-upload centered-both-ways\"},renderPreChecks())),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Dropzone,{ref:dropzoneRef,PreviewComponent:data=>renderPreviewOfFile(data),maxFiles:1,autoUpload:true,onChangeStatus:functions=>{setChangeOptions(functions);},submitButtonDisabled:false,InputComponent:CustomInputHelper,getFilesFromEvent:null,onSubmit:onSubmitHelper,accept:\"video/*\",SubmitButtonComponent:data=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-position-submit-btn\"},renderCustomButtonDropzone(data,setMetaFileData,currentFileSelectedUpload,fileMetaData,fileReady,setFileReadyStatus,setProgress,setVideoFileState,setShowInitialState,setLoadedState,alreadyExisted,setCurrentFilePathData));},className:\"shadow-courses-dropzone\",multiple:false,canCancel:false,styles:{dropzone:{height:350},dropzoneActive:{borderColor:'green'}}}),fileReady===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"hr\",{className:\"secondary-hr\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);setCurrentFilePathData(null);changeOptions.remove();},className:\"btn-air-danger cancel-button-upload\",color:\"danger\",size:\"md\"},\"Cancel Current/Pending Upload\"))):null),/*#__PURE__*/React.createElement(\"hr\",{style:{marginTop:\"25px\"}}),/*#__PURE__*/React.createElement(FormGroup,{className:\" m-form__group\"},/*#__PURE__*/React.createElement(Label,null,\"Course Section/Segment Description (Between 25-750 Charector's in length)\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onChange:e=>handleDescriptionChange(e),value:description,className:\"form-control\",rows:6,type:\"textarea\",placeholder:\"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{outline:true,style:{width:\"75%\"},onClick:()=>handleAdditionFileDescription(),className:\"btn-square-info\",color:\"info\",size:\"md\"},\"Submit New Information/Details & File(s)\"))),/*#__PURE__*/React.createElement(\"hr\",null)))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null))));};const mapStateToProps=state=>{return{userData:state.auth.data,courseData:_.has(state.courseData,\"courseData\")?state.courseData.courseData:[],coursesArray:_.has(state.courseData,\"courseData\")&&_.has(state.courseData.courseData,\"pageTwoData\")&&_.has(state.courseData.courseData.pageTwoData,\"courseContentSections\")?state.courseData.courseData.pageTwoData.courseContentSections:[]};};export default connect(mapStateToProps,{shiftCoreStyles,updateCourseInformationData})(SheetHelperPaneUploadCourseContent);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","useEffect","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Progress","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","Dropzone","_","connect","shiftCoreStyles","ReactPlayer","uuid","moment","updateCourseInformationData","NotificationManager","axios","Skeleton","SkeletonTheme","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setProgress","disableBodyScroll","clearAllBodyScrollLocks","courseData","selectedCourseContent","setCourseContentState","coursesArray","dropzoneRef","changeOptions","setChangeOptions","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","description","setDescription","showInitial","setShowInitialState","videoFile","setVideoFileState","loaded","setLoadedState","alreadyExisted","alreadyExistedState","videoLoadingProgress","setVideoLoadingProgressState","cancelToken","setCancelToken","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","futureRequest","CancelToken","source","video","has","Object","keys","length","configuration","method","url","process","env","REACT_APP_ASSET_LINK","link","responseType","onDownloadProgress","progressEvent","percentCompleted","Math","round","total","token","then","response","File","name","URL","createObjectURL","catch","error","cancel","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","handleDescriptionChange","value","handleAdditionFileDescription","shallowCopy","newlyAddedData","systemDate","Date","now","date","formattedDate","format","comments","likes","dislikes","matchingItem","find","course","index","combinedPreviousPlusNew","updatedStateIndex","findIndex","item","pageTwoData","courseContentSections","closeModalRelated","success","onBufferEnded","renderPreChecks","fontSize","textDecorationLine","margin","width","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","marginTop","remove","mapStateToProps","state","userData","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,MAApC,CAA4CC,SAA5C,KAA6D,OAA7D,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,GAAtB,CAA2BC,IAA3B,CAAiCC,QAAjC,CAA2CC,SAA3C,CAAsDC,KAAtD,CAA6DC,KAA7D,CAAoEC,QAApE,CAA8EC,UAA9E,CAA0FC,eAA1F,CAA2GC,cAA3G,CAA2HC,SAA3H,CAAsIC,aAAtI,KAA2J,YAA3J,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,eAAT,KAAgC,6DAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,2BAAT,KAA4C,2EAA5C,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,EAAmBC,aAAnB,KAAwC,wBAAxC,CACA,MAAO,eAAP,CAEA,KAAM,CAAEC,0BAAF,CAA8BC,cAA9B,CAA8CC,iBAA9C,EAAoE9B,OAA1E,CAGA,KAAM+B,CAAAA,kCAAkC,CAAG,MAA0M,IAAzM,CAAEC,MAAF,CAAUC,SAAV,CAAqBC,WAArB,CAAkCf,eAAlC,CAAmDgB,iBAAnD,CAAsEC,uBAAtE,CAA+FC,UAA/F,CAA2Gd,2BAA3G,CAAwIe,qBAAxI,CAA+JC,qBAA/J,CAAsLC,YAAtL,CAAyM,MACjP,KAAMC,CAAAA,WAAW,CAAG5C,MAAM,CAAC,IAAD,CAA1B,CACA,KAAM,CAAE6C,aAAF,CAAiBC,gBAAjB,EAAsC/C,QAAQ,CAAC,IAAD,CAApD,CACA,KAAM,CAAEgD,SAAF,CAAaC,kBAAb,EAAoCjD,QAAQ,CAAC,KAAD,CAAlD,CACA,KAAM,CAAEkD,yBAAF,CAA6BC,0BAA7B,EAA4DnD,QAAQ,CAAC,IAAD,CAA1E,CACA,KAAM,CAAEoD,YAAF,CAAgBC,sBAAhB,EAA2CrD,QAAQ,CAAC,IAAD,CAAzD,CACA,KAAM,CAAEsD,YAAF,CAAgBC,eAAhB,EAAoCvD,QAAQ,CAAC,IAAD,CAAlD,CACA,KAAM,CAAEwD,WAAF,CAAeC,cAAf,EAAkCzD,QAAQ,CAAC,EAAD,CAAhD,CACA,KAAM,CAAE0D,WAAF,CAAeC,mBAAf,EAAuC3D,QAAQ,CAAC,IAAD,CAArD,CACA,KAAM,CAAE4D,SAAF,CAAaC,iBAAb,EAAmC7D,QAAQ,CAAC,IAAD,CAAjD,CACA,KAAM,CAAE8D,MAAF,CAAUC,cAAV,EAA6B/D,QAAQ,CAAC,KAAD,CAA3C,CACA,KAAM,CAAEgE,cAAF,CAAkBC,mBAAlB,EAA0CjE,QAAQ,CAAC,KAAD,CAAxD,CACA,KAAM,CAAEkE,oBAAF,CAAwBC,4BAAxB,EAAyDnE,QAAQ,CAAC,CAAD,CAAvE,CACA,KAAM,CAAEoE,WAAF,CAAeC,cAAf,EAAkCrE,QAAQ,CAAC,IAAD,CAAhD,CAEA,KAAMsE,CAAAA,mBAAmB,CAAIC,IAAD,EAAU,CAElC,KAAMC,CAAAA,IAAI,CAAGD,IAAI,CAACE,YAAL,CAAkBD,IAA/B,CACA;AACA,GAAIxB,SAAS,GAAK,IAAlB,CAAwB,CACpB,mBACI,2BAAK,SAAS,CAAC,6BAAf,eACI,oBAAC,UAAD,EACI,QAAQ,CAAEd,iBAAiB,CAACsC,IAAI,CAACE,IAAN,CAD/B,CAEI,QAAQ,CAAEtB,YAFd,CAGI,OAAO,CAAGuB,GAAD,EAASC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCF,GAAnC,CAHtB,CAII,GAAG,CAAEH,IAAI,CAACM,EAJd,EADJ,CADJ,CAUH,CAXD,IAWO,CACH,MAAO,KAAP,CACH,CACJ,CAlBD,CAmBA5E,SAAS,CAAC,IAAM,CACZ0E,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CnC,qBAA/C,EACA;AAEA,KAAMqC,CAAAA,aAAa,CAAGlD,KAAK,CAACmD,WAAN,CAAkBC,MAAlB,EAAtB,CAEA;AACA,GAAIvC,qBAAqB,GAAK,IAA1B,EAAkCA,qBAAqB,CAACwC,KAAtB,GAAgC,IAAlE,EAA0E7D,CAAC,CAAC8D,GAAF,CAAMzC,qBAAN,CAA6B,OAA7B,CAA1E,EAAmH0C,MAAM,CAACC,IAAP,CAAY3C,qBAAqB,CAACwC,KAAlC,EAAyCI,MAAzC,CAAkD,CAAzK,CAA4K,CACxKV,OAAO,CAACC,GAAR,CAAY,YAAZ,EACApB,cAAc,CAACf,qBAAqB,CAACc,WAAvB,CAAd,CAEA;AACAS,mBAAmB,CAAC,IAAD,CAAnB,CAEA,KAAMsB,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAE,KADU,CAElBC,GAAG,WAAKC,OAAO,CAACC,GAAR,CAAYC,oBAAjB,aAAyClD,qBAAqB,CAACwC,KAAtB,CAA4BW,IAArE,CAFe,CAGlBC,YAAY,CAAE,MAHI,CAIlBC,kBAAkB,CAAGC,aAAD,EAAmB,CACnC,GAAIC,CAAAA,gBAAgB,CAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAAClC,MAAd,CAAuB,GAAxB,CAA+BkC,aAAa,CAACI,KAAxD,CAAvB,CAEAjC,4BAA4B,CAAC8B,gBAAD,CAA5B,CACH,CARiB,CASlB7B,WAAW,CAAEW,aAAa,CAACsB,KATT,CAAtB,CAYAxE,KAAK,CAAC0D,aAAD,CAAL,CAAqBe,IAArB,CAA2BC,QAAD,EAAc,CACpC3B,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwB0B,QAAxB,EACA;AACA,KAAM/B,CAAAA,IAAI,CAAG,GAAIgC,CAAAA,IAAJ,CAAS,CAACD,QAAQ,CAAChC,IAAV,CAAT,CAA0B7B,qBAAqB,CAACwC,KAAtB,CAA4BuB,IAAtD,CAAb,CACA;AACApD,sBAAsB,CAACqD,GAAG,CAACC,eAAJ,CAAoBnC,IAApB,CAAD,CAAtB,CACA;AACArB,0BAA0B,CAACqB,IAAD,CAA1B,CACA;AACA;AACA;AACAT,cAAc,CAAC,IAAD,CAAd,CACH,CAZD,EAYG6C,KAZH,CAYUC,KAAD,EAAW,CAChBjC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCgC,KAArC,EACH,CAdD,EAeH,CAlCD,IAkCQ,CACJjC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACH,CAED,MAAO,IAAM,CACTD,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAEAE,aAAa,CAAC+B,MAAd,GAEA3C,4BAA4B,CAAC,CAAD,CAA5B,CACH,CAND,CAOA;AACH,CArDQ,CAqDN,CAAC/B,MAAD,CArDM,CAAT,CAsDA,KAAM2E,CAAAA,iBAAiB,CAAG,OAAyB,IAAxB,CAAEC,MAAF,CAAUC,OAAV,CAAwB,OAE/C,KAAMC,CAAAA,IAAI,CAAGxD,WAAW,GAAK,KAAhB,CAAwB,0FAAxB,CAAqH,4CAAlI,CAEA,mBACI,6BAAO,SAAS,CAAC,4BAAjB,CAA8C,KAAK,CAAE,CAAEyD,eAAe,CAAE,SAAnB,CAA8BC,KAAK,CAAE,MAArC,CAA6CC,MAAM,CAAE,SAArD,CAAgEC,OAAO,CAAE,EAAzE,CAA6EC,YAAY,CAAE,CAA3F,CAArD,eACI,2BAAK,SAAS,CAAE,oBAAhB,eACI,yBAAG,SAAS,CAAE,uBAAd,EAAwCL,IAAxC,CADJ,CADJ,cAII,6BACI,KAAK,CAAE,CAAEM,OAAO,CAAE,MAAX,CADX,CAEI,IAAI,CAAC,MAFT,CAGI,MAAM,CAAER,MAHZ,CAII,QAAQ,CAAE,KAJd,CAKI,SAAS,CAAE,oCALf,CAMI,QAAQ,CAAES,CAAC,EAAI,CACX,KAAMjD,CAAAA,IAAI,CAAGiD,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CACA;AACAtE,sBAAsB,CAACqD,GAAG,CAACC,eAAJ,CAAoBnC,IAApB,CAAD,CAAtB,CACA;AACArB,0BAA0B,CAACqB,IAAD,CAA1B,CACA;AACAvB,kBAAkB,CAAC,IAAD,CAAlB,CACA;AACAgE,OAAO,CAAC,CAACzC,IAAD,CAAD,CAAP,CACH,CAhBL,EAJJ,CADJ,CAyBH,CA7BD,CA8BA,KAAMoD,CAAAA,uBAAuB,CAAIH,CAAD,EAAO,CACnC,KAAMI,CAAAA,KAAK,CAAGJ,CAAC,CAACC,MAAF,CAASG,KAAvB,CAEApE,cAAc,CAACoE,KAAD,CAAd,CACH,CAJD,CAKA,KAAMC,CAAAA,6BAA6B,CAAG,IAAM,CACxClD,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAEA,GAAIjB,SAAS,GAAK,IAAlB,CAAwB,CACpB,GAAI,MAAOJ,CAAAA,WAAP,GAAuB,WAAvB,EAAuCA,WAAW,CAAC8B,MAAZ,EAAsB,EAAtB,EAA4B9B,WAAW,CAAC8B,MAAZ,EAAsB,GAA7F,CAAmG,CAC/F;AACA,KAAMyC,CAAAA,WAAW,CAAG,CAAC,GAAGnF,YAAJ,CAApB,CACA;AACA,KAAMoF,CAAAA,cAAc,CAAG,CACnBxE,WADmB,CAEnB0B,KAAK,CAAEtB,SAFY,CAGnBkB,EAAE,CAAErD,IAAI,EAHW,CAInBwG,UAAU,CAAEC,IAAI,CAACC,GAAL,EAJO,CAKnBC,IAAI,CAAE,GAAIF,CAAAA,IAAJ,EALa,CAMnBG,aAAa,CAAE3G,MAAM,CAAC,GAAIwG,CAAAA,IAAJ,EAAD,CAAN,CAAmBI,MAAnB,CAA0B,uBAA1B,CANI,CAOnBC,QAAQ,CAAE,EAPS,CAQnBC,KAAK,CAAE,CARY,CASnBC,QAAQ,CAAE,CATS,CAAvB,CAWA;AACA,KAAMC,CAAAA,YAAY,CAAGX,WAAW,CAACY,IAAZ,CAAiB,CAACC,MAAD,CAASC,KAAT,GAAmB,CACrD,GAAID,MAAM,CAAC9D,EAAP,GAAcpC,qBAAqB,CAACoC,EAAxC,CAA4C,CACxC,MAAO,KAAP,CACH,CACJ,CAJoB,CAArB,CAKA;AACA,KAAMgE,CAAAA,uBAAuB,CAAG,CAC5B,GAAGJ,YADyB,CAE5B,GAAGV,cAFyB,CAAhC,CAIA;AACA,KAAMe,CAAAA,iBAAiB,CAAGhB,WAAW,CAACiB,SAAZ,CAAuBC,IAAD,EAAUA,IAAI,CAACnE,EAAL,GAAYpC,qBAAqB,CAACoC,EAAlE,CAA1B,CACA;AACAiD,WAAW,CAACgB,iBAAD,CAAX,CAAiCD,uBAAjC,CACA;AACAnH,2BAA2B,CAAC,CACxB,GAAGc,UADqB,CAExByG,WAAW,CAAE,CACTC,qBAAqB,CAAEpB,WADd,CAFW,CAAD,CAA3B,CAMA;AACAqB,iBAAiB,GAEjBxH,mBAAmB,CAACyH,OAApB,CAA4B,oJAA5B,CAAkL,sCAAlL,CAA0N,IAA1N,EACH,CAzCD,IAyCO,CACHzH,mBAAmB,CAACiF,KAApB,CAA0B,yFAA1B,CAAqH,sCAArH,CAA6J,IAA7J,EACH,CACJ,CA7CD,IA6CO,CACHjF,mBAAmB,CAACiF,KAApB,CAA0B,+EAA1B,CAA2G,mCAA3G,CAAgJ,IAAhJ,EACH,CACJ,CAnDD,CAoDA,KAAMuC,CAAAA,iBAAiB,CAAG,IAAM,CAC5B;AACAnF,mBAAmB,CAAC,KAAD,CAAnB,CACA;AACAtB,qBAAqB,CAAC,IAAD,CAArB,CACA;AACAQ,0BAA0B,CAAC,IAAD,CAA1B,CACA;AACAU,iBAAiB,CAAC,IAAD,CAAjB,CACA;AACAR,sBAAsB,CAAC,IAAD,CAAtB,CACA;AACAI,cAAc,CAAC,EAAD,CAAd,CACA;AACAF,eAAe,CAAC,IAAD,CAAf,CACA;AACAN,kBAAkB,CAAC,KAAD,CAAlB,CACA;AACA1B,eAAe,CAAC,KAAD,CAAf,CACA;AACAwC,cAAc,CAAC,KAAD,CAAd,CACA;AACA1B,SAAS,CAAC,KAAD,CAAT,CACA;AACAG,uBAAuB,GAC1B,CAzBD,CA0BA,KAAM8G,CAAAA,aAAa,CAAG,IAAM,CACxBnF,4BAA4B,CAAC,CAAD,CAA5B,CACH,CAFD,CAGA,KAAMoF,CAAAA,eAAe,CAAG,IAAM,CAC1B,GAAIzF,MAAM,GAAK,IAAf,CAAqB,CACjB;AACA,GAAIZ,yBAAyB,GAAK,IAAlC,CAAwC,CACpC,mBACI,oBAAC,QAAD,mBACI,2BAAK,SAAS,CAAE,8CAAhB,eAAgE,0BAAI,SAAS,CAAE,mBAAf,oEAAhE,CADJ,CADJ,CAKH,CAND,IAMO,CACH,mBACI,oBAAC,QAAD,mBACI,oBAAC,WAAD,EAAa,WAAW,CAAEoG,aAA1B,CAAyC,gBAAgB,CAAE,IAA3D,CAAiE,QAAQ,CAAE,IAA3E,CAAiF,QAAQ,CAAE,IAA3F,CAAiG,OAAO,CAAE,KAA1G,CAAiH,IAAI,CAAE,KAAvH,CAA8H,MAAM,CAAE,CAAtI,CAAyI,KAAK,CAAE,MAAhJ,CAAwJ,MAAM,CAAE,MAAhK,CAAwK,GAAG,CAAElG,YAA7K,EADJ,CADJ,CAKH,CACJ,CAfD,IAeO,CACH;AACA,mBACI,2BAAK,SAAS,CAAE,qCAAhB,EACKY,cAAc,GAAK,IAAnB,cAA0B,2BAAK,SAAS,CAAE,2BAAhB,eACvB,2BAAK,SAAS,CAAE,qCAAhB,eACI,kEAAwB,8BAAQ,KAAK,CAAE,CAAEoD,KAAK,CAAE,SAAT,CAAoBoC,QAAQ,CAAE,SAA9B,CAAyCC,kBAAkB,CAAE,WAA7D,CAAf,EAA4FvF,oBAA5F,KAAxB,gCADJ,CADuB,cAIvB,oBAAC,QAAD,EAAU,SAAS,CAAE,oCAArB,CAA2D,QAAQ,KAAnE,CAAoE,KAAK,CAAC,WAA1E,CAAsF,KAAK,CAAEA,oBAA7F,EAJuB,CAA1B,CAKQ,IANb,cAOI,oBAAC,aAAD,EAAe,SAAS,CAAC,SAAzB,CAAmC,cAAc,CAAC,SAAlD,eACI,0CACI,oBAAC,QAAD,EAAU,kBAAkB,CAAE,wBAA9B,CAAwD,KAAK,CAAE,CAA/D,EADJ,CADJ,CAPJ,CADJ,CAeH,CACJ,CAlCD,CAmCAU,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BT,WAA3B,EACA,mBACI,oBAAC,QAAD,mBACI,2BAAK,EAAE,CAAC,iBAAR,eACI,oBAAC,KAAD,EAAO,EAAE,CAAC,gBAAV,CAA2B,WAAW,CAAE,IAAxC,CAA8C,MAAM,CAAEhC,MAAtD,CAA8D,OAAO,CAAE,IAAMC,SAAS,CAAC,KAAD,CAAtF,eACI,oBAAC,KAAD,CAAO,SAAP,EAAiB,SAAS,CAAC,gBAA3B,eACI,oBAAC,KAAD,CAAO,MAAP,EAAc,SAAS,CAAC,aAAxB,eACI,oBAAC,GAAD,EAAK,KAAK,CAAE,CAAEqH,MAAM,CAAE,QAAV,CAAZ,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAf,CAAkC,OAAO,CAAEP,iBAA3C,CAA8D,SAAS,CAAC,mBAAxE,CAA4F,OAAO,KAAnG,CAAoG,KAAK,CAAC,QAA1G,CAAmH,IAAI,CAAC,OAAxH,sGADJ,CADJ,CADJ,CADJ,cAQI,oBAAC,KAAD,CAAO,OAAP,mBACI,oBAAC,GAAD,mBACI,oBAAC,IAAD,mBACI,oBAAC,QAAD,mBACI,oBAAC,GAAD,EAAK,KAAK,CAAE,CAAEQ,YAAY,CAAE,MAAhB,CAAZ,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,uEAA6B,8CAA7B,+KADJ,CADJ,CADJ,cAMI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,2BAAK,SAAS,CAAE,qDAAhB,EACKL,eAAe,EADpB,CADJ,CADJ,cAMI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,QAAD,EACI,GAAG,CAAE1G,WADT,CAEI,gBAAgB,CAAG0B,IAAD,EAAUD,mBAAmB,CAACC,IAAD,CAFnD,CAGI,QAAQ,CAAE,CAHd,CAII,UAAU,CAAE,IAJhB,CAKI,cAAc,CAAGsF,SAAD,EAAe,CAC3B9G,gBAAgB,CAAC8G,SAAD,CAAhB,CACH,CAPL,CAQI,oBAAoB,CAAE,KAR1B,CASI,cAAc,CAAE9C,iBATpB,CAUI,iBAAiB,CAAE,IAVvB,CAWI,QAAQ,CAAE9E,cAXd,CAYI,MAAM,CAAC,SAZX,CAaI,qBAAqB,CAAGsC,IAAD,EAAU,CAC7B,mBACI,2BAAK,SAAS,CAAC,gCAAf,EACKvC,0BAA0B,CAACuC,IAAD,CAAOhB,eAAP,CAAwBL,yBAAxB,CAAmDI,YAAnD,CAAiEN,SAAjE,CAA4EC,kBAA5E,CAAgGX,WAAhG,CAA6GuB,iBAA7G,CAAgIF,mBAAhI,CAAqJI,cAArJ,CAAqKC,cAArK,CAAqLX,sBAArL,CAD/B,CADJ,CAKH,CAnBL,CAoBI,SAAS,CAAE,yBApBf,CAqBI,QAAQ,CAAE,KArBd,CAsBI,SAAS,CAAE,KAtBf,CAuBI,MAAM,CAAE,CACJyG,QAAQ,CAAE,CAAEC,MAAM,CAAE,GAAV,CADN,CAEJC,cAAc,CAAE,CAAEC,WAAW,CAAE,OAAf,CAFZ,CAvBZ,EADJ,CA6BKjH,SAAS,GAAK,IAAd,cAAqB,oBAAC,QAAD,mBAClB,0BAAI,SAAS,CAAC,cAAd,EADkB,cAElB,2BAAK,SAAS,CAAC,oBAAf,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAEkH,SAAS,CAAE,MAAb,CAAf,CAAsC,OAAO,CAAGzC,CAAD,EAAO,CAClDlE,eAAe,CAAC,IAAD,CAAf,CACAN,kBAAkB,CAAC,KAAD,CAAlB,CACAE,0BAA0B,CAAC,IAAD,CAA1B,CACAE,sBAAsB,CAAC,IAAD,CAAtB,CAEAP,aAAa,CAACqH,MAAd,GACH,CAPD,CAOG,SAAS,CAAC,qCAPb,CAOmD,KAAK,CAAC,QAPzD,CAOkE,IAAI,CAAC,IAPvE,kCADJ,CAFkB,CAArB,CAYa,IAzClB,CANJ,cAiDI,0BAAI,KAAK,CAAE,CAAED,SAAS,CAAE,MAAb,CAAX,EAjDJ,cAkDI,oBAAC,SAAD,EAAW,SAAS,CAAC,gBAArB,eACI,oBAAC,KAAD,kFADJ,cAEI,oBAAC,UAAD,mBACI,oBAAC,KAAD,EAAO,QAAQ,CAAGzC,CAAD,EAAOG,uBAAuB,CAACH,CAAD,CAA/C,CAAoD,KAAK,CAAEjE,WAA3D,CAAwE,SAAS,CAAC,cAAlF,CAAiG,IAAI,CAAE,CAAvG,CAA0G,IAAI,CAAC,UAA/G,CAA0H,WAAW,CAAE,uLAAvI,EADJ,CAFJ,CAlDJ,cAwDI,8BAxDJ,cAyDI,2BAAK,SAAS,CAAE,oBAAhB,eACI,oBAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,KAAK,CAAE,CAAEmG,KAAK,CAAE,KAAT,CAAvB,CAAyC,OAAO,CAAE,IAAM7B,6BAA6B,EAArF,CAAyF,SAAS,CAAC,iBAAnG,CAAqH,KAAK,CAAC,MAA3H,CAAkI,IAAI,CAAC,IAAvI,6CADJ,CAzDJ,CANJ,cAmEI,8BAnEJ,CADJ,CADJ,CADJ,CARJ,CADJ,cAqFI,oBAAC,KAAD,CAAO,QAAP,MArFJ,CADJ,CADJ,CADJ,CA6FH,CA7UD,CA8UA,KAAMsC,CAAAA,eAAe,CAAIC,KAAD,EAAW,CAC/B,MAAO,CACHC,QAAQ,CAAED,KAAK,CAACE,IAAN,CAAWhG,IADlB,CAEH9B,UAAU,CAAEpB,CAAC,CAAC8D,GAAF,CAAMkF,KAAK,CAAC5H,UAAZ,CAAwB,YAAxB,EAAwC4H,KAAK,CAAC5H,UAAN,CAAiBA,UAAzD,CAAsE,EAF/E,CAGHG,YAAY,CAAGvB,CAAC,CAAC8D,GAAF,CAAMkF,KAAK,CAAC5H,UAAZ,CAAwB,YAAxB,GAAyCpB,CAAC,CAAC8D,GAAF,CAAMkF,KAAK,CAAC5H,UAAN,CAAiBA,UAAvB,CAAmC,aAAnC,CAAzC,EAA8FpB,CAAC,CAAC8D,GAAF,CAAMkF,KAAK,CAAC5H,UAAN,CAAiBA,UAAjB,CAA4ByG,WAAlC,CAA+C,uBAA/C,CAA/F,CAA0KmB,KAAK,CAAC5H,UAAN,CAAiBA,UAAjB,CAA4ByG,WAA5B,CAAwCC,qBAAlN,CAA0O,EAHrP,CAAP,CAKH,CAND,CAOA,cAAe7H,CAAAA,OAAO,CAAC8I,eAAD,CAAkB,CAAE7I,eAAF,CAAmBI,2BAAnB,CAAlB,CAAP,CAA2EQ,kCAA3E,CAAf","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Progress, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport \"../styles.css\";\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setProgress, shiftCoreStyles, disableBodyScroll, clearAllBodyScrollLocks, courseData, updateCourseInformationData, selectedCourseContent, setCourseContentState, coursesArray }) => {\n    const dropzoneRef = useRef(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ description, setDescription ] = useState(\"\");\n    const [ showInitial, setShowInitialState ] = useState(true);\n    const [ videoFile, setVideoFileState ] = useState(null);\n    const [ loaded, setLoadedState ] = useState(false);\n    const [ alreadyExisted, alreadyExistedState ] = useState(false);\n    const [ videoLoadingProgress, setVideoLoadingProgressState ] = useState(0);\n    const [ cancelToken, setCancelToken ] = useState(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    useEffect(() => {\n        console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent);\n        // check if previously already updated\n\n        const futureRequest = axios.CancelToken.source();\n\n        // conditional checks\n        if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n            console.log(\"main chunk\");\n            setDescription(selectedCourseContent.description);\n\n            // check if rendering from previous upload\n            alreadyExistedState(true);\n\n            const configuration = {\n                method: 'get',\n                url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n                responseType: 'blob',\n                onDownloadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        \n                    setVideoLoadingProgressState(percentCompleted);\n                },\n                cancelToken: futureRequest.token\n            };\n\n            axios(configuration).then((response) => {\n                console.log(\"response\", response);\n                // create fileready\n                const file = new File([response.data], selectedCourseContent.video.name); \n                // set current file path to convert to readable URL later\n                setCurrentFilePathData(URL.createObjectURL(file));\n                // set status update for current file\n                setCurrentUploadFileStatus(file);\n                // mark file as READY \n                // setFileReadyStatus(true);\n                // mark pane READY to display content\n                setLoadedState(true);\n            }).catch((error) => {\n                console.log(\"error api request...:\", error);\n            })\n        }  else {\n            console.log(\"second chunk\")\n        }\n\n        return () => {\n            console.log(\"unmounting!!!!!!\");\n\n            futureRequest.cancel();\n\n            setVideoLoadingProgressState(0);\n        }\n        // update local component state to reflect already-made changes\n    }, [isOpen])\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    <p className={\"dropzone-text-courses\"}>{text}</p>\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleDescriptionChange = (e) => {\n        const value = e.target.value;\n\n        setDescription(value);\n    }\n    const handleAdditionFileDescription = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        if (videoFile !== null) {\n            if (typeof description !== \"undefined\" && (description.length >= 25 && description.length <= 750)) {\n                // mock a copy of redux state\n                const shallowCopy = [...coursesArray];\n                // newly created obj with desc and video info data\n                const newlyAddedData = {\n                    description,\n                    video: videoFile,\n                    id: uuid(),\n                    systemDate: Date.now(),\n                    date: new Date(),\n                    formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                    comments: [],\n                    likes: 0,\n                    dislikes: 0\n                }\n                // courseData\n                const matchingItem = shallowCopy.find((course, index) => {\n                    if (course.id === selectedCourseContent.id) {\n                        return true;\n                    }\n                });\n                // combined OLD and NEW state\n                const combinedPreviousPlusNew = {\n                    ...matchingItem,\n                    ...newlyAddedData\n                }\n                // find index of matching item\n                const updatedStateIndex = shallowCopy.findIndex((item) => item.id === selectedCourseContent.id);\n                // replace matching item\n                shallowCopy[updatedStateIndex] = combinedPreviousPlusNew;\n                // update redux state\n                updateCourseInformationData({\n                    ...courseData,\n                    pageTwoData: {\n                        courseContentSections: shallowCopy\n                    }\n                });\n                // close modal\n                closeModalRelated();\n\n                NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n            } else {\n                NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n            }\n        } else {\n            NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n        }\n    }\n    const closeModalRelated = () => {\n        // set state back to default\n        alreadyExistedState(false);\n        // clear video logic\n        setCourseContentState(null);\n        // image upload logic CLEAR existing state\n        setCurrentUploadFileStatus(null);\n        // revert image state back to default\n        setVideoFileState(null);\n        // set current file path to default state\n        setCurrentFilePathData(null);\n        // set description back to default\n        setDescription(\"\");\n        // image upload logic CLEAR existing state\n        setMetaFileData(null);\n        // image upload logic CLEAR existing state\n        setFileReadyStatus(false);\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // change loading state back to default\n        setLoadedState(false);\n        // close modal\n        setIsOpen(false);\n        // clear scroll locks as PANE is closed now...\n        clearAllBodyScrollLocks();\n    }\n    const onBufferEnded = () => {\n        setVideoLoadingProgressState(0);\n    }\n    const renderPreChecks = () => {\n        if (loaded === true) {\n            // ready to display live content\n            if (currentFileSelectedUpload === null) {\n                return (\n                    <Fragment>\n                        <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <ReactPlayer onBufferEnd={onBufferEnded} progressInterval={1000} controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                    </Fragment>\n                );   \n            }\n        } else {\n            // still loading display skelaton\n            return (\n                <div className={\"absolutely-positied-loading-courses\"}>\n                    {alreadyExisted === true ? <div className={\"video-loading-wrapper-bar\"}>\n                        <div className={\"position-above-bar-percentage-video\"}>\n                            <h6>Downloading video...<strong style={{ color: \"#f73164\", fontSize: \"1.75rem\", textDecorationLine: \"underline\" }}>{videoLoadingProgress}%</strong> of video loaded/complete...</h6>\n                        </div>\n                        <Progress className={\"course-creation-progress-bar-video\"} animated color=\"secondary\" value={videoLoadingProgress} />\n                    </div> : null}\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"custom-loading-courses\"} count={8} />\n                        </p>\n                    </SkeletonTheme>\n                </div>\n            );\n        }\n    }\n    console.log(\"cancelToken\", cancelToken);\n    return (\n        <Fragment>\n            <div id=\"sheet-container\">\n                <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row style={{ margin: \"17.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button style={{ width: \"100%\" }} onClick={closeModalRelated} className=\"btn-square-danger\" outline color=\"danger\" size=\"md-2x\">Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)</Button>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Row>\n                                <Card>\n                                    <CardBody>\n                                        <Row style={{ marginBottom: \"20px\" }}>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h3>This is the form that is <strong>primarily</strong> used to upload/change content related to \"course content\". Use the form below to upload video's to each course \"clip/section\" and enter a description if you'd like...</h3>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <div className={\"add-video-overlay-courses-upload centered-both-ways\"}>\n                                                    {renderPreChecks()}\n                                                </div>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    getFilesFromEvent={null}\n                                                    onSubmit={onSubmitHelper}\n                                                    accept=\"video/*\"\n                                                    SubmitButtonComponent={(data) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    className={\"shadow-courses-dropzone\"}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 350 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                                {fileReady === true ? <Fragment>\n                                                    <hr className=\"secondary-hr\" />\n                                                    <div className=\"centered-both-ways\">\n                                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                            setMetaFileData(null);\n                                                            setFileReadyStatus(false);\n                                                            setCurrentUploadFileStatus(null);\n                                                            setCurrentFilePathData(null);\n\n                                                            changeOptions.remove();\n                                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                    </div>\n                                                </Fragment> : null}\n                                            </Col>\n                                            <hr style={{ marginTop: \"25px\" }} />\n                                            <FormGroup className=\" m-form__group\">\n                                                <Label>Course Section/Segment Description (Between 25-750 Charector's in length)</Label>\n                                                <InputGroup>\n                                                    <Input onChange={(e) => handleDescriptionChange(e)} value={description} className=\"form-control\" rows={6} type=\"textarea\" placeholder={\"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}/>\n                                                </InputGroup>\n                                            </FormGroup>\n                                            <hr />\n                                            <div className={\"centered-both-ways\"}>\n                                                <Button outline style={{ width: \"75%\" }} onClick={() => handleAdditionFileDescription()} className=\"btn-square-info\" color=\"info\" size=\"md\">Submit New Information/Details & File(s)</Button>\n                                            </div>\n                                        </Row>\n                                        <hr />\n                                    </CardBody>\n                                </Card>\n                            </Row>\n                        </Sheet.Content>\n                        </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet>\n            </div>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : [],\n        coursesArray: (_.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\")) ? state.courseData.courseData.pageTwoData.courseContentSections : []\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, updateCourseInformationData })(SheetHelperPaneUploadCourseContent);"]},"metadata":{},"sourceType":"module"}