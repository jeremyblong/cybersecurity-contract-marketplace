{"ast":null,"code":"import React,{useEffect,useState,Fragment}from'react';import\"./styles.css\";import{Container,Row,Col,Card,CardHeader,CardBody,Label}from\"reactstrap\";import Breadcrumb from'../../../../../layout/breadcrumb';import{connect}from\"react-redux\";import axios from\"axios\";import{NotificationManager}from\"react-notifications\";import ReactPlayer from'react-player';import _ from\"lodash\";import StarRatings from'react-star-ratings';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';const ViewRecentReviewsAllEmployerHelper=_ref=>{let{userData}=_ref;const[reviews,setReviews]=useState([]);const[ready,setReady]=useState(false);useEffect(()=>{const config={params:{uniqueId:userData.uniqueId,accountType:userData.accountType}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/reviews/only/both/account/types\"),config).then(res=>{if(res.data.message===\"Gathered reviews!\"){console.log(\"res.data reviews: ----- :\",res.data);const{reviews}=res.data;setReviews(reviews);setReady(true);}else{console.log(\"err\",res.data);NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your current received reviews, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);}}).catch(err=>{console.log(err);NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your current received reviews, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);});},[]);const renderProfilePicVideoMainPageImg=last=>{if(last!==null&&_.has(last,\"link\")){if(last.type.includes(\"video\")){// video logic\nreturn/*#__PURE__*/React.createElement(ReactPlayer,{playing:true,loop:true,muted:true,width:\"100%\",className:\"img-fluid roundme roundme-video\",wrapper:\"div\",url:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(last.link)});}else{// image logic\nreturn/*#__PURE__*/React.createElement(\"img\",{className:\"img-fluid roundme\",src:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(last.link),alt:\"\"});}}else{// image logic\nreturn/*#__PURE__*/React.createElement(\"img\",{className:\"img-fluid roundme\",src:process.env.REACT_APP_PLACEHOLDER_IMAGE,alt:\"\"});}};console.log(\"reviews\",reviews);const calculateReviewRating=ratings=>{let sum=0;for(const key in ratings){const rating=ratings[key];sum+=rating;}return Math.round(sum/Object.keys(ratings).length);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Previously Received Review(s)\",title:\"Previously Received Review's From Contracted Work\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},ready===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"shadow\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"h3\",null,\"You're viewing your recent \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},\"completed\"),\" review's from other past previously-completed contracts. These reviews were left by other users you've previously connected/worked with..\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,typeof reviews!==\"undefined\"&&reviews.length>0?reviews.map((review,index)=>{// create last pic\nconst picOrVideo=review.reviewerPicOrVideo;return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"2\",lg:\"2\",xl:\"2\"},renderProfilePicVideoMainPageImg(picOrVideo)),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"10\",lg:\"10\",xl:\"10\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-left review-left-by\"},\"Review left by \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#7366ff\",textDecorationLine:\"underline\"}},review.reviewerName))))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Label,{className:\"review-label\"},\"Review Comment(s)\"),/*#__PURE__*/React.createElement(\"p\",{className:\"review-paragraph\"},review.reviewText),/*#__PURE__*/React.createElement(Label,{className:\"review-label\"},\"Both parties have reviewed?\"),/*#__PURE__*/React.createElement(\"p\",{className:\"review-paragraph\",style:review.validated===true?{color:\"green\"}:{color:\"red\"}},review.validated===true?\"Both parties left reviews!\":\"Only ONE party has currently left a review!\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Label,{className:\"review-label\"},\"Overall \",/*#__PURE__*/React.createElement(\"em\",{style:{textDecorationLine:\"underline\"}},\"combined\"),\" review score\"),/*#__PURE__*/React.createElement(StarRatings,{rating:calculateReviewRating(review.rating),numberOfStars:10,starEmptyColor:\"#000\",starHoverColor:\"#7366ff\",starRatedColor:\"#f73164\",name:\"rating-overall\",starSpacing:\"7.5px\"})))));}):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../assets/images/no-reviews-found.png\"),className:\"no-reviews-found\"}))))))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:45}))))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(ViewRecentReviewsAllEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/reviews/employers/viewPreviousReviews/viewRecentReviews.js"],"names":["React","useEffect","useState","Fragment","Container","Row","Col","Card","CardHeader","CardBody","Label","Breadcrumb","connect","axios","NotificationManager","ReactPlayer","_","StarRatings","Skeleton","SkeletonTheme","ViewRecentReviewsAllEmployerHelper","userData","reviews","setReviews","ready","setReady","config","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","warning","catch","err","renderProfilePicVideoMainPageImg","last","has","type","includes","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","calculateReviewRating","ratings","sum","key","rating","Math","round","Object","keys","length","color","textDecorationLine","map","review","index","picOrVideo","reviewerPicOrVideo","reviewerName","reviewText","validated","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Label } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport ReactPlayer from 'react-player';\nimport _ from \"lodash\";\nimport StarRatings from 'react-star-ratings';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst ViewRecentReviewsAllEmployerHelper = ({ userData }) => {\n\n    const [ reviews, setReviews ] = useState([]); \n    const [ ready, setReady ] = useState(false);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n          }\n          axios.get(`${process.env.REACT_APP_BASE_URL}/gather/reviews/only/both/account/types`, config).then((res) => {\n              if (res.data.message === \"Gathered reviews!\") {\n                  console.log(\"res.data reviews: ----- :\", res.data);\n        \n                  const { reviews } = res.data;\n                \n                  setReviews(reviews);\n                  setReady(true);\n              } else {\n                  console.log(\"err\", res.data);\n                  \n                  NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your current received reviews, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n              }\n          }).catch((err) => {\n              console.log(err);\n        \n              NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your current received reviews, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n          })  \n    }, []);\n\n    const renderProfilePicVideoMainPageImg = (last) => {\n\n        if (last !== null && _.has(last, \"link\")) {\n            if (last.type.includes(\"video\")) {\n                // video logic\n                return (\n                    <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"img-fluid roundme roundme-video\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} />\n                );\n            } else {\n                // image logic\n                return <img className=\"img-fluid roundme\" src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} alt=\"\" />;\n            }    \n        } else {\n            // image logic\n            return <img className=\"img-fluid roundme\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} alt=\"\" />;\n        } \n    }\n\n    console.log(\"reviews\", reviews);\n\n    const calculateReviewRating = (ratings) => {\n        let sum = 0;\n\n        for (const key in ratings) {\n            const rating = ratings[key];\n            sum += rating;\n        }\n\n        return Math.round((sum / Object.keys(ratings).length));\n    }\n\n    return (\n        <div>\n            <Breadcrumb parent=\"Previously Received Review(s)\" title=\"Previously Received Review's From Contracted Work\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        {ready === true ? <Fragment>\n                            <Card className='shadow'>\n                                <CardHeader className='b-l-primary b-r-primary'>\n                                    <h3>You're viewing your recent <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>completed</strong> review's from other past previously-completed contracts. These reviews were left by other users you've previously connected/worked with..</h3>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        {typeof reviews !== \"undefined\" && reviews.length > 0 ? reviews.map((review, index) => {\n                                            // create last pic\n                                            const picOrVideo = review.reviewerPicOrVideo;\n                                            return (\n                                                <Fragment key={index}>\n                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                        <Card className='shadow'>\n                                                            <CardHeader className='b-l-info b-r-info'>\n                                                                <Row>\n                                                                    <Col sm=\"12\" md=\"2\" lg=\"2\" xl=\"2\">\n                                                                        {renderProfilePicVideoMainPageImg(picOrVideo)}\n                                                                    </Col>\n                                                                    <Col sm=\"12\" md=\"10\" lg=\"10\" xl=\"10\">\n                                                                        <h3 className='text-left review-left-by'>Review left by <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{review.reviewerName}</strong></h3>\n                                                                    </Col>\n                                                                </Row>\n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                <Label className={\"review-label\"}>Review Comment(s)</Label>\n                                                                <p className='review-paragraph'>{review.reviewText}</p>\n                                                                <Label className={\"review-label\"}>Both parties have reviewed?</Label>\n                                                                <p className='review-paragraph' style={review.validated === true ? { color: \"green\" } : { color: \"red\" }}>{review.validated === true ? \"Both parties left reviews!\" : \"Only ONE party has currently left a review!\"}</p>\n                                                                <hr />\n                                                                <Label className={\"review-label\"}>Overall <em style={{ textDecorationLine: \"underline\" }}>combined</em> review score</Label>\n                                                                <StarRatings\n                                                                    rating={calculateReviewRating(review.rating)}\n                                                                    numberOfStars={10}\n                                                                    starEmptyColor={\"#000\"}\n                                                                    starHoverColor={\"#7366ff\"}\n                                                                    starRatedColor={\"#f73164\"}\n                                                                    name='rating-overall'\n                                                                    starSpacing=\"7.5px\"\n                                                                />\n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                </Fragment>\n                                            );\n                                        }) : <Fragment>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <img src={require(\"../../../../../assets/images/no-reviews-found.png\")} className={\"no-reviews-found\"} />\n                                            </Col>\n                                        </Fragment>}\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Fragment> : <Fragment>\n                            <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                <p>\n                                    <Skeleton count={45} />\n                                </p>\n                            </SkeletonTheme>\n                        </Fragment>}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(ViewRecentReviewsAllEmployerHelper);"]},"metadata":{},"sourceType":"module"}