{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/createNewWallData.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody, Form, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../layout/breadcrumb\";\nimport Dropzone from 'react-dropzone-uploader';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport helpers from \"./helpers/createPostHelpers.js\";\nimport CreateNewPostReduxFormHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\nconst descriptionChecker = CreateNewPostReduxFormHelpers().descriptionChecker;\nconst typesOfLanguagesUsed = CreateNewPostReduxFormHelpers().typesOfLanguagesUsed;\nconst titleChecker = CreateNewPostReduxFormHelpers().titleChecker;\nconst {\n  calculateFileType,\n  onSubmitHelper,\n  CustomInputHelper,\n  languageList\n} = helpers;\n\nconst CreateNewHackerProfileContentPostHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const history = useHistory(); // react-hook-form logic - initialization\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    reset,\n    setValue,\n    getValues,\n    setError,\n    values,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues();\n  const dropzoneRef = useRef(null);\n  const typeOfPostRef = useRef(null);\n  const [typing, setTyping] = useState(\"\");\n  const [typesSelectionsOptions, setSelectionState] = useState([]);\n  const [pageReady, setPageReadyStatus] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [uploaded, setUploadedFiles] = useState([]);\n  useEffect(() => {\n    const newOptionsArr = [];\n\n    for (let index = 0; index < languageList.length; index++) {\n      const lang = languageList[index];\n      newOptionsArr.push({\n        label: lang.name,\n        value: lang.name,\n        entire: lang\n      }); // check if at END\n\n      if (languageList.length - 1 === index) {\n        setSelectionState(newOptionsArr);\n        setPageReadyStatus(true);\n      }\n    }\n  }, []);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone-custom-upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"file displaying err:\", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const handleSubmitCustom = runSubmit => {\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n    const data = new FormData();\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n    const config = {\n      onUploadProgress: progressEvent => {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(percentCompleted);\n      },\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n      if (res.data.message === \"Successfully uploaded file!\") {\n        console.log(res.data);\n        const {\n          file\n        } = res.data;\n\n        if (typeof uploaded !== \"undefined\" && uploaded.length < 5) {\n          // do something with file.\n          setUploadedFiles(prevState => {\n            return [...prevState, file];\n          });\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n          setMetaFileData(null);\n          setFileReadyStatus(false);\n          setCurrentUploadFileStatus(null);\n        } else {\n          NotificationManager.error(\"You've already uploaded FIVE (5) file's which is the maximum allowed for post's, please continue with your current files or delete some to make room for new file's to replace the old.\", \"Too many file's already in queue!\", 4750);\n        }\n\n        runSubmit();\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderCustomButtonDropzone = (data, e) => {\n    const {\n      meta\n    } = data.files[0];\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmitCustom(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  const renderFormError = (e, errors) => {\n    console.log(e, errors);\n  };\n\n  const handleFinalSubmission = data => {\n    console.log(\"handleFinalSubmission\", data);\n    const {\n      description,\n      typeOfPost,\n      title\n    } = data;\n    const config = {\n      description,\n      typeOfPost,\n      title,\n      uploaded: typeof uploaded !== \"undefined\" && uploaded.length > 0 ? uploaded : null,\n      signedinUserID: userData.uniqueId\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/new/wall/profile/post/hacker/account`, config).then(res => {\n      if (res.data.message === \"Successfully updated/uploaded new wall post!\") {\n        console.log(res.data);\n        reset([\"title\", \"description\", \"typeOfPost\"]);\n        setUploadedFiles([]);\n        setTimeout(() => {\n          history.push(`/hacker/profile/individual/view/${userData.uniqueId}`);\n        }, 4750);\n        NotificationManager.success(`We've successfully updated your profile data & posted your new post! You'll be automatically redirected to your profile to see the changes in approx 4.5 seconds...`, 'Successfully uploaded profile & post data!', 4750);\n      } else {\n        console.log(\"Err\", res.data);\n        NotificationManager.error(\"An unknown error occurred while attempting to upload your new post data to your profile, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderUponConditionalLoad = () => {\n    if (pageReady === true) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"needs-validation streaming-start-form-wrapper\",\n        noValidate: \"\",\n        onSubmit: handleSubmit(handleFinalSubmission, (e, errors) => renderFormError(e, errors)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"creation-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }\n      }, typesOfLanguagesUsed.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n        control: control,\n        name: typesOfLanguagesUsed.name\n      }, typesOfLanguagesUsed.check(setError, register, \"typeOfPost\", clearErrors), {\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"select-wrapper-post\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n            ref: typeOfPostRef,\n            autoBlur: true,\n            defaultValue: null,\n            onMenuClose: () => {},\n            isMulti: true,\n            value: currentValues.typeOfPost,\n            onChange: selectedOption => {\n              // update redux-form state\n              setTimeout(() => {\n                setValue('typeOfPost', selectedOption, {\n                  shouldValidate: false\n                }); // blur input in case it doesn't\n\n                typeOfPostRef.current.blur();\n              }, 100);\n            },\n            options: typesSelectionsOptions,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 45\n            }\n          })));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 33\n        }\n      })), errors.typeOfPost ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"span-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 54\n        }\n      }, errors.typeOfPost.message) : null), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"creation-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }, titleChecker.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, titleChecker.check(register, setTyping), {\n        className: \"form-control\",\n        name: titleChecker.name,\n        type: titleChecker.type,\n        placeholder: titleChecker.placeholder,\n        onChange: e => {\n          const value = e.target.value;\n          setTyping(value);\n          return titleChecker.onChange(value, setValue);\n        },\n        value: currentValues.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 33\n        }\n      })), errors.title ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"span-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 49\n        }\n      }, errors.title.message) : null)), /*#__PURE__*/React.createElement(Label, {\n        className: \"creation-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, descriptionChecker.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, descriptionChecker.check(register, setTyping), {\n        rows: 5,\n        className: \"form-control\",\n        name: descriptionChecker.name,\n        type: descriptionChecker.type,\n        placeholder: descriptionChecker.placeholder,\n        onChange: e => {\n          const value = e.target.value;\n          setTyping(value);\n          return descriptionChecker.onChange(value, setValue);\n        },\n        value: currentValues.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      })), errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"span-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 47\n        }\n      }, errors.description.message) : null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        className: \"creation-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }, \"Main File(s) to display in post (can upload UP-TO 5 total...)\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        className: \"creation-descriptive-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, \"These will be the MAIN files displayed in your listing in addition to the description/content section and title. You can upload anything you'd like whether it's images/selfies and/or life updates, instructional videos or interesting data/content, totally up to you on how you customize your profile!\"), /*#__PURE__*/React.createElement(Dropzone, {\n        ref: dropzoneRef,\n        PreviewComponent: data => renderPreviewOfFile(data),\n        maxFiles: 1,\n        autoUpload: true,\n        onChangeStatus: functions => {\n          setChangeOptions(functions);\n        },\n        submitButtonDisabled: false,\n        InputComponent: _ref3 => {\n          let {\n            accept,\n            onFiles\n          } = _ref3;\n          return /*#__PURE__*/React.createElement(CustomInputHelper, {\n            accept: accept,\n            onFiles: onFiles,\n            setCurrentFilePathData: setCurrentFilePathData,\n            setCurrentUploadFileStatus: setCurrentUploadFileStatus,\n            setFileReadyStatus: setFileReadyStatus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 70\n            }\n          });\n        },\n        onSubmit: onSubmitHelper,\n        SubmitButtonComponent: (data, e) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"absolutely-position-submit-btn\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }\n          }, renderCustomButtonDropzone(data, e));\n        },\n        multiple: false,\n        canCancel: false,\n        styles: {\n          dropzone: {\n            height: 275\n          },\n          dropzoneActive: {\n            borderColor: 'green'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 29\n        }\n      }, typeof uploaded !== \"undefined\" && uploaded.length > 0 ? uploaded.map((upload, index) => {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          active: index % 2 === 1 ? true : false,\n          className: \"d-flex justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 45\n          }\n        }, upload.name, /*#__PURE__*/React.createElement(\"span\", {\n          onClick: () => setUploadedFiles(prevState => {\n            return prevState.filter(fileee => fileee.id !== upload.id);\n          }),\n          className: \"badge badge-secondary counter digits customized-delete-file-profile-post\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 177\n          }\n        }, \"DELETE FILE\")));\n      }) : null), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"centered-both-ways\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        style: {\n          marginTop: \"7.5px\",\n          width: \"75%\"\n        },\n        color: \"success-2x\",\n        outline: true,\n        className: \"btn-square-success text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-plus m-r-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 170\n        }\n      }), \"Submit & Post New Data!\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"stretch-bars\",\n        count: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#f73164\",\n    height: 9,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Creating new 'primary content' post/posting\",\n    title: \"Create a new main content posting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"new-post-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center custom-card-header-create-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }, \"You're currently on the 'create a new post' page which will create new data to post on your primary profile content section/sector...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }, renderUponConditionalLoad()))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewHackerProfileContentPostHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/createNewWallData.js"],"names":["React","Fragment","useEffect","useState","useRef","Container","Row","Col","Card","CardHeader","Button","CardBody","Form","Label","Input","ListGroup","ListGroupItem","Breadcrumb","Dropzone","Skeleton","SkeletonTheme","FileViewer","_","axios","connect","NotificationManager","LoadingBar","helpers","CreateNewPostReduxFormHelpers","useForm","Controller","Select","useHistory","descriptionChecker","typesOfLanguagesUsed","titleChecker","calculateFileType","onSubmitHelper","CustomInputHelper","languageList","CreateNewHackerProfileContentPostHelper","userData","history","register","handleSubmit","control","watch","reset","setValue","getValues","setError","values","clearErrors","formState","errors","mode","reValidateMode","currentValues","dropzoneRef","typeOfPostRef","typing","setTyping","typesSelectionsOptions","setSelectionState","pageReady","setPageReadyStatus","progress","setProgress","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","uploaded","setUploadedFiles","newOptionsArr","index","length","lang","push","label","name","value","entire","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","handleSubmitCustom","runSubmit","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","prevState","success","error","catch","renderCustomButtonDropzone","e","meta","files","marginTop","preventDefault","onSubmit","warning","renderFormError","handleFinalSubmission","description","typeOfPost","title","signedinUserID","uniqueId","setTimeout","renderUponConditionalLoad","marginBottom","check","field","selectedOption","shouldValidate","current","blur","placeholder","target","onChange","functions","accept","onFiles","dropzone","height","dropzoneActive","borderColor","map","upload","filter","fileee","width","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,QAAxD,EAAkEC,IAAlE,EAAwEC,KAAxE,EAA+EC,KAA/E,EAAsFC,SAAtF,EAAiGC,aAAjG,QAAsH,YAAtH;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,6BAAP,MAA0C,mCAA1C;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,kBAAkB,GAAGL,6BAA6B,GAAGK,kBAA3D;AACA,MAAMC,oBAAoB,GAAGN,6BAA6B,GAAGM,oBAA7D;AACA,MAAMC,YAAY,GAAGP,6BAA6B,GAAGO,YAArD;AAIA,MAAM;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,cAArB;AAAqCC,EAAAA,iBAArC;AAAwDC,EAAAA;AAAxD,IAAyEZ,OAA/E;;AAEA,MAAMa,uCAAuC,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE9D,QAAMC,OAAO,GAAGV,UAAU,EAA1B,CAF8D,CAI9D;;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,KAA1C;AAAiDC,IAAAA,QAAjD;AAA2DC,IAAAA,SAA3D;AAAsEC,IAAAA,QAAtE;AAAgFC,IAAAA,MAAhF;AAAwFC,IAAAA,WAAxF;AAAqGC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAhH,MAA8HzB,OAAO,CAAC;AACxI0B,IAAAA,IAAI,EAAE,WADkI;AAExIC,IAAAA,cAAc,EAAE;AAFwH,GAAD,CAA3I;AAKA,QAAMC,aAAa,GAAGR,SAAS,EAA/B;AAEA,QAAMS,WAAW,GAAGtD,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMuD,aAAa,GAAGvD,MAAM,CAAC,IAAD,CAA5B;AACA,QAAM,CAAEwD,MAAF,EAAUC,SAAV,IAAwB1D,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAE2D,sBAAF,EAA0BC,iBAA1B,IAAgD5D,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAE6D,SAAF,EAAaC,kBAAb,IAAoC9D,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC+D,QAAD,EAAWC,WAAX,IAA0BhE,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACiE,SAAD,EAAYC,kBAAZ,IAAkClE,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACmE,yBAAD,EAA4BC,0BAA5B,IAA0DpE,QAAQ,CAAC,IAAD,CAAxE;AACA,QAAM,CAACqE,YAAD,EAAeC,sBAAf,IAAyCtE,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAACuE,YAAD,EAAeC,eAAf,IAAkCxE,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAEyE,aAAF,EAAiBC,gBAAjB,IAAsC1E,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAE2E,QAAF,EAAYC,gBAAZ,IAAiC5E,QAAQ,CAAC,EAAD,CAA/C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8E,aAAa,GAAG,EAAtB;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1C,YAAY,CAAC2C,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACtD,YAAME,IAAI,GAAG5C,YAAY,CAAC0C,KAAD,CAAzB;AACAD,MAAAA,aAAa,CAACI,IAAd,CAAmB;AAAEC,QAAAA,KAAK,EAAEF,IAAI,CAACG,IAAd;AAAoBC,QAAAA,KAAK,EAAEJ,IAAI,CAACG,IAAhC;AAAsCE,QAAAA,MAAM,EAAEL;AAA9C,OAAnB,EAFsD,CAGtD;;AACA,UAAK5C,YAAY,CAAC2C,MAAb,GAAsB,CAAvB,KAA8BD,KAAlC,EAAyC;AACrClB,QAAAA,iBAAiB,CAACiB,aAAD,CAAjB;AACAf,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ;AACJ,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMwB,mBAAmB,GAAIC,IAAD,IAAU;AAElC,UAAMC,IAAI,GAAGD,IAAI,CAACE,YAAL,CAAkBD,IAA/B,CAFkC,CAGlC;;AACA,QAAIvB,SAAS,KAAK,IAAlB,EAAwB;AACpB,0BACI;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAEhC,iBAAiB,CAACuD,IAAI,CAACE,IAAN,CAD/B;AAEI,QAAA,QAAQ,EAAErB,YAFd;AAGI,QAAA,OAAO,EAAGsB,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC,CAHtB;AAII,QAAA,GAAG,EAAEH,IAAI,CAACM,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH,KAXD,MAWO;AACH,aAAO,IAAP;AACH;AACJ,GAlBD;;AAmBA,QAAMC,kBAAkB,GAAIC,SAAD,IAAe;AAEtCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B1B,yBAA1B,EAAqDI,YAArD;AAEA,UAAMgB,IAAI,GAAG,IAAIU,QAAJ,EAAb;AAEAV,IAAAA,IAAI,CAACW,MAAL,CAAY,MAAZ,EAAoB/B,yBAApB;AACAoB,IAAAA,IAAI,CAACW,MAAL,CAAY,MAAZ,EAAoB3B,YAApB;AAEA,UAAM4B,MAAM,GAAG;AACXC,MAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,YAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KAAxD,CAAvB;AAEA1C,QAAAA,WAAW,CAACsC,gBAAD,CAAX;AACH,OALU;AAMXK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AANE,KAAf;AAWAvF,IAAAA,KAAK,CAACwF,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,wCAA7C,EAAsFxB,IAAtF,EAA4FY,MAA5F,EAAoGa,IAApG,CAA0GC,GAAD,IAAS;AAC9G,UAAIA,GAAG,CAAC1B,IAAJ,CAAS2B,OAAT,KAAqB,6BAAzB,EAAwD;AACpDtB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAAC1B,IAAhB;AAEA,cAAM;AAAEC,UAAAA;AAAF,YAAWyB,GAAG,CAAC1B,IAArB;;AAEA,YAAI,OAAOZ,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACI,MAAT,GAAkB,CAAzD,EAA4D;AACxD;AACAH,UAAAA,gBAAgB,CAACuC,SAAS,IAAI;AAC1B,mBAAO,CAAC,GAAGA,SAAJ,EAAe3B,IAAf,CAAP;AACH,WAFe,CAAhB;AAIAlE,UAAAA,mBAAmB,CAAC8F,OAApB,CAA6B,uGAA7B,EAAqI,6BAArI,EAAoK,IAApK;AAEA5C,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAN,UAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,UAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACH,SAXD,MAWO;AACH9C,UAAAA,mBAAmB,CAAC+F,KAApB,CAA0B,yLAA1B,EAAqN,mCAArN,EAA0P,IAA1P;AACH;;AAEDrB,QAAAA,SAAS;AACZ,OArBD,MAqBO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBoB,GAAG,CAAC1B,IAAvB;AACH;AACJ,KAzBD,EAyBG+B,KAzBH,CAyBU3B,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA3BD;AA4BH,GAhDD;;AAiDA,QAAM4B,0BAA0B,GAAG,CAAChC,IAAD,EAAOiC,CAAP,KAAa;AAE5C,UAAM;AAAEC,MAAAA;AAAF,QAAWlC,IAAI,CAACmC,KAAL,CAAW,CAAX,CAAjB;;AAEA,QAAIvD,yBAAyB,KAAK,IAAlC,EAAwC;AACpC,aAAO,IAAP;AACH,KAFD,MAEO;AACH,UAAIF,SAAS,KAAK,IAAlB,EAAwB;AACpB,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAE0D,YAAAA,SAAS,EAAE;AAAb,WAAf;AAAsC,UAAA,OAAO,EAAGH,CAAD,IAAO;AAClDA,YAAAA,CAAC,CAACI,cAAF,GADkD,CAElD;;AACApD,YAAAA,eAAe,CAACiD,IAAD,CAAf,CAHkD,CAIlD;;AACAvD,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAEA,kBAAM8B,SAAS,GAAGT,IAAI,CAACsC,QAAvB;AAEA9B,YAAAA,kBAAkB,CAACC,SAAD,CAAlB;AACH,WAVD;AAUG,UAAA,SAAS,EAAC,mBAVb;AAUiC,UAAA,KAAK,EAAC,WAVvC;AAUmD,UAAA,IAAI,EAAC,IAVxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADJ;AAeH,OAhBD,MAgBO;AACH,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAE2B,YAAAA,SAAS,EAAE;AAAb,WAAf;AAAsC,UAAA,OAAO,EAAE,MAAM;AACjDrG,YAAAA,mBAAmB,CAACwG,OAApB,CAA6B,uGAA7B,EAAqI,kBAArI,EAAyJ,IAAzJ;AACH,WAFD;AAEG,UAAA,SAAS,EAAC,eAFb;AAE6B,UAAA,KAAK,EAAC,OAFnC;AAE2C,UAAA,IAAI,EAAC,IAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADJ;AAOH;AACJ;AACJ,GAjCD;;AAkCA,QAAMC,eAAe,GAAG,CAACP,CAAD,EAAIrE,MAAJ,KAAe;AACnCyC,IAAAA,OAAO,CAACC,GAAR,CAAY2B,CAAZ,EAAerE,MAAf;AACH,GAFD;;AAGA,QAAM6E,qBAAqB,GAAIzC,IAAD,IAAU;AACpCK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,IAArC;AAEA,UAAM;AAAE0C,MAAAA,WAAF;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAqC5C,IAA3C;AAEA,UAAMY,MAAM,GAAG;AACX8B,MAAAA,WADW;AAEXC,MAAAA,UAFW;AAGXC,MAAAA,KAHW;AAIXxD,MAAAA,QAAQ,EAAE,OAAOA,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACI,MAAT,GAAkB,CAArD,GAAyDJ,QAAzD,GAAoE,IAJnE;AAKXyD,MAAAA,cAAc,EAAE9F,QAAQ,CAAC+F;AALd,KAAf;AAQAjH,IAAAA,KAAK,CAACwF,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,8CAA7C,EAA4FZ,MAA5F,EAAoGa,IAApG,CAA0GC,GAAD,IAAS;AAC9G,UAAIA,GAAG,CAAC1B,IAAJ,CAAS2B,OAAT,KAAqB,8CAAzB,EAAyE;AACrEtB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAAC1B,IAAhB;AAEA3C,QAAAA,KAAK,CAAC,CAAC,OAAD,EAAU,aAAV,EAAyB,YAAzB,CAAD,CAAL;AACAgC,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAEA0D,QAAAA,UAAU,CAAC,MAAM;AACb/F,UAAAA,OAAO,CAAC0C,IAAR,CAAc,mCAAkC3C,QAAQ,CAAC+F,QAAS,EAAlE;AACH,SAFS,EAEP,IAFO,CAAV;AAIA/G,QAAAA,mBAAmB,CAAC8F,OAApB,CAA6B,qKAA7B,EAAmM,4CAAnM,EAAiP,IAAjP;AACH,OAXD,MAWO;AACHxB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBoB,GAAG,CAAC1B,IAAvB;AAEAjE,QAAAA,mBAAmB,CAAC+F,KAApB,CAA0B,0JAA1B,EAAsL,uCAAtL,EAA+N,IAA/N;AACH;AACJ,KAjBD,EAiBGC,KAjBH,CAiBU3B,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAnBD;AAoBH,GAjCD;;AAkCA,QAAM4C,yBAAyB,GAAG,MAAM;AACpC,QAAI1E,SAAS,KAAK,IAAlB,EAAwB;AACpB,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,+CAAhB;AAAgE,QAAA,UAAU,EAAC,EAA3E;AAA8E,QAAA,QAAQ,EAAEpB,YAAY,CAACuF,qBAAD,EAAwB,CAACR,CAAD,EAAIrE,MAAJ,KAAe4E,eAAe,CAACP,CAAD,EAAIrE,MAAJ,CAAtD,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEqF,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAoB,QAAA,EAAE,EAAC,GAAvB;AAA2B,QAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCzG,oBAAoB,CAACmD,KAA1D,CADJ,eAEI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAExC,OADb;AAEI,QAAA,IAAI,EAAEX,oBAAoB,CAACoD;AAF/B,SAGQpD,oBAAoB,CAAC0G,KAArB,CAA2B1F,QAA3B,EAAqCP,QAArC,EAA+C,YAA/C,EAA6DS,WAA7D,CAHR;AAII,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEyF,YAAAA;AAAF,WAAD;AAAA,8BACJ;AAAK,YAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,MAAD,oBACQA,KADR;AAEI,YAAA,GAAG,EAAElF,aAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,YAAY,EAAE,IAJlB;AAKI,YAAA,WAAW,EAAE,MAAM,CAAE,CALzB;AAMI,YAAA,OAAO,EAAE,IANb;AAOI,YAAA,KAAK,EAAEF,aAAa,CAAC4E,UAPzB;AAQI,YAAA,QAAQ,EAAGS,cAAD,IAAoB;AAC1B;AACAL,cAAAA,UAAU,CAAC,MAAM;AACbzF,gBAAAA,QAAQ,CAAC,YAAD,EAAe8F,cAAf,EAA+B;AAAEC,kBAAAA,cAAc,EAAE;AAAlB,iBAA/B,CAAR,CADa,CAEb;;AACApF,gBAAAA,aAAa,CAACqF,OAAd,CAAsBC,IAAtB;AACH,eAJS,EAIP,GAJO,CAAV;AAKH,aAfL;AAgBI,YAAA,OAAO,EAAEnF,sBAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADI;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EA6BKR,MAAM,CAAC+E,UAAP,gBAAoB;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC/E,MAAM,CAAC+E,UAAP,CAAkBhB,OAAlD,CAApB,GAAwF,IA7B7F,CADJ,eAgCI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAoB,QAAA,EAAE,EAAC,GAAvB;AAA2B,QAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqClF,YAAY,CAACkD,KAAlD,CADJ,eAEI,oBAAC,KAAD,oBAAWlD,YAAY,CAACyG,KAAb,CAAmBjG,QAAnB,EAA6BkB,SAA7B,CAAX;AAAoD,QAAA,SAAS,EAAC,cAA9D;AAA6E,QAAA,IAAI,EAAE1B,YAAY,CAACmD,IAAhG;AAAsG,QAAA,IAAI,EAAEnD,YAAY,CAAC0D,IAAzH;AAA+H,QAAA,WAAW,EAAE1D,YAAY,CAAC+G,WAAzJ;AAAsK,QAAA,QAAQ,EAAGvB,CAAD,IAAO;AACnL,gBAAMpC,KAAK,GAAGoC,CAAC,CAACwB,MAAF,CAAS5D,KAAvB;AAEA1B,UAAAA,SAAS,CAAC0B,KAAD,CAAT;AAEA,iBAAOpD,YAAY,CAACiH,QAAb,CAAsB7D,KAAtB,EAA6BvC,QAA7B,CAAP;AACH,SAND;AAMG,QAAA,KAAK,EAAES,aAAa,CAAC6E,KANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EASKhF,MAAM,CAACgF,KAAP,gBAAe;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgChF,MAAM,CAACgF,KAAP,CAAajB,OAA7C,CAAf,GAA8E,IATnF,CAhCJ,CADJ,eA6CI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCpF,kBAAkB,CAACoD,KAAxD,CA7CJ,eA8CI,kDAAcpD,kBAAkB,CAAC2G,KAAnB,CAAyBjG,QAAzB,EAAmCkB,SAAnC,CAAd;AAA6D,QAAA,IAAI,EAAE,CAAnE;AAAsE,QAAA,SAAS,EAAC,cAAhF;AAA+F,QAAA,IAAI,EAAE5B,kBAAkB,CAACqD,IAAxH;AAA8H,QAAA,IAAI,EAAErD,kBAAkB,CAAC4D,IAAvJ;AAA6J,QAAA,WAAW,EAAE5D,kBAAkB,CAACiH,WAA7L;AAA0M,QAAA,QAAQ,EAAGvB,CAAD,IAAO;AACvN,gBAAMpC,KAAK,GAAGoC,CAAC,CAACwB,MAAF,CAAS5D,KAAvB;AACA1B,UAAAA,SAAS,CAAC0B,KAAD,CAAT;AACA,iBAAOtD,kBAAkB,CAACmH,QAAnB,CAA4B7D,KAA5B,EAAmCvC,QAAnC,CAAP;AACH,SAJD;AAIG,QAAA,KAAK,EAAES,aAAa,CAAC2E,WAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA9CJ,EAmDK9E,MAAM,CAAC8E,WAAP,gBAAqB;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC9E,MAAM,CAAC8E,WAAP,CAAmBf,OAAnD,CAArB,GAA0F,IAnD/F,eAoDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDJ,eAqDI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEArDJ,eAsDI;AAAG,QAAA,KAAK,EAAE;AAAEsB,UAAAA,YAAY,EAAE;AAAhB,SAAV;AAAoC,QAAA,SAAS,EAAE,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uTAtDJ,eAuDI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEjF,WADT;AAEI,QAAA,gBAAgB,EAAGgC,IAAD,IAAUD,mBAAmB,CAACC,IAAD,CAFnD;AAGI,QAAA,QAAQ,EAAE,CAHd;AAII,QAAA,UAAU,EAAE,IAJhB;AAKI,QAAA,cAAc,EAAG2D,SAAD,IAAe;AAC3BxE,UAAAA,gBAAgB,CAACwE,SAAD,CAAhB;AACH,SAPL;AAQI,QAAA,oBAAoB,EAAE,KAR1B;AASI,QAAA,cAAc,EAAE;AAAA,cAAC;AAAEC,YAAAA,MAAF;AAAUC,YAAAA;AAAV,WAAD;AAAA,8BAAyB,oBAAC,iBAAD;AAAmB,YAAA,MAAM,EAAED,MAA3B;AAAmC,YAAA,OAAO,EAAEC,OAA5C;AAAqD,YAAA,sBAAsB,EAAE9E,sBAA7E;AAAqG,YAAA,0BAA0B,EAAEF,0BAAjI;AAA6J,YAAA,kBAAkB,EAAEF,kBAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB;AAAA,SATpB;AAUI,QAAA,QAAQ,EAAEhC,cAVd;AAWI,QAAA,qBAAqB,EAAE,CAACqD,IAAD,EAAOiC,CAAP,KAAa;AAChC,8BACI;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKD,0BAA0B,CAAChC,IAAD,EAAOiC,CAAP,CAD/B,CADJ;AAKH,SAjBL;AAkBI,QAAA,QAAQ,EAAE,KAlBd;AAmBI,QAAA,SAAS,EAAE,KAnBf;AAoBI,QAAA,MAAM,EAAE;AACJ6B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WADN;AAEJC,UAAAA,cAAc,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf;AAFZ,SApBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvDJ,eAgFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhFJ,eAiFQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,OAAO7E,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACI,MAAT,GAAkB,CAArD,GAAyDJ,QAAQ,CAAC8E,GAAT,CAAa,CAACC,MAAD,EAAS5E,KAAT,KAAmB;AACtF,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,aAAD;AAAe,UAAA,MAAM,EAAGA,KAAK,GAAG,CAAR,KAAc,CAAf,GAAoB,IAApB,GAA2B,KAAlD;AAAyD,UAAA,SAAS,EAAC,mDAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwH4E,MAAM,CAACvE,IAA/H,eAAoI;AAAM,UAAA,OAAO,EAAE,MAAMP,gBAAgB,CAACuC,SAAS,IAAI;AACnL,mBAAOA,SAAS,CAACwC,MAAV,CAAkBC,MAAD,IAAYA,MAAM,CAAC9D,EAAP,KAAc4D,MAAM,CAAC5D,EAAlD,CAAP;AACH,WAFwK,CAArC;AAEhI,UAAA,SAAS,EAAC,0EAFsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAE1C,aAF0C,CAApI,CADJ,CADJ;AAOH,OARyD,CAAzD,GAQI,IATT,CAjFR,eA4FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5FJ,eA6FI;AAAK,QAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAwB,QAAA,KAAK,EAAE;AAAE6B,UAAAA,SAAS,EAAE,OAAb;AAAsBkC,UAAAA,KAAK,EAAE;AAA7B,SAA/B;AAAqE,QAAA,KAAK,EAAE,YAA5E;AAA0F,QAAA,OAAO,MAAjG;AAAkG,QAAA,SAAS,EAAC,gCAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6I;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7I,4BADJ,CA7FJ,CADJ,CADJ;AAqGH,KAtGD,MAsGO;AACH,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,SAAzB;AAAmC,QAAA,cAAc,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,kBAAkB,EAAE,cAA9B;AAA8C,QAAA,KAAK,EAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ;AASH;AACJ,GAlHD;;AAmHA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE,SADX;AAEI,IAAA,MAAM,EAAE,CAFZ;AAGI,IAAA,QAAQ,EAAE9F,QAHd;AAII,IAAA,gBAAgB,EAAE,MAAM;AACpBC,MAAAA,WAAW,CAAC,CAAD,CAAX;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,6CAAnB;AAAiE,IAAA,KAAK,EAAC,mCAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6IADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKuE,yBAAyB,EAD9B,CAJJ,CADJ,CADJ,CADJ,CAVJ,CADJ;AA2BH,CAjUD;;AAkUA,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHzH,IAAAA,QAAQ,EAAEyH,KAAK,CAACC,IAAN,CAAWzE;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAelE,OAAO,CAACyI,eAAD,EAAkB,EAAlB,CAAP,CAA8BzH,uCAA9B,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody, Form, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../layout/breadcrumb\";\nimport Dropzone from 'react-dropzone-uploader';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport helpers from \"./helpers/createPostHelpers.js\";\nimport CreateNewPostReduxFormHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\n\nconst descriptionChecker = CreateNewPostReduxFormHelpers().descriptionChecker;\nconst typesOfLanguagesUsed = CreateNewPostReduxFormHelpers().typesOfLanguagesUsed;\nconst titleChecker = CreateNewPostReduxFormHelpers().titleChecker;\n\n\n\nconst { calculateFileType, onSubmitHelper, CustomInputHelper, languageList } = helpers;\n\nconst CreateNewHackerProfileContentPostHelper = ({ userData }) => {\n\n    const history = useHistory();\n\n    // react-hook-form logic - initialization\n    const { register, handleSubmit, control, watch, reset, setValue, getValues, setError, values, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n    \n    const dropzoneRef = useRef(null);\n    const typeOfPostRef = useRef(null);\n    const [ typing, setTyping ] = useState(\"\");\n    const [ typesSelectionsOptions, setSelectionState ] = useState([]);\n    const [ pageReady, setPageReadyStatus ] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ uploaded, setUploadedFiles ] = useState([]);\n\n\n    useEffect(() => {\n        const newOptionsArr = [];\n        \n        for (let index = 0; index < languageList.length; index++) {\n            const lang = languageList[index];\n            newOptionsArr.push({ label: lang.name, value: lang.name, entire: lang });\n            // check if at END\n            if ((languageList.length - 1) === index) {\n                setSelectionState(newOptionsArr);\n                setPageReadyStatus(true);\n            }\n        }\n    }, [])\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone-custom-upload\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"file displaying err:\", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const handleSubmitCustom = (runSubmit) => {\n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                if (typeof uploaded !== \"undefined\" && uploaded.length < 5) {\n                    // do something with file.\n                    setUploadedFiles(prevState => {\n                        return [...prevState, file]\n                    })\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                    setMetaFileData(null);\n                    setFileReadyStatus(false);\n                    setCurrentUploadFileStatus(null);\n                } else {\n                    NotificationManager.error(\"You've already uploaded FIVE (5) file's which is the maximum allowed for post's, please continue with your current files or delete some to make room for new file's to replace the old.\", \"Too many file's already in queue!\", 4750);\n                }\n\n                runSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmitCustom(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const renderFormError = (e, errors) => {\n        console.log(e, errors);\n    }\n    const handleFinalSubmission = (data) => {\n        console.log(\"handleFinalSubmission\", data);\n\n        const { description, typeOfPost, title } = data;\n\n        const config = {\n            description, \n            typeOfPost,\n            title,\n            uploaded: typeof uploaded !== \"undefined\" && uploaded.length > 0 ? uploaded : null,\n            signedinUserID: userData.uniqueId\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/new/wall/profile/post/hacker/account`, config).then((res) => {\n            if (res.data.message === \"Successfully updated/uploaded new wall post!\") {\n                console.log(res.data);\n\n                reset([\"title\", \"description\", \"typeOfPost\"]);\n                setUploadedFiles([]);\n\n                setTimeout(() => {\n                    history.push(`/hacker/profile/individual/view/${userData.uniqueId}`);\n                }, 4750);\n\n                NotificationManager.success(`We've successfully updated your profile data & posted your new post! You'll be automatically redirected to your profile to see the changes in approx 4.5 seconds...`, 'Successfully uploaded profile & post data!', 4750);\n            } else {\n                console.log(\"Err\", res.data);\n\n                NotificationManager.error(\"An unknown error occurred while attempting to upload your new post data to your profile, please try again or contact support if this problem persists...\", \"Error upload/updating post & profile!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderUponConditionalLoad = () => {\n        if (pageReady === true) {\n            return (\n                <Fragment>\n                    <Form className=\"needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(handleFinalSubmission, (e, errors) => renderFormError(e, errors))}>\n                        <Row style={{ marginBottom: \"15px\" }}>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Label className={\"creation-label\"}>{typesOfLanguagesUsed.label}</Label>\n                                <Controller\n                                    control={control}\n                                    name={typesOfLanguagesUsed.name}\n                                    {...typesOfLanguagesUsed.check(setError, register, \"typeOfPost\", clearErrors)}\n                                    render={({ field }) => (\n                                        <div className={\"select-wrapper-post\"}>\n                                            <Select\n                                                {...field}\n                                                ref={typeOfPostRef}\n                                                autoBlur={true}\n                                                defaultValue={null}\n                                                onMenuClose={() => {}}\n                                                isMulti={true}\n                                                value={currentValues.typeOfPost}\n                                                onChange={(selectedOption) => {\n                                                    // update redux-form state\n                                                    setTimeout(() => {\n                                                        setValue('typeOfPost', selectedOption, { shouldValidate: false })\n                                                        // blur input in case it doesn't\n                                                        typeOfPostRef.current.blur();\n                                                    }, 100)\n                                                }}\n                                                options={typesSelectionsOptions}\n                                            />\n                                        </div>\n                                    )}\n                                />\n                                {errors.typeOfPost ? <span className=\"span-tooltip\">{errors.typeOfPost.message}</span> : null}\n                            </Col>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Label className={\"creation-label\"}>{titleChecker.label}</Label>\n                                <Input {...titleChecker.check(register, setTyping)} className=\"form-control\" name={titleChecker.name} type={titleChecker.type} placeholder={titleChecker.placeholder} onChange={(e) => {\n                                    const value = e.target.value;\n\n                                    setTyping(value)\n\n                                    return titleChecker.onChange(value, setValue);\n                                }} value={currentValues.title} />\n                                {errors.title ? <span className=\"span-tooltip\">{errors.title.message}</span> : null}\n                            </Col>\n                        </Row>\n                        <Label className={\"creation-label\"}>{descriptionChecker.label}</Label>\n                        <textarea {...descriptionChecker.check(register, setTyping)} rows={5} className=\"form-control\" name={descriptionChecker.name} type={descriptionChecker.type} placeholder={descriptionChecker.placeholder} onChange={(e) => {\n                            const value = e.target.value;\n                            setTyping(value);\n                            return descriptionChecker.onChange(value, setValue)\n                        }} value={currentValues.description} />\n                        {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                        <hr />\n                        <Label className={\"creation-label\"}>Main File(s) to display in post (can upload UP-TO 5 total...)</Label>\n                        <p style={{ marginBottom: \"10px\" }} className={\"creation-descriptive-text\"}>These will be the MAIN files displayed in your listing in addition to the description/content section and title. You can upload anything you'd like whether it's images/selfies and/or life updates, instructional videos or interesting data/content, totally up to you on how you customize your profile!</p>\n                        <Dropzone\n                            ref={dropzoneRef}\n                            PreviewComponent={(data) => renderPreviewOfFile(data)}\n                            maxFiles={1}\n                            autoUpload={true}\n                            onChangeStatus={(functions) => {\n                                setChangeOptions(functions);\n                            }}\n                            submitButtonDisabled={false}\n                            InputComponent={({ accept, onFiles }) => <CustomInputHelper accept={accept} onFiles={onFiles} setCurrentFilePathData={setCurrentFilePathData} setCurrentUploadFileStatus={setCurrentUploadFileStatus} setFileReadyStatus={setFileReadyStatus} />}\n                            onSubmit={onSubmitHelper}\n                            SubmitButtonComponent={(data, e) => {\n                                return (\n                                    <div className=\"absolutely-position-submit-btn\">\n                                        {renderCustomButtonDropzone(data, e)}\n                                    </div>\n                                );\n                            }}\n                            multiple={false}\n                            canCancel={false}\n                            styles={{\n                                dropzone: { height: 275 },\n                                dropzoneActive: { borderColor: 'green' },\n                            }}\n                        />\n                        <hr />\n                            <ListGroup>\n                                {typeof uploaded !== \"undefined\" && uploaded.length > 0 ? uploaded.map((upload, index) => {\n                                    return (\n                                        <Fragment>\n                                            <ListGroupItem active={(index % 2 === 1) ? true : false} className=\"d-flex justify-content-between align-items-center\">{upload.name}<span onClick={() => setUploadedFiles(prevState => {\n                                                return prevState.filter((fileee) => fileee.id !== upload.id);\n                                            })} className=\"badge badge-secondary counter digits customized-delete-file-profile-post\">{\"DELETE FILE\"}</span></ListGroupItem>\n                                        </Fragment>\n                                    );\n                                }) : null}\n                            </ListGroup>\n                        <hr />\n                        <div className={\"centered-both-ways\"}>\n                            <Button type={\"submit\"} style={{ marginTop: \"7.5px\", width: \"75%\" }} color={\"success-2x\"} outline className=\"btn-square-success text-center\"><i className=\"fa fa-plus m-r-5\"></i>Submit & Post New Data!</Button>\n                        </div>\n                    </Form>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"stretch-bars\"} count={50} />\n                        </p>\n                    </SkeletonTheme>\n                </Fragment>\n            );\n        }\n    }\n    return (\n        <Fragment>\n            <LoadingBar\n                color={\"#f73164\"}\n                height={9}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Breadcrumb parent=\"Creating new 'primary content' post/posting\" title=\"Create a new main content posting\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"new-post-card-wrapper\"}>\n                            <CardHeader className=\"b-l-primary border-3\">\n                                <h4 className={\"text-center custom-card-header-create-post\"}>You're currently on the 'create a new post' page which will create new data to post on your primary profile content section/sector...</h4>\n                            </CardHeader>\n                            <CardBody>\n                                {renderUponConditionalLoad()}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(CreateNewHackerProfileContentPostHelper);"]},"metadata":{},"sourceType":"module"}