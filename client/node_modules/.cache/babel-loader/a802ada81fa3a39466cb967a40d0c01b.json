{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/cashout/cashoutRemainingBal.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { Col, Container, Row, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { NotificationManager } from \"react-notifications\";\nimport { connect } from \"react-redux\";\nimport Slider from 'rc-slider';\nimport Sheet from 'react-modal-sheet';\nimport DataTable from 'react-data-table-component';\nimport moment from \"moment\";\nconst columns = [{\n  name: 'Status',\n  selector: row => row.status\n}, {\n  name: 'Amount Cashed-Out',\n  selector: row => row.amount\n}, {\n  name: 'Date Of Cashout',\n  selector: row => row.cashoutDate\n}, {\n  name: \"Cashout Date (From Now)\",\n  selector: row => row.dateAddedFromNow\n}, {\n  name: 'Type Of Payout',\n  selector: row => row.type\n}, {\n  name: 'Currency',\n  selector: row => row.currency\n}];\n\nconst CashoutAvailiableBalanceHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [previousPayoutMethods, setPreviousPayoutMethods] = useState([]);\n  const [selectedCard, setSelected] = useState(null);\n  const [percentageToBePaid, setPercentageToBePaid] = useState(25);\n  const [balance, setBalance] = useState(null);\n  const [cost, setCost] = useState(0);\n  const [marks, setMarks] = useState({});\n  const [ready, setReady] = useState(false);\n  const [payoutsPaneOpen, setPayoutsPaneOpen] = useState(false);\n  const [cardTableData, setCardTableData] = useState([]);\n  useEffect(() => {\n    const config = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then(res => {\n      if (res.data.message === \"Gathered balance!\") {\n        const {\n          bal\n        } = res.data;\n        console.log(res.data);\n\n        if (userData.accountType === \"employers\") {\n          setBalance(bal);\n\n          if (bal > 0) {\n            const dividedBy10 = bal / 10;\n            setMarks({\n              0: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 0).toFixed(2)}`\n              },\n              10: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 1).toFixed(2)}`\n              },\n              20: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 2).toFixed(2)}`\n              },\n              30: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 3).toFixed(2)}`\n              },\n              40: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 4).toFixed(2)}`\n              },\n              50: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 5).toFixed(2)}`\n              },\n              60: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 6).toFixed(2)}`\n              },\n              70: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 7).toFixed(2)}`\n              },\n              80: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 8).toFixed(2)}`\n              },\n              90: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 9).toFixed(2)}`\n              },\n              100: {\n                style: {\n                  color: \"blue\"\n                },\n                label: `$${(dividedBy10 / 100 * 10).toFixed(2)}`\n              }\n            });\n            setReady(true);\n          }\n        } else {\n          const {\n            instant_available,\n            available\n          } = res.data.bal;\n\n          for (let index = 0; index < instant_available.length; index++) {\n            const item = instant_available[index];\n\n            if (item.currency === \"usd\") {\n              const dividedBy10 = item.amount / 10;\n              setBalance(item.amount);\n              setMarks({\n                0: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 0).toFixed(2)}`\n                },\n                10: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 1).toFixed(2)}`\n                },\n                20: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 2).toFixed(2)}`\n                },\n                30: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 3).toFixed(2)}`\n                },\n                40: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 4).toFixed(2)}`\n                },\n                50: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 5).toFixed(2)}`\n                },\n                60: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 6).toFixed(2)}`\n                },\n                70: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 7).toFixed(2)}`\n                },\n                80: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 8).toFixed(2)}`\n                },\n                90: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 9).toFixed(2)}`\n                },\n                100: {\n                  style: {\n                    color: \"blue\"\n                  },\n                  label: `$${(dividedBy10 / 100 * 10).toFixed(2)}`\n                }\n              });\n              setReady(true);\n              break;\n            }\n          }\n        }\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  useEffect(() => {\n    const config = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/both/account/payout/methods`, config).then(res => {\n      if (res.data.message === \"Gathered payouts!\") {\n        const {\n          payouts\n        } = res.data;\n        console.log(\"payouts\", payouts);\n        const convertedPaymentsArr = [];\n\n        if (typeof payouts !== \"undefined\" && payouts.length > 0) {\n          for (let index = 0; index < payouts.length; index++) {\n            const method = payouts[index];\n            convertedPaymentsArr.push({\n              status: /*#__PURE__*/React.createElement(\"div\", {\n                className: \"font-success\",\n                style: {\n                  textDecorationLine: \"underline\",\n                  fontWeight: \"bold\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }\n              }, method.status),\n              amount: /*#__PURE__*/React.createElement(\"div\", {\n                className: \"font-primary\",\n                style: {\n                  textDecorationLine: \"underline\",\n                  fontWeight: \"bold\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }\n              }, `$${method.amount / 100}`),\n              cashoutDate: moment(method.created * 1000).format(\"MM/DD/YYYY hh:mm:ss a\"),\n              dateAddedFromNow: moment(method.created * 1000).fromNow(),\n              type: method.type,\n              currency: method.currency\n            });\n          }\n        }\n\n        setCardTableData(convertedPaymentsArr);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, [balance]);\n  useEffect(() => {\n    console.log(\"mounted..\");\n    const config = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        const {\n          cards\n        } = res.data;\n        console.log(res.data);\n        setPreviousPayoutMethods(cards);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  console.log(\"balance\", balance);\n\n  const handleSliderValueChange = percentage => {\n    console.log(\"handleSliderValueChange percentage\", percentage);\n    setPercentageToBePaid(percentage);\n  };\n\n  const onAfterChange = percentage => {\n    console.log(\"onAfterChange percentage\", percentage);\n    const totalCost = balance / 100;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    setCost(converted);\n  };\n\n  const calculateCurrentSelectedCost = percentage => {\n    const totalCost = balance / 100;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    return `$${converted.toFixed(2)} selected to be deposited into your desired account/card immediately! (-3% associated fee)`;\n  };\n\n  const calculateDisabled = () => {\n    if (typeof cost !== \"undefined\" && cost !== 0 && typeof selectedCard !== \"undefined\" && selectedCard !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handlePayout = () => {\n    console.log(\"handlePayout clicked..\");\n    const config = {\n      id: userData.uniqueId,\n      accountType: userData.accountType,\n      cost,\n      selectedCard\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/create/payout/and/cashout/both/account/types`, config).then(res => {\n      if (res.data.message === \"Cashed out funds!\") {\n        const {\n          change\n        } = res.data;\n        const dividedBy10 = (balance - change) / 10;\n        setBalance(balance - change);\n        setSelected(null);\n        setMarks({\n          0: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 0).toFixed(2)}`\n          },\n          10: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 1).toFixed(2)}`\n          },\n          20: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 2).toFixed(2)}`\n          },\n          30: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 3).toFixed(2)}`\n          },\n          40: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 4).toFixed(2)}`\n          },\n          50: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 5).toFixed(2)}`\n          },\n          60: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 6).toFixed(2)}`\n          },\n          70: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 7).toFixed(2)}`\n          },\n          80: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 8).toFixed(2)}`\n          },\n          90: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 9).toFixed(2)}`\n          },\n          100: {\n            style: {\n              color: \"blue\"\n            },\n            label: `$${(dividedBy10 / 100 * 10).toFixed(2)}`\n          }\n        });\n        NotificationManager.success(\"Successfully 'cashed-out' your desired amount of funding to the desired card/account! We've successfully deposited the desired funds into your account and all actions were initiated successfully..\", \"Successfully 'cashed-out' desired funds/funding!\", 4750);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Cashout Availiable Account Balance!\",\n    title: \"Cashout Your Available Fund/Funding To A Linked Account..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: payoutsPaneOpen,\n    onClose: () => setPayoutsPaneOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-sheet-btn-margin-pricing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setPayoutsPaneOpen(false),\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    color: \"danger-2x\",\n    className: \"btn-square-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, \"Close Pane & Exit..\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"custom-container-payouts\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-card-add-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bordered-bottom-too b-t-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-pane-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }\n  }, \"You're now viewing your previous payouts/cashouts!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive product-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    noHeader: true,\n    columns: columns,\n    data: cardTableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 49\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  })) : null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-r-secondary b-l-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, \"Manage your active payout/cashout methods, add a new payout method, process a \\\"cash-out\\\" & much more!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 49\n    }\n  }, \"Manage Your Payout/Cashout Method's\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 49\n    }\n  }, \"You will be able to manage your \\\"payout/cashout\\\" methods via this page and the logic below.. You may be asking, what is a \\\"payout/cashout\\\"? \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 209\n    }\n  }, \"Good question! Let us explain...\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 49\n    }\n  }, \"Payouts also known as \\\"cashouts\\\" are when you \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#51bb25\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 115\n    }\n  }, \"TRANSFER FUNDS (earned funds)\"), \" to your personal bank account or card!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 49\n    }\n  }, \"We regularly send out payouts/cashouts periodically but it's good policy to make sure you know where your automatic payment's are going and when they are hitting your account(s). Through this page, you can \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 275\n    }\n  }, \"IMMEDIATELY\"), \" recieve funds for a minor fee (percentage - 3%) for access to your funds faster than the typical system requirements/procedure(s).\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-info\",\n    outline: true,\n    color: \"info-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => setPayoutsPaneOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 49\n    }\n  }, \"View ALL PREVIOUS Payouts!\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 49\n    }\n  }, \"You \\\"already linked\\\" accounts are below..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"customlistgroup-payment-methods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 49\n    }\n  }, typeof previousPayoutMethods !== \"undefined\" && previousPayoutMethods.length > 0 ? previousPayoutMethods.map((method, index) => {\n    console.log(\"method\", method);\n\n    if (userData.accountType === \"hackers\") {\n      const {\n        brand,\n        exp_month,\n        exp_year,\n        funding,\n        last4,\n        country\n      } = method;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        onClick: () => setSelected(method),\n        className: selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 77\n        }\n      }, `This is a ${funding} card - ${country} based`), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: \"#f73164\"\n        },\n        className: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 151\n        }\n      }, `Payment #${index + 1}`)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 73\n        }\n      }, `**** **** **** ${last4}`), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"special\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 73\n        }\n      }, `Exp. ${exp_month}/${exp_year}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 134\n        }\n      }, \"Card Type: \", brand))));\n    } else {\n      const {\n        brand,\n        exp_month,\n        exp_year,\n        funding,\n        last4,\n        country\n      } = method.card;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        onClick: () => setSelected(method),\n        className: selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 77\n        }\n      }, `This is a ${funding} card - ${country} based`), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: \"#f73164\"\n        },\n        className: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 151\n        }\n      }, `Payment #${index + 1}`)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 73\n        }\n      }, `**** **** **** ${last4}`), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"special\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 73\n        }\n      }, `Exp. ${exp_month}/${exp_year}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 134\n        }\n      }, \"Card Type: \", brand))));\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../assets/images/nocashout.png\"),\n    className: \"nocashout-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 57\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-slider-adjustment-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 45\n    }\n  }, \"Please drag the marker to the appropriate position marking 'how much' you'd like ''withdrawl' on this specific transaction (the maxed value is your current \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 221\n    }\n  }, \"available\"), \" account balance - this doesn't include pending funding).\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: percentageToBePaid,\n    startPoint: 0,\n    onAfterChange: onAfterChange,\n    onChange: handleSliderValueChange,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"current-selected-cost\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 49\n    }\n  }, calculateCurrentSelectedCost(percentageToBePaid))))) : null), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: calculateDisabled(),\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handlePayout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 45\n    }\n  }, \"Submit & Cashout Selected Amount!\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CashoutAvailiableBalanceHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/cashout/cashoutRemainingBal.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Col","Container","Row","Card","CardHeader","CardBody","ListGroup","ListGroupItem","Button","axios","NotificationManager","connect","Slider","Sheet","DataTable","moment","columns","name","selector","row","status","amount","cashoutDate","dateAddedFromNow","type","currency","CashoutAvailiableBalanceHelper","userData","previousPayoutMethods","setPreviousPayoutMethods","selectedCard","setSelected","percentageToBePaid","setPercentageToBePaid","balance","setBalance","cost","setCost","marks","setMarks","ready","setReady","payoutsPaneOpen","setPayoutsPaneOpen","cardTableData","setCardTableData","config","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","bal","console","log","dividedBy10","style","color","label","toFixed","instant_available","available","index","length","item","warning","catch","err","id","payouts","convertedPaymentsArr","method","push","textDecorationLine","fontWeight","created","format","fromNow","cards","handleSliderValueChange","percentage","onAfterChange","totalCost","perc","parseFloat","converted","calculateCurrentSelectedCost","calculateDisabled","handlePayout","post","change","success","width","map","brand","exp_month","exp_year","funding","last4","country","card","require","textAlign","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { Col, Container, Row, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { NotificationManager } from \"react-notifications\";\nimport { connect } from \"react-redux\";\nimport Slider from 'rc-slider';\nimport Sheet from 'react-modal-sheet';\nimport DataTable from 'react-data-table-component';\nimport moment from \"moment\";\n\nconst columns = [\n    {\n        name: 'Status',\n        selector: row => row.status\n    },\n    {\n        name: 'Amount Cashed-Out',\n        selector: row => row.amount\n    },\n    {\n        name: 'Date Of Cashout',\n        selector: row => row.cashoutDate\n    },\n    {\n        name: \"Cashout Date (From Now)\",\n        selector: row => row.dateAddedFromNow\n    },\n    {\n        name: 'Type Of Payout',\n        selector: row => row.type\n    },\n    {\n        name: 'Currency',\n        selector: row => row.currency\n    }\n];\n\nconst CashoutAvailiableBalanceHelper = ({ userData }) => {\n\n    const [ previousPayoutMethods, setPreviousPayoutMethods ] = useState([]);\n    const [ selectedCard, setSelected ] = useState(null);\n    const [ percentageToBePaid, setPercentageToBePaid ] = useState(25);\n    const [ balance, setBalance ] = useState(null);\n    const [ cost, setCost ] = useState(0);\n    const [ marks, setMarks ] = useState({});\n    const [ ready, setReady ] = useState(false);\n    const [ payoutsPaneOpen, setPayoutsPaneOpen ] = useState(false);\n    const [ cardTableData, setCardTableData ] = useState([]);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then((res) => {\n            if (res.data.message === \"Gathered balance!\") {\n\n                const { bal } = res.data;\n\n                console.log(res.data);\n\n                if (userData.accountType === \"employers\") {\n\n                    setBalance(bal);\n\n                    if (bal > 0) {\n                        const dividedBy10 = bal / 10;\n\n                        setMarks({\n                            0: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 0).toFixed(2)}` },\n                            10: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 1).toFixed(2)}` },\n                            20: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 2).toFixed(2)}` },\n                            30: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 3).toFixed(2)}` },\n                            40: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 4).toFixed(2)}` },\n                            50: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 5).toFixed(2)}` },\n                            60: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 6).toFixed(2)}` },\n                            70: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 7).toFixed(2)}` },\n                            80: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 8).toFixed(2)}` },\n                            90: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 9).toFixed(2)}` },\n                            100: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 10).toFixed(2)}`  }\n                        });\n\n                        setReady(true);\n                    }\n                } else {\n                    const { instant_available, available } = res.data.bal;\n\n                    for (let index = 0; index < instant_available.length; index++) {\n                        const item = instant_available[index];\n                        if (item.currency === \"usd\") {\n                            const dividedBy10 = item.amount / 10;\n\n                            setBalance(item.amount);\n\n                            setMarks({\n                                0: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 0).toFixed(2)}` },\n                                10: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 1).toFixed(2)}` },\n                                20: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 2).toFixed(2)}` },\n                                30: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 3).toFixed(2)}` },\n                                40: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 4).toFixed(2)}` },\n                                50: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 5).toFixed(2)}` },\n                                60: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 6).toFixed(2)}` },\n                                70: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 7).toFixed(2)}` },\n                                80: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 8).toFixed(2)}` },\n                                90: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 9).toFixed(2)}` },\n                                100: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 10).toFixed(2)}`  }\n                            });\n\n                            setReady(true);\n\n                            break;\n                        }\n                    }\n                }\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to gather your account balance information, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, []);\n\n    useEffect(() => {\n      \n        const config = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/both/account/payout/methods`, config).then((res) => {\n            if (res.data.message === \"Gathered payouts!\") {\n\n                const { payouts } = res.data;\n\n                console.log(\"payouts\", payouts);\n\n                const convertedPaymentsArr = [];\n\n                if (typeof payouts !== \"undefined\" && payouts.length > 0) {\n                    for (let index = 0; index < payouts.length; index++) {\n                        const method = payouts[index];\n                        \n                        convertedPaymentsArr.push({\n                            status: <div className='font-success' style={{ textDecorationLine: \"underline\", fontWeight: \"bold\" }}>{method.status}</div>,\n                            amount: <div className='font-primary' style={{ textDecorationLine: \"underline\", fontWeight: \"bold\" }}>{`$${method.amount / 100}`}</div>,\n                            cashoutDate: moment(method.created * 1000).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                            dateAddedFromNow: moment(method.created * 1000).fromNow(),\n                            type: method.type,\n                            currency: method.currency\n                        })\n                    }\n                }\n\n                setCardTableData(convertedPaymentsArr);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, [balance])\n\n    useEffect(() => {\n        console.log(\"mounted..\");\n\n        const config = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                const { cards } = res.data;\n\n                console.log(res.data);\n\n                setPreviousPayoutMethods(cards);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to gather your previous 'payout methods' on file, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, []);\n\n    console.log(\"balance\", balance);\n\n    const handleSliderValueChange = (percentage) => {\n        console.log(\"handleSliderValueChange percentage\", percentage);\n\n        setPercentageToBePaid(percentage);\n    }\n    const onAfterChange = (percentage) => {\n        console.log(\"onAfterChange percentage\", percentage);\n\n        const totalCost = balance / 100;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        setCost(converted);\n    }\n    const calculateCurrentSelectedCost = (percentage) => {\n        const totalCost = balance / 100;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        return `$${converted.toFixed(2)} selected to be deposited into your desired account/card immediately! (-3% associated fee)`;\n    }\n\n    const calculateDisabled = () => {\n        if ((typeof cost !== \"undefined\" && cost !== 0) && (typeof selectedCard !== \"undefined\" && selectedCard !== null)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    const handlePayout = () => {\n        console.log(\"handlePayout clicked..\");\n\n        const config = {\n            id: userData.uniqueId,\n            accountType: userData.accountType,\n            cost,\n            selectedCard\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/create/payout/and/cashout/both/account/types`, config).then((res) => {\n            if (res.data.message === \"Cashed out funds!\") {\n\n                const { change } = res.data;\n\n                const dividedBy10 = (balance - change) / 10;\n\n                setBalance(balance - change);\n                setSelected(null);\n                setMarks({\n                    0: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 0).toFixed(2)}` },\n                    10: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 1).toFixed(2)}` },\n                    20: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 2).toFixed(2)}` },\n                    30: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 3).toFixed(2)}` },\n                    40: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 4).toFixed(2)}` },\n                    50: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 5).toFixed(2)}` },\n                    60: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 6).toFixed(2)}` },\n                    70: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 7).toFixed(2)}` },\n                    80: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 8).toFixed(2)}` },\n                    90: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 9).toFixed(2)}` },\n                    100: { style: { color: \"blue\" }, label: `$${((dividedBy10 / 100) * 10).toFixed(2)}`  }\n                });\n\n                NotificationManager.success(\"Successfully 'cashed-out' your desired amount of funding to the desired card/account! We've successfully deposited the desired funds into your account and all actions were initiated successfully..\", \"Successfully 'cashed-out' desired funds/funding!\", 4750);\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to 'cashout/payout' your selected available balance and/or funds, try reloading this page or contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Cashout Availiable Account Balance!\" title=\"Cashout Your Available Fund/Funding To A Linked Account..\" />\n            <Container fluid={true}>\n                {ready === true ? <Sheet isOpen={payoutsPaneOpen} onClose={() => setPayoutsPaneOpen(false)}>\n                    <Sheet.Container>\n                        <Sheet.Header>\n                            <div className=\"create-sheet-btn-margin-pricing\">\n                                <Button onClick={() => setPayoutsPaneOpen(false)} style={{ width: \"100%\" }} outline color=\"danger-2x\" className=\"btn-square-danger\">Close Pane & Exit..</Button>\n                            </div>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Container className='custom-container-payouts' fluid={true}>\n                                <Row>\n                                    <Card className=\"card-shadow-card-add-pane\">\n                                        <CardHeader className=\"bordered-bottom-too b-t-info\">\n                                            <h4 className=\"card-pane-header\">You're now viewing your previous payouts/cashouts!</h4>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <div className=\"table-responsive product-table\">\n                                                <DataTable\n                                                    noHeader\n                                                    columns={columns}\n                                                    data={cardTableData}\n                                                />\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Row>\n                            </Container>\n                        </Sheet.Content>\n                    </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet> : null}\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"shadow\"}>\n                            <CardHeader className={\"b-r-secondary b-l-secondary\"}>\n                                <h3>Manage your active payout/cashout methods, add a new payout method, process a \"cash-out\" & much more!</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className=\"card-absolute\">\n                                            <CardHeader className=\"bg-primary\">\n                                                <h5 style={{ color: \"#fff\" }}>Manage Your Payout/Cashout Method's</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <p className='lead'>You will be able to manage your \"payout/cashout\" methods via this page and the logic below.. You may be asking, what is a \"payout/cashout\"? <strong style={{ textDecorationLine: \"underline\" }}>Good question! Let us explain...</strong></p>\n                                                <br />\n                                                <p className='lead'>Payouts also known as \"cashouts\" are when you <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>TRANSFER FUNDS (earned funds)</strong> to your personal bank account or card!</p>\n                                                <hr />\n                                                <p className='lead'>We regularly send out payouts/cashouts periodically but it's good policy to make sure you know where your automatic payment's are going and when they are hitting your account(s). Through this page, you can <strong style={{ textDecorationLine: \"underline\" }}>IMMEDIATELY</strong> recieve funds for a minor fee (percentage - 3%) for access to your funds faster than the typical system requirements/procedure(s).</p>\n                                                <hr />\n                                                <Button className={\"btn-square-info\"} outline color={\"info-2x\"} style={{ width: \"100%\" }} onClick={() => setPayoutsPaneOpen(true)}>View ALL PREVIOUS Payouts!</Button>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Card className=\"card-absolute\">\n                                            <CardHeader className=\"bg-secondary\">\n                                                <h5 style={{ color: \"#fff\" }}>You \"already linked\" accounts are below..</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <ListGroup className='customlistgroup-payment-methods'> \n                                                    {typeof previousPayoutMethods !== \"undefined\" && previousPayoutMethods.length > 0 ? previousPayoutMethods.map((method, index) => {\n                                                        console.log(\"method\", method);\n                                                        if (userData.accountType === \"hackers\") {\n                                                            const { brand, exp_month, exp_year, funding, last4, country } = method;\n                                                            return (\n                                                                <Fragment key={index}>\n                                                                    <ListGroupItem onClick={() => setSelected(method)} className={selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\"}>\n                                                                        <div className=\"d-flex w-100 justify-content-between\">\n                                                                            <h5 className=\"mb-1\">{`This is a ${funding} card - ${country} based`}</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">{`Payment #${index + 1}`}</small>\n                                                                        </div>\n                                                                        <p className=\"mb-1\">{`**** **** **** ${last4}`}</p>\n                                                                        <small className=\"special\">{`Exp. ${exp_month}/${exp_year}`} <small className=\"float-right\">Card Type: {brand}</small></small>\n                                                                    </ListGroupItem>\n                                                                </Fragment>\n                                                            );\n                                                        } else {\n                                                            const { brand, exp_month, exp_year, funding, last4, country } = method.card;\n                                                            return (\n                                                                <Fragment key={index}>\n                                                                    <ListGroupItem onClick={() => setSelected(method)} className={selectedCard !== null && selectedCard.id === method.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment active\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start addhover-list-group-payment\"}>\n                                                                        <div className=\"d-flex w-100 justify-content-between\">\n                                                                            <h5 className=\"mb-1\">{`This is a ${funding} card - ${country} based`}</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">{`Payment #${index + 1}`}</small>\n                                                                        </div>\n                                                                        <p className=\"mb-1\">{`**** **** **** ${last4}`}</p>\n                                                                        <small className=\"special\">{`Exp. ${exp_month}/${exp_year}`} <small className=\"float-right\">Card Type: {brand}</small></small>\n                                                                    </ListGroupItem>\n                                                                </Fragment>\n                                                            );\n                                                        }\n                                                    }) : <Fragment>\n                                                        <img src={require(\"../../../../assets/images/nocashout.png\")} className={\"nocashout-img\"} />\n                                                    </Fragment>}\n                                                </ListGroup>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                </Row>\n                                <Row>\n                                    {ready === true ? <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <div className='center-slider-adjustment-bar'>\n                                            <p className='lead'>Please drag the marker to the appropriate position marking 'how much' you'd like ''withdrawl' on this specific transaction (the maxed value is your current <strong style={{ textDecorationLine: \"underline\" }}>available</strong> account balance - this doesn't include pending funding).</p>\n                                            <hr />\n                                            <Slider value={percentageToBePaid} startPoint={0} onAfterChange={onAfterChange} onChange={handleSliderValueChange} marks={marks} />\n                                            <div className='centered-both-ways'>\n                                                <h3 className='current-selected-cost' style={{ textAlign: \"center\" }}>{calculateCurrentSelectedCost(percentageToBePaid)}</h3>\n                                            </div>\n                                        </div>\n                                    </Col> : null}\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='shadow'>\n                                            <Button disabled={calculateDisabled()} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={() => handlePayout()}>Submit & Cashout Selected Amount!</Button>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(CashoutAvailiableBalanceHelper);"]},"metadata":{},"sourceType":"module"}