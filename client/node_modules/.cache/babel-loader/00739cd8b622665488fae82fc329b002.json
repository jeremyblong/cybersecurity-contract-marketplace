{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/viewPostFileContents/helpers/renderComments/commentsHelper.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media } from 'reactstrap';\nimport axios from 'axios';\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./otherHelpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"../../../../../../../universal/pagination/paginationHelper.js\";\nconst {\n  RenderPopoverEmojiLogic,\n  RenderEmojiLogic\n} = helpers; // pagination settings and/or setup\n\nconst itemsPerPage = 5;\n\nconst RenderCommentPicOrVideo = _ref => {\n  let {\n    file\n  } = _ref;\n\n  if (file.type.includes(\"video\")) {\n    // video logic\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      playing: true,\n      loop: true,\n      muted: true,\n      width: \"100%\",\n      className: \"media-body align-self-center maxed-out-video-course-profile\",\n      wrapper: \"div\",\n      url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    // image logic\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })));\n  }\n}; // main function starts\n\n\nconst CommentsIndividualPostReturnCommentsHelper = _ref2 => {\n  let {\n    comments,\n    setCommentsState,\n    userData,\n    data\n  } = _ref2;\n  // state initialization\n  const [popover, setPopoverState] = useState({});\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0); // render EVERY CHANGE to pagination\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n    setCommentsState(data.comments.slice(itemOffset, endOffset));\n  }, [itemOffset, itemsPerPage]); // render ONLY ONCE\n\n  useEffect(() => {\n    setPopoverState(() => {\n      const newObjCount = {};\n      const comments = data.comments; // reassign state items in preperation for future state changes...\n\n      for (const keyyy in comments) {\n        newObjCount[`comment${keyyy}`] = false;\n      }\n\n      return newObjCount;\n    });\n  }, []);\n\n  const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n    console.log(\"emojiName\", emojiName);\n    const configuration = {\n      emojiName,\n      id: userData.uniqueId,\n      listingId: data.uniqueId,\n      commentID: comment.id,\n      comment\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/`, configuration).then(res => {\n      if (res.data.message === \"Successfully reacted to comment!\") {\n        console.log(res.data);\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setCommentsState(copy);\n        closePopover(targetAndPopState);\n      } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setCommentsState(copy);\n        closePopover(targetAndPopState);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-list-course-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n    console.log(\"comment\", comment);\n    const popoverIDTarget = `comment${index}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: uuid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, comment.posterPicOrVideo !== null ? /*#__PURE__*/React.createElement(RenderCommentPicOrVideo, {\n      file: comment.posterPicOrVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 78\n      }\n    }) : /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 140\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 53\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 94\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 184\n      }\n    }, /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n      comments: comments,\n      reactions: comment.reactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 189\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: popoverIDTarget,\n      onClick: () => {\n        setPopoverState(prevState => {\n          return { ...prevState,\n            [`comment${index}`]: true\n          };\n        });\n      },\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 100\n      }\n    }), \"React to post w/emoji\"), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogic, {\n      handleRespondEmoji: handleRespondEmoji,\n      comment: comment,\n      data: data,\n      userData: userData,\n      reactions: comment.reactions,\n      setPopoverState: setPopoverState,\n      popoverState: popover,\n      targetAndPopState: popoverIDTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"27.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PaginationEmployerListingHelper, {\n    itemsPerPage: itemsPerPage,\n    setItemOffset: setItemOffset,\n    loopingData: data.comments,\n    setPageCount: setPageCount,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CommentsIndividualPostReturnCommentsHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/viewPostFileContents/helpers/renderComments/commentsHelper.js"],"names":["React","Fragment","useState","useEffect","useRef","Row","Col","Media","axios","ReactPlayer","helpers","NotificationManager","uuid","PaginationEmployerListingHelper","RenderPopoverEmojiLogic","RenderEmojiLogic","itemsPerPage","RenderCommentPicOrVideo","file","type","includes","process","env","REACT_APP_ASSET_LINK","link","CommentsIndividualPostReturnCommentsHelper","comments","setCommentsState","userData","data","popover","setPopoverState","currentPage","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","Math","ceil","length","slice","newObjCount","keyyy","handleRespondEmoji","emojiName","comment","closePopover","targetAndPopState","console","log","configuration","id","uniqueId","listingId","commentID","post","REACT_APP_BASE_URL","then","res","message","listing","commenttt","success","indexed","findIndex","x","copy","warning","catch","err","map","index","popoverIDTarget","posterPicOrVideo","REACT_APP_PLACEHOLDER_IMAGE","posterName","posterAccountType","reactions","prevState","commentText","subComments","subcomment","idx","require","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media } from 'reactstrap';\nimport axios from 'axios';\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./otherHelpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"../../../../../../../universal/pagination/paginationHelper.js\";\n\nconst { RenderPopoverEmojiLogic, RenderEmojiLogic } = helpers;\n\n// pagination settings and/or setup\nconst itemsPerPage = 5;\n\n\nconst RenderCommentPicOrVideo = ({ file }) => {\n    if (file.type.includes(\"video\")) {\n        // video logic\n        return (\n            <Fragment>\n                <Media className=\"align-self-center\">\n                    <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"media-body align-self-center maxed-out-video-course-profile\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                </Media> \n            </Fragment>\n        );\n    } else {\n        // image logic\n        return (\n            <Fragment>\n                <Media className=\"align-self-center\">\n                    <Media className=\"align-self-center\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} alt=\"\"/>\n                </Media>\n            </Fragment>\n        );\n    }  \n}\n\n// main function starts\nconst CommentsIndividualPostReturnCommentsHelper = ({ comments, setCommentsState, userData, data }) => {\n    // state initialization\n    const [ popover, setPopoverState ] = useState({}); \n    const [ currentPage, setCurrentPage ] = useState(0);\n    const [ pageCount, setPageCount ] = useState(0);\n    const [ itemOffset, setItemOffset ] = useState(0);\n    \n    // render EVERY CHANGE to pagination\n    useEffect(() => {\n        const endOffset = itemOffset + itemsPerPage;\n\n        setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n\n        setCommentsState(data.comments.slice(itemOffset, endOffset));\n        \n    }, [itemOffset, itemsPerPage]);\n\n    // render ONLY ONCE\n    useEffect(() => {\n        setPopoverState(() => {\n            const newObjCount = {};\n            const comments = data.comments;\n            // reassign state items in preperation for future state changes...\n            for (const keyyy in comments) {\n                newObjCount[`comment${keyyy}`] = false;\n            }\n            return newObjCount;\n        })\n    }, []);\n    const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n        console.log(\"emojiName\", emojiName);\n\n        const configuration = {\n            emojiName,\n            id: userData.uniqueId,\n            listingId: data.uniqueId,\n            commentID: comment.id,\n            comment\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/`, configuration).then((res) => {\n            if (res.data.message === \"Successfully reacted to comment!\") {\n                console.log(res.data);\n\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setCommentsState(copy);\n\n                closePopover(targetAndPopState);\n            } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setCommentsState(copy);\n\n                closePopover(targetAndPopState);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <hr />\n                <ul className={\"comment-list-course-ul\"}>\n                    {typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n                        console.log(\"comment\", comment);\n\n                        const popoverIDTarget = `comment${index}`;\n                        return (\n                            <Fragment key={uuid()}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {comment.posterPicOrVideo !== null ? <RenderCommentPicOrVideo file={comment.posterPicOrVideo} /> : <Media className=\"align-self-center\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} alt=\"\"/>}\n                                        <Media body>\n                                            <Row>\n                                                <Col md=\"4 xl-100\">\n                                                    <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"}</span></h6><Row><RenderEmojiLogic comments={comments} reactions={comment.reactions} /></Row>\n                                                </Col>\n                                                <Col md=\"8 xl-100\">\n                                                    <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                    {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                    <li id={popoverIDTarget} onClick={() => {\n                                                        setPopoverState(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                [`comment${index}`]: true\n                                                            }\n                                                        });\n                                                    }} className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"React to post w/emoji\"}</li>\n                                                    <RenderPopoverEmojiLogic handleRespondEmoji={handleRespondEmoji} comment={comment} data={data} userData={userData} reactions={comment.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                                                    </ul>\n                                                </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n            <Row style={{ marginTop: \"27.5px\" }}>\n                <div className=\"centered-both-ways\">\n                    <PaginationEmployerListingHelper itemsPerPage={itemsPerPage} setItemOffset={setItemOffset} loopingData={data.comments} setPageCount={setPageCount} pageCount={pageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n                </div>\n            </Row>\n        </Fragment>\n    );\n}\nexport default CommentsIndividualPostReturnCommentsHelper;"]},"metadata":{},"sourceType":"module"}