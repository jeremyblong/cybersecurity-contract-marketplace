{"ast":null,"code":"import React,{Component,Fragment}from'react';import Autocomplete from\"react-autocomplete\";import axios from\"axios\";import{ListGroup,ListGroupItem}from\"reactstrap\";import\"./styles.css\";import{saveListingData}from\"../../../../../../../../redux/actions/employer/listings/listingData.js\";import{connect}from\"react-redux\";import _ from\"lodash\";class LocationSearchInput extends Component{constructor(props){super(props);this.handleChange=e=>{const{value}=e.target;this.setState({address:value},()=>{axios.get(\"https://api.tomtom.com/search/2/search/\".concat(this.state.address,\".json?key=\").concat(process.env.REACT_APP_TOMTOM_API_KEY,\"&language=en-US&limit=10&idxSet=PAD\")).then(res=>{const{results}=res.data;this.setState({results});}).catch(err=>{console.log(\"tomtom err: \",err);});});};this.state={address:'',results:[]};}render(){const{address,results}=this.state;console.log(\"this.state:\",this.state);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ListGroup,null,/*#__PURE__*/React.createElement(Autocomplete,{menuStyle:{zIndex:999999999999999999999999,backgroundColor:\"white\"},getItemValue:item=>item.address.freeformAddress,items:results,inputProps:{placeholder:\"Enter an address...\",className:\"form-control\"},renderItem:(item,isHighlighted)=>{return/*#__PURE__*/React.createElement(\"div\",{key:item.id,className:\"list-group-item-action flex-column align-items-start customized-list-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1\"},item.address.freeformAddress),/*#__PURE__*/React.createElement(\"small\",null,item.type)),/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1\"},\"\".concat(item.address.municipality,\", \").concat(item.address.countrySubdivisionName||item.address.countrySubdivision,\" \").concat(item.address.extendedPostalCode||item.address.postalCode)));},value:address,onChange:this.handleChange,onSelect:(val,obj)=>{console.log(\"selected: \",val,obj);this.props.saveListingData({...this.props.previousData,businessAddress:obj});}})));}}const mapStateToProps=state=>{return{previousData:_.has(state.listingData,\"listingData\")?state.listingData.listingData:{}};};export default connect(mapStateToProps,{saveListingData})(LocationSearchInput);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/createListing/create/helpers/location/searchAddress.js"],"names":["React","Component","Fragment","Autocomplete","axios","ListGroup","ListGroupItem","saveListingData","connect","_","LocationSearchInput","constructor","props","handleChange","e","value","target","setState","address","get","state","process","env","REACT_APP_TOMTOM_API_KEY","then","res","results","data","catch","err","console","log","render","zIndex","backgroundColor","item","freeformAddress","placeholder","className","isHighlighted","id","type","municipality","countrySubdivisionName","countrySubdivision","extendedPostalCode","postalCode","val","obj","previousData","businessAddress","mapStateToProps","has","listingData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,aAApB,KAAyC,YAAzC,CACA,MAAO,cAAP,CACA,OAASC,eAAT,KAAgC,wEAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CAGA,KAAMC,CAAAA,mBAAN,QAAkCT,CAAAA,SAAU,CAC5CU,WAAW,CAACC,KAAD,CAAQ,CACf,MAAMA,KAAN,EADe,KASfC,YATe,CASAC,CAAC,EAAI,CAChB,KAAM,CAAEC,KAAF,EAAYD,CAAC,CAACE,MAApB,CAEA,KAAKC,QAAL,CAAc,CACVC,OAAO,CAAEH,KADC,CAAd,CAEG,IAAM,CACLX,KAAK,CAACe,GAAN,kDAAoD,KAAKC,KAAL,CAAWF,OAA/D,sBAAmFG,OAAO,CAACC,GAAR,CAAYC,wBAA/F,yCAA8JC,IAA9J,CAAoKC,GAAD,EAAS,CAExK,KAAM,CAAEC,OAAF,EAAcD,GAAG,CAACE,IAAxB,CAEA,KAAKV,QAAL,CAAc,CACVS,OADU,CAAd,EAGH,CAPD,EAOGE,KAPH,CAOUC,GAAD,EAAS,CACdC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BF,GAA5B,EACH,CATD,EAUH,CAbD,EAcH,CA1Bc,CAGf,KAAKT,KAAL,CAAa,CACTF,OAAO,CAAE,EADA,CAETQ,OAAO,CAAE,EAFA,CAAb,CAIH,CAoBGM,MAAM,EAAG,CACL,KAAM,CAAEd,OAAF,CAAWQ,OAAX,EAAuB,KAAKN,KAAlC,CAEAU,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2B,KAAKX,KAAhC,EAEA,mBACA,oBAAC,QAAD,mBACI,oBAAC,SAAD,mBACI,oBAAC,YAAD,EACI,SAAS,CAAE,CACPa,MAAM,CAAE,wBADD,CAEPC,eAAe,CAAE,OAFV,CADf,CAKI,YAAY,CAAGC,IAAD,EAAUA,IAAI,CAACjB,OAAL,CAAakB,eALzC,CAMI,KAAK,CAAEV,OANX,CAOI,UAAU,CAAE,CACRW,WAAW,CAAE,qBADL,CAERC,SAAS,CAAE,cAFH,CAPhB,CAWI,UAAU,CAAE,CAACH,IAAD,CAAOI,aAAP,GAAyB,CACjC,mBACI,2BAAK,GAAG,CAAEJ,IAAI,CAACK,EAAf,CAAmB,SAAS,4EAA5B,eACI,2BAAK,SAAS,CAAC,sCAAf,eACI,0BAAI,SAAS,CAAC,MAAd,EAAsBL,IAAI,CAACjB,OAAL,CAAakB,eAAnC,CADJ,cAC4D,iCAAQD,IAAI,CAACM,IAAb,CAD5D,CADJ,cAII,yBAAG,SAAS,CAAC,MAAb,YAAwBN,IAAI,CAACjB,OAAL,CAAawB,YAArC,cAAsDP,IAAI,CAACjB,OAAL,CAAayB,sBAAb,EAAuCR,IAAI,CAACjB,OAAL,CAAa0B,kBAA1G,aAAgIT,IAAI,CAACjB,OAAL,CAAa2B,kBAAb,EAAmCV,IAAI,CAACjB,OAAL,CAAa4B,UAAhL,EAJJ,CADJ,CAQH,CApBL,CAqBI,KAAK,CAAE5B,OArBX,CAsBI,QAAQ,CAAE,KAAKL,YAtBnB,CAuBI,QAAQ,CAAE,CAACkC,GAAD,CAAMC,GAAN,GAAc,CAEpBlB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BgB,GAA1B,CAA+BC,GAA/B,EAEA,KAAKpC,KAAL,CAAWL,eAAX,CAA2B,CACvB,GAAG,KAAKK,KAAL,CAAWqC,YADS,CAEvBC,eAAe,CAAEF,GAFM,CAA3B,EAIH,CA/BL,EADJ,CADJ,CADA,CAuCH,CAxEuC,CA0E5C,KAAMG,CAAAA,eAAe,CAAI/B,KAAD,EAAW,CAC/B,MAAO,CACH6B,YAAY,CAAExC,CAAC,CAAC2C,GAAF,CAAMhC,KAAK,CAACiC,WAAZ,CAAyB,aAAzB,EAA0CjC,KAAK,CAACiC,WAAN,CAAkBA,WAA5D,CAA0E,EADrF,CAAP,CAGH,CAJD,CAKA,cAAe7C,CAAAA,OAAO,CAAC2C,eAAD,CAAkB,CAAE5C,eAAF,CAAlB,CAAP,CAA8CG,mBAA9C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Autocomplete from \"react-autocomplete\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport \"./styles.css\";\nimport { saveListingData } from \"../../../../../../../../redux/actions/employer/listings/listingData.js\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\n\nclass LocationSearchInput extends Component {\nconstructor(props) {\n    super(props);\n    \n    this.state = { \n        address: '',\n        results: []\n    };\n}\n \n    handleChange = e => {\n        const { value } = e.target;\n\n        this.setState({\n            address: value\n        }, () => {\n            axios.get(`https://api.tomtom.com/search/2/search/${this.state.address}.json?key=${process.env.REACT_APP_TOMTOM_API_KEY}&language=en-US&limit=10&idxSet=PAD`).then((res) => {\n\n                const { results } = res.data;\n                \n                this.setState({\n                    results\n                })\n            }).catch((err) => {\n                console.log(\"tomtom err: \", err);\n            })\n        })\n    };\n    render() {\n        const { address, results } = this.state;\n\n        console.log(\"this.state:\", this.state);\n\n        return (\n        <Fragment>\n            <ListGroup>\n                <Autocomplete\n                    menuStyle={{\n                        zIndex: 999999999999999999999999,\n                        backgroundColor: \"white\"\n                    }}\n                    getItemValue={(item) => item.address.freeformAddress}\n                    items={results}\n                    inputProps={{\n                        placeholder: \"Enter an address...\",\n                        className: \"form-control\"\n                    }}\n                    renderItem={(item, isHighlighted) => {\n                        return (\n                            <div key={item.id} className={`list-group-item-action flex-column align-items-start customized-list-item`}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{item.address.freeformAddress}</h5><small>{item.type}</small>\n                                </div>\n                                <p className=\"mb-1\">{`${item.address.municipality}, ${item.address.countrySubdivisionName || item.address.countrySubdivision} ${item.address.extendedPostalCode || item.address.postalCode}`}</p>\n                            </div>\n                        );\n                    }}\n                    value={address}\n                    onChange={this.handleChange}\n                    onSelect={(val, obj) => {\n\n                        console.log(\"selected: \", val, obj);\n\n                        this.props.saveListingData({\n                            ...this.props.previousData,\n                            businessAddress: obj\n                        })\n                    }}\n                />\n            </ListGroup>\n        </Fragment>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        previousData: _.has(state.listingData, \"listingData\") ? state.listingData.listingData : {}\n    }\n}\nexport default connect(mapStateToProps, { saveListingData })(LocationSearchInput);\n"]},"metadata":{},"sourceType":"module"}