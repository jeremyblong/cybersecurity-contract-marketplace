{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/leaderboards/homepage/index.js\";\nimport React, { Fragment, useMemo, useCallback, useState, useEffect } from 'react';\nimport { useTable, useSortBy, usePagination } from 'react-table';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport axios from \"axios\";\n\nconst TableHelper = _ref => {\n  let {\n    columns: userColumns,\n    data,\n    renderRowSubComponent\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns: userColumns,\n    data,\n    initialState: {\n      pageIndex: 1\n    }\n  }, useSortBy, usePagination);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"View/Manage Leaderboard Data & Statistics!\",\n    title: \"These Are 'The Top' Ranked User's On Our Marketplace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    id: \"full-stretch-table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), headerGroup.headers.map(column =>\n  /*#__PURE__*/\n  // Add the sorting props to control sorting. For this example\n  // we can add them into the header props\n  React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : '')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), page.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, '<<'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, '<'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, '>'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, '>>'), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Page\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginRight: \"12.5px\",\n      marginLeft: \"10px\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, pageIndex + 1, \" of \", pageOptions.length), ' '), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"|   Go to page:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), ' ', /*#__PURE__*/React.createElement(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Show \", pageSize)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Showing the first 20 results of \", rows.length, \" rows\"));\n}; // const RenderReviewLength = ({\n//     column: { filterValue, setFilter, preFilteredRows, id },\n// }) => {\n//     // Calculate the min and max\n//     console.log(\"preFilteredRows\", filterValue, setFilter, preFilteredRows, id);\n//     return (\n//       <div>\n//       </div>\n//     )\n// }\n\n\nconst LeaderboardHomepageHelper = props => {\n  const [hackers, setHackers] = useState([]);\n  const columns = useMemo(() => [{\n    Header: 'Name + Username',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }, {\n      Header: 'Username',\n      accessor: 'username'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Unique Profile View(s)',\n      accessor: 'totalUniqueViews'\n    }, {\n      Header: 'Review(s) Total Count',\n      accessor: data => data.reviews.length\n    }, {\n      Header: 'Profile Hearts/Saves',\n      accessor: data => typeof data.profileLovesHearts !== \"undefined\" && data.profileLovesHearts.length > 0 ? data.profileLovesHearts.length : 0\n    }, {\n      Header: 'Follow(ing)',\n      accessor: data => typeof data.followingHackers !== \"undefined\" && data.followingHackers.length > 0 && typeof data.followingCompanies !== \"undefined\" && data.followingCompanies.length > 0 ? data.followingHackers.length + data.followingCompanies.length : 0\n    }, {\n      Header: 'Follow(ers)',\n      accessor: data => typeof data.currentlyFollowedBy !== \"undefined\" && data.currentlyFollowedBy.length > 0 ? data.currentlyFollowedBy.length : 0\n    }]\n  }], []);\n  console.log(\"hackers\", hackers);\n  useEffect(() => {\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/hackers/random/general\")).then(res => {\n      if (res.data.message === \"Successfully gathered hackers!\") {\n        console.log(res.data);\n        const {\n          hackers\n        } = res.data;\n        setHackers(hackers);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Create a function that will render our row sub components\n\n  const renderRowSubComponent = useCallback(_ref2 => {\n    let {\n      row\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        fontSize: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, JSON.stringify({\n      values: row.values\n    }, null, 2)));\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHelper, {\n    columns: columns,\n    data: hackers,\n    renderRowSubComponent: renderRowSubComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default LeaderboardHomepageHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/leaderboards/homepage/index.js"],"names":["React","Fragment","useMemo","useCallback","useState","useEffect","useTable","useSortBy","usePagination","Breadcrumb","axios","TableHelper","columns","userColumns","data","renderRowSubComponent","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","marginRight","marginLeft","marginTop","length","e","target","value","Number","width","LeaderboardHomepageHelper","props","hackers","setHackers","Header","accessor","reviews","profileLovesHearts","followingHackers","followingCompanies","currentlyFollowedBy","console","log","get","process","env","REACT_APP_BASE_URL","then","res","message","catch","err","fontSize","JSON","stringify","values"],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo, useCallback, useState, useEffect } from 'react';\nimport { useTable, useSortBy, usePagination } from 'react-table'\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport axios from \"axios\";\n\nconst TableHelper = ({ columns: userColumns, data, renderRowSubComponent }) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        page, // Instead of using 'rows', we'll use page,\n        // which has only the rows for the active page\n\n        // The rest of these things are super handy, too ;)\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable(\n    {\n        columns: userColumns,\n        data,\n        initialState: { pageIndex: 1 }\n    },\n        useSortBy,\n        usePagination\n    )\n\n    return (\n    <>\n        <Breadcrumb parent=\"View/Manage Leaderboard Data & Statistics!\" title=\"These Are 'The Top' Ranked User's On Our Marketplace\" />\n        <table id={\"full-stretch-table\"} {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        // Add the sorting props to control sorting. For this example\n                        // we can add them into the header props\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                        {column.render('Header')}\n                        {/* Add a sort direction indicator */}\n                        <span>\n                            {column.isSorted\n                            ? column.isSortedDesc\n                                ? ' ðŸ”½'\n                                : ' ðŸ”¼'\n                            : ''}\n                        </span>\n                        </th>\n                    ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        <div className=\"pagination\">\n            <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n            </button>{' '}\n            <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n            </button>{' '}\n            <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n            </button>{' '}\n            <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n            </button>{' '}\n            <span>\n            Page{' '}\n            <strong style={{ marginRight: \"12.5px\", marginLeft: \"10px\", marginTop: \"5px\" }}>\n                {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n            </span>\n            <span>\n            |   Go to page:{' '}\n            <input\n                type=\"number\"\n                defaultValue={pageIndex + 1}\n                onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                gotoPage(page)\n                }}\n                style={{ width: '100px' }}\n            />\n            </span>{' '}\n            <select\n            value={pageSize}\n            onChange={e => {\n                setPageSize(Number(e.target.value))\n            }}\n            >\n            {[10, 20, 30, 40, 50].map(pageSize => (\n                <option key={pageSize} value={pageSize}>\n                    Show {pageSize}\n                </option>\n            ))}\n            </select>\n        </div>\n        <br />\n        <div className='text-left'>Showing the first 20 results of {rows.length} rows</div>\n    </>\n    )\n}\n// const RenderReviewLength = ({\n//     column: { filterValue, setFilter, preFilteredRows, id },\n// }) => {\n//     // Calculate the min and max\n//     console.log(\"preFilteredRows\", filterValue, setFilter, preFilteredRows, id);\n  \n//     return (\n//       <div>\n          \n//       </div>\n//     )\n// }\n\nconst LeaderboardHomepageHelper = (props) => {\n\n    const [ hackers, setHackers ] = useState([]);\n\n    const columns = useMemo(() => [\n        {\n            Header: 'Name + Username',\n            columns: [\n            {\n                Header: 'First Name',\n                accessor: 'firstName',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'lastName',\n            },\n            {\n                Header: 'Username',\n                accessor: 'username',\n            }\n            ],\n        },\n        {\n            Header: 'Info',\n            columns: [\n            {\n                Header: 'Unique Profile View(s)',\n                accessor: 'totalUniqueViews',\n            },\n            {\n                Header: 'Review(s) Total Count',\n                accessor:(data) => data.reviews.length\n            },\n            {\n                Header: 'Profile Hearts/Saves',\n                accessor:(data) => typeof data.profileLovesHearts !== \"undefined\" && data.profileLovesHearts.length > 0 ? data.profileLovesHearts.length : 0\n            },\n            {\n                Header: 'Follow(ing)',\n                accessor:(data) => typeof data.followingHackers !== \"undefined\" && data.followingHackers.length > 0 && typeof data.followingCompanies !== \"undefined\" && data.followingCompanies.length > 0 ? data.followingHackers.length + data.followingCompanies.length : 0\n            },\n            {\n                Header: 'Follow(ers)',\n                accessor:(data) => typeof data.currentlyFollowedBy !== \"undefined\" && data.currentlyFollowedBy.length > 0 ? data.currentlyFollowedBy.length : 0\n            }\n            ],\n        },\n        ],\n        []\n    );\n\n    console.log(\"hackers\", hackers);\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/hackers/random/general`).then((res) => {\n            if (res.data.message === \"Successfully gathered hackers!\") {\n                console.log(res.data);\n\n                const { hackers } = res.data;\n\n                setHackers(hackers);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // Create a function that will render our row sub components\n    const renderRowSubComponent = useCallback(\n        ({ row }) => (\n        <pre\n            style={{\n                fontSize: '10px',\n            }}\n        >\n            <code>{JSON.stringify({ values: row.values }, null, 2)}</code>\n        </pre>\n        ),\n        []\n    );\n    return (\n        <Fragment>\n            <TableHelper\n                columns={columns}\n                data={hackers}\n                renderRowSubComponent={renderRowSubComponent}\n            />\n        </Fragment>\n    );\n}\n\nexport default LeaderboardHomepageHelper;"]},"metadata":{},"sourceType":"module"}