{"ast":null,"code":"import allReducers from \"../reducers/root.js\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer, createTransform } from 'redux-persist'; // import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport storage from 'redux-persist/lib/storage';\nimport promiseMiddleware from 'redux-promise';\nimport { stringify, parse } from 'flatted';\nconst transformCircular = createTransform((inboundState, key) => stringify(inboundState), (outboundState, key) => parse(outboundState));\nconst persistConfig = {\n  key: 'primary',\n  storage: storage,\n  transforms: [transformCircular]\n};\nconst pReducer = persistReducer(persistConfig, allReducers);\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(pReducer, composeEnhancers(applyMiddleware(reduxThunk, promiseMiddleware)));\nexport const persistor = persistStore(store);\nstore.subscribe(() => {\n  console.log(\"Store is now: \", store.getState());\n});","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/redux/store/store.js"],"names":["allReducers","reduxThunk","createStore","applyMiddleware","compose","thunk","persistStore","persistReducer","createTransform","storage","promiseMiddleware","stringify","parse","transformCircular","inboundState","key","outboundState","persistConfig","transforms","pReducer","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","subscribe","console","log","getState"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,QAA8D,eAA9D,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,SAAjC;AAEA,MAAMC,iBAAiB,GAAGL,eAAe,CACrC,CAACM,YAAD,EAAeC,GAAf,KAAuBJ,SAAS,CAACG,YAAD,CADK,EAErC,CAACE,aAAD,EAAgBD,GAAhB,KAAwBH,KAAK,CAACI,aAAD,CAFQ,CAAzC;AAKA,MAAMC,aAAa,GAAG;AACrBF,EAAAA,GAAG,EAAE,SADgB;AAErBN,EAAAA,OAAO,EAAEA,OAFY;AAGrBS,EAAAA,UAAU,EAAE,CAACL,iBAAD;AAHS,CAAtB;AAMA,MAAMM,QAAQ,GAAGZ,cAAc,CAACU,aAAD,EAAgBjB,WAAhB,CAA/B;AAEA,MAAMoB,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAxE;AAEA,OAAO,MAAMoB,KAAK,GAAGtB,WAAW,CAACiB,QAAD,EAAWE,gBAAgB,CAAClB,eAAe,CAACF,UAAD,EAAaS,iBAAb,CAAhB,CAA3B,CAAzB;AAEP,OAAO,MAAMe,SAAS,GAAGnB,YAAY,CAACkB,KAAD,CAA9B;AAEPA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAAK,CAACK,QAAN,EAA9B;AACA,CAFD","sourcesContent":["import allReducers from \"../reducers/root.js\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer, createTransform } from 'redux-persist';\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport promiseMiddleware from 'redux-promise';\nimport { stringify, parse } from 'flatted';\n\nconst transformCircular = createTransform(\n    (inboundState, key) => stringify(inboundState),\n    (outboundState, key) => parse(outboundState),\n)\n\nconst persistConfig = {\n key: 'primary',\n storage: storage,\n transforms: [transformCircular]\n};\n\nconst pReducer = persistReducer(persistConfig, allReducers);\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(pReducer, composeEnhancers(applyMiddleware(reduxThunk, promiseMiddleware)));\n\nexport const persistor = persistStore(store);\n\nstore.subscribe(() => {\n\tconsole.log(\"Store is now: \", store.getState());\n})"]},"metadata":{},"sourceType":"module"}