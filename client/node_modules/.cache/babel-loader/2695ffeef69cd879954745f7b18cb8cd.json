{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/employers/peopleList/helpers/miscFunctions.js\";\nimport React, { Fragment } from \"react\";\nimport { Media } from \"reactstrap\";\nimport ReactPlayer from \"react-player\";\n\nconst renderProfilePicVideo = last => {\n  // check conditional item to render whether video or image\n  console.log(\"last\", last);\n\n  if (last.dataType === \"video\") {\n    // video logic\n    return /*#__PURE__*/React.createElement(Media, {\n      className: \"custom-media-chunk\",\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      playing: true,\n      loop: true,\n      muted: true,\n      width: \"300px\",\n      height: \"300px\",\n      className: \"profile-picture-account media-body\",\n      wrapper: \"div\",\n      url: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }));\n  } else if (last.dataType === \"image\") {\n    // image logic\n    return /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      alt: \"profile-picture\",\n      src: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n      \"data-intro\": \"This is Profile image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n}; // <Media body className=\"rounded-circle\" src={profilePicture} alt=\"\" />\n\n\nexport default {\n  renderProfilePicVideo\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/employers/peopleList/helpers/miscFunctions.js"],"names":["React","Fragment","Media","ReactPlayer","renderProfilePicVideo","last","console","log","dataType","process","env","REACT_APP_ASSET_LINK","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAIA,MAAMC,qBAAqB,GAAIC,IAAD,IAAU;AACpC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AAEA,MAAIA,IAAI,CAACG,QAAL,KAAkB,OAAtB,EAA+B;AAC3B;AACA,wBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,IAAI,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,IAAI,EAAE,IAAlC;AAAwC,MAAA,KAAK,EAAE,IAA/C;AAAqD,MAAA,KAAK,EAAE,OAA5D;AAAqE,MAAA,MAAM,EAAE,OAA7E;AAAsF,MAAA,SAAS,EAAE,oCAAjG;AAAuI,MAAA,OAAO,EAAE,KAAhJ;AAAuJ,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGN,IAAI,CAACO,IAAK,EAA7M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAPD,MAOO,IAAIP,IAAI,CAACG,QAAL,KAAkB,OAAtB,EAA+B;AAClC;AACA,wBAAO,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAY,MAAA,GAAG,EAAC,iBAAhB;AAAkC,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGN,IAAI,CAACO,IAAK,EAAxF;AAA2F,oBAAW,uBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAhBD,C,CAiBA;;;AAEA,eAAe;AACXR,EAAAA;AADW,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Media } from \"reactstrap\";\nimport ReactPlayer from \"react-player\";\n\n\n\nconst renderProfilePicVideo = (last) => {\n    // check conditional item to render whether video or image\n\n    console.log(\"last\", last);\n    \n    if (last.dataType === \"video\") {\n        // video logic\n        return (\n            <Media className=\"custom-media-chunk\" body>\n                <ReactPlayer playing={true} loop={true} muted={true} width={\"300px\"} height={\"300px\"} className={\"profile-picture-account media-body\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} />\n            </Media>\n        );\n    } else if (last.dataType === \"image\") {\n        // image logic\n        return <Media body alt=\"profile-picture\" src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} data-intro=\"This is Profile image\" />;\n    }   \n}\n// <Media body className=\"rounded-circle\" src={profilePicture} alt=\"\" />\n\nexport default {\n    renderProfilePicVideo\n}"]},"metadata":{},"sourceType":"module"}