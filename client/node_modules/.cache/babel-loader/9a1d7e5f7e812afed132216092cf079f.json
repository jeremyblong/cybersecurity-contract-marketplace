{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js\";\nimport React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\"; // ~ helper function rendered in main component (bottom of this component) ~\n\nconst RenderConditionalBasedUponSellingType = _ref => {\n  let {\n    type,\n    setValue,\n    getValues,\n    errors,\n    setError,\n    register,\n    control,\n    clearErrors,\n    biddingIncrementIntervalOptions,\n    handleSubmit,\n    shiftCoreStyles,\n    setModalOpenStatus,\n    previouslySavedSoftwareData\n  } = _ref;\n  console.log(\"RenderConditionalBasedUponSellingType type !!! : \", type); // const startBidCheck = helpers().startBidCheck;\n\n  const biddingIncrementIntervalGeneratedRef = useRef(null);\n  const startBidCheck = helpers().startBidCheck;\n  const reservePrice = helpers().reservePrice;\n  const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper; // gather redux-hook-form values (basically a \"state\" replacement).\n\n  const currentValues = getValues(); // console.log(\"startBidCheck : \", startBidCheck);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // clearErrors(name);\n\n    setValue(name, value, {\n      shouldValidate: true\n    });\n    return value;\n  };\n\n  const handleTimespanSelectChange = selectedOption => {\n    console.log(\"selectedOption\", selectedOption); // run conditionals\n\n    if (typeof currentValues.biddingIncrementInterval === \"undefined\") {\n      setValue('biddingIncrementInterval', selectedOption, {\n        shouldValidate: false\n      });\n    } else {\n      clearErrors(\"biddingIncrementInterval\");\n    }\n\n    biddingIncrementIntervalGeneratedRef.current.blur();\n  };\n\n  const menuClosedSelectInput = () => {\n    console.log(\"currentValues.biddingIncrementInterval\", currentValues.biddingIncrementInterval);\n\n    if (currentValues.biddingIncrementInterval) {// setSelectOneErrorStatus(true);\n    }\n  };\n\n  const onSubmit = (data, e) => {\n    console.log(\"submitting (onSubmit function)...!!\");\n    e.preventDefault();\n\n    if (data !== '') {\n      console.log(\"onSubmit success! :) \", data);\n      const mergedPreviousNewState = { ...previouslySavedSoftwareData,\n        ...data\n      }; // saveSoftwareListingInfo(mergedPreviousNewState);\n      // shiftCoreStyles(false);\n      // setModalOpenStatus(false);\n    } else {\n      console.log(\"onSubmit failure :(\");\n      errors.showMessages();\n    }\n  };\n\n  const onError = async (errors, e) => {\n    console.log(\"error submitting...!\", errors, e);\n  };\n\n  console.log(\"currentValues : \", currentValues);\n\n  const renderMainContentPassedConditional = selectedType => {\n    switch (selectedType) {\n      case \"auction-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit(onSubmit, onError),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 45\n          }\n        }, startBidCheck.label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, startBidCheck.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: startBidCheck.type,\n          name: startBidCheck.name,\n          placeholder: startBidCheck.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.startBid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 45\n          }\n        })), errors.startBid ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 64\n          }\n        }, errors.startBid.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 45\n          }\n        }, reservePrice.label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, reservePrice.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: reservePrice.type,\n          name: reservePrice.name,\n          placeholder: reservePrice.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.reservePrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 45\n          }\n        })), errors.reservePrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 68\n          }\n        }, errors.reservePrice.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: selectedOption => {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: () => {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"auction-AND-buy-it-now\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, type));\n        break;\n\n      case \"buy-it-now-OR-best-offer\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }, type));\n        break;\n\n      case \"buy-it-now-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }, type));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return renderMainContentPassedConditional(type);\n};\n\nconst SlideUpPaneAuctionPurchaseSelectionData = _ref3 => {\n  let {\n    selected,\n    shiftCoreStyles,\n    previouslySavedSoftwareData,\n    saveSoftwareListingInfo\n  } = _ref3;\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  console.log(\"typeOfListing\", selected);\n  const [isOpen, setModalOpenStatus] = useState(false);\n  const startBidCheck = helpers().startBidCheck;\n  console.log(\"startBidCheck : \", startBidCheck);\n  console.log(\"helpers\", helpers);\n  const {\n    handleFinalSubmissionInputs,\n    biddingIncrementIntervalOptions\n  } = functions; // const currentValues = getValues();\n  // console.log(\"currentValues : \", currentValues);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"27.5px\",\n      paddingBottom: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      shiftCoreStyles(true);\n      setModalOpenStatus(true); // open modal to modify existing photos/images\n    },\n    outline: true,\n    className: \"btn-pill btn-air-success stretched-purchase-options-btn\",\n    color: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Edit/Modify Existing Image/Photo's\")), /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: () => setModalOpenStatus(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles);\n    },\n    className: \"btn-square stretch-and-space-btn-left\",\n    active: true,\n    color: \"primary\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, \"Submit Completed Data & Close/Exit\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      shiftCoreStyles(false);\n      setModalOpenStatus(false);\n    },\n    className: \"btn-square stretch-and-space-btn-right\",\n    active: true,\n    color: \"secondary\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, \"Cancel/Close\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-normal-backer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: \"Auction purchase options/settings\",\n    title: \"Select your preferred auction type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RenderConditionalBasedUponSellingType, {\n    type: selected,\n    setValue: setValue,\n    getValues: getValues,\n    errors: errors,\n    setError: setError,\n    register: register,\n    control: control,\n    clearErrors: clearErrors,\n    biddingIncrementIntervalOptions: biddingIncrementIntervalOptions,\n    handleSubmit: handleSubmit,\n    shiftCoreStyles: shiftCoreStyles,\n    setModalOpenStatus: setModalOpenStatus,\n    saveSoftwareListingInfo: saveSoftwareListingInfo,\n    previouslySavedSoftwareData: previouslySavedSoftwareData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 45\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    style: {\n      zIndex: \"-100\"\n    },\n    id: \"custom-backdrop-noclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  // return desired selected redux-state\n  return {\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, {\n  shiftCoreStyles,\n  saveSoftwareListingInfo\n})(SlideUpPaneAuctionPurchaseSelectionData);\nexport default {\n  ConnectedSlideUpPaneAuctionPurchase,\n  RenderConditionalBasedUponSellingType\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js"],"names":["React","Fragment","useState","useRef","Sheet","Button","Container","Col","Row","Card","FormGroup","Label","CardBody","Form","Breadcrumb","Link","helpers","functions","useForm","Controller","connect","shiftCoreStyles","Select","saveSoftwareListingInfo","RenderConditionalBasedUponSellingType","type","setValue","getValues","errors","setError","register","control","clearErrors","biddingIncrementIntervalOptions","handleSubmit","setModalOpenStatus","previouslySavedSoftwareData","console","log","biddingIncrementIntervalGeneratedRef","startBidCheck","reservePrice","biddingIncrementIntervalHelper","currentValues","handleInputChange","e","name","value","target","shouldValidate","handleTimespanSelectChange","selectedOption","biddingIncrementInterval","current","blur","menuClosedSelectInput","onSubmit","data","preventDefault","mergedPreviousNewState","showMessages","onError","renderMainContentPassedConditional","selectedType","label","check","placeholder","startBid","message","field","width","SlideUpPaneAuctionPurchaseSelectionData","selected","reset","formState","mode","reValidateMode","isOpen","handleFinalSubmissionInputs","paddingTop","paddingBottom","zIndex","mapStateToProps","state","softwareListingSale","softwareListingSaleInfo","ConnectedSlideUpPaneAuctionPurchase"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\n\n\n// ~ helper function rendered in main component (bottom of this component) ~\nconst RenderConditionalBasedUponSellingType = ({ type, setValue, getValues, errors, setError, register, control, clearErrors, biddingIncrementIntervalOptions, handleSubmit, shiftCoreStyles, setModalOpenStatus, previouslySavedSoftwareData }) => {\n\n    console.log(\"RenderConditionalBasedUponSellingType type !!! : \", type);\n\n    // const startBidCheck = helpers().startBidCheck;\n\n    const biddingIncrementIntervalGeneratedRef = useRef(null);\n\n    const startBidCheck = helpers().startBidCheck;\n    const reservePrice = helpers().reservePrice;\n    const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n    // gather redux-hook-form values (basically a \"state\" replacement).\n    const currentValues = getValues();\n\n    // console.log(\"startBidCheck : \", startBidCheck);\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        // clearErrors(name);\n\n        setValue(name, value, { shouldValidate: true })\n    \n        return value;\n    };\n    const handleTimespanSelectChange = (selectedOption) => {\n        console.log(\"selectedOption\", selectedOption);\n\n        // run conditionals\n        if (typeof currentValues.biddingIncrementInterval === \"undefined\") {\n            setValue('biddingIncrementInterval', selectedOption, { shouldValidate: false });\n        } else {\n            clearErrors(\"biddingIncrementInterval\");\n        }\n\n        biddingIncrementIntervalGeneratedRef.current.blur();\n    }\n\n    const menuClosedSelectInput = () => {\n        console.log(\"currentValues.biddingIncrementInterval\", currentValues.biddingIncrementInterval);\n\n        if (currentValues.biddingIncrementInterval) {\n            // setSelectOneErrorStatus(true);\n        } \n    }\n    const onSubmit = (data, e) => {\n\n        console.log(\"submitting (onSubmit function)...!!\");\n\n        e.preventDefault();\n\n        if (data !== '') {\n            console.log(\"onSubmit success! :) \", data);\n\n            const mergedPreviousNewState = {...previouslySavedSoftwareData, ...data};\n\n            // saveSoftwareListingInfo(mergedPreviousNewState);\n\n            // shiftCoreStyles(false);\n            // setModalOpenStatus(false);\n        } else {\n            console.log(\"onSubmit failure :(\");\n\n            errors.showMessages();\n        }\n    };\n    const onError = async (errors, e) => {\n        console.log(\"error submitting...!\", errors, e);\n    };\n\n    console.log(\"currentValues : \", currentValues);\n\n    const renderMainContentPassedConditional = (selectedType) => {\n        switch (selectedType) {\n            case \"auction-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit(onSubmit, onError)}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.startBid} />\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <input {...reservePrice.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.reservePrice} />\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"auction-AND-buy-it-now\":\n                return (\n                    <Fragment>\n                        <h1>{type}</h1>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                return (\n                    <Fragment>\n                        <h1>{type}</h1>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-ONLY\":\n                return (\n                    <Fragment>\n                        <h1>{type}</h1>\n                    </Fragment>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n\n    return renderMainContentPassedConditional(type);\n};\n\n\nconst SlideUpPaneAuctionPurchaseSelectionData = ({ selected, shiftCoreStyles, previouslySavedSoftwareData, saveSoftwareListingInfo }) => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    console.log(\"typeOfListing\", selected);\n\n    const [ isOpen, setModalOpenStatus ] = useState(false);\n\n    const startBidCheck = helpers().startBidCheck;\n\n    console.log(\"startBidCheck : \", startBidCheck);\n\n    console.log(\"helpers\", helpers);\n\n    const { handleFinalSubmissionInputs, biddingIncrementIntervalOptions } = functions;\n\n    // const currentValues = getValues();\n\n    // console.log(\"currentValues : \", currentValues);\n\n    return (\n        <div id=\"sheet-container\">\n            <div style={{ paddingTop: \"27.5px\", paddingBottom: \"12.5px\" }} className=\"centered-both-ways\">\n                <Button onClick={() => {\n\n                    shiftCoreStyles(true);\n\n                    setModalOpenStatus(true);\n                    // open modal to modify existing photos/images\n                }} outline className=\"btn-pill btn-air-success stretched-purchase-options-btn\" color=\"success\" size=\"lg\">Edit/Modify Existing Image/Photo's</Button>\n            </div>\n            <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setModalOpenStatus(false)}>\n                <Sheet.Container className=\"sheetcontainer\">\n                    <Sheet.Header className=\"sheetheader\">\n                        <Row>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles);\n                                }} className=\"btn-square stretch-and-space-btn-left\" active color=\"primary\" size=\"md\">Submit Completed Data & Close/Exit</Button>\n                            </Col>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    shiftCoreStyles(false);\n                                    \n                                    setModalOpenStatus(false);\n                                }} className=\"btn-square stretch-and-space-btn-right\" active color=\"secondary\" size=\"md\">Cancel/Close</Button>\n                            </Col>\n                        </Row>\n                    </Sheet.Header>\n                    <Sheet.Content> \n                        <div className=\"add-normal-backer\">\n                            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent=\"Auction purchase options/settings\" title=\"Select your preferred auction type\"/>\n                            <Container fluid={true}>\n                                <Card className=\"card-main-container\">\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <RenderConditionalBasedUponSellingType type={selected} setValue={setValue} getValues={getValues} errors={errors} setError={setError} register={register} control={control} clearErrors={clearErrors} biddingIncrementIntervalOptions={biddingIncrementIntervalOptions} handleSubmit={handleSubmit} shiftCoreStyles={shiftCoreStyles} setModalOpenStatus={setModalOpenStatus} saveSoftwareListingInfo={saveSoftwareListingInfo} previouslySavedSoftwareData={previouslySavedSoftwareData} />\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop style={{ zIndex: \"-100\" }} id=\"custom-backdrop-noclick\" />\n            </Sheet>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    // return desired selected redux-state\n    return {\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, { shiftCoreStyles, saveSoftwareListingInfo })(SlideUpPaneAuctionPurchaseSelectionData);\n\nexport default {\n    ConnectedSlideUpPaneAuctionPurchase,\n    RenderConditionalBasedUponSellingType\n};"]},"metadata":{},"sourceType":"module"}