{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/purchaseCourseContent/purchaseContent.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from \"react-redux\";\n\nconst PurchaseCourseContentStripePaymentHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [cards, setCardData] = useState([]);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, configuration).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        const {\n          cards\n        } = res.data;\n        setCardData(cards);\n      } else {\n        console.log(\"err gathering card data...\", res.data);\n        NotificationManager.error(\"An error occurred while attempting to fetch the desired account 'card data', please reload the page or contact support if the problem persists!\", \"Error gathering account card data!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"An error occurred while attempting to fetch the desired account 'card data', please reload the page or contact support if the problem persists!\", \"Error gathering account card data!\", 4750);\n    });\n  }, []);\n  console.log(\"Cards\", cards);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Purchase A Educational/Instructional Course!\",\n    title: \"You're About To Purchase This Course..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"You're about to purchase this course, if you're sure about this decision - continue with the logic/data below & proceed with your purchase!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    md: \"6\",\n    xl: \"6 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-page-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 53\n    }\n  }, \"Previously Added Card(s) & Method's\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 49\n    }\n  }, typeof cards !== \"undefined\" && cards.length > 0 ? cards.slice(0, 3).map((payment, idx) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"list-group-item-action listitem-pricing-card flex-column align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 73\n      }\n    }, payment.name), /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: \"#f73164\"\n      },\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 113\n      }\n    }, \"Primary Method\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 69\n      }\n    }, `${payment.lastFour}`), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 69\n      }\n    }, `Exp. ${payment.expiry}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 126\n      }\n    }, \"Card Type: \", payment.cardType))));\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../assets/images/credit-cards.jpg\"),\n    className: \"credit-cards-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 61\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view-all-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => setIsOpen(true),\n    className: \"view-all-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 57\n    }\n  }, \"View ALL Card's/Method's\")))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    md: \"6\",\n    xl: \"6 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(PurchaseCourseContentStripePaymentHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/purchaseCourseContent/purchaseContent.js"],"names":["React","Fragment","useState","useEffect","Container","Row","Col","Card","CardHeader","CardBody","Breadcrumb","axios","NotificationManager","connect","PurchaseCourseContentStripePaymentHelper","userData","cards","setCardData","configuration","params","id","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","error","catch","err","length","slice","map","payment","idx","name","color","lastFour","expiry","cardType","require","setIsOpen","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from \"react-redux\";\n\nconst PurchaseCourseContentStripePaymentHelper = ({ userData }) => {\n    \n    const [ cards, setCardData ] = useState([]);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, configuration).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                const { cards } = res.data;\n\n                setCardData(cards);\n            } else {\n                console.log(\"err gathering card data...\", res.data);\n\n                NotificationManager.error(\"An error occurred while attempting to fetch the desired account 'card data', please reload the page or contact support if the problem persists!\", \"Error gathering account card data!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An error occurred while attempting to fetch the desired account 'card data', please reload the page or contact support if the problem persists!\", \"Error gathering account card data!\", 4750);\n        });\n\n    }, []);\n\n    console.log(\"Cards\", cards);\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Purchase A Educational/Instructional Course!\" title=\"You're About To Purchase This Course..\"/>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"shadow\"}>\n                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                <h3>You're about to purchase this course, if you're sure about this decision - continue with the logic/data below & proceed with your purchase!</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col lg=\"6\" sm=\"12\" md=\"6\" xl=\"6 xl-100\">\n                                        <Card>\n                                            <CardHeader>\n                                                <div className=\"product-page-details\">\n                                                    <h3>{\"Previously Added Card(s) & Method's\"}</h3>\n                                                </div>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <ListGroup>\n                                                    {typeof cards !== \"undefined\" && cards.length > 0 ? cards.slice(0, 3).map((payment, idx) => {\n                                                        return (\n                                                            <Fragment key={idx}>\n                                                                <ListGroupItem className=\"list-group-item-action listitem-pricing-card flex-column align-items-start\">\n                                                                    <div className=\"d-flex w-100 justify-content-between\">\n                                                                        <h5 className=\"mb-1\">{payment.name}</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">{\"Primary Method\"}</small>\n                                                                    </div>\n                                                                    <p className=\"mb-1\">{`${payment.lastFour}`}</p>\n                                                                    <small className=\"text-muted\">{`Exp. ${payment.expiry}`} <small className=\"float-right\">Card Type: {payment.cardType}</small></small>\n                                                                </ListGroupItem>\n                                                            </Fragment>\n                                                        );\n                                                    }) : <Fragment>\n                                                        <div className=\"centered-both-ways\">\n                                                            <img src={require(\"../../../../../../assets/images/credit-cards.jpg\")} className={\"credit-cards-placeholder\"} />\n                                                        </div>\n                                                    </Fragment>}\n                                                </ListGroup>\n                                                <div className=\"centered-both-ways\">\n                                                    <div className=\"view-all-card-wrapper\">\n                                                        <a onClick={() => setIsOpen(true)} className=\"view-all-card-text\">View ALL Card's/Method's</a>\n                                                    </div>\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                    <Col lg=\"6\" sm=\"12\" md=\"6\" xl=\"6 xl-100\">\n\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(PurchaseCourseContentStripePaymentHelper);"]},"metadata":{},"sourceType":"module"}