{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/createVideoInterview/createVideoChat.js\";\nimport React, { Fragment, useState, useEffect, useRef, useCallback } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\n\nconst CreateVideoChatEmployerHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [videocall, setVideoCallData] = useState(null);\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]); // Create refs for the HTML elements to attach audio and video to in the DOM\n  // For now, set them to null\n\n  const videoRef = useRef(null);\n  const audioRef = useRef(null);\n\n  const joinRoomVideoChat = async () => {\n    try {\n      // const generatedRoomID = uuid();\n      const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n        params: {\n          uniqueId: userData.uniqueId,\n          accountType: userData.accountType,\n          generatedRoomID: videocall.roomName\n        }\n      });\n\n      if (response) {\n        console.log(\"response\", response);\n        const {\n          data\n        } = response;\n        const room = await twilioConnect(data.token, {\n          name: videocall.roomName,\n          audio: true,\n          video: true\n        });\n        console.log(\"roo\", room);\n\n        const participantConnected = participant => {\n          setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n\n        const participantDisconnected = participant => {\n          setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n        };\n\n        setRoom(room);\n        room.on('participantConnected', participantConnected);\n        room.on('participantDisconnected', participantDisconnected);\n        room.participants.forEach(participantConnected);\n        setRoom(room); // if (room) {\n        //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n        // }\n      }\n    } catch (err) {\n      console.log(err);\n\n      if (err) {\n        NotificationManager.info(`We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \"Try again.`, \"Unable to access video/audio devices!\", 4750);\n      }\n    }\n  };\n\n  const handleLogout = useCallback(() => {\n    setRoom(prevRoom => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach(trackPub => {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n\n      return null;\n    });\n  }, []);\n  console.log(\"room\", room);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then(res => {\n      if (res.data.message === \"Gathered user!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setUser(user);\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(\"videocall\", videocall);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n\n    if (videoRef && videoRef.current) {\n      if (videoTrack) {\n        videoTrack.attach(videoRef.current);\n        return () => {\n          videoTrack.detach();\n        };\n      }\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n\n    if (audioRef && audioRef.current) {\n      if (audioTrack) {\n        audioTrack.attach(audioRef.current);\n        return () => {\n          audioTrack.detach();\n        };\n      }\n    }\n  }, [audioTracks]);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType,\n        videocallID: id\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/video/chat/info`, configuration).then(res => {\n      if (res.data.message === \"Gathered info!\") {\n        console.log(res.data);\n        const {\n          videoCall\n        } = res.data;\n        setVideoCallData(videoCall);\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const remoteParticipants = participants.map(participant => /*#__PURE__*/React.createElement(Participant, {\n    key: participant.sid,\n    participant: participant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Invite Hacker(s) To Video Interview With You!\",\n    title: \"Find, Select & Invite Anyone On Our Platform..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, \"We \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 56\n    }\n  }, \"HIGHLY SUGGEST\"), \" video interviewing \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 136\n    }\n  }, \"any\"), \" potential candiates for a contracted gig and/or hacking job, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 247\n    }\n  }, \"ESPECIALLY\"), \" if testing \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 315\n    }\n  }, \"physical infrastructure\"), \" and other related on-site security.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-success b-r-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, room !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Participant, {\n    key: room.localParticipant.sid,\n    participant: room.localParticipant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }))) : null, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remote-participants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, remoteParticipants)))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: joinRoomVideoChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, \"Initialize Room\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, \"Exit/Close\")))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/createVideoInterview/createVideoChat.js"],"names":["React","Fragment","useState","useEffect","useRef","useCallback","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Button","Breadcrumb","connect","reduxConnect","useParams","Video","axios","Participant","twilioConnect","uuid","NotificationManager","CreateVideoChatEmployerHelper","userData","id","user","setUser","videocall","setVideoCallData","videoTracks","setVideoTracks","audioTracks","setAudioTracks","room","setRoom","participants","setParticipants","videoRef","audioRef","joinRoomVideoChat","response","get","process","env","REACT_APP_BASE_URL","params","uniqueId","accountType","generatedRoomID","roomName","console","log","data","token","name","audio","video","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","err","info","handleLogout","prevRoom","localParticipant","tracks","trackPub","track","stop","disconnect","configuration","then","res","message","catch","videoTrack","current","attach","detach","audioTrack","videocallID","videoCall","remoteParticipants","map","sid","color","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, useCallback } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\n\n\nconst CreateVideoChatEmployerHelper = ({ userData }) => {\n\n    const { id } = useParams();\n\n    const [ user, setUser ] = useState(null);\n    const [ videocall, setVideoCallData ] = useState(null);\n    const [ videoTracks, setVideoTracks ] = useState([]);\n    const [ audioTracks, setAudioTracks ] = useState([]);\n    const [ room, setRoom ] = useState(null);\n    const [ participants, setParticipants ] = useState([]);\n  \n    // Create refs for the HTML elements to attach audio and video to in the DOM\n    // For now, set them to null\n    const videoRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const joinRoomVideoChat = async () => {\n        try {\n\n            // const generatedRoomID = uuid();\n\n            const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType,\n                    generatedRoomID: videocall.roomName\n                }\n            });\n            if (response) {\n                console.log(\"response\", response);\n\n                const { data } = response;\n\n                const room = await twilioConnect(data.token, {\n                    name: videocall.roomName,\n                    audio: true,\n                    video: true\n                });\n\n                console.log(\"roo\", room);\n\n                const participantConnected = participant => {\n                    setParticipants(prevParticipants => [...prevParticipants, participant]);\n                };\n                const participantDisconnected = participant => {\n                    setParticipants(prevParticipants =>\n                        prevParticipants.filter(p => p !== participant)\n                    );\n                };\n\n                setRoom(room);\n\n                room.on('participantConnected', participantConnected);\n                room.on('participantDisconnected', participantDisconnected);\n                room.participants.forEach(participantConnected);\n\n                setRoom(room);\n                // if (room) {\n                //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n                // }\n            }\n        } catch(err) {\n            console.log(err);\n\n            if (err) {\n                NotificationManager.info(`We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \"Try again.`, \"Unable to access video/audio devices!\", 4750);\n            }\n        }\n    }\n\n    const handleLogout = useCallback(() => {\n        setRoom((prevRoom) => {\n          if (prevRoom) {\n            prevRoom.localParticipant.tracks.forEach((trackPub) => {\n              trackPub.track.stop();\n            });\n            prevRoom.disconnect();\n          }\n          return null;\n        });\n    }, []);\n\n    console.log(\"room\", room);\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUser(user);\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    console.log(\"videocall\", videocall);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoRef && videoRef.current) {\n            if (videoTrack) {\n                videoTrack.attach(videoRef.current);\n                return () => {\n                    videoTrack.detach();\n                };\n            }\n        }\n    }, [ videoTracks ]);\n    \n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioRef && audioRef.current) {\n            if (audioTrack) {\n                audioTrack.attach(audioRef.current);\n                return () => {\n                    audioTrack.detach();\n                };\n            }\n        }\n    }, [ audioTracks ]);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType,\n                videocallID: id\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/video/chat/info`, configuration).then((res) => {\n            if (res.data.message === \"Gathered info!\") {\n                console.log(res.data);\n\n                const { videoCall } = res.data;\n\n                setVideoCallData(videoCall);\n\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const remoteParticipants = participants.map((participant) => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n    \n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Invite Hacker(s) To Video Interview With You!\" title=\"Find, Select & Invite Anyone On Our Platform..\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)</h2>\n                                <p className=\"lead\">We <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGEST</strong> video interviewing <strong style={{ color: \"#f73164\" }}>any</strong> potential candiates for a contracted gig and/or hacking job, <strong style={{ color: \"#f73164\" }}>ESPECIALLY</strong> if testing <strong>physical infrastructure</strong> and other related on-site security.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-success b-r-success'>\n                                <Row>\n                                    {room !== null ? <Fragment>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Participant\n                                                key={room.localParticipant.sid}\n                                                participant={room.localParticipant}\n                                            />\n                                        </Col>\n                                    </Fragment> : null}\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"remote-participants\">{remoteParticipants}</div>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={joinRoomVideoChat}>Initialize Room</Button>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }} onClick={handleLogout}>Exit/Close</Button>\n                                    </Col>\n                                </Row>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);"]},"metadata":{},"sourceType":"module"}