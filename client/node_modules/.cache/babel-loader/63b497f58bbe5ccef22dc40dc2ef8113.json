{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar MediaTrackTransceiver = require('./transceiver');\n/**\n * A {@link MediaTrackSender} represents one or more local RTCRtpSenders.\n * @extends MediaTrackTransceiver\n * @emits MediaTrackSender#replaced\n */\n\n\nvar MediaTrackSender =\n/** @class */\nfunction (_super) {\n  __extends(MediaTrackSender, _super);\n  /**\n   * Construct a {@link MediaTrackSender}.\n   * @param {MediaStreamTrack} mediaStreamTrack\n   */\n\n\n  function MediaTrackSender(mediaStreamTrack) {\n    var _this = _super.call(this, mediaStreamTrack.id, mediaStreamTrack) || this;\n\n    Object.defineProperties(_this, {\n      _clones: {\n        value: new Set()\n      },\n      _senders: {\n        value: new Set()\n      },\n      _senderToPublisherHintCallbacks: {\n        value: new Map()\n      },\n      isPublishing: {\n        get: function get() {\n          return !!this._clones.size;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * Return a new {@link MediaTrackSender} containing a clone of the underlying\n   * MediaStreamTrack. No RTCRtpSenders are copied.\n   * @returns {MediaTrackSender}\n   */\n\n\n  MediaTrackSender.prototype.clone = function () {\n    var clone = new MediaTrackSender(this.track.clone());\n\n    this._clones.add(clone);\n\n    return clone;\n  };\n  /**\n   * Remove a cloned {@link MediaTrackSender}.\n   * @returns {void}\n   */\n\n\n  MediaTrackSender.prototype.removeClone = function (clone) {\n    this._clones.delete(clone);\n  };\n  /**\n   * Set the given MediaStreamTrack.\n   * @param {MediaStreamTrack} mediaStreamTrack\n   * @returns {Promise<void>}\n   */\n\n\n  MediaTrackSender.prototype.setMediaStreamTrack = function (mediaStreamTrack) {\n    var _this = this;\n\n    var clones = Array.from(this._clones);\n    var senders = Array.from(this._senders);\n    return Promise.all(clones.map(function (clone) {\n      return clone.setMediaStreamTrack(mediaStreamTrack.clone());\n    }).concat(senders.map(function (sender) {\n      return _this._replaceTrack(sender, mediaStreamTrack);\n    }))).finally(function () {\n      _this._track = mediaStreamTrack;\n    });\n  };\n  /**\n   * Add an RTCRtpSender.\n   * @param {RTCRtpSender} sender\n   * @param {?()=>Promise<string>} publisherHintCallback\n   * @returns {this}\n   */\n\n\n  MediaTrackSender.prototype.addSender = function (sender, publisherHintCallback) {\n    this._senders.add(sender);\n\n    if (publisherHintCallback) {\n      this._senderToPublisherHintCallbacks.set(sender, publisherHintCallback);\n    }\n\n    return this;\n  };\n  /**\n   * Remove an RTCRtpSender.\n   * @param {RTCRtpSender} sender\n   * @returns {this}\n   */\n\n\n  MediaTrackSender.prototype.removeSender = function (sender) {\n    this._senders.delete(sender);\n\n    this._senderToPublisherHintCallbacks.delete(sender);\n\n    return this;\n  };\n  /**\n   * Applies given encodings, or resets encodings if none specified.\n   * @param {Array<{enabled: boolean, layer_index: number}>|null} encodings\n   * @returns {Promise<string>}\n   */\n\n\n  MediaTrackSender.prototype.setPublisherHint = function (encodings) {\n    // Note(mpatwardhan): since publisher hint applies only to group rooms we only look at 1st call callback.\n    var _a = __read(Array.from(this._senderToPublisherHintCallbacks.values()), 1),\n        publisherHintCallback = _a[0];\n\n    return publisherHintCallback ? publisherHintCallback(encodings) : Promise.resolve('COULD_NOT_APPLY_HINT');\n  };\n\n  MediaTrackSender.prototype._replaceTrack = function (sender, mediaStreamTrack) {\n    var _this = this;\n\n    return sender.replaceTrack(mediaStreamTrack).then(function (replaceTrackResult) {\n      // clear any publisherHints and apply default encodings.\n      _this.setPublisherHint(null).catch(function () {});\n\n      _this.emit('replaced');\n\n      return replaceTrackResult;\n    });\n  };\n\n  return MediaTrackSender;\n}(MediaTrackTransceiver);\n/**\n * The {@link MediaTrackSender} replaced the underlying mediaStreamTrack\n * @event MediaTrackSender#replaced\n */\n\n\nmodule.exports = MediaTrackSender;","map":{"version":3,"sources":["../../../lib/media/track/sender.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar MediaTrackTransceiver = require('./transceiver');\n/**\n * A {@link MediaTrackSender} represents one or more local RTCRtpSenders.\n * @extends MediaTrackTransceiver\n * @emits MediaTrackSender#replaced\n */\nvar MediaTrackSender = /** @class */ (function (_super) {\n    __extends(MediaTrackSender, _super);\n    /**\n     * Construct a {@link MediaTrackSender}.\n     * @param {MediaStreamTrack} mediaStreamTrack\n     */\n    function MediaTrackSender(mediaStreamTrack) {\n        var _this = _super.call(this, mediaStreamTrack.id, mediaStreamTrack) || this;\n        Object.defineProperties(_this, {\n            _clones: {\n                value: new Set()\n            },\n            _senders: {\n                value: new Set()\n            },\n            _senderToPublisherHintCallbacks: {\n                value: new Map()\n            },\n            isPublishing: {\n                get: function () {\n                    return !!this._clones.size;\n                }\n            }\n        });\n        return _this;\n    }\n    /**\n     * Return a new {@link MediaTrackSender} containing a clone of the underlying\n     * MediaStreamTrack. No RTCRtpSenders are copied.\n     * @returns {MediaTrackSender}\n     */\n    MediaTrackSender.prototype.clone = function () {\n        var clone = new MediaTrackSender(this.track.clone());\n        this._clones.add(clone);\n        return clone;\n    };\n    /**\n     * Remove a cloned {@link MediaTrackSender}.\n     * @returns {void}\n     */\n    MediaTrackSender.prototype.removeClone = function (clone) {\n        this._clones.delete(clone);\n    };\n    /**\n     * Set the given MediaStreamTrack.\n     * @param {MediaStreamTrack} mediaStreamTrack\n     * @returns {Promise<void>}\n     */\n    MediaTrackSender.prototype.setMediaStreamTrack = function (mediaStreamTrack) {\n        var _this = this;\n        var clones = Array.from(this._clones);\n        var senders = Array.from(this._senders);\n        return Promise.all(clones.map(function (clone) {\n            return clone.setMediaStreamTrack(mediaStreamTrack.clone());\n        }).concat(senders.map(function (sender) {\n            return _this._replaceTrack(sender, mediaStreamTrack);\n        }))).finally(function () {\n            _this._track = mediaStreamTrack;\n        });\n    };\n    /**\n     * Add an RTCRtpSender.\n     * @param {RTCRtpSender} sender\n     * @param {?()=>Promise<string>} publisherHintCallback\n     * @returns {this}\n     */\n    MediaTrackSender.prototype.addSender = function (sender, publisherHintCallback) {\n        this._senders.add(sender);\n        if (publisherHintCallback) {\n            this._senderToPublisherHintCallbacks.set(sender, publisherHintCallback);\n        }\n        return this;\n    };\n    /**\n     * Remove an RTCRtpSender.\n     * @param {RTCRtpSender} sender\n     * @returns {this}\n     */\n    MediaTrackSender.prototype.removeSender = function (sender) {\n        this._senders.delete(sender);\n        this._senderToPublisherHintCallbacks.delete(sender);\n        return this;\n    };\n    /**\n     * Applies given encodings, or resets encodings if none specified.\n     * @param {Array<{enabled: boolean, layer_index: number}>|null} encodings\n     * @returns {Promise<string>}\n     */\n    MediaTrackSender.prototype.setPublisherHint = function (encodings) {\n        // Note(mpatwardhan): since publisher hint applies only to group rooms we only look at 1st call callback.\n        var _a = __read(Array.from(this._senderToPublisherHintCallbacks.values()), 1), publisherHintCallback = _a[0];\n        return publisherHintCallback ? publisherHintCallback(encodings) : Promise.resolve('COULD_NOT_APPLY_HINT');\n    };\n    MediaTrackSender.prototype._replaceTrack = function (sender, mediaStreamTrack) {\n        var _this = this;\n        return sender.replaceTrack(mediaStreamTrack).then(function (replaceTrackResult) {\n            // clear any publisherHints and apply default encodings.\n            _this.setPublisherHint(null).catch(function () { });\n            _this.emit('replaced');\n            return replaceTrackResult;\n        });\n    };\n    return MediaTrackSender;\n}(MediaTrackTransceiver));\n/**\n * The {@link MediaTrackSender} replaced the underlying mediaStreamTrack\n * @event MediaTrackSender#replaced\n */\nmodule.exports = MediaTrackSender;\n//# sourceMappingURL=sender.js.map"]},"metadata":{},"sourceType":"script"}