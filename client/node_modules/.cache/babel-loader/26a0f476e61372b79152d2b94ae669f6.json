{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst HookHelpers=()=>{const startBidCheck={check:(setError,register)=>{return{...register(\"startBid\",{required:{value:true,message:\"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"},minLength:{value:1,message:\"You must enter AT Least 1 characters\"},maxLength:{value:10,message:\"You may ONLY enter 10 characters or less\"},onBlur:e=>{// code here...\n}})};},name:\"startBid\",placeholder:\"Enter a starting bid...\",type:\"number\",label:\"Enter a starting bid\"};const reservePrice={check:(setError,register,values)=>{return{...register(\"reservePrice\",{required:{value:true,message:\"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"},minLength:{value:1,message:\"You must enter AT Least 1 characters\"},maxLength:{value:10,message:\"You may ONLY enter 10 characters or less\"},onBlur:e=>{// code here...\nconsole.log(\"blur - e\",e);// current value from this input\nconst current=e.target.value;// starting bid\nconst startingBid=values.startBid;// compare to make sure reserve is greater than starting bid\nif(Number(current)<=Number(startingBid)){setTimeout(()=>{setError(\"reservePrice\",{type:\"manual\",message:\"You MUST enter a 'reserve price' GREATER than your starting bid price!\"});},50);}}})};},name:\"reservePrice\",placeholder:\"Enter a reserve price...\",type:\"number\",label:\"Enter a reserve price\"};const whatsIncludedInfoListing={check:(setError,register)=>{return{...register(\"whatsIncluded\",{required:{value:true,message:\"You MUST enter AT least 75 characters to 1500 characters\"},minLength:{value:75,message:\"You must enter AT Least 75 characters\"},maxLength:{value:1500,message:\"You may ONLY enter 1500 characters or less\"},onBlur:e=>{// code here...\n}})};},name:\"whatsIncluded\",placeholder:\"Please elaborate on \\\"what's included\\\" in this listing such as specifics of various features/functionality such as 4 files, 1 README document, 15 pictures and a GitHub repository link...\",type:\"text\",label:\"Enter a DETAILED description of \\\"what's included\\\" in this listing - be as SPECIFIC as possible in reference to fine details.\"};const buyItNowHelper={check:(setError,register)=>{return{...register(\"buyItNowPrice\",{required:{value:true,message:\"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"},minLength:{value:1,message:\"You must enter AT Least 1 characters\"},maxLength:{value:10,message:\"You may ONLY enter 10 characters or less\"},onBlur:e=>{// code here...\n}})};},name:\"buyItNowPrice\",placeholder:\"Please enter a 'Buy it now' price - this essentially gives intereseted user's the ability to immediately purchase your item/software...\",type:\"number\",label:\"Enter a 'Buy it now' price for interested parties to immediately purchase your item/code/software for sale (this transaction will finalize INSTANTLY - if funds are available)\"};const quantityAvailability={label:\"Select a quantity/availability of your item for sale (this is the MAXIMUM number of people you're willing to sell your software/code to - each purchase counts as ONE item)\",check:(setError,register,clearErrors)=>{return{...register(\"quantityAvailableForSale\",{required:{value:true,message:\"You must select a value before proceeding\"},onBlur:e=>{// log to check whats returned\nconst value=e.target.value;setTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"quantityAvailableForSale\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"quantityAvailableForSale\",{type:\"manual\",message:\"You haven't selected a 'quantity/numerical-number' of how many times you're willing to sell this code/software content\"});}},50);}})};},name:\"quantityAvailableForSale\",placeholder:\"Select a quantity/availability of your item for sale...\"};const acceptCouponsDiscounts={label:\"Would you like to accept coupons/discounts provided by \".concat(process.env.REACT_APP_APPLICATION_NAME,\" (reduces price - supplied via company promotions - makes listing more appealing & draws extra interest - MAXIMUM 20% discount at any time)\"),check:(setError,register,clearErrors)=>{return{...register(\"discountCodeAcceptance\",{required:{value:true,message:\"You must select a value before proceeding\"},onBlur:e=>{// log to check whats returned\nconst value=e.target.value;// set delay to prevent premature render\nsetTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"discountCodeAcceptance\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"discountCodeAcceptance\",{type:\"manual\",message:\"You haven't selected a 'coupon/discount code' selection - select one before proceeding\"});}},50);}})};},name:\"discountCodeAcceptance\",placeholder:\"Select whether or not you'd like to accept coupon/discount codes...\"};const biddingIncrementIntervalHelper={label:\"Listing Timespan/Length - Please select a listing length (up-to a maximum of 10 days however we suggest 7 days on average)\",check:(setError,register,clearErrors)=>{return{...register(\"biddingIncrementInterval\",{required:{value:true,message:\"You must select a value before proceeding\"},onBlur:e=>{// log to check whats returned\nconst value=e.target.value;setTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"biddingIncrementInterval\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"biddingIncrementInterval\",{type:\"manual\",message:\"You haven't selected a 'bidding interval' & a selection is required before proceeding\"});}},50);}})};},name:\"biddingIncrementInterval\",placeholder:\"Select a 'bid-increment interval' (next required minimum bid from active bidders)\"};const automaticAcceptBestOffer={check:(setError,register)=>{return{...register(\"automaticBestOfferAccept\",{required:{value:true,message:\"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"},minLength:{value:1,message:\"You must enter AT Least 1 characters\"},maxLength:{value:10,message:\"You may ONLY enter 10 characters or less\"},onBlur:e=>{// code here...\n}})};},name:\"automaticBestOfferAccept\",placeholder:\"Enter your LOWEST ACCEPTED offer...\",type:\"number\",label:\"Enter the value of the LOWEST OFFER you'd be willing to AUTOMATICALLY accept if offer is proposed - system will process request immediately (your idea of a reasonable 'automatically' accepted offer - no action required)\"};const minimumRequiredOffer={check:(setError,register)=>{return{...register(\"minimumRequiredOfferValue\",{required:{value:true,message:\"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"},minLength:{value:1,message:\"You must enter AT Least 1 characters\"},maxLength:{value:10,message:\"You may ONLY enter 10 characters or less\"},onBlur:e=>{// code here...\n}})};},name:\"minimumRequiredOfferValue\",placeholder:\"Minimum offer amount (the lowest offer anyone can submit)\",type:\"number\",label:\"Enter your 'Minimum offer amount' required for user's to be able to successfully submit an offer of any value GREATER THAN this fields entered value - if a user submits an offer less-than your entered value... The offer will automatically reject upon attempted submission\"};return{startBidCheck,reservePrice,biddingIncrementIntervalHelper,whatsIncludedInfoListing,buyItNowHelper,quantityAvailability,acceptCouponsDiscounts,automaticAcceptBestOffer,minimumRequiredOffer};};export default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["HookHelpers","startBidCheck","check","setError","register","required","value","message","minLength","maxLength","onBlur","e","name","placeholder","type","label","reservePrice","values","console","log","current","target","startingBid","startBid","Number","setTimeout","whatsIncludedInfoListing","buyItNowHelper","quantityAvailability","clearErrors","Object","keys","length","acceptCouponsDiscounts","process","env","REACT_APP_APPLICATION_NAME","biddingIncrementIntervalHelper","automaticAcceptBestOffer","minimumRequiredOffer"],"mappings":"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","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n    \n    const startBidCheck = {\n        check: (setError, register) => {\n            return (\n                {...register(\"startBid\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"startBid\",\n        placeholder: \"Enter a starting bid...\",\n        type: \"number\",\n        label: \"Enter a starting bid\"\n    };\n    const reservePrice = {\n        check: (setError, register, values) => {\n            return (\n                {...register(\"reservePrice\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                    console.log(\"blur - e\", e);\n                    // current value from this input\n                    const current = e.target.value;\n                    // starting bid\n                    const startingBid = values.startBid;\n                    // compare to make sure reserve is greater than starting bid\n                    if (Number(current) <= Number(startingBid)) {\n                        setTimeout(() => {\n                            setError(\"reservePrice\", {\n                                type: \"manual\",\n                                message: \"You MUST enter a 'reserve price' GREATER than your starting bid price!\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            )\n        },\n        name: \"reservePrice\",\n        placeholder: \"Enter a reserve price...\",\n        type: \"number\",\n        label: \"Enter a reserve price\"\n    };\n    const whatsIncludedInfoListing = {\n        check: (setError, register) => {\n            return (\n                {...register(\"whatsIncluded\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 75 characters to 1500 characters\"\n                }, minLength: {\n                    value: 75,\n                    message: \"You must enter AT Least 75 characters\"\n                }, maxLength: {\n                    value: 1500,\n                    message: \"You may ONLY enter 1500 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"whatsIncluded\",\n        placeholder: `Please elaborate on \"what's included\" in this listing such as specifics of various features/functionality such as 4 files, 1 README document, 15 pictures and a GitHub repository link...`,\n        type: \"text\",\n        label: `Enter a DETAILED description of \"what's included\" in this listing - be as SPECIFIC as possible in reference to fine details.`\n    };\n    const buyItNowHelper = {\n        check: (setError, register) => {\n            return (\n                {...register(\"buyItNowPrice\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"buyItNowPrice\",\n        placeholder: `Please enter a 'Buy it now' price - this essentially gives intereseted user's the ability to immediately purchase your item/software...`,\n        type: \"number\",\n        label: `Enter a 'Buy it now' price for interested parties to immediately purchase your item/code/software for sale (this transaction will finalize INSTANTLY - if funds are available)`\n    }\n    const quantityAvailability = {\n        label: \"Select a quantity/availability of your item for sale (this is the MAXIMUM number of people you're willing to sell your software/code to - each purchase counts as ONE item)\",\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"quantityAvailableForSale\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n\n                    const value = e.target.value;\n\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"quantityAvailableForSale\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"quantityAvailableForSale\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'quantity/numerical-number' of how many times you're willing to sell this code/software content\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"quantityAvailableForSale\",\n        placeholder: \"Select a quantity/availability of your item for sale...\"\n    };\n    const acceptCouponsDiscounts = {\n        label: `Would you like to accept coupons/discounts provided by ${process.env.REACT_APP_APPLICATION_NAME} (reduces price - supplied via company promotions - makes listing more appealing & draws extra interest - MAXIMUM 20% discount at any time)`,\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"discountCodeAcceptance\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    const value = e.target.value;\n                    // set delay to prevent premature render\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"discountCodeAcceptance\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"discountCodeAcceptance\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'coupon/discount code' selection - select one before proceeding\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"discountCodeAcceptance\",\n        placeholder: \"Select whether or not you'd like to accept coupon/discount codes...\"\n    }\n    const biddingIncrementIntervalHelper = {\n        label: \"Listing Timespan/Length - Please select a listing length (up-to a maximum of 10 days however we suggest 7 days on average)\",\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"biddingIncrementInterval\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n\n                    const value = e.target.value;\n\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"biddingIncrementInterval\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"biddingIncrementInterval\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'bidding interval' & a selection is required before proceeding\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"biddingIncrementInterval\",\n        placeholder: \"Select a 'bid-increment interval' (next required minimum bid from active bidders)\"\n    };\n\n    const automaticAcceptBestOffer = {\n        check: (setError, register) => {\n            return (\n                {...register(\"automaticBestOfferAccept\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"automaticBestOfferAccept\",\n        placeholder: `Enter your LOWEST ACCEPTED offer...`,\n        type: \"number\",\n        label: `Enter the value of the LOWEST OFFER you'd be willing to AUTOMATICALLY accept if offer is proposed - system will process request immediately (your idea of a reasonable 'automatically' accepted offer - no action required)`\n    };\n    const minimumRequiredOffer = {\n        check: (setError, register) => {\n            return (\n                {...register(\"minimumRequiredOfferValue\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"minimumRequiredOfferValue\",\n        placeholder: `Minimum offer amount (the lowest offer anyone can submit)`,\n        type: \"number\",\n        label: `Enter your 'Minimum offer amount' required for user's to be able to successfully submit an offer of any value GREATER THAN this fields entered value - if a user submits an offer less-than your entered value... The offer will automatically reject upon attempted submission`\n    };\n\n    return {\n        startBidCheck,\n        reservePrice,\n        biddingIncrementIntervalHelper,\n        whatsIncludedInfoListing,\n        buyItNowHelper,\n        quantityAvailability,\n        acceptCouponsDiscounts,\n        automaticAcceptBestOffer,\n        minimumRequiredOffer\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}