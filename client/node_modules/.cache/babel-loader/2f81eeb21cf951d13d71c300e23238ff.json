{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/messagingPane/messagingHelper.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport \"./styles.css\";\n\nconst MessagingPanePrivateHelper = _ref => {\n  let {\n    messagePaneOpen,\n    setMessagePaneState,\n    employerName\n  } = _ref;\n  console.log(\"messagePaneOpen\", messagePaneOpen);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = (e, data) => {\n    console.log(\"onSubmit\", e, data);\n  };\n\n  const renderFormError = (e, errors) => {\n    console.log(\"renderFormError ran...\", e, errors);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: messagePaneOpen,\n    onClose: () => setMessagePaneState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12 box-col-12\",\n    xl: \"12 xl-100\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-messaging-initialize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }\n  }, \"Create a new \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 54\n    }\n  }, \"private message\"), \" to \", employerName), /*#__PURE__*/React.createElement(Form, {\n    className: \"needs-validation\",\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit, (e, errrors) => renderFormError(e, errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 53\n    }\n  }, \"Message Title/Subject\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 53\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustomUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 57\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"userName\",\n    type: \"text\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 53\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 53\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    id: \"validationCustom04\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }, \"Zip\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    id: \"validationCustom05\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, \"Submit form\")))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MessagingPanePrivateHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/messagingPane/messagingHelper.js"],"names":["React","Fragment","useEffect","useState","Sheet","Container","Row","Col","Card","CardHeader","CardBody","Button","Form","FormGroup","Label","Input","InputGroup","InputGroupAddon","InputGroupText","useForm","MessagingPanePrivateHelper","messagePaneOpen","setMessagePaneState","employerName","console","log","register","handleSubmit","errors","onSubmit","e","data","renderFormError","errrors"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport \"./styles.css\";\n\nconst MessagingPanePrivateHelper = ({ messagePaneOpen, setMessagePaneState, employerName }) => {\n    console.log(\"messagePaneOpen\", messagePaneOpen);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = (e, data) => {\n        console.log(\"onSubmit\", e, data);\n    }\n    const renderFormError = (e, errors) => {\n        console.log(\"renderFormError ran...\", e, errors);\n    }\n    return (\n        <Fragment>\n            <Sheet isOpen={messagePaneOpen} onClose={() => setMessagePaneState(false)}>\n                <Sheet.Container>\n                <Sheet.Header />\n                <Sheet.Content>\n                    <Container fluid={true}>\n                        <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                            <Card className={\"card-shadow-messaging-initialize\"}>\n                                <CardBody>\n                                    <h6>Create a new <strong>private message</strong> to {employerName}</h6>\n                                    <Form className=\"needs-validation\" noValidate=\"\" onSubmit={handleSubmit(onSubmit, (e, errrors) => renderFormError(e, errors))}>\n                                            <div className=\"form-row\">\n                                                <Col md=\"4 mb-3\">\n                                                    <Label htmlFor=\"validationCustom01\">Message Title/Subject</Label>\n                                                    <Input className=\"form-control\" name=\"firstName\" type=\"text\" placeholder=\"First name\" />\n                                                </Col>\n                                                <Col md=\"4 mb-3\">\n                                                    <Label htmlFor=\"validationCustom02\">Something</Label>\n                                                    <Input className=\"form-control\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" />\n                                                </Col>\n                                                <Col md=\"4 mb-3\">\n                                                <Label htmlFor=\"validationCustomUsername\">Something</Label>\n                                                <InputGroup>\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>{\"@\"}</InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <Input className=\"form-control\" name=\"userName\" type=\"text\" placeholder=\"Username\" />\n                                                </InputGroup>\n                                                </Col>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <Col md=\"6 mb-3\">\n                                                    <Label htmlFor=\"validationCustom03\">Something</Label>\n                                                    <Input className=\"form-control\" name=\"city\" type=\"text\" placeholder=\"City\" />\n                                                </Col>\n                                                <Col md=\"3 mb-3\">\n                                                    <Label htmlFor=\"validationCustom04\">Something</Label>\n                                                    <Input className=\"form-control\" id=\"validationCustom04\" name=\"state\" type=\"text\" placeholder=\"State\" />\n                                                </Col>\n                                                <Col md=\"3 mb-3\">\n                                                <Label htmlFor=\"validationCustom05\">Zip</Label>\n                                                <Input className=\"form-control\" id=\"validationCustom05\" name=\"zip\" type=\"text\" placeholder=\"Zip\" />\n                                                </Col>\n                                            </div>\n                                            <Button color=\"primary\">{\"Submit form\"}</Button>\n                                        </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Container>\n                </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nexport default MessagingPanePrivateHelper;"]},"metadata":{},"sourceType":"module"}