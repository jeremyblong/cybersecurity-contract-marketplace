{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\nimport PaginationEmployerListingHelper from \"../../../universal/pagination/paginationHelper.js\";\nimport moment from \"moment\"; // pagination settings and/or setup\n\nconst itemsPerPage = 15;\n\nconst ViewNotificationListHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [notifications, setNotifications] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [immutableData, setImmutableData] = useState([]);\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    setPageCount(Math.ceil(immutableData.length / itemsPerPage));\n    setNotifications(immutableData.slice(itemOffset, endOffset));\n  }, [itemOffset, itemsPerPage]);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    const promises = [];\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/account/notifications`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered notifications!\") {\n        console.log(\"successfully bookmarked profile...:\", res.data);\n        const {\n          notifications\n        } = res.data;\n\n        for (let index = 0; index < notifications.length; index++) {\n          const notify = notifications[index];\n          promises.push(new Promise(async (resolve, reject) => {\n            const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n              params: {\n                uniqueId: notify.metadata.from\n              }\n            });\n\n            if (result.data.message === \"Gathered resource!\") {\n              const file = result.data.file;\n              notify.profilePicVideo = file;\n              resolve(notify);\n            } else {\n              resolve(null);\n            }\n          }));\n        }\n\n        Promise.all(promises).then(passedData => {\n          console.log(\"passedData\", passedData);\n          const endOffset = itemOffset + itemsPerPage;\n          setPageCount(Math.ceil(passedData.length / itemsPerPage));\n          setNotifications(passedData.slice(itemOffset, endOffset));\n          setImmutableData(passedData);\n          setReady(true);\n        });\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n    });\n  }, []);\n\n  const renderProfilePicVideo = last => {\n    if (last !== null && _.has(last, \"link\")) {\n      if (last.type.includes(\"video\")) {\n        // video logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          playing: true,\n          loop: true,\n          muted: true,\n          width: \"100%\",\n          className: \"notification-pic-video\",\n          wrapper: \"div\",\n          url: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        // image logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          alt: \"profile-picture-sub\",\n          src: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n          \"data-intro\": \"This is Profile image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Media, {\n        className: \"notification-pic-video\",\n        body: true,\n        alt: \"profile-picture-sub\",\n        src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n        \"data-intro\": \"This is Profile image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const handleNotificationClick = notification => {\n    console.log(\"handleNotificationClick clicked..\");\n    const configuration = {\n      notification,\n      uniqueId: userData.uniqueId,\n      accountType: userData.accountType\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/mark/notification/viewed/both/account/types`, configuration).then(async res => {\n      if (res.data.message === \"Marked notification as seen!\") {\n        console.log(\"Marked notification as seen!...:\", res.data);\n        const {\n          notification\n        } = res.data;\n        const findIndexNotification = notifications.findIndex(item => item.id === notification.id);\n        const shallowCopy = [...notifications];\n        const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n          params: {\n            uniqueId: notification.metadata.from\n          }\n        });\n        console.log(\"result\", result);\n\n        if (result.data.message === \"Gathered resource!\") {\n          const file = result.data.file;\n          console.log(\"file\", file);\n          notification.profilePicVideo = file;\n          shallowCopy[findIndexNotification] = notification;\n          console.log(\"shallowCopy\", shallowCopy);\n          setNotifications(shallowCopy);\n        } else {\n          NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        } // setNotifications(notifications);\n\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Notification(s), Changes & Updates\",\n    title: \"View & Manage Your Notification's!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-notification-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"View your notifications, manage updates & more! (click notifications to be redirected approriately)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map((notification, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: () => handleNotificationClick(notification),\n      className: notification.seenRead === true ? \"list-group-item-action flex-column align-items-start notification-custom-notification active\" : \"list-group-item-action flex-column align-items-start notification-custom-notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"1\",\n      lg: \"1\",\n      xl: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 57\n      }\n    }, renderProfilePicVideo(notification.profilePicVideo)), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"11\",\n      lg: \"11\",\n      xl: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1 maxed-title-notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 65\n      }\n    }, notification.title), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 136\n      }\n    }, moment(notification.date).fromNow())), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 61\n      }\n    }, notification.description), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 61\n      }\n    }, notification.dateString)))));\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../assets/images/no-current-notifications.png\"),\n    className: \"no-notifications-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-pagination-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PaginationEmployerListingHelper, {\n    itemsPerPage: itemsPerPage,\n    loopingData: immutableData,\n    currentPage: currentPage,\n    pageCount: pageCount,\n    setItemOffset: setItemOffset,\n    setCurrentPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewNotificationListHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js"],"names":["React","Fragment","useState","useEffect","ListGroup","ListGroupItem","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Media","axios","connect","NotificationManager","Breadcrumb","_","ReactPlayer","PaginationEmployerListingHelper","moment","itemsPerPage","ViewNotificationListHelper","userData","notifications","setNotifications","ready","setReady","currentPage","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","immutableData","setImmutableData","endOffset","Math","ceil","length","slice","configuration","params","uniqueId","accountType","promises","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","index","notify","push","Promise","resolve","reject","result","metadata","from","file","profilePicVideo","all","passedData","error","catch","err","renderProfilePicVideo","last","has","type","includes","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","handleNotificationClick","notification","post","findIndexNotification","findIndex","item","id","shallowCopy","map","seenRead","title","date","fromNow","description","dateString","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\nimport PaginationEmployerListingHelper from \"../../../universal/pagination/paginationHelper.js\";\nimport moment from \"moment\";\n\n// pagination settings and/or setup\nconst itemsPerPage = 15;\n\n\nconst ViewNotificationListHelper = ({ userData }) => {\n\n    const [ notifications, setNotifications ] = useState([]);\n    const [ ready, setReady ] = useState(false);\n    const [ currentPage, setCurrentPage ] = useState(0);\n    const [ pageCount, setPageCount ] = useState(0);\n    const [ itemOffset, setItemOffset ] = useState(0);\n    const [ immutableData, setImmutableData ] = useState([]);\n\n    useEffect(() => {\n        const endOffset = itemOffset + itemsPerPage;\n\n        setPageCount(Math.ceil(immutableData.length / itemsPerPage));\n\n        setNotifications(immutableData.slice(itemOffset, endOffset));\n        \n    }, [ itemOffset, itemsPerPage ]);\n\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType \n            }\n        }\n\n        const promises = [];\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/account/notifications`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered notifications!\") {\n                console.log(\"successfully bookmarked profile...:\", res.data);\n\n                const { notifications } = res.data;\n\n                for (let index = 0; index < notifications.length; index++) {\n                    const notify = notifications[index];\n                    \n                    promises.push(new Promise(async (resolve, reject) => {\n                        const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n                            params: {\n                                uniqueId: notify.metadata.from\n                            }\n                        })\n\n                        if (result.data.message === \"Gathered resource!\") {\n                            const file = result.data.file;\n\n                            notify.profilePicVideo = file;\n\n                            resolve(notify);\n                        } else {\n                            resolve(null);\n                        }\n                    }))\n                }\n\n                Promise.all(promises).then((passedData) => {\n                    console.log(\"passedData\", passedData);\n\n                    const endOffset = itemOffset + itemsPerPage;\n\n                    setPageCount(Math.ceil(passedData.length / itemsPerPage));\n\n                    setNotifications(passedData.slice(itemOffset, endOffset));\n                    setImmutableData(passedData);\n                    setReady(true);\n                })\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        })\n    }, []);\n\n\n    const renderProfilePicVideo = (last) => {\n        if (last !== null && _.has(last, \"link\")) {\n            if (last.type.includes(\"video\")) {\n                // video logic\n                return (\n                    <Media className=\"notification-pic-video\" body>\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"notification-pic-video\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} />\n                    </Media>\n                );\n            } else {\n                // image logic\n                return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} data-intro=\"This is Profile image\" />;\n            }  \n        } else {\n            // image logic\n            return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} data-intro=\"This is Profile image\" />;\n        } \n    }\n\n    const handleNotificationClick = (notification) => {\n        console.log(\"handleNotificationClick clicked..\");\n\n        const configuration = {\n            notification,\n            uniqueId: userData.uniqueId,\n            accountType: userData.accountType\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/mark/notification/viewed/both/account/types`, configuration).then(async (res) => {\n            if (res.data.message === \"Marked notification as seen!\") {\n                console.log(\"Marked notification as seen!...:\", res.data);\n\n                const { notification } = res.data;\n\n                const findIndexNotification = notifications.findIndex((item) => item.id === notification.id);\n\n                const shallowCopy = [...notifications];\n\n                const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n                    params: {\n                        uniqueId: notification.metadata.from\n                    }\n                })\n\n                console.log(\"result\", result);\n\n                if (result.data.message === \"Gathered resource!\") {\n                    const file = result.data.file;\n\n                    console.log(\"file\", file);\n\n                    notification.profilePicVideo = file;\n\n                    shallowCopy[findIndexNotification] = notification;\n\n                    console.log(\"shallowCopy\", shallowCopy);\n\n                    setNotifications(shallowCopy);\n                } else {\n                    NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n                }\n\n                // setNotifications(notifications);\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        })\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Notification(s), Changes & Updates\" title=\"View & Manage Your Notification's!\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className='shadow-notification-card'>\n                            <CardHeader className='b-l-primary b-r-primary'>\n                                <h4 className='header-notification'>View your notifications, manage updates & more! (click notifications to be redirected approriately)</h4>\n                                <p className='lead'>Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...</p>\n                            </CardHeader>\n                            <CardBody>\n                                <ListGroup>\n                                    {typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map((notification, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <ListGroupItem onClick={() => handleNotificationClick(notification)} className={notification.seenRead === true ? \"list-group-item-action flex-column align-items-start notification-custom-notification active\" : \"list-group-item-action flex-column align-items-start notification-custom-notification\"}>\n                                                    <Row>\n                                                        <Col sm=\"12\" md=\"1\" lg=\"1\" xl=\"1\">\n                                                            {renderProfilePicVideo(notification.profilePicVideo)}\n                                                        </Col>\n                                                        <Col sm=\"12\" md=\"11\" lg=\"11\" xl=\"11\">\n                                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                                <h5 className=\"mb-1 maxed-title-notification\">{notification.title}</h5><small>{moment(notification.date).fromNow()}</small>\n                                                            </div>\n                                                            <p className=\"mb-1\">{notification.description}</p>\n                                                            <small>{notification.dateString}</small>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroupItem>\n                                            </Fragment>\n                                        );\n                                    }) : <Fragment>\n                                        <img src={require(\"../../../../../assets/images/no-current-notifications.png\")} className={\"no-notifications-img\"} />\n                                    </Fragment>}\n                                </ListGroup>\n                                <div className='notification-pagination-wrapper'>\n                                    <PaginationEmployerListingHelper itemsPerPage={itemsPerPage} loopingData={immutableData} currentPage={currentPage} pageCount={pageCount} setItemOffset={setItemOffset} setCurrentPage={setCurrentPage}  />\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewNotificationListHelper);"]},"metadata":{},"sourceType":"module"}