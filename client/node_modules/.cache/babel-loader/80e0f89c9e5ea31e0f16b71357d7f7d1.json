{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n  const startBidCheck = {\n    check: (setError, register) => {\n      return { ...register(\"startBid\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"startBid\",\n    placeholder: \"Enter a starting bid...\",\n    type: \"number\",\n    label: \"Enter a starting bid\"\n  };\n  const reservePrice = {\n    check: (setError, register, values) => {\n      return { ...register(\"reservePrice\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {\n            // code here...\n            console.log(\"blur - e\", e); // current value from this input\n\n            const current = e.target.value; // starting bid\n\n            const startingBid = values.startBid; // compare to make sure reserve is greater than starting bid\n\n            if (Number(current) <= Number(startingBid)) {\n              setTimeout(() => {\n                setError(\"reservePrice\", {\n                  type: \"manual\",\n                  message: \"You MUST enter a 'reserve price' GREATER than your starting bid price!\"\n                });\n              }, 50);\n            }\n          }\n        })\n      };\n    },\n    name: \"reservePrice\",\n    placeholder: \"Enter a reserve price...\",\n    type: \"number\",\n    label: \"Enter a reserve price\"\n  };\n  const whatsIncludedInfoListing = {\n    check: (setError, register) => {\n      return { ...register(\"whatsIncluded\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 75 characters to 750 characters\"\n          },\n          minLength: {\n            value: 75,\n            message: \"You must enter AT Least 75 characters\"\n          },\n          maxLength: {\n            value: 750,\n            message: \"You may ONLY enter 750 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"whatsIncluded\",\n    placeholder: `Please elaborate on \"what's included\" in this listing such as specifics of various features/functionality such as 4 files, 1 README document, 15 pictures and a GitHub repository link...`,\n    type: \"text\",\n    label: `Enter a DETAILED description of \"what's included\" in this listing - be as SPECIFIC as possible in reference to fine details.`\n  };\n  const buyItNowHelper = {\n    check: (setError, register) => {\n      return { ...register(\"buyItNowPrice\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"buyItNowPrice\",\n    placeholder: `Please enter a 'Buy it now' price - this essentially gives intereseted user's the ability to immediately purchase your item/software...`,\n    type: \"number\",\n    label: `Enter a 'Buy it now' price for interested parties to immediately purchase your item/code/software for sale (this transaction will finalize INSTANTLY - if funds are available)`\n  };\n  const quantityAvailability = {\n    label: \"Select a quantity/availability of your item for sale (this is the MAXIMUM number of people you're willing to sell your software/code to - each purchase counts as ONE item)\",\n    check: (setError, register, clearErrors) => {\n      return { ...register(\"quantityAvailableForSale\", {\n          required: {\n            value: true,\n            message: \"You must select a value before proceeding\"\n          },\n          onBlur: e => {\n            // log to check whats returned\n            const value = e.target.value;\n            setTimeout(() => {\n              // clear error after proper selection\n              if (typeof value !== \"undefined\" && Object.keys(value).length > 0) {\n                clearErrors(\"quantityAvailableForSale\");\n              } else {\n                // set error as nothing was selected (blank 'click-off' selection of selector)\n                setError(\"quantityAvailableForSale\", {\n                  type: \"manual\",\n                  message: \"You haven't selected a 'quantity/numerical-number' of how many times you're willing to sell this code/software content\"\n                });\n              }\n            }, 50);\n          }\n        })\n      };\n    },\n    name: \"quantityAvailableForSale\",\n    placeholder: \"Select a quantity/availability of your item for sale...\"\n  };\n  const acceptCouponsDiscounts = {\n    label: `Would you like to accept coupons/discounts provided by ${process.env.REACT_APP_APPLICATION_NAME} (reduces price - supplied via company promotions - makes listing more appealing & draws extra interest - MAXIMUM 20% discount at any time)`,\n    check: (setError, register, clearErrors) => {\n      return { ...register(\"discountCodeAcceptance\", {\n          required: {\n            value: true,\n            message: \"You must select a value before proceeding\"\n          },\n          onBlur: e => {\n            // log to check whats returned\n            const value = e.target.value; // set delay to prevent premature render\n\n            setTimeout(() => {\n              // clear error after proper selection\n              if (typeof value !== \"undefined\" && Object.keys(value).length > 0) {\n                clearErrors(\"discountCodeAcceptance\");\n              } else {\n                // set error as nothing was selected (blank 'click-off' selection of selector)\n                setError(\"discountCodeAcceptance\", {\n                  type: \"manual\",\n                  message: \"You haven't selected a 'coupon/discount code' selection - select one before proceeding\"\n                });\n              }\n            }, 50);\n          }\n        })\n      };\n    },\n    name: \"discountCodeAcceptance\",\n    placeholder: \"Select whether or not you'd like to accept coupon/discount codes...\"\n  };\n  const biddingIncrementIntervalHelper = {\n    label: \"Listing Timespan/Length - Please select a listing length (up-to a maximum of 10 days however we suggest 7 days on average)\",\n    check: (setError, register, clearErrors) => {\n      return { ...register(\"biddingIncrementInterval\", {\n          required: {\n            value: true,\n            message: \"You must select a value before proceeding\"\n          },\n          onBlur: e => {\n            // log to check whats returned\n            const value = e.target.value;\n            setTimeout(() => {\n              // clear error after proper selection\n              if (typeof value !== \"undefined\" && Object.keys(value).length > 0) {\n                clearErrors(\"biddingIncrementInterval\");\n              } else {\n                // set error as nothing was selected (blank 'click-off' selection of selector)\n                setError(\"biddingIncrementInterval\", {\n                  type: \"manual\",\n                  message: \"You haven't selected a 'bidding interval' & a selection is required before proceeding\"\n                });\n              }\n            }, 50);\n          }\n        })\n      };\n    },\n    name: \"biddingIncrementInterval\",\n    placeholder: \"Select a 'bid-increment interval' (next required minimum bid from active bidders)\"\n  };\n  const automaticAcceptBestOffer = {\n    check: (setError, register) => {\n      return { ...register(\"automaticBestOfferAccept\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"automaticBestOfferAccept\",\n    placeholder: `Enter your LOWEST ACCEPTED offer...`,\n    type: \"number\",\n    label: `Enter the value of the LOWEST OFFER you'd be willing to automatically accept if offer is proposed - system will process request immediately (your idea of a reasonable 'automatically' accepted offer - no action required)`\n  };\n  const minimumRequiredOffer = {\n    check: (setError, register) => {\n      return { ...register(\"minimumRequiredOfferValue\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"minimumRequiredOfferValue\",\n    placeholder: `Minimum offer amount (the lowest offer anyone can submit)`,\n    type: \"number\",\n    label: `Enter your 'Minimum offer amount' required for user's to be able to successfully submit an offer of any value GREATER THAN this fields entered value - if a user submits an offer less-than your entered value... The offer will automatically reject upon attempted submission`\n  };\n  return {\n    startBidCheck,\n    reservePrice,\n    biddingIncrementIntervalHelper,\n    whatsIncludedInfoListing,\n    buyItNowHelper,\n    quantityAvailability,\n    acceptCouponsDiscounts,\n    automaticAcceptBestOffer,\n    minimumRequiredOffer\n  };\n};\n\nexport default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["HookHelpers","startBidCheck","check","setError","register","required","value","message","minLength","maxLength","onBlur","e","name","placeholder","type","label","reservePrice","values","console","log","current","target","startingBid","startBid","Number","setTimeout","whatsIncludedInfoListing","buyItNowHelper","quantityAvailability","clearErrors","Object","keys","length","acceptCouponsDiscounts","process","env","REACT_APP_APPLICATION_NAME","biddingIncrementIntervalHelper","automaticAcceptBestOffer","minimumRequiredOffer"],"mappings":"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","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n    \n    const startBidCheck = {\n        check: (setError, register) => {\n            return (\n                {...register(\"startBid\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"startBid\",\n        placeholder: \"Enter a starting bid...\",\n        type: \"number\",\n        label: \"Enter a starting bid\"\n    };\n    const reservePrice = {\n        check: (setError, register, values) => {\n            return (\n                {...register(\"reservePrice\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                    console.log(\"blur - e\", e);\n                    // current value from this input\n                    const current = e.target.value;\n                    // starting bid\n                    const startingBid = values.startBid;\n                    // compare to make sure reserve is greater than starting bid\n                    if (Number(current) <= Number(startingBid)) {\n                        setTimeout(() => {\n                            setError(\"reservePrice\", {\n                                type: \"manual\",\n                                message: \"You MUST enter a 'reserve price' GREATER than your starting bid price!\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            )\n        },\n        name: \"reservePrice\",\n        placeholder: \"Enter a reserve price...\",\n        type: \"number\",\n        label: \"Enter a reserve price\"\n    };\n    const whatsIncludedInfoListing = {\n        check: (setError, register) => {\n            return (\n                {...register(\"whatsIncluded\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 75 characters to 750 characters\"\n                }, minLength: {\n                    value: 75,\n                    message: \"You must enter AT Least 75 characters\"\n                }, maxLength: {\n                    value: 750,\n                    message: \"You may ONLY enter 750 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"whatsIncluded\",\n        placeholder: `Please elaborate on \"what's included\" in this listing such as specifics of various features/functionality such as 4 files, 1 README document, 15 pictures and a GitHub repository link...`,\n        type: \"text\",\n        label: `Enter a DETAILED description of \"what's included\" in this listing - be as SPECIFIC as possible in reference to fine details.`\n    };\n    const buyItNowHelper = {\n        check: (setError, register) => {\n            return (\n                {...register(\"buyItNowPrice\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"buyItNowPrice\",\n        placeholder: `Please enter a 'Buy it now' price - this essentially gives intereseted user's the ability to immediately purchase your item/software...`,\n        type: \"number\",\n        label: `Enter a 'Buy it now' price for interested parties to immediately purchase your item/code/software for sale (this transaction will finalize INSTANTLY - if funds are available)`\n    }\n    const quantityAvailability = {\n        label: \"Select a quantity/availability of your item for sale (this is the MAXIMUM number of people you're willing to sell your software/code to - each purchase counts as ONE item)\",\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"quantityAvailableForSale\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n\n                    const value = e.target.value;\n\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"quantityAvailableForSale\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"quantityAvailableForSale\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'quantity/numerical-number' of how many times you're willing to sell this code/software content\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"quantityAvailableForSale\",\n        placeholder: \"Select a quantity/availability of your item for sale...\"\n    };\n    const acceptCouponsDiscounts = {\n        label: `Would you like to accept coupons/discounts provided by ${process.env.REACT_APP_APPLICATION_NAME} (reduces price - supplied via company promotions - makes listing more appealing & draws extra interest - MAXIMUM 20% discount at any time)`,\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"discountCodeAcceptance\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n                    const value = e.target.value;\n                    // set delay to prevent premature render\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"discountCodeAcceptance\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"discountCodeAcceptance\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'coupon/discount code' selection - select one before proceeding\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"discountCodeAcceptance\",\n        placeholder: \"Select whether or not you'd like to accept coupon/discount codes...\"\n    }\n    const biddingIncrementIntervalHelper = {\n        label: \"Listing Timespan/Length - Please select a listing length (up-to a maximum of 10 days however we suggest 7 days on average)\",\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"biddingIncrementInterval\", { required: {\n                    value: true,\n                    message: \"You must select a value before proceeding\"\n                }, onBlur: (e) => {\n                    // log to check whats returned\n\n                    const value = e.target.value;\n\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"biddingIncrementInterval\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"biddingIncrementInterval\", {\n                                type: \"manual\",\n                                message: \"You haven't selected a 'bidding interval' & a selection is required before proceeding\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            );\n        },\n        name: \"biddingIncrementInterval\",\n        placeholder: \"Select a 'bid-increment interval' (next required minimum bid from active bidders)\"\n    };\n\n    const automaticAcceptBestOffer = {\n        check: (setError, register) => {\n            return (\n                {...register(\"automaticBestOfferAccept\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"automaticBestOfferAccept\",\n        placeholder: `Enter your LOWEST ACCEPTED offer...`,\n        type: \"number\",\n        label: `Enter the value of the LOWEST OFFER you'd be willing to automatically accept if offer is proposed - system will process request immediately (your idea of a reasonable 'automatically' accepted offer - no action required)`\n    };\n    const minimumRequiredOffer = {\n        check: (setError, register) => {\n            return (\n                {...register(\"minimumRequiredOfferValue\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters & ONLY numbers\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"minimumRequiredOfferValue\",\n        placeholder: `Minimum offer amount (the lowest offer anyone can submit)`,\n        type: \"number\",\n        label: `Enter your 'Minimum offer amount' required for user's to be able to successfully submit an offer of any value GREATER THAN this fields entered value - if a user submits an offer less-than your entered value... The offer will automatically reject upon attempted submission`\n    };\n\n    return {\n        startBidCheck,\n        reservePrice,\n        biddingIncrementIntervalHelper,\n        whatsIncludedInfoListing,\n        buyItNowHelper,\n        quantityAvailability,\n        acceptCouponsDiscounts,\n        automaticAcceptBestOffer,\n        minimumRequiredOffer\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}