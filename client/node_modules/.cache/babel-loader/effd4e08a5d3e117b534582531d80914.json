{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/renderComments.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport axios from 'axios';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelpers.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"./helpers/pagination.js\";\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera;\nconst {\n  RenderPopoverEmojiLogic,\n  RenderEmojiLogic\n} = helpers; // pagination settings and/or setup\n\nconst PER_PAGE = 1;\nconst itemsPerPage = 1; // main function starts\n\nconst RenderCommentsEmployerListingHelper = _ref => {\n  let {\n    userData,\n    data\n  } = _ref;\n  console.log(\"{ DATA INSIDE } :\", data);\n  const [comments, setCommentsState] = useState([]);\n  const [popover, setPopoverState] = useState({});\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues(); // render EVERY CHANGE to pagination\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n    setCommentsState(data.comments.slice(itemOffset, endOffset));\n  }, [itemOffset, itemsPerPage]); // render ONLY ONCE\n\n  useEffect(() => {\n    setPopoverState(() => {\n      const newObjCount = {};\n      const comments = data.comments; // reassign state items in preperation for future state changes...\n\n      for (const keyyy in comments) {\n        newObjCount[`comment${keyyy}`] = false;\n      }\n\n      setPopoverState(newObjCount);\n    });\n  }, []);\n\n  const onSubmitForm = formData => {\n    console.log(\"onSubmitForm submitted form properly...!:\", formData);\n    const {\n      comment\n    } = formData;\n    const configuration = {\n      id: userData.uniqueId,\n      listingId: data.uniqueId,\n      comment,\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      accountType: userData.accountType,\n      mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/employer/live/listing`, configuration).then(res => {\n      if (res.data.message === \"Successfully posted comment!\") {\n        console.log(res.data);\n        const {\n          updatedComments\n        } = res.data;\n        setValue(\"comment\", \"\", {\n          shouldValidate: false\n        });\n        setCommentsState(updatedComments);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n    console.log(\"emojiName\", emojiName);\n    const configuration = {\n      emojiName,\n      id: userData.uniqueId,\n      listingId: data.uniqueId,\n      commentID: comment.id,\n      comment\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/employer/listing`, configuration).then(res => {\n      if (res.data.message === \"Successfully reacted to comment!\") {\n        console.log(res.data);\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setCommentsState(copy);\n        closePopover(targetAndPopState);\n      } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n        const {\n          listing,\n          commenttt\n        } = res.data;\n        NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n        const indexed = comments.findIndex(x => x.id === commenttt.id);\n        const copy = [...comments];\n        copy[indexed] = commenttt;\n        setCommentsState(copy);\n        closePopover(targetAndPopState);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderFormErrors = errors => {\n    console.log(\"renderFormErrors\", errors);\n  };\n\n  const renderCommentPicOrVideo = file => {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"media-body align-self-center maxed-out-video-course-profile\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      })));\n    }\n  };\n\n  const handlePageClick = _ref2 => {\n    let {\n      selected\n    } = _ref2;\n    // offset for pagination\n    const newOffset = selected * itemsPerPage % data.comments.length; // log results to confirm change\n\n    console.log(`User requested page number ${selected}, which is offset ${newOffset}`); // change pagination \"offset\"\n\n    setItemOffset(newOffset); // change current page\n\n    setCurrentPage(selected);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmitForm, errors => renderFormErrors(errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, checkMessageMeetsCritera.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\"), {\n    onChange: e => {\n      checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n      const caret = e.target.selectionStart;\n      const element = e.target;\n      window.requestAnimationFrame(() => {\n        element.selectionStart = caret;\n        element.selectionEnd = caret;\n      });\n    },\n    value: currentValues.comment,\n    name: \"comment\",\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: checkMessageMeetsCritera.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  })), errors.comment ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 43\n    }\n  }, errors.comment.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-course-comment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-primary\",\n    color: \"primary-2x\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Leave/Post Comment!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-list-course-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n    console.log(\"comment\", comment);\n    const popoverIDTarget = `comment${index}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: uuid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: require(\"../../../../../../../../../assets/images/blog/comment.jpg\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 130\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 53\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 94\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 184\n      }\n    }, /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n      comments: comments,\n      reactions: comment.reactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 189\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: popoverIDTarget,\n      onClick: () => {\n        setPopoverState(prevState => {\n          return { ...prevState,\n            [`comment${index}`]: true\n          };\n        });\n      },\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 100\n      }\n    }), \"React to post w/emoji\"), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogic, {\n      handleRespondEmoji: handleRespondEmoji,\n      comment: comment,\n      data: data,\n      userData: userData,\n      reactions: comment.reactions,\n      setPopoverState: setPopoverState,\n      popoverState: popover,\n      targetAndPopState: popoverIDTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"27.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PaginationEmployerListingHelper, {\n    setPageCount: setPageCount,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    handlePageClick: handlePageClick,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default RenderCommentsEmployerListingHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/renderComments.js"],"names":["React","Fragment","useState","useEffect","useRef","Row","Col","Media","Input","Label","Button","Form","Pagination","PaginationItem","PaginationLink","axios","useForm","Controller","MainHooksCourseIndividualCustomHelpers","ReactPlayer","helpers","NotificationManager","uuid","PaginationEmployerListingHelper","checkMessageMeetsCritera","RenderPopoverEmojiLogic","RenderEmojiLogic","PER_PAGE","itemsPerPage","RenderCommentsEmployerListingHelper","userData","data","console","log","comments","setCommentsState","popover","setPopoverState","currentPage","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","register","handleSubmit","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","endOffset","Math","ceil","length","slice","newObjCount","keyyy","onSubmitForm","formData","comment","configuration","id","uniqueId","listingId","firstName","lastName","accountType","mostRecentProfilePicVideo","profilePicsVideos","post","process","env","REACT_APP_BASE_URL","then","res","message","updatedComments","shouldValidate","catch","err","handleRespondEmoji","emojiName","closePopover","targetAndPopState","commentID","listing","commenttt","success","indexed","findIndex","x","copy","warning","renderFormErrors","renderCommentPicOrVideo","file","type","includes","REACT_APP_ASSET_LINK","link","handlePageClick","selected","newOffset","label","check","e","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","placeholder","map","index","popoverIDTarget","posterPicOrVideo","require","posterName","posterAccountType","reactions","prevState","commentText","subComments","subcomment","idx","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"../../styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport axios from 'axios';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelpers.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nimport PaginationEmployerListingHelper from \"./helpers/pagination.js\";\n\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera;\n\nconst { RenderPopoverEmojiLogic, RenderEmojiLogic } = helpers;\n\n// pagination settings and/or setup\nconst PER_PAGE = 1;\nconst itemsPerPage = 1;\n\n\n// main function starts\nconst RenderCommentsEmployerListingHelper = ({ userData, data }) => {\n\n    console.log(\"{ DATA INSIDE } :\", data);\n\n    const [ comments, setCommentsState ] = useState([]);\n    const [ popover, setPopoverState ] = useState({}); \n    const [ currentPage, setCurrentPage ] = useState(0);\n    const [ pageCount, setPageCount ] = useState(0);\n    const [ itemOffset, setItemOffset ] = useState(0);\n\n    const { register, handleSubmit, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n    \n    // render EVERY CHANGE to pagination\n    useEffect(() => {\n        const endOffset = itemOffset + itemsPerPage;\n\n        setPageCount(Math.ceil(data.comments.length / itemsPerPage));\n\n        setCommentsState(data.comments.slice(itemOffset, endOffset));\n        \n    }, [itemOffset, itemsPerPage]);\n\n    // render ONLY ONCE\n    useEffect(() => {\n        setPopoverState(() => {\n            const newObjCount = {};\n            const comments = data.comments;\n            // reassign state items in preperation for future state changes...\n            for (const keyyy in comments) {\n                newObjCount[`comment${keyyy}`] = false;\n            }\n            setPopoverState(newObjCount);\n        })\n    }, []);\n\n    const onSubmitForm = (formData) => {\n        console.log(\"onSubmitForm submitted form properly...!:\", formData);\n\n        const { comment } = formData;\n\n        const configuration = {\n            id: userData.uniqueId,\n            listingId: data.uniqueId,\n            comment,\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            accountType: userData.accountType,\n            mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/employer/live/listing`, configuration).then((res) => {\n            if (res.data.message === \"Successfully posted comment!\") {\n                console.log(res.data);\n\n                const { updatedComments } = res.data;\n\n                setValue(\"comment\", \"\", { shouldValidate: false });\n\n                setCommentsState(updatedComments);\n\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const handleRespondEmoji = (emojiName, comment, closePopover, targetAndPopState) => {\n        console.log(\"emojiName\", emojiName);\n\n        const configuration = {\n            emojiName,\n            id: userData.uniqueId,\n            listingId: data.uniqueId,\n            commentID: comment.id,\n            comment\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/employer/listing`, configuration).then((res) => {\n            if (res.data.message === \"Successfully reacted to comment!\") {\n                console.log(res.data);\n\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setCommentsState(copy);\n\n                closePopover(targetAndPopState);\n            } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n                const { listing, commenttt } = res.data;\n\n                NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n\n                const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n                const copy = [...comments];\n                copy[indexed] = commenttt;\n                \n                setCommentsState(copy);\n\n                closePopover(targetAndPopState);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderFormErrors = (errors) => {\n        console.log(\"renderFormErrors\", errors);\n    }\n    const renderCommentPicOrVideo = (file) => {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"media-body align-self-center maxed-out-video-course-profile\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Media> \n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <Media className=\"align-self-center\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} alt=\"\"/>\n                    </Media>\n                </Fragment>\n            );\n        }  \n    }\n\n    const handlePageClick = ({ selected }) => {\n        // offset for pagination\n        const newOffset = (selected * itemsPerPage) % data.comments.length;\n        // log results to confirm change\n        console.log(`User requested page number ${selected}, which is offset ${newOffset}`);\n        // change pagination \"offset\"\n        setItemOffset(newOffset);\n        // change current page\n        setCurrentPage(selected);\n    }\n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <Form onSubmit={handleSubmit(onSubmitForm, (errors) => renderFormErrors(errors))}>\n                    <hr/>\n                        <Label className={\"heavy-label-course\"}>{checkMessageMeetsCritera.label}</Label>\n                        <Input {...checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\")} onChange={(e) => {\n\n                            checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n\n                            const caret = e.target.selectionStart;\n                            const element = e.target;\n                            window.requestAnimationFrame(() => {\n                                element.selectionStart = caret\n                                element.selectionEnd = caret\n                            })\n                        }} value={currentValues.comment} name={\"comment\"} className={\"form-control\"} rows={6} type={\"textarea\"} placeholder={checkMessageMeetsCritera.placeholder} />\n                        {errors.comment ? <span className=\"span-tooltip\">{errors.comment.message}</span> : null}\n                        <div className={\"float-right-course-comment-btn\"}>\n                            <Button type={\"submit\"} className={\"btn-square-primary\"} color={\"primary-2x\"} outline>Leave/Post Comment!</Button>\n                        </div>\n                    <hr />\n                </Form>\n                <ul className={\"comment-list-course-ul\"}>\n                    {typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n                        console.log(\"comment\", comment);\n\n                        const popoverIDTarget = `comment${index}`;\n                        return (\n                            <Fragment key={uuid()}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : <Media className=\"align-self-center\" src={require(\"../../../../../../../../../assets/images/blog/comment.jpg\")} alt=\"\"/>}\n                                        <Media body>\n                                            <Row>\n                                                <Col md=\"4 xl-100\">\n                                                    <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"}</span></h6><Row><RenderEmojiLogic comments={comments} reactions={comment.reactions} /></Row>\n                                                </Col>\n                                                <Col md=\"8 xl-100\">\n                                                    <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                    {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                    <li id={popoverIDTarget} onClick={() => {\n                                                        setPopoverState(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                [`comment${index}`]: true\n                                                            }\n                                                        });\n                                                    }} className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"React to post w/emoji\"}</li>\n                                                    <RenderPopoverEmojiLogic handleRespondEmoji={handleRespondEmoji} comment={comment} data={data} userData={userData} reactions={comment.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                                                    </ul>\n                                                </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n            <Row style={{ marginTop: \"27.5px\" }}>\n                <div className=\"centered-both-ways\">\n                    <PaginationEmployerListingHelper setPageCount={setPageCount} pageCount={pageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} handlePageClick={handlePageClick} data={data} />\n                </div>\n            </Row>\n        </Fragment>\n    );\n}\nexport default RenderCommentsEmployerListingHelper;"]},"metadata":{},"sourceType":"module"}