{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageTwo/pageTwoSection.js\";\nimport React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Form, Label, Input, ListGroupItem, ListGroup, Button } from 'reactstrap';\nimport { NotificationManager } from \"react-notifications\";\n\nconst PageTwoVideoCreationHelper = _ref => {\n  let {\n    saveNewDetails,\n    jumpToStep\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const gatheredValues = getValues();\n  console.log(\"gatheredValues\", gatheredValues);\n\n  const onSubmit = data => {\n    if (data !== '') {\n      console.log(\"Great success!\");\n      saveNewDetails(data);\n      jumpToStep(2);\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setValue(name, value, {\n      shouldValidate: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"needs-validation\",\n    onSubmit: handleSubmit(onSubmit, (errorsss, e) => {\n      console.log(\"errrrrrs\", errorsss, e);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, \"Video Title\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"videoTitle\", {\n    required: {\n      value: true,\n      message: \"You MUST enter a value between 15-125 characters\"\n    },\n    minLength: {\n      value: 15,\n      message: \"You must enter AT Least 15 characters\"\n    },\n    maxLength: {\n      value: 125,\n      message: \"You may ONLY enter 125 characters or less\"\n    }\n  }), {\n    className: \"form-control\",\n    onChange: e => handleInputChange(e),\n    value: gatheredValues.videoTitle,\n    name: \"videoTitle\",\n    type: \"text\",\n    placeholder: \"Enter your 'video title' for this tutorial..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })), errors.videoTitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 54\n    }\n  }, errors.videoTitle.message) : null)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-success\",\n    color: \"success\",\n    style: {\n      width: \"100%\",\n      marginBottom: \"12.5px\",\n      marginTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Proceed Forward W/Next Step\")))));\n};\n\nexport default PageTwoVideoCreationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageTwo/pageTwoSection.js"],"names":["React","Fragment","useForm","Controller","Row","Col","Form","Label","Input","ListGroupItem","ListGroup","Button","NotificationManager","PageTwoVideoCreationHelper","saveNewDetails","jumpToStep","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","gatheredValues","console","log","onSubmit","data","showMessages","handleInputChange","e","value","name","target","shouldValidate","errorsss","required","message","minLength","maxLength","videoTitle","width","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Form, Label, Input, ListGroupItem, ListGroup, Button } from 'reactstrap';\nimport { NotificationManager } from \"react-notifications\";\n\nconst PageTwoVideoCreationHelper = ({ saveNewDetails, jumpToStep }) => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const gatheredValues = getValues();\n\n    console.log(\"gatheredValues\", gatheredValues);\n\n    const onSubmit = data => {\n\n        if (data !== '') {\n            \n            console.log(\"Great success!\");\n\n            saveNewDetails(data);\n\n            jumpToStep(2);\n        } else {\n            errors.showMessages();\n        }\n    };\n    const handleInputChange = (e) => {\n        const { value, name } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Form className=\"needs-validation\" onSubmit={handleSubmit(onSubmit, (errorsss, e) => {\n                        console.log(\"errrrrrs\", errorsss, e);\n                    })}>\n                        <div className=\"form-row\">\n                            <Col md=\"12 mb-3\">\n                                <Label>Video Title</Label>\n                                <Input {...register(\"videoTitle\", { required: {\n                                    value: true,\n                                    message: \"You MUST enter a value between 15-125 characters\"\n                                }, minLength: {\n                                    value: 15,\n                                    message: \"You must enter AT Least 15 characters\"\n                                }, maxLength: {\n                                    value: 125,\n                                    message: \"You may ONLY enter 125 characters or less\"\n                                }})} className=\"form-control\" onChange={(e) => handleInputChange(e)} value={gatheredValues.videoTitle} name=\"videoTitle\" type=\"text\" placeholder=\"Enter your 'video title' for this tutorial..\" />\n                                {errors.videoTitle ? <span className=\"span-tooltip\">{errors.videoTitle.message}</span> : null}\n                            </Col>\n                        </div>\n                        <Button type={\"submit\"} className={\"btn-square-success\"} color={\"success\"} style={{ width: \"100%\", marginBottom: \"12.5px\", marginTop: \"12.5px\" }}>Proceed Forward W/Next Step</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default PageTwoVideoCreationHelper;"]},"metadata":{},"sourceType":"module"}