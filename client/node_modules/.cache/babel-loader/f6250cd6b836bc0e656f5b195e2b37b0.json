{"ast":null,"code":"import React,{Fragment,useState,useRef,useEffect}from\"react\";import\"./styles.css\";import{connect}from\"react-redux\";import helpers from\"./helpers/helperFunctions/helpers.js\";import{Button,Row,Col,Card,CardBody,CardHeader,FormGroup,Label,Input,Form,Progress,Container}from'reactstrap';import{updateCourseInformationData}from\"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";import _ from\"lodash\";import ImageUploader from'react-images-upload';import Select from\"react-select\";import{useForm,Controller}from'react-hook-form';import reactHookHelpers from\"./helpers/helperFunctions/hookFormHelpers.js\";import options from\"./helpers/helperFunctions/options.js\";import Dropzone from'react-dropzone-uploader';import ReactPlayer from\"react-player\";import{NotificationManager}from'react-notifications';const{lanuageOptions,experienceLevelOptions,languageList,hoursInLengthOptions}=options;// react-hook-form imports/helpers\nconst subtitleChecks=reactHookHelpers().subtitleChecks;const languageSpokenChecks=reactHookHelpers().languageSpokenChecks;const skillLevelChecks=reactHookHelpers().skillLevelChecks;const primaryLanguageChecks=reactHookHelpers().primaryLanguageChecks;const hoursOfCourseContentChecks=reactHookHelpers().hoursOfCourseContentChecks;const courseWelcomeMessageChecks=reactHookHelpers().courseWelcomeMessageChecks;const completionMessageChecks=reactHookHelpers().completionMessageChecks;const{renderPreviewOfFile,onSubmitHelper,CustomInputHelper,renderCustomButtonDropzone,onDroppedImage}=helpers;// actual component\nconst CreateNewCoursePageThree=_ref=>{let{userData,courseData,overallProgress,setOverallProgress,setProgress,updateCourseInformationData}=_ref;const[languageArrayNew,setLanguageArray]=useState([]);// refs & such\nconst dropzoneRef=useRef(null);// start of state logic...\nconst[fileReady,setFileReadyStatus]=useState(false);const[currentFileSelectedUpload,setCurrentUploadFileStatus]=useState(null);const[fileMetaData,setMetaFileData]=useState(null);const[changeOptions,setChangeOptions]=useState(null);const[filePathData,setCurrentFilePathData]=useState(null);const[promotionalDemoFile,setPromotionalDemoFile]=useState(null);const[homepageImage,setHomepageImage]=useState(null);const languageSpokenRef=useRef(null);const primaryLanguageRef=useRef(null);const skillLevelRef=useRef(null);// redux form logic\nconst{register,handleSubmit,control,resetField,unregister,getValues,array,setValue,setError,clearErrors,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});const currentValues=getValues();useEffect(()=>{for(const key in courseData.pageThreeData){const element=courseData.pageThreeData[key];setValue(key,element,{shouldValidate:true});}},[]);useEffect(()=>{const languageArrayNew=[];for(let index=0;index<languageList.length;index++){const language=languageList[index];languageArrayNew.push({label:language.name,value:language.name,completeData:language});if(languageList.length-1===index){setLanguageArray(languageArrayNew);}}},[]);const onSubmit=data=>{console.log(\"onSubmit ran...\",data);if(typeof promotionalDemoFile!==\"undefined\"&&promotionalDemoFile!==null){if(typeof homepageImage!==\"undefined\"&&homepageImage!==null){const{completionMessage,languageSpoken,lengthInHours,primaryLanguageUsed,skillLevel,subtitle,welcomeMessage}=data;const newDataObj={completionMessage,languageSpoken,lengthInHours,primaryLanguageUsed,skillLevel,subtitle,welcomeMessage,promotionalDemoFile,homepageImage};updateCourseInformationData({...courseData,pageThreeData:newDataObj,currentPage:4});}else{NotificationManager.warning(\"You MUST complete the 'Homepage Display Image/Photo' required data input - please upload a main overview photo before proceeding...\",'Upload Overview Photo!',4500);}}else{NotificationManager.warning(\"You need to upload a 'Demo Video File' accurately summing up what your course entails, this video should be a 'general overview' snippet video...\",\"Upload 'DEMO VIDEO' Video Overview!\",4500);}};const errorsSubmit=(e,errors)=>{console.log(\"errorsSubmit\",e,errors);NotificationManager.error(\"You have NOT completed ALL of the required fields, please go back and fill out the rest of the required data before proceeding...\",\"Missing critical data!\",4500);};const onBufferEnded=()=>{console.log(\"onBufferEnded ended.\");};const renderPromoDemoVideo=()=>{// ready to display live content\nif(typeof promotionalDemoFile===\"undefined\"||promotionalDemoFile===null){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"overlay-boxshadow-courses-page-three centered-both-ways\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"header-no-content\"},\"Current NO file(s) is selected/uploaded - please select a file.\")));}else{const fileReadable=\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(promotionalDemoFile.link);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{style:{textDecorationLine:\"underline\"}},/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"Uploaded\"),\" promotional video\"),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"7.5px\"},className:\"lead\"},\"You've successfully uploaded/updated your 'Promotional/Demo' video - You have completed this form section!\"),/*#__PURE__*/React.createElement(ReactPlayer,{onBufferEnd:onBufferEnded,progressInterval:1000,controls:true,playIcon:true,playing:false,loop:false,volume:1,width:\"100%\",height:\"100%\",url:fileReadable}));}};console.log(\"current VALUES:\",currentValues);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"centered-horizontally-course\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-above-bar-percentage\"},/*#__PURE__*/React.createElement(\"h1\",null,overallProgress,\"% Complete\")),/*#__PURE__*/React.createElement(Progress,{className:\"course-creation-progress-bar\",animated:true,color:\"info\",value:overallProgress})),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit(onSubmit,(e,errors)=>{return errorsSubmit(e,errors);})},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-upload-courses\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"course-custom-title\"},\"More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...\"))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:\"17.5px\"}},/*#__PURE__*/React.createElement(Card,{className:\"specifics-card\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary card-header-customized-specifics\"},/*#__PURE__*/React.createElement(\"h4\",null,\"More required detailed information related to core listing\"),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"7.5px\"}},\"You will need to \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"complete\"),\" the following \",/*#__PURE__*/React.createElement(\"strong\",null,\"required\"),\" information to give potential student's more of an idea of what they will be purchasing regarding certain fine details...\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{sm:\"12 mb-3\",lg:\"12 mb-3\",xl:\"12 mb-3\",md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,subtitleChecks.label),/*#__PURE__*/React.createElement(Input,Object.assign({},subtitleChecks.check(setError,register),{onChange:e=>{subtitleChecks.onChange(e,setValue);const caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues.subtitle,className:\"form-control\",name:subtitleChecks.name,type:subtitleChecks.type,placeholder:subtitleChecks.placeholder})),errors.subtitle?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.subtitle.message):null)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{md:\"6 mb-3\",sm:\"12 mb-3\",lg:\"6 mb-3\",xl:\"6 mb-3\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,skillLevelChecks.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:skillLevelChecks.name},skillLevelChecks.check(setError,register,clearErrors),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:skillLevelRef,autoBlur:true,placeholder:skillLevelChecks.placeholder,defaultValue:null,onMenuClose:()=>{skillLevelRef.current.blur();},value:currentValues.skillLevel,onChange:selectedOption=>skillLevelChecks.onChange(selectedOption,setValue,clearErrors),options:experienceLevelOptions}));}})),errors.skillLevel?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.skillLevel.message):null)),/*#__PURE__*/React.createElement(Col,{md:\"6 mb-3\",sm:\"12 mb-3\",lg:\"6 mb-3\",xl:\"6 mb-3\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,languageSpokenChecks.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:languageSpokenChecks.name},languageSpokenChecks.check(setError,register,clearErrors),{render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:languageSpokenRef,autoBlur:true,placeholder:languageSpokenChecks.placeholder,defaultValue:null,onMenuClose:()=>{languageSpokenRef.current.blur();},value:currentValues.languageSpoken,onChange:selectedOption=>languageSpokenChecks.onChange(selectedOption,setValue,clearErrors),options:lanuageOptions}));}})),errors.languageSpoken?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.languageSpoken.message):null))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{md:\"5 mb-3\",sm:\"12 mb-3\",lg:\"5 mb-3\",xl:\"5 mb-3\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,primaryLanguageChecks.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:primaryLanguageChecks.name},primaryLanguageChecks.check(setError,register,clearErrors),{render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:primaryLanguageRef,autoBlur:true,placeholder:primaryLanguageChecks.placeholder,defaultValue:null,onMenuClose:()=>{primaryLanguageRef.current.blur();},value:currentValues.primaryLanguageUsed,onChange:selectedOption=>primaryLanguageChecks.onChange(selectedOption,setValue,clearErrors),options:languageArrayNew}));}})),errors.primaryLanguageUsed?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.primaryLanguageUsed.message):null)),/*#__PURE__*/React.createElement(Col,{md:\"7 mb-3\",sm:\"12 mb-3\",lg:\"7 mb-3\",xl:\"7 mb-3\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,hoursOfCourseContentChecks.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:hoursOfCourseContentChecks.name},hoursOfCourseContentChecks.check(setError,register,clearErrors),{render:_ref5=>{let{field}=_ref5;return/*#__PURE__*/React.createElement(Select,Object.assign({className:\"controlled-select-course\"},field,{ref:primaryLanguageRef,autoBlur:true,placeholder:hoursOfCourseContentChecks.placeholder,defaultValue:null,onMenuClose:()=>{primaryLanguageRef.current.blur();},value:currentValues.lengthInHours,onChange:selectedOption=>hoursOfCourseContentChecks.onChange(selectedOption,setValue,clearErrors),options:hoursInLengthOptions}));}})),errors.lengthInHours?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.lengthInHours.message):null))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{sm:\"12 mb-3\",lg:\"12 mb-3\",xl:\"12 mb-3\",md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,courseWelcomeMessageChecks.label),/*#__PURE__*/React.createElement(Input,Object.assign({},courseWelcomeMessageChecks.check(setError,register),{onChange:e=>{courseWelcomeMessageChecks.onChange(e,setValue);const caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues.welcomeMessage,className:\"form-control\",name:courseWelcomeMessageChecks.name,rows:8,type:courseWelcomeMessageChecks.type,placeholder:courseWelcomeMessageChecks.placeholder})),errors.welcomeMessage?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.welcomeMessage.message):null)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{sm:\"12 mb-3\",lg:\"12 mb-3\",xl:\"12 mb-3\",md:\"12 mb-3\"},/*#__PURE__*/React.createElement(Label,null,completionMessageChecks.label),/*#__PURE__*/React.createElement(Input,Object.assign({},completionMessageChecks.check(setError,register),{onChange:e=>{completionMessageChecks.onChange(e,setValue);const caret=e.target.selectionStart;const element=e.target;window.requestAnimationFrame(()=>{element.selectionStart=caret;element.selectionEnd=caret;});},value:currentValues.completionMessage,className:\"form-control\",name:completionMessageChecks.name,rows:8,type:completionMessageChecks.type,placeholder:completionMessageChecks.placeholder})),errors.completionMessage?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.completionMessage.message):null)),/*#__PURE__*/React.createElement(\"hr\",null)))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-upload-courses\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Card,{className:\"specifics-card\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary card-header-customized-specifics\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Upload a \",/*#__PURE__*/React.createElement(\"strong\",null,\"PROMOTIONAL/DEMO\"),\" video depicting what's being sold/provided\"),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"7.5px\"}},\"You will now need to upload a \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"promotional video\"),\" or \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"demo/preview\"),\" of what your course entials after being purchased/bought. You \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"should\"),\" give an \",/*#__PURE__*/React.createElement(\"strong\",null,\"accurate\"),\" idea of what's being offered for sale with this video...\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,{style:{height:\"100%\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dz-message needsclick\"},/*#__PURE__*/React.createElement(Dropzone,{ref:dropzoneRef,PreviewComponent:data=>renderPreviewOfFile(data,fileReady,filePathData),maxFiles:1,autoUpload:true,onChangeStatus:functions=>{setChangeOptions(functions);},submitButtonDisabled:false,InputComponent:_ref6=>{let{accept,onFiles}=_ref6;return CustomInputHelper(accept,onFiles,setCurrentFilePathData,setCurrentUploadFileStatus,setFileReadyStatus);},onSubmit:onSubmitHelper,SubmitButtonComponent:(data,e)=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-position-submit-btn\"},renderCustomButtonDropzone(data,e,currentFileSelectedUpload,setMetaFileData,setFileReadyStatus,fileMetaData,setProgress,setCurrentUploadFileStatus,fileReady,setPromotionalDemoFile));},accept:\"video/*\",multiple:false,canCancel:false,styles:{dropzone:{height:300,minWidth:\"100%\"},dropzoneActive:{borderColor:'green'}}}),errors.promotionalUploadedFile?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.promotionalUploadedFile.message):null),fileReady===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"hr\",{className:\"secondary-hr\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);changeOptions.remove();},className:\"btn-air-danger cancel-button-upload\",color:\"danger\",size:\"md\"},\"Cancel Current/Pending Upload\"))):null),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"adjust-height-upon-upload\"},renderPromoDemoVideo()))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h4\",null,\"Upload a \",/*#__PURE__*/React.createElement(\"strong\",null,\"MAIN PHOTO\"),\" that will be displayed on the \",/*#__PURE__*/React.createElement(\"strong\",null,\"homepage/search-results\"),\" while student's/hacker's look for new courses\"),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"7.5px\"}},\"This image/photo will be used to depict what your course will entail. Usually, we find that the best results come from a \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#f73164\"}},\"custom designed\"),\" image to look at professional as possible from the moment someone see's your listing!\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(ImageUploader,{withIcon:false,withPreview:true,label:\"Upload a custom cover/photo image for your listing/course\",singleImage:true,buttonText:\"Upload A COVER IMAGE/PHOTO\",onChange:images=>onDroppedImage(images,setHomepageImage),imgExtension:[\".jpg\",\".gif\",\".png\",\".gif\",\".svg\"],maxFileSize:1048576,fileSizeError:\"file size is too big - please select a 'smaller' file...\"}))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-upload-courses\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},outline:true,className:\"btn-square-info\",type:\"submit\",color:\"info-2x\"},\"Submit form & proceed w/rest of logic\"))))))));};const mapStateToProps=state=>{return{userData:state.auth.data,courseData:_.has(state.courseData,\"courseData\")?state.courseData.courseData:[]};};export default connect(mapStateToProps,{updateCourseInformationData})(CreateNewCoursePageThree);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageThree/index.js"],"names":["React","Fragment","useState","useRef","useEffect","connect","helpers","Button","Row","Col","Card","CardBody","CardHeader","FormGroup","Label","Input","Form","Progress","Container","updateCourseInformationData","_","ImageUploader","Select","useForm","Controller","reactHookHelpers","options","Dropzone","ReactPlayer","NotificationManager","lanuageOptions","experienceLevelOptions","languageList","hoursInLengthOptions","subtitleChecks","languageSpokenChecks","skillLevelChecks","primaryLanguageChecks","hoursOfCourseContentChecks","courseWelcomeMessageChecks","completionMessageChecks","renderPreviewOfFile","onSubmitHelper","CustomInputHelper","renderCustomButtonDropzone","onDroppedImage","CreateNewCoursePageThree","userData","courseData","overallProgress","setOverallProgress","setProgress","languageArrayNew","setLanguageArray","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","promotionalDemoFile","setPromotionalDemoFile","homepageImage","setHomepageImage","languageSpokenRef","primaryLanguageRef","skillLevelRef","register","handleSubmit","control","resetField","unregister","getValues","array","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","key","pageThreeData","element","shouldValidate","index","length","language","push","label","name","value","completeData","onSubmit","data","console","log","completionMessage","languageSpoken","lengthInHours","primaryLanguageUsed","skillLevel","subtitle","welcomeMessage","newDataObj","currentPage","warning","errorsSubmit","e","error","onBufferEnded","renderPromoDemoVideo","fileReadable","process","env","REACT_APP_ASSET_LINK","link","textDecorationLine","color","marginTop","check","onChange","caret","target","selectionStart","window","requestAnimationFrame","selectionEnd","type","placeholder","message","field","current","blur","selectedOption","height","functions","accept","onFiles","dropzone","minWidth","dropzoneActive","borderColor","promotionalUploadedFile","remove","images","width","mapStateToProps","state","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/helperFunctions/helpers.js\";\nimport { Button, Row, Col, Card, CardBody, CardHeader, FormGroup, Label, Input, Form, Progress, Container } from 'reactstrap';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport ImageUploader from 'react-images-upload';\nimport Select from \"react-select\";\nimport { useForm, Controller } from 'react-hook-form';\nimport reactHookHelpers from \"./helpers/helperFunctions/hookFormHelpers.js\";\nimport options from \"./helpers/helperFunctions/options.js\";\nimport Dropzone from 'react-dropzone-uploader';\nimport ReactPlayer from \"react-player\";\nimport { NotificationManager } from 'react-notifications';\n\n\nconst { lanuageOptions, experienceLevelOptions, languageList, hoursInLengthOptions } = options;\n\n// react-hook-form imports/helpers\nconst subtitleChecks = reactHookHelpers().subtitleChecks;\nconst languageSpokenChecks = reactHookHelpers().languageSpokenChecks;\nconst skillLevelChecks = reactHookHelpers().skillLevelChecks;\nconst primaryLanguageChecks = reactHookHelpers().primaryLanguageChecks;\nconst hoursOfCourseContentChecks = reactHookHelpers().hoursOfCourseContentChecks;\nconst courseWelcomeMessageChecks = reactHookHelpers().courseWelcomeMessageChecks;\nconst completionMessageChecks = reactHookHelpers().completionMessageChecks;\n\nconst {\n    renderPreviewOfFile,\n    onSubmitHelper,\n    CustomInputHelper,\n    renderCustomButtonDropzone,\n    onDroppedImage\n} = helpers;\n\n// actual component\nconst CreateNewCoursePageThree = ({ userData, courseData, overallProgress, setOverallProgress, setProgress, updateCourseInformationData }) => {\n\n    const [ languageArrayNew, setLanguageArray ] = useState([]);\n    // refs & such\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ promotionalDemoFile, setPromotionalDemoFile ] = useState(null);\n    const [ homepageImage, setHomepageImage ] = useState(null);\n\n    const languageSpokenRef = useRef(null);\n    const primaryLanguageRef = useRef(null);\n    const skillLevelRef = useRef(null);\n    // redux form logic\n    const { register, handleSubmit, control, resetField, unregister, getValues, array, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n\n    useEffect(() => {\n        for (const key in courseData.pageThreeData) {\n            const element = courseData.pageThreeData[key];\n\n            setValue(key, element, { shouldValidate: true });\n\n        }\n    }, [] );\n\n    useEffect(() => {\n\n        const languageArrayNew = [];\n      \n        for (let index = 0; index < languageList.length; index++) {\n            const language = languageList[index];\n            languageArrayNew.push({ label: language.name, value: language.name, completeData: language });\n\n            if ((languageList.length - 1) === index) {\n                setLanguageArray(languageArrayNew);\n            }\n        }\n    }, [])\n    const onSubmit = (data) => {\n        console.log(\"onSubmit ran...\", data);\n\n        if (typeof promotionalDemoFile !== \"undefined\" && promotionalDemoFile !== null) {\n            if (typeof homepageImage !== \"undefined\" && homepageImage !== null) {\n                const { completionMessage, languageSpoken, lengthInHours, primaryLanguageUsed, skillLevel, subtitle, welcomeMessage } = data;\n\n                const newDataObj = {\n                    completionMessage, \n                    languageSpoken, \n                    lengthInHours, \n                    primaryLanguageUsed, \n                    skillLevel, \n                    subtitle, \n                    welcomeMessage,\n                    promotionalDemoFile,\n                    homepageImage\n                };\n\n                updateCourseInformationData({\n                    ...courseData,\n                    pageThreeData: newDataObj,\n                    currentPage: 4\n                })\n            } else {\n                NotificationManager.warning(`You MUST complete the 'Homepage Display Image/Photo' required data input - please upload a main overview photo before proceeding...`, 'Upload Overview Photo!', 4500);\n            }\n        } else {\n            NotificationManager.warning(\"You need to upload a 'Demo Video File' accurately summing up what your course entails, this video should be a 'general overview' snippet video...\", \"Upload 'DEMO VIDEO' Video Overview!\", 4500);\n        }\n    }\n    const errorsSubmit = (e, errors) => {\n        console.log(\"errorsSubmit\", e, errors);\n\n        NotificationManager.error(\"You have NOT completed ALL of the required fields, please go back and fill out the rest of the required data before proceeding...\", \"Missing critical data!\", 4500);\n    }\n    const onBufferEnded = () => {\n        console.log(\"onBufferEnded ended.\");\n    }\n    const renderPromoDemoVideo = () => {\n       // ready to display live content\n        if (typeof promotionalDemoFile === \"undefined\" || promotionalDemoFile === null) {\n            return (\n                <Fragment>\n                    <div className={\"overlay-boxshadow-courses-page-three centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                </Fragment>\n            );\n        } else {\n            const fileReadable = `${process.env.REACT_APP_ASSET_LINK}/${promotionalDemoFile.link}`;\n            return (\n                <Fragment>\n                    <h3 style={{ textDecorationLine: \"underline\" }}><strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>Uploaded</strong> promotional video</h3>\n                    <p style={{ marginTop: \"7.5px\" }} className={\"lead\"}>You've successfully uploaded/updated your 'Promotional/Demo' video - You have completed this form section!</p>\n                    <ReactPlayer onBufferEnd={onBufferEnded} progressInterval={1000} controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={fileReadable} />\n                </Fragment>\n            );   \n        }\n    }\n    console.log(\"current VALUES:\", currentValues);\n    return (\n        <Fragment>\n            <div className={\"centered-horizontally-course\"}>\n                <div className={\"position-above-bar-percentage\"}>\n                    <h1>{overallProgress}% Complete</h1>\n                </div>\n                <Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} />\n            </div>\n            <Container fluid={true}>\n                <Form onSubmit={handleSubmit(onSubmit, (e, errors) => {\n                    return errorsSubmit(e, errors);\n                })}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card className={\"card-upload-courses\"}>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h4 className={\"course-custom-title\"}>More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...</h4>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginTop: \"17.5px\" }}>\n                                            <Card className={\"specifics-card\"}>\n                                                <CardHeader className=\"b-l-primary card-header-customized-specifics\">\n                                                    <h4>More required detailed information related to core listing</h4>\n                                                    <p style={{ marginTop: \"7.5px\" }}>You will need to <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>complete</strong> the following <strong>required</strong> information to give potential student's more of an idea of what they will be purchasing regarding certain fine details...</p>\n                                                </CardHeader>\n                                                <CardBody>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{subtitleChecks.label}</Label>\n                                                            <Input {...subtitleChecks.check(setError, register)} onChange={(e) => {\n\n                                                                subtitleChecks.onChange(e, setValue)\n\n                                                                const caret = e.target.selectionStart;\n                                                                const element = e.target;\n                                                                window.requestAnimationFrame(() => {\n                                                                    element.selectionStart = caret\n                                                                    element.selectionEnd = caret\n                                                                })\n                                                            }} value={currentValues.subtitle} className=\"form-control\" name={subtitleChecks.name} type={subtitleChecks.type} placeholder={subtitleChecks.placeholder} />\n                                                            {errors.subtitle ? <span className=\"span-tooltip\">{errors.subtitle.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{skillLevelChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={skillLevelChecks.name}\n                                                                    {...skillLevelChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={skillLevelRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={skillLevelChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                skillLevelRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.skillLevel}\n                                                                            onChange={(selectedOption) => skillLevelChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={experienceLevelOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.skillLevel ? <span className=\"span-tooltip\">{errors.skillLevel.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{languageSpokenChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={languageSpokenChecks.name}\n                                                                    {...languageSpokenChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={languageSpokenRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={languageSpokenChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                languageSpokenRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.languageSpoken}\n                                                                            onChange={(selectedOption) => languageSpokenChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={lanuageOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.languageSpoken ? <span className=\"span-tooltip\">{errors.languageSpoken.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"5 mb-3\" sm=\"12 mb-3\" lg=\"5 mb-3\" xl=\"5 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{primaryLanguageChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={primaryLanguageChecks.name}\n                                                                    {...primaryLanguageChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={primaryLanguageRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={primaryLanguageChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                primaryLanguageRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.primaryLanguageUsed}\n                                                                            onChange={(selectedOption) => primaryLanguageChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={languageArrayNew}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.primaryLanguageUsed ? <span className=\"span-tooltip\">{errors.primaryLanguageUsed.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"7 mb-3\" sm=\"12 mb-3\" lg=\"7 mb-3\" xl=\"7 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{hoursOfCourseContentChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={hoursOfCourseContentChecks.name}\n                                                                    {...hoursOfCourseContentChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            className={\"controlled-select-course\"}\n                                                                            {...field}\n                                                                            ref={primaryLanguageRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={hoursOfCourseContentChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                primaryLanguageRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.lengthInHours}\n                                                                            onChange={(selectedOption) => hoursOfCourseContentChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={hoursInLengthOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.lengthInHours ? <span className=\"span-tooltip\">{errors.lengthInHours.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{courseWelcomeMessageChecks.label}</Label>\n                                                            <Input {...courseWelcomeMessageChecks.check(setError, register)} onChange={(e) => {\n                                                                \n                                                                courseWelcomeMessageChecks.onChange(e, setValue)\n\n                                                                const caret = e.target.selectionStart;\n                                                                const element = e.target;\n                                                                window.requestAnimationFrame(() => {\n                                                                    element.selectionStart = caret\n                                                                    element.selectionEnd = caret\n                                                                })\n                                                            }} value={currentValues.welcomeMessage} className=\"form-control\" name={courseWelcomeMessageChecks.name} rows={8} type={courseWelcomeMessageChecks.type} placeholder={courseWelcomeMessageChecks.placeholder} />\n                                                            {errors.welcomeMessage ? <span className=\"span-tooltip\">{errors.welcomeMessage.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{completionMessageChecks.label}</Label>\n                                                            <Input {...completionMessageChecks.check(setError, register)} onChange={(e) => {\n                                                                \n                                                                completionMessageChecks.onChange(e, setValue)\n\n                                                                const caret = e.target.selectionStart;\n                                                                const element = e.target;\n                                                                window.requestAnimationFrame(() => {\n                                                                    element.selectionStart = caret\n                                                                    element.selectionEnd = caret\n                                                                })\n                                                            }} value={currentValues.completionMessage} className=\"form-control\" name={completionMessageChecks.name} rows={8} type={completionMessageChecks.type} placeholder={completionMessageChecks.placeholder} />\n                                                            {errors.completionMessage ? <span className=\"span-tooltip\">{errors.completionMessage.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <hr />\n                                                </CardBody>\n                                            </Card>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className={\"card-upload-courses\"}>\n                                <CardBody>\n                                    <Card className={\"specifics-card\"}>\n                                        <CardHeader className=\"b-l-primary card-header-customized-specifics\">\n                                            <h4>Upload a <strong>PROMOTIONAL/DEMO</strong> video depicting what's being sold/provided</h4>\n                                            <p style={{ marginTop: \"7.5px\" }}>You will now need to upload a <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>promotional video</strong> or <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>demo/preview</strong> of what your course entials after being purchased/bought. You <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>should</strong> give an <strong>accurate</strong> idea of what's being offered for sale with this video...</p>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row style={{ height: \"100%\" }}>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneRef}\n                                                            PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                            maxFiles={1}\n                                                            autoUpload={true}\n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile)}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            accept={\"video/*\"}\n                                                            multiple={false}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 300, minWidth: \"100%\" },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                        {errors.promotionalUploadedFile ? <span className=\"span-tooltip\">{errors.promotionalUploadedFile.message}</span> : null}\n                                                    </div>\n                                                    {fileReady === true ? <Fragment>\n                                                        <hr className=\"secondary-hr\" />\n                                                        <div className=\"centered-both-ways\">\n                                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                                setMetaFileData(null);\n                                                                setFileReadyStatus(false);\n                                                                setCurrentUploadFileStatus(null);\n\n                                                                changeOptions.remove();\n                                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                        </div>\n                                                    </Fragment> : null}\n                                                </Col>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                    <div className={\"adjust-height-upon-upload\"}>\n                                                        {renderPromoDemoVideo()}\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <hr />\n                                            <h4>Upload a <strong>MAIN PHOTO</strong> that will be displayed on the <strong>homepage/search-results</strong> while student's/hacker's look for new courses</h4>\n                                            <p style={{ marginTop: \"7.5px\" }}>This image/photo will be used to depict what your course will entail. Usually, we find that the best results come from a <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>custom designed</strong> image to look at professional as possible from the moment someone see's your listing!</p>\n                                            <hr />\n                                            <ImageUploader\n                                                withIcon={false}\n                                                withPreview={true}\n                                                label={\"Upload a custom cover/photo image for your listing/course\"}\n                                                singleImage={true}\n                                                buttonText={\"Upload A COVER IMAGE/PHOTO\"}\n                                                onChange={(images) => onDroppedImage(images, setHomepageImage)}\n                                                imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".svg\"]}\n                                                maxFileSize={1048576}\n                                                fileSizeError={\"file size is too big - please select a 'smaller' file...\"}\n                                            />\n                                        </CardBody>\n                                    </Card>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className={\"card-upload-courses\"}>\n                                <CardBody>\n                                    <Button style={{ width: \"100%\" }} outline className={\"btn-square-info\"} type={\"submit\"} color=\"info-2x\">{\"Submit form & proceed w/rest of logic\"}</Button>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []    \n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData })(CreateNewCoursePageThree);"]},"metadata":{},"sourceType":"module"}