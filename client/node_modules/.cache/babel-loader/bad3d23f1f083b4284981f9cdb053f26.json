{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js\";\nimport React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form, InputGroupAddon, InputGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport { NotificationManager } from 'react-notifications';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport _ from \"lodash\"; // ~ helper function rendered in main component (bottom of this component) ~\n\nconst RenderConditionalBasedUponSellingType = _ref => {\n  let {\n    reset,\n    type,\n    setValue,\n    getValues,\n    errors,\n    setError,\n    register,\n    control,\n    clearErrors,\n    biddingIncrementIntervalOptions,\n    handleSubmit,\n    shiftCoreStyles,\n    setModalOpenStatus,\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData\n  } = _ref;\n  // ref's below...\n  const biddingIncrementIntervalGeneratedRef = useRef(null);\n  const quantityAvailableForSaleGeneratedRef = useRef(null); // imported helper functions below...\n\n  const startBidCheck = helpers().startBidCheck;\n  const reservePrice = helpers().reservePrice;\n  const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n  const quantityAvailability = helpers().quantityAvailability;\n  const acceptCouponsDiscounts = helpers().acceptCouponsDiscounts;\n  const whatsIncludedInfoListing = helpers().whatsIncludedInfoListing;\n  const buyItNowHelper = helpers().buyItNowHelper; // gather redux-hook-form values (basically a \"state\" replacement).\n\n  const currentValues = getValues(); // console.log(\"startBidCheck : \", startBidCheck);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // clearErrors(name);\n\n    setValue(name, value, {\n      shouldValidate: true\n    });\n    return value;\n  };\n\n  const handleTimespanSelectChange = selectedOption => {\n    // run conditionals\n    if (typeof currentValues.biddingIncrementInterval === \"undefined\") {\n      setValue('biddingIncrementInterval', selectedOption, {\n        shouldValidate: false\n      });\n    } else {\n      clearErrors(\"biddingIncrementInterval\");\n    }\n\n    biddingIncrementIntervalGeneratedRef.current.blur();\n  };\n\n  const handleQuantityAvailabilityChange = selectedOption => {\n    // run conditionals\n    if (typeof currentValues.quantityAvailableForSale === \"undefined\") {\n      setValue('quantityAvailableForSale', selectedOption, {\n        shouldValidate: false\n      });\n    } else {\n      clearErrors(\"quantityAvailableForSale\");\n    }\n\n    quantityAvailableForSaleGeneratedRef.current.blur();\n  };\n\n  const menuClosedSelectInput = () => {\n    if (currentValues.biddingIncrementInterval) {// setSelectOneErrorStatus(true);\n    }\n  };\n\n  const onSubmit = (data, e, selectedType) => {\n    console.log(\"DATA@!\", data, currentValues);\n    e.preventDefault();\n\n    if (data !== '') {\n      const {\n        reservePrice,\n        startBid\n      } = data;\n\n      switch (selectedType) {\n        case \"auction-ONLY\":\n          const omittedKeysAuctionOnly = _.omit(data, [\"reservePrice\", \"startBid\"]);\n\n          const newDataObj = {\n            auctionPriceRelatedData: { ...omittedKeysAuctionOnly,\n              reservePrice: Number(Math.round(Number(reservePrice))),\n              startBid: Number(Math.round(Number(startBid))),\n              auctionSelectedType: selectedType\n            }\n          };\n          const mergedPreviousNewState = { ...previouslySavedSoftwareData,\n            ...newDataObj\n          };\n          saveSoftwareListingInfo(mergedPreviousNewState);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          reset({\n            biddingIncrementInterval: undefined,\n            reservePrice: undefined,\n            startBid: undefined,\n            whatsIncluded: undefined\n          });\n          break;\n\n        case \"auction-AND-buy-it-now\":\n          const omittedKeysAuctionAndBuyitnow = _.omit(data, [\"reservePrice\", \"startBid\", \"buyItNowPrice\"]);\n\n          const newDataObjAuctionAndBuyitnow = {\n            auctionPriceRelatedData: { ...omittedKeysAuctionAndBuyitnow,\n              reservePrice: Number(Math.round(Number(reservePrice))),\n              startBid: Number(Math.round(Number(startBid))),\n              buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n              auctionSelectedType: selectedType\n            }\n          };\n          const mergedPreviousNewStateAuctionAndBuyitnow = { ...previouslySavedSoftwareData,\n            ...newDataObjAuctionAndBuyitnow\n          };\n          saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          reset({\n            biddingIncrementInterval: undefined,\n            reservePrice: undefined,\n            startBid: undefined,\n            whatsIncluded: undefined\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\", \"Successfully updated listing information!\", 4500);\n    } else {\n      console.log(\"onSubmit failure :(\");\n      errors.showMessages();\n    }\n  };\n\n  const onError = async (errors, e, innerRun) => {\n    console.log(\"error submitting...!\", errors, e, innerRun);\n  };\n\n  console.log(\"currentValues : \", currentValues);\n\n  const renderMainContentPassedConditional = selectedType => {\n    switch (selectedType) {\n      case \"auction-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit((data, e) => {\n            return onSubmit(data, e, selectedType);\n          }, (errors, e) => {\n            return onError(errors, e, true);\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 45\n          }\n        }, startBidCheck.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, startBidCheck.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: startBidCheck.type,\n          name: startBidCheck.name,\n          placeholder: startBidCheck.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.startBid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 49\n          }\n        }))), errors.startBid ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 64\n          }\n        }, errors.startBid.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 45\n          }\n        }, reservePrice.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, reservePrice.check(setError, register, currentValues), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: reservePrice.type,\n          name: reservePrice.name,\n          placeholder: reservePrice.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.reservePrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 49\n          }\n        }))), errors.reservePrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 68\n          }\n        }, errors.reservePrice.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: selectedOption => {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: () => {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"auction-AND-buy-it-now\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit((data, e) => {\n            return onSubmit(data, e, selectedType);\n          }, (errors, e) => {\n            return onError(errors, e, true);\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 45\n          }\n        }, startBidCheck.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, startBidCheck.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: startBidCheck.type,\n          name: startBidCheck.name,\n          placeholder: startBidCheck.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.startBid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 49\n          }\n        }))), errors.startBid ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 64\n          }\n        }, errors.startBid.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 45\n          }\n        }, reservePrice.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, reservePrice.check(setError, register, currentValues), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: reservePrice.type,\n          name: reservePrice.name,\n          placeholder: reservePrice.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.reservePrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 49\n          }\n        }))), errors.reservePrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 68\n          }\n        }, errors.reservePrice.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: _ref3 => {\n            let {\n              field\n            } = _ref3;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: selectedOption => {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 41\n          }\n        }, buyItNowHelper.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 120\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, buyItNowHelper.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: buyItNowHelper.type,\n          name: buyItNowHelper.name,\n          placeholder: buyItNowHelper.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.buyItNowPrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 45\n          }\n        }))), errors.buyItNowPrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 65\n          }\n        }, errors.buyItNowPrice.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 41\n          }\n        }, quantityAvailability.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: quantityAvailability.name\n        }, quantityAvailability.check(setError, register, clearErrors), {\n          render: _ref4 => {\n            let {\n              field\n            } = _ref4;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: quantityAvailability.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.biddingIncrementInterval,\n              onChange: selectedOption => {\n                return handleQuantityAvailabilityChange(selectedOption);\n              },\n              options: quantityAvailabilityOptions,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 49\n              }\n            }));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 41\n          }\n        })), errors.quantityAvailableForSale ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 76\n          }\n        }, errors.quantityAvailableForSale.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 41\n          }\n        }, acceptCouponsDiscounts.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 120\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, acceptCouponsDiscounts.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: acceptCouponsDiscounts.type,\n          name: acceptCouponsDiscounts.name,\n          placeholder: acceptCouponsDiscounts.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.discountCodeAcceptance,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 45\n          }\n        }))), errors.discountCodeAcceptance ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 74\n          }\n        }, errors.discountCodeAcceptance.message) : null)), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: e => {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: () => {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"buy-it-now-OR-best-offer\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }\n        }, type));\n        break;\n\n      case \"buy-it-now-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }\n        }, type));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return renderMainContentPassedConditional(type);\n};\n\nconst SlideUpPaneAuctionPurchaseSelectionData = _ref5 => {\n  let {\n    setIsTourOpenStatus,\n    selected,\n    shiftCoreStyles,\n    previouslySavedSoftwareData,\n    saveSoftwareListingInfo,\n    onSubmit,\n    onErrorMainForm,\n    scrollToTourWrapper\n  } = _ref5;\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const [isOpen, setModalOpenStatus] = useState(false);\n  const startBidCheck = helpers().startBidCheck;\n  const {\n    handleFinalSubmissionInputs,\n    biddingIncrementIntervalOptions,\n    quantityAvailabilityOptions\n  } = functions; // const currentValues = getValues();\n  // console.log(\"currentValues : \", currentValues);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"27.5px\",\n      paddingBottom: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      // DISABLE clicking background\n      shiftCoreStyles(true); // set modal sheet pane OPEN/true\n\n      setModalOpenStatus(true); // scroll to target and LOCK SCREEN until closed.\n\n      scrollToTourWrapper.current.scrollIntoView(); // alter slightly to account for top-NAV\n\n      setTimeout(() => {\n        window.scrollBy(0, -135);\n      }, 750); // lock after appropriate position change\n\n      setTimeout(() => {\n        const select = document.querySelector(\".enact-nonclick\");\n        disableBodyScroll(select);\n      }, 1000);\n    },\n    outline: true,\n    className: \"btn-pill btn-air-success stretched-purchase-options-btn\",\n    color: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }, \"Select & modify listing pricing and purchase options\")), /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: () => setModalOpenStatus(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      // run submission logic\n      handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles, setIsTourOpenStatus);\n    },\n    className: \"btn-square stretch-and-space-btn-left\",\n    active: true,\n    color: \"primary\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }, \"Submit Completed Data & Close/Exit\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      // allow background clicking again\n      shiftCoreStyles(false); // close modal\n\n      setModalOpenStatus(false);\n    },\n    className: \"btn-square stretch-and-space-btn-right\",\n    active: true,\n    color: \"secondary\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, \"Cancel/Close\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-normal-backer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: \"Auction purchase options/settings\",\n    title: \"Select your preferred auction type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RenderConditionalBasedUponSellingType, {\n    reset: reset,\n    type: selected,\n    setValue: setValue,\n    getValues: getValues,\n    errors: errors,\n    setError: setError,\n    register: register,\n    control: control,\n    clearErrors: clearErrors,\n    biddingIncrementIntervalOptions: biddingIncrementIntervalOptions,\n    handleSubmit: handleSubmit,\n    shiftCoreStyles: shiftCoreStyles,\n    setModalOpenStatus: setModalOpenStatus,\n    onSubmit: onSubmit,\n    onErrorMainForm: onErrorMainForm,\n    saveSoftwareListingInfo: saveSoftwareListingInfo,\n    previouslySavedSoftwareData: previouslySavedSoftwareData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 45\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    style: {\n      zIndex: \"-100\"\n    },\n    id: \"custom-backdrop-noclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  // return desired selected redux-state\n  return {\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, {\n  shiftCoreStyles,\n  saveSoftwareListingInfo\n})(SlideUpPaneAuctionPurchaseSelectionData); // export helper functions\n\nexport default {\n  ConnectedSlideUpPaneAuctionPurchase,\n  RenderConditionalBasedUponSellingType\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js"],"names":["React","Fragment","useState","useRef","Sheet","Button","Container","Col","Row","Card","FormGroup","Label","CardBody","Form","InputGroupAddon","InputGroup","InputGroupText","Breadcrumb","Link","helpers","functions","useForm","Controller","connect","shiftCoreStyles","Select","saveSoftwareListingInfo","NotificationManager","disableBodyScroll","enableBodyScroll","_","RenderConditionalBasedUponSellingType","reset","type","setValue","getValues","errors","setError","register","control","clearErrors","biddingIncrementIntervalOptions","handleSubmit","setModalOpenStatus","previouslySavedSoftwareData","biddingIncrementIntervalGeneratedRef","quantityAvailableForSaleGeneratedRef","startBidCheck","reservePrice","biddingIncrementIntervalHelper","quantityAvailability","acceptCouponsDiscounts","whatsIncludedInfoListing","buyItNowHelper","currentValues","handleInputChange","e","name","value","target","shouldValidate","handleTimespanSelectChange","selectedOption","biddingIncrementInterval","current","blur","handleQuantityAvailabilityChange","quantityAvailableForSale","menuClosedSelectInput","onSubmit","data","selectedType","console","log","preventDefault","startBid","omittedKeysAuctionOnly","omit","newDataObj","auctionPriceRelatedData","Number","Math","round","auctionSelectedType","mergedPreviousNewState","undefined","whatsIncluded","omittedKeysAuctionAndBuyitnow","newDataObjAuctionAndBuyitnow","buyItNowPrice","mergedPreviousNewStateAuctionAndBuyitnow","success","showMessages","onError","innerRun","renderMainContentPassedConditional","label","check","placeholder","message","field","width","quantityAvailabilityOptions","discountCodeAcceptance","SlideUpPaneAuctionPurchaseSelectionData","setIsTourOpenStatus","selected","onErrorMainForm","scrollToTourWrapper","formState","mode","reValidateMode","isOpen","handleFinalSubmissionInputs","paddingTop","paddingBottom","scrollIntoView","setTimeout","window","scrollBy","select","document","querySelector","zIndex","mapStateToProps","state","softwareListingSale","softwareListingSaleInfo","ConnectedSlideUpPaneAuctionPurchase"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form, InputGroupAddon, InputGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport { NotificationManager } from 'react-notifications';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport _ from \"lodash\";\n\n// ~ helper function rendered in main component (bottom of this component) ~\nconst RenderConditionalBasedUponSellingType = ({ reset, type, setValue, getValues, errors, setError, register, control, clearErrors, biddingIncrementIntervalOptions, handleSubmit, shiftCoreStyles, setModalOpenStatus, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n    // ref's below...\n    const biddingIncrementIntervalGeneratedRef = useRef(null);\n    const quantityAvailableForSaleGeneratedRef = useRef(null);\n    // imported helper functions below...\n    const startBidCheck = helpers().startBidCheck;\n    const reservePrice = helpers().reservePrice;\n    const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n    const quantityAvailability = helpers().quantityAvailability;\n    const acceptCouponsDiscounts = helpers().acceptCouponsDiscounts;\n    const whatsIncludedInfoListing = helpers().whatsIncludedInfoListing;\n    const buyItNowHelper = helpers().buyItNowHelper;\n    // gather redux-hook-form values (basically a \"state\" replacement).\n    const currentValues = getValues();\n\n    // console.log(\"startBidCheck : \", startBidCheck);\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        // clearErrors(name);\n\n        setValue(name, value, { shouldValidate: true })\n    \n        return value;\n    };\n    const handleTimespanSelectChange = (selectedOption) => {\n        // run conditionals\n        if (typeof currentValues.biddingIncrementInterval === \"undefined\") {\n            setValue('biddingIncrementInterval', selectedOption, { shouldValidate: false });\n        } else {\n            clearErrors(\"biddingIncrementInterval\");\n        }\n\n        biddingIncrementIntervalGeneratedRef.current.blur();\n    }\n    const handleQuantityAvailabilityChange = (selectedOption) => {\n        // run conditionals\n        if (typeof currentValues.quantityAvailableForSale === \"undefined\") {\n            setValue('quantityAvailableForSale', selectedOption, { shouldValidate: false });\n        } else {\n            clearErrors(\"quantityAvailableForSale\");\n        }\n\n        quantityAvailableForSaleGeneratedRef.current.blur();\n    }\n\n    const menuClosedSelectInput = () => {\n        if (currentValues.biddingIncrementInterval) {\n            // setSelectOneErrorStatus(true);\n        } \n    }\n    const onSubmit = (data, e, selectedType) => {\n\n        console.log(\"DATA@!\", data, currentValues);\n\n        e.preventDefault();\n\n        if (data !== '') {\n\n            const { reservePrice, startBid } = data;\n\n            switch (selectedType) {\n                case \"auction-ONLY\":\n                        const omittedKeysAuctionOnly = _.omit(data, [\"reservePrice\", \"startBid\"]);\n\n                        const newDataObj = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionOnly,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewState = {...previouslySavedSoftwareData, ...newDataObj};\n\n                        saveSoftwareListingInfo(mergedPreviousNewState);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined });\n                    break;\n                case \"auction-AND-buy-it-now\":\n                        const omittedKeysAuctionAndBuyitnow = _.omit(data, [\"reservePrice\", \"startBid\", \"buyItNowPrice\"]);\n\n                        const newDataObjAuctionAndBuyitnow = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionAndBuyitnow,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewStateAuctionAndBuyitnow = {...previouslySavedSoftwareData, ...newDataObjAuctionAndBuyitnow};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined });\n                    break;\n                default:\n                    break;\n            }\n\n            NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\", \"Successfully updated listing information!\", 4500);\n        } else {\n            console.log(\"onSubmit failure :(\");\n\n            errors.showMessages();\n        }\n    };\n    const onError = async (errors, e, innerRun) => {\n        console.log(\"error submitting...!\", errors, e, innerRun);\n    };\n\n    console.log(\"currentValues : \", currentValues);\n\n    const renderMainContentPassedConditional = (selectedType) => {\n        switch (selectedType) {\n            case \"auction-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"auction-AND-buy-it-now\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup>\n                                        <Label>{buyItNowHelper.label}</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                            <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.buyItNowPrice} />\n                                        </InputGroup>\n                                        {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{quantityAvailability.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={quantityAvailability.name}\n                                            {...quantityAvailability.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={biddingIncrementIntervalGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={quantityAvailability.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={null}\n                                                    value={currentValues.biddingIncrementInterval}\n                                                    onChange={(selectedOption) => {\n                                                        return handleQuantityAvailabilityChange(selectedOption);\n                                                    }}\n                                                    options={quantityAvailabilityOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{acceptCouponsDiscounts.label}</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                            <input {...acceptCouponsDiscounts.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={acceptCouponsDiscounts.type} name={acceptCouponsDiscounts.name} placeholder={acceptCouponsDiscounts.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.discountCodeAcceptance} />\n                                        </InputGroup>\n                                        {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                return (\n                    <Fragment>\n                        <h1>{type}</h1>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-ONLY\":\n                return (\n                    <Fragment>\n                        <h1>{type}</h1>\n                    </Fragment>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n\n    return renderMainContentPassedConditional(type);\n};\n\n\nconst SlideUpPaneAuctionPurchaseSelectionData = ({ setIsTourOpenStatus, selected, shiftCoreStyles, previouslySavedSoftwareData, saveSoftwareListingInfo, onSubmit, onErrorMainForm, scrollToTourWrapper }) => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const [ isOpen, setModalOpenStatus ] = useState(false);\n\n    const startBidCheck = helpers().startBidCheck;\n\n    const { handleFinalSubmissionInputs, biddingIncrementIntervalOptions, quantityAvailabilityOptions } = functions;\n\n    // const currentValues = getValues();\n\n    // console.log(\"currentValues : \", currentValues);\n\n    return (\n        <div id=\"sheet-container\">\n            <div style={{ paddingTop: \"27.5px\", paddingBottom: \"12.5px\" }} className=\"centered-both-ways\">\n                <Button onClick={() => {\n                    // DISABLE clicking background\n                    shiftCoreStyles(true);\n                    // set modal sheet pane OPEN/true\n                    setModalOpenStatus(true);\n                    // scroll to target and LOCK SCREEN until closed.\n                    scrollToTourWrapper.current.scrollIntoView();\n                    // alter slightly to account for top-NAV\n                    setTimeout(() => {\n                        window.scrollBy(0, -135);\n                    }, 750);\n                    // lock after appropriate position change\n                    setTimeout(() => {\n\n                        const select = document.querySelector(\".enact-nonclick\");\n                        \n                        disableBodyScroll(select);\n                    }, 1000)\n                }} outline className=\"btn-pill btn-air-success stretched-purchase-options-btn\" color=\"success\" size=\"lg\">Select & modify listing pricing and purchase options</Button>\n            </div>\n            <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setModalOpenStatus(false)}>\n                <Sheet.Container className=\"sheetcontainer\">\n                    <Sheet.Header className=\"sheetheader\">\n                        <Row>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // run submission logic\n                                    handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles, setIsTourOpenStatus);\n                                }} className=\"btn-square stretch-and-space-btn-left\" active color=\"primary\" size=\"md\">Submit Completed Data & Close/Exit</Button>\n                            </Col>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // allow background clicking again\n                                    shiftCoreStyles(false);\n                                    // close modal\n                                    setModalOpenStatus(false);\n                                }} className=\"btn-square stretch-and-space-btn-right\" active color=\"secondary\" size=\"md\">Cancel/Close</Button>\n                            </Col>\n                        </Row>\n                    </Sheet.Header>\n                    <Sheet.Content> \n                        <div className=\"add-normal-backer\">\n                            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent=\"Auction purchase options/settings\" title=\"Select your preferred auction type\"/>\n                            <Container fluid={true}>\n                                <Card className=\"card-main-container\">\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            {/* render sub component with SWITCH logic */}\n                                            <RenderConditionalBasedUponSellingType reset={reset} type={selected} setValue={setValue} getValues={getValues} errors={errors} setError={setError} register={register} control={control} clearErrors={clearErrors} biddingIncrementIntervalOptions={biddingIncrementIntervalOptions} handleSubmit={handleSubmit} shiftCoreStyles={shiftCoreStyles} setModalOpenStatus={setModalOpenStatus} onSubmit={onSubmit} onErrorMainForm={onErrorMainForm} saveSoftwareListingInfo={saveSoftwareListingInfo} previouslySavedSoftwareData={previouslySavedSoftwareData} />\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop style={{ zIndex: \"-100\" }} id=\"custom-backdrop-noclick\" />\n            </Sheet>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    // return desired selected redux-state\n    return {\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, { shiftCoreStyles, saveSoftwareListingInfo })(SlideUpPaneAuctionPurchaseSelectionData);\n// export helper functions\nexport default {\n    ConnectedSlideUpPaneAuctionPurchase,\n    RenderConditionalBasedUponSellingType\n};"]},"metadata":{},"sourceType":"module"}