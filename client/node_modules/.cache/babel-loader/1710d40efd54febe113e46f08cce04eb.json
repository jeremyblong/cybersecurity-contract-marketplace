{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js\";\nimport React, { Fragment, useState, useRef } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType\n} = helpers;\n\nconst SheetHelperPaneUploadCourseContent = _ref => {\n  let {\n    isOpen,\n    setIsOpen,\n    setChangeOptions,\n    filePathData\n  } = _ref;\n  const dropzoneRef = useRef(null);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: isOpen,\n    onClose: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default SheetHelperPaneUploadCourseContent;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Media","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setChangeOptions","filePathData","dropzoneRef","renderPreviewOfFile","data","file","fileWithMeta","fileReady","type","err","console","log","id","functions","CustomInputHelper","setMetaFileData","currentFileSelectedUpload","fileMetaData","setFileReadyStatus","setProgress","setCurrentUploadFileStatus","dropzone","height","dropzoneActive","borderColor"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\n\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setChangeOptions, filePathData }) => {\n    const dropzoneRef = useRef(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    return (\n        <Fragment>\n            <Sheet isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <Sheet.Container>\n                <Sheet.Header />\n                <Sheet.Content>\n                    <Row>\n                        <Card>\n                            <CardBody>\n                                <Row>\n                                    <Dropzone\n                                        ref={dropzoneRef}\n                                        PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                        maxFiles={1}\n                                        autoUpload={true}\n                                        onChangeStatus={(functions) => {\n                                            setChangeOptions(functions);\n                                        }}\n                                        submitButtonDisabled={false}\n                                        InputComponent={CustomInputHelper}\n                                        getFilesFromEvent={null}\n                                        onSubmit={onSubmitHelper}\n                                        accept=\"video/*\"\n                                        SubmitButtonComponent={(data) => {\n                                            return (\n                                                <div className=\"absolutely-position-submit-btn\">\n                                                    {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus)}\n                                                </div>\n                                            );\n                                        }}\n                                        multiple={false}\n                                        canCancel={false}\n                                        styles={{\n                                            dropzone: { height: 350 },\n                                            dropzoneActive: { borderColor: 'green' },\n                                        }}\n                                    />\n                                </Row>\n                                <hr />\n                            </CardBody>\n                        </Card>\n                    </Row>\n                </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nexport default SheetHelperPaneUploadCourseContent;"]},"metadata":{},"sourceType":"module"}