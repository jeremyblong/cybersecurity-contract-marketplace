{"ast":null,"code":"'use strict';\n\nvar _ = require('../common/utils.js');\n\nvar version = require('../../version.js');\n\nvar parseAlgoliaClientVersion = require('../common/parseAlgoliaClientVersion.js');\n\nmodule.exports = function search(index, params) {\n  var algoliaVersion = parseAlgoliaClientVersion(index.as._ua);\n\n  if (algoliaVersion && algoliaVersion[0] >= 3 && algoliaVersion[1] > 20) {\n    params = params || {};\n    params.additionalUA = 'autocomplete.js ' + version;\n  }\n\n  return sourceFn;\n\n  function sourceFn(query, cb) {\n    index.search(query, params, function (error, content) {\n      if (error) {\n        _.error(error.message);\n\n        return;\n      }\n\n      cb(content.hits, content);\n    });\n  }\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/node_modules/autocomplete.js/src/sources/hits.js"],"names":["_","require","version","parseAlgoliaClientVersion","module","exports","search","index","params","algoliaVersion","as","_ua","additionalUA","sourceFn","query","cb","error","content","message","hits"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,oBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIE,yBAAyB,GAAGF,OAAO,CAAC,wCAAD,CAAvC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC9C,MAAIC,cAAc,GAAGN,yBAAyB,CAACI,KAAK,CAACG,EAAN,CAASC,GAAV,CAA9C;;AACA,MAAIF,cAAc,IAAIA,cAAc,CAAC,CAAD,CAAd,IAAqB,CAAvC,IAA4CA,cAAc,CAAC,CAAD,CAAd,GAAoB,EAApE,EAAwE;AACtED,IAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,IAAAA,MAAM,CAACI,YAAP,GAAsB,qBAAqBV,OAA3C;AACD;;AACD,SAAOW,QAAP;;AAEA,WAASA,QAAT,CAAkBC,KAAlB,EAAyBC,EAAzB,EAA6B;AAC3BR,IAAAA,KAAK,CAACD,MAAN,CAAaQ,KAAb,EAAoBN,MAApB,EAA4B,UAASQ,KAAT,EAAgBC,OAAhB,EAAyB;AACnD,UAAID,KAAJ,EAAW;AACThB,QAAAA,CAAC,CAACgB,KAAF,CAAQA,KAAK,CAACE,OAAd;;AACA;AACD;;AACDH,MAAAA,EAAE,CAACE,OAAO,CAACE,IAAT,EAAeF,OAAf,CAAF;AACD,KAND;AAOD;AACF,CAjBD","sourcesContent":["'use strict';\n\nvar _ = require('../common/utils.js');\nvar version = require('../../version.js');\nvar parseAlgoliaClientVersion = require('../common/parseAlgoliaClientVersion.js');\n\nmodule.exports = function search(index, params) {\n  var algoliaVersion = parseAlgoliaClientVersion(index.as._ua);\n  if (algoliaVersion && algoliaVersion[0] >= 3 && algoliaVersion[1] > 20) {\n    params = params || {};\n    params.additionalUA = 'autocomplete.js ' + version;\n  }\n  return sourceFn;\n\n  function sourceFn(query, cb) {\n    index.search(query, params, function(error, content) {\n      if (error) {\n        _.error(error.message);\n        return;\n      }\n      cb(content.hits, content);\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}