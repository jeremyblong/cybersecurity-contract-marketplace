{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst MainHookForumCreationHelpers = () => {\n  const calculateBlurOrNot = (e, clearErrors, name, setError) => {\n    // deconstruct value\n    const valueLen = e.target.value.length;\n    console.log(\"E\", e); // timeout to delay for state change(s)\n\n    setTimeout(() => {\n      // clear error after proper selection\n      if (valueLen >= 50) {\n        if (valueLen <= 1000) {\n          clearErrors(name);\n        } else {\n          // set error - TOO many characters\n          setError(name, {\n            type: \"manual\",\n            message: \"You may ONLY enter 1000 characters or less\"\n          });\n        }\n      } else {\n        // NOT Long enough\n        setError(name, {\n          type: \"manual\",\n          message: \"You MUST enter AT Least 50 characters\"\n        });\n      }\n    }, 100);\n  };\n\n  const mainDescriptionChecker = {\n    check: (setError, register) => {\n      return { ...register(\"mainDescription\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 50 characters to 1000 characters\"\n          },\n          minLength: {\n            value: 50,\n            message: \"You MUST enter AT Least 50 characters\"\n          },\n          maxLength: {\n            value: 1000,\n            message: \"You may ONLY enter 1000 characters or less\"\n          }\n        })\n      };\n    },\n    onBlur: (e, clearErrors, name, setError) => calculateBlurOrNot(e, clearErrors, name, setError),\n    onChange: (value, setValue) => {\n      setValue(\"mainDescription\", value, {\n        shouldValidate: false\n      });\n    },\n    name: \"mainDescription\",\n    placeholder: \"Enter whatever you feel like! Talk about hacking or if you're an employer, you can discuss our platform's BEST hacker's & how to safely hire or even just vett hacker's through various questions and/or even a poll!\",\n    type: \"textarea\",\n    label: \"Enter your post description/content\"\n  }; // return values to other component\n\n  return {\n    mainDescriptionChecker\n  };\n};\n\nexport default MainHookForumCreationHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/forums/createNewForumPost/helpers/reduxFormHelpers/helperReduxForm.js"],"names":["MainHookForumCreationHelpers","calculateBlurOrNot","e","clearErrors","name","setError","valueLen","target","value","length","console","log","setTimeout","type","message","mainDescriptionChecker","check","register","required","minLength","maxLength","onBlur","onChange","setValue","shouldValidate","placeholder","label"],"mappings":"AAAA;AACA,MAAMA,4BAA4B,GAAG,MAAM;AACvC,QAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,WAAJ,EAAiBC,IAAjB,EAAuBC,QAAvB,KAAoC;AAC3D;AACA,UAAMC,QAAQ,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,MAAhC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBT,CAAjB,EAJ2D,CAK3D;;AACAU,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,UAAIN,QAAQ,IAAI,EAAhB,EAAoB;AAChB,YAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBH,UAAAA,WAAW,CAACC,IAAD,CAAX;AACH,SAFD,MAEO;AACH;AACAC,UAAAA,QAAQ,CAACD,IAAD,EAAO;AACXS,YAAAA,IAAI,EAAE,QADK;AAEXC,YAAAA,OAAO,EAAE;AAFE,WAAP,CAAR;AAIH;AACJ,OAVD,MAUO;AACH;AACAT,QAAAA,QAAQ,CAACD,IAAD,EAAO;AACXS,UAAAA,IAAI,EAAE,QADK;AAEXC,UAAAA,OAAO,EAAE;AAFE,SAAP,CAAR;AAIH;AACJ,KAnBS,EAmBP,GAnBO,CAAV;AAoBH,GA1BD;;AA2BA,QAAMC,sBAAsB,GAAG;AAC3BC,IAAAA,KAAK,EAAE,CAACX,QAAD,EAAWY,QAAX,KAAwB;AAC3B,aACI,EAAC,GAAGA,QAAQ,CAAC,iBAAD,EAAoB;AAAEC,UAAAA,QAAQ,EAAE;AACxCV,YAAAA,KAAK,EAAE,IADiC;AAExCM,YAAAA,OAAO,EAAE;AAF+B,WAAZ;AAG7BK,UAAAA,SAAS,EAAE;AACVX,YAAAA,KAAK,EAAE,EADG;AAEVM,YAAAA,OAAO,EAAE;AAFC,WAHkB;AAM7BM,UAAAA,SAAS,EAAE;AACVZ,YAAAA,KAAK,EAAE,IADG;AAEVM,YAAAA,OAAO,EAAE;AAFC;AANkB,SAApB;AAAZ,OADJ;AAYH,KAd0B;AAe3BO,IAAAA,MAAM,EAAE,CAACnB,CAAD,EAAIC,WAAJ,EAAiBC,IAAjB,EAAuBC,QAAvB,KAAoCJ,kBAAkB,CAACC,CAAD,EAAIC,WAAJ,EAAiBC,IAAjB,EAAuBC,QAAvB,CAfnC;AAgB3BiB,IAAAA,QAAQ,EAAE,CAACd,KAAD,EAAQe,QAAR,KAAqB;AAC3BA,MAAAA,QAAQ,CAAC,iBAAD,EAAoBf,KAApB,EAA2B;AAAEgB,QAAAA,cAAc,EAAE;AAAlB,OAA3B,CAAR;AACH,KAlB0B;AAmB3BpB,IAAAA,IAAI,EAAE,iBAnBqB;AAoB3BqB,IAAAA,WAAW,EAAE,uNApBc;AAqB3BZ,IAAAA,IAAI,EAAE,UArBqB;AAsB3Ba,IAAAA,KAAK,EAAE;AAtBoB,GAA/B,CA5BuC,CAoDvC;;AACA,SAAO;AACHX,IAAAA;AADG,GAAP;AAGH,CAxDD;;AA0DA,eAAef,4BAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHookForumCreationHelpers = () => {\n    const calculateBlurOrNot = (e, clearErrors, name, setError) => {\n        // deconstruct value\n        const valueLen = e.target.value.length;\n\n        console.log(\"E\", e);\n        // timeout to delay for state change(s)\n        setTimeout(() => {\n            // clear error after proper selection\n            if (valueLen >= 50) {\n                if (valueLen <= 1000) {\n                    clearErrors(name);\n                } else {\n                    // set error - TOO many characters\n                    setError(name, {\n                        type: \"manual\",\n                        message: \"You may ONLY enter 1000 characters or less\",\n                    });\n                }\n            } else {\n                // NOT Long enough\n                setError(name, {\n                    type: \"manual\",\n                    message: \"You MUST enter AT Least 50 characters\",\n                });\n            }\n        }, 100);\n    }\n    const mainDescriptionChecker = {\n        check: (setError, register) => {\n            return (\n                {...register(\"mainDescription\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 50 characters to 1000 characters\"\n                }, minLength: {\n                    value: 50,\n                    message: \"You MUST enter AT Least 50 characters\"\n                }, maxLength: {\n                    value: 1000,\n                    message: \"You may ONLY enter 1000 characters or less\"\n                }})}\n            )\n        },\n        onBlur: (e, clearErrors, name, setError) => calculateBlurOrNot(e, clearErrors, name, setError),\n        onChange: (value, setValue) => {\n            setValue(\"mainDescription\", value, { shouldValidate: false });\n        },\n        name: \"mainDescription\",\n        placeholder: \"Enter whatever you feel like! Talk about hacking or if you're an employer, you can discuss our platform's BEST hacker's & how to safely hire or even just vett hacker's through various questions and/or even a poll!\",\n        type: \"textarea\",\n        label: \"Enter your post description/content\"\n    };\n    // return values to other component\n    return {\n        mainDescriptionChecker\n    }\n}\n\nexport default MainHookForumCreationHelpers;"]},"metadata":{},"sourceType":"module"}