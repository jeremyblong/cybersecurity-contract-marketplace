{"ast":null,"code":"import _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/createListing/create/createEmployerListing.js\";\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport one from '../../../../../../assets/images/job-search/1.jpg';\nimport { Container, Row, Col, Card, CardBody, Media, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Select from 'react-select';\nimport uuid from \"react-uuid\";\nimport _ from \"lodash\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport CreateHashtagsListingComponent from \"./helpers/hashtags/createHashtagsListing.js\";\nimport LocationSearchInput from \"./helpers/location/searchAddress.js\";\nimport { XCircle } from \"react-feather\";\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { DateRangePicker, Calendar } from 'react-date-range';\nimport Dropzone from 'react-dropzone-uploader';\nimport { connect } from \"react-redux\";\nimport { saveListingData } from \"../../../../../../redux/actions/employer/listings/listingData.js\";\nimport { experienceOptions, desiredSkillsOptions, rankOptions, maxNumberOfHackersOptions, tokensApplyOptions, disclosureOptions, physicalOptions, visibilityOptions } from \"./helpers/options/selectionOptions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport LoadingBar from 'react-top-loading-bar';\nimport { useHistory } from \"react-router-dom\";\n\nvar CreateJobListingMainHelper = function CreateJobListingMainHelper(props) {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      assetArray = _useState2[0],\n      setAssetArray = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      requiredRankToApply = _useState6[0],\n      setRequiredRankToApply = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      experienceAndCost = _useState8[0],\n      setExperienceAndCost = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      desiredSkills = _useState10[0],\n      setDesiredSkills = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      content = _useState12[0],\n      setContent = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      maxNumberOfApplicants = _useState14[0],\n      setMaxNumberOfApplicants = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      popoverOpen = _useState16[0],\n      setPopoverOpen = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      tokensRequiredToApply = _useState18[0],\n      setTokensRequiredToApply = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      disclosureVisibility = _useState20[0],\n      setDisclosureVisibility = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      typeOfHack = _useState22[0],\n      setTypeOfHack = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      rules = _useState24[0],\n      setRules = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      outOfScope = _useState26[0],\n      setOutOfScope = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      progress = _useState28[0],\n      setProgress = _useState28[1];\n\n  var _useState29 = useState(new Date()),\n      _useState30 = _slicedToArray(_useState29, 2),\n      selectionRange = _useState30[0],\n      setSelectionRange = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      count = _useState32[0],\n      setCount = _useState32[1];\n\n  var _useState33 = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      availiableHackerDates = _useState34[0],\n      handleHackerDates = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      listingVisibility = _useState36[0],\n      setListingVisibility = _useState36[1];\n\n  useEffect(function () {\n    var _props$previousData = props.previousData,\n        assetArray = _props$previousData.assetArray,\n        typeOfHack = _props$previousData.typeOfHack,\n        testingDatesHackers = _props$previousData.testingDatesHackers,\n        rulesOfEngagement = _props$previousData.rulesOfEngagement,\n        publicCompanyName = _props$previousData.publicCompanyName,\n        outOfScopeVulnerabilities = _props$previousData.outOfScopeVulnerabilities,\n        listingDescription = _props$previousData.listingDescription,\n        requiredRankToApply = _props$previousData.requiredRankToApply,\n        experienceAndCost = _props$previousData.experienceAndCost,\n        desiredSkills = _props$previousData.desiredSkills,\n        maxNumberOfApplicants = _props$previousData.maxNumberOfApplicants,\n        disclosureVisibility = _props$previousData.disclosureVisibility,\n        tokensRequiredToApply = _props$previousData.tokensRequiredToApply,\n        listingVisibility = _props$previousData.listingVisibility,\n        estimatedCompletionDate = _props$previousData.estimatedCompletionDate; // update state according to redux memory...\n\n    setAssetArray(typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray : []);\n    setTypeOfHack(typeof typeOfHack !== \"undefined\" ? typeOfHack : null);\n    setRules(typeof rulesOfEngagement !== \"undefined\" ? rulesOfEngagement : \"\");\n    setData(typeof publicCompanyName !== \"undefined\" ? function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        publicCompanyName: publicCompanyName\n      });\n    } : {});\n    setOutOfScope(typeof outOfScopeVulnerabilities !== \"undefined\" ? outOfScopeVulnerabilities : \"\");\n    setContent(typeof listingDescription !== \"undefined\" ? listingDescription : \"\");\n    setMaxNumberOfApplicants(typeof maxNumberOfApplicants !== \"undefined\" ? maxNumberOfApplicants : null);\n    setRequiredRankToApply(typeof requiredRankToApply !== \"undefined\" ? requiredRankToApply : null);\n    setExperienceAndCost(typeof experienceAndCost !== \"undefined\" ? experienceAndCost : null);\n    setDesiredSkills(typeof desiredSkills !== \"undefined\" ? desiredSkills : []);\n    setDisclosureVisibility(typeof disclosureVisibility !== \"undefined\" ? disclosureVisibility : null);\n    setTokensRequiredToApply(typeof tokensRequiredToApply !== \"undefined\" ? tokensRequiredToApply : null);\n    setListingVisibility(typeof listingVisibility !== \"undefined\" ? listingVisibility : null);\n    props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n      testingDatesHackers: []\n    }));\n  }, []);\n\n  var onChangeDescription = function onChangeDescription(value) {\n    setContent(value);\n    props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n      listingDescription: value\n    }));\n  };\n\n  var handleChangeInput = function handleChangeInput(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setData(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n    props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleAssetAddition = function handleAssetAddition(e) {\n    e.preventDefault(); // assetName\n\n    setAssetArray(function (prevState) {\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        assetArray: [].concat(_toConsumableArray(prevState), [{\n          id: uuid(),\n          name: data.assetName\n        }])\n      }));\n      return [].concat(_toConsumableArray(prevState), [{\n        id: uuid(),\n        name: data.assetName\n      }]);\n    });\n    setData(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        assetName: \"\"\n      });\n    });\n  };\n\n  var changeBountyPrices = function changeBountyPrices(e, rewardLevel, asset) {\n    var value = e.target.value;\n    setAssetArray(function (prevState) {\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        assetArray: prevState.map(function (item, i) {\n          if (item.id === asset.id) {\n            return _objectSpread(_objectSpread({}, item), {}, _defineProperty({}, rewardLevel, Number(value)));\n          } else {\n            return item;\n          }\n        })\n      }));\n      return prevState.map(function (item, i) {\n        if (item.id === asset.id) {\n          return _objectSpread(_objectSpread({}, item), {}, _defineProperty({}, rewardLevel, Number(value)));\n        } else {\n          return item;\n        }\n      });\n    });\n  };\n\n  var renderBusinessLocationPortion = function renderBusinessLocationPortion() {\n    if (_.has(props.previousData, \"typeOfHack\") && typeOfHack !== null && [\"physical-hack\", \"both-assets\"].indexOf(typeOfHack.value) > -1) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mb-0\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, \"Location - Physical Hacking (Only Provided To \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 88\n        }\n      }, \"SELECTED/HIRED\"), \" Applicants)\"), /*#__PURE__*/React.createElement(Form, {\n        className: \"theme-form\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        lg: \"12\",\n        md: \"12\",\n        xl: \"12\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"exampleFormControlInput1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }, \"Enter your company business address (the address that your hackers will be testing at):\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 166\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(LocationSearchInput, {\n        props: props,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }))))));\n    }\n  };\n\n  var renderPhysicalHackingDates = function renderPhysicalHackingDates() {\n    if (_.has(props.previousData, \"typeOfHack\") && typeOfHack !== null && [\"physical-hack\", \"both-assets\"].indexOf(typeOfHack.value) > -1) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"exampleFormControlInput1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, \"Dates Availiable To Hackers To Test Physical Assets:\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 115\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, \"These are the days that will be available to the \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 73\n        }\n      }, \"hired/selected\"), \" hacker canidates to choose from when deciding which days they will attempt to infiltrate your company. This is only relevant for \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"blue\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 234\n        }\n      }, \"PHYSICAL\"), \" hacking requirements.\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          paddingBottom: \"20px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DateRangePicker, {\n        minDate: new Date(),\n        showSelectionPreview: true,\n        moveRangeOnFirstSelection: true,\n        ranges: availiableHackerDates,\n        onChange: handleDatesSelectable,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          handleDatesSelectable([]);\n        },\n        className: \"outlined-box\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead blue-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, \"Clear previously selected dates...\")));\n    }\n  };\n\n  var handleDeadlineSelect = function handleDeadlineSelect(date) {\n    if (new Date(date) > new Date()) {\n      setSelectionRange(date);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        estimatedCompletionDate: date\n      }));\n    } else {\n      NotificationManager.warning(\"You must select a date that is current or beyond today's current date.\", \"Pick a valid date!\", 3500);\n    }\n  };\n\n  console.log(\"availiableHackerDates\", availiableHackerDates);\n\n  var handleDatesSelectable = function handleDatesSelectable(ranges) {\n    console.log(\"ranges\", ranges.selection);\n\n    if (typeof ranges.selection !== \"undefined\") {\n      if (new Date(ranges.selection.startDate) > new Date()) {\n        if (count === 0) {\n          handleHackerDates(function (prevState) {\n            console.log(\"ran.\", prevState);\n            props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n              testingDatesHackers: [ranges.selection]\n            }));\n            return [ranges.selection];\n          });\n          setCount(count + 1);\n        } else {\n          handleHackerDates(function (prevState) {\n            console.log(\"ran.\", prevState);\n            props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n              testingDatesHackers: [].concat(_toConsumableArray(prevState), [ranges.selection])\n            }));\n            return [].concat(_toConsumableArray(prevState), [ranges.selection]);\n          });\n          setCount(count + 1);\n        }\n      } else {\n        NotificationManager.warning(\"You must select a date that is current or beyond today's current date.\", \"Pick a valid date!\", 3500);\n      }\n\n      ;\n    } else {\n      handleHackerDates(function (prevState) {\n        console.log(\"ran else!...\", prevState);\n        props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n          testingDatesHackers: [{\n            startDate: new Date(),\n            endDate: new Date(),\n            key: 'selection'\n          }]\n        }));\n        return [{\n          startDate: new Date(),\n          endDate: new Date(),\n          key: 'selection'\n        }];\n      });\n    }\n  };\n\n  var getUploadParams = function getUploadParams(_ref) {\n    var meta = _ref.meta;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  var handleChangeStatus = function handleChangeStatus(_ref2, status) {\n    var meta = _ref2.meta,\n        file = _ref2.file;\n    console.log(status, meta, file);\n\n    if (status === \"done\") {\n      var _data = new FormData();\n\n      _data.append(\"file\", file);\n\n      _data.append(\"meta\", meta);\n\n      var config = {\n        onUploadProgress: function onUploadProgress(progressEvent) {\n          var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log(\"percentCompleted\", percentCompleted);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/upload/file/upon/selection/employer/listing\"), _data, config).then(function (res) {\n        if (res.data.message === \"Successfully uploaded content!\") {\n          console.log(res.data);\n          var _res$data = res.data,\n              _file = _res$data.file,\n              generatedID = _res$data.generatedID;\n\n          if (typeof props.previousData.uploadedFiles !== \"undefined\" && props.previousData.uploadedFiles.length > 0) {\n            props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n              uploadedFiles: [].concat(_toConsumableArray(props.previousData.uploadedFiles), [_objectSpread(_objectSpread({}, _file), {}, {\n                onlineID: generatedID\n              })])\n            }));\n          } else {\n            props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n              uploadedFiles: [_objectSpread(_objectSpread({}, _file), {}, {\n                onlineID: generatedID\n              })]\n            }));\n          }\n\n          NotificationManager.success(\"We've successfully uploaded your file! Please proceed filling out your information or add more files.\", 'Successfully uploaded file!', 4500);\n        } else {\n          console.log(\"err\", res.data);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  };\n\n  var handleListingSubmission = function handleListingSubmission(e) {\n    e.preventDefault();\n    var count = 0;\n\n    if (typeof props.previousData.typeOfHack !== \"undefined\") {\n      if (props.previousData.typeOfHack.value === \"physical-hack\") {\n        var _props$previousData2 = props.previousData,\n            _assetArray = _props$previousData2.assetArray,\n            _typeOfHack = _props$previousData2.typeOfHack,\n            testingDatesHackers = _props$previousData2.testingDatesHackers,\n            rulesOfEngagement = _props$previousData2.rulesOfEngagement,\n            publicCompanyName = _props$previousData2.publicCompanyName,\n            outOfScopeVulnerabilities = _props$previousData2.outOfScopeVulnerabilities,\n            listingDescription = _props$previousData2.listingDescription,\n            hashtags = _props$previousData2.hashtags,\n            businessAddress = _props$previousData2.businessAddress,\n            _requiredRankToApply = _props$previousData2.requiredRankToApply,\n            _experienceAndCost = _props$previousData2.experienceAndCost,\n            _desiredSkills = _props$previousData2.desiredSkills,\n            _maxNumberOfApplicants = _props$previousData2.maxNumberOfApplicants,\n            _disclosureVisibility = _props$previousData2.disclosureVisibility,\n            _tokensRequiredToApply = _props$previousData2.tokensRequiredToApply,\n            _listingVisibility = _props$previousData2.listingVisibility,\n            estimatedCompletionDate = _props$previousData2.estimatedCompletionDate;\n\n        for (var key in props.previousData) {\n          var el = props.previousData[key];\n\n          switch (key) {\n            case \"testingDatesHackers\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Required Testing Dates'\", \"Complete 'required testing dates'!\", 4500);\n              }\n\n              break;\n\n            case \"listingDescription\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Listing Description'\", \"Complete 'Listing Description'!\", 4500);\n              }\n\n              break;\n\n            case \"rulesOfEngagement\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Rules Of Engagement'\", \"Complete 'Rules Of Engagement'!\", 4500);\n              }\n\n              break;\n\n            case \"publicCompanyName\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Public Company Name'\", \"Complete 'Public Company Name'!\", 4500);\n              }\n\n              break;\n\n            case \"outOfScopeVulnerabilities\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Out Of Scope Vulnerabilities'\", \"Complete 'Out Of Scope Vulnerabilities'!\", 4500);\n              }\n\n              break;\n\n            case \"requiredRankToApply\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Required Rank To Apply'\", \"Complete 'Required Rank To Apply'!\", 4500);\n              }\n\n              break;\n\n            case \"experienceAndCost\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Experience & Cost'\", \"Complete 'Experience & Cost'!\", 4500);\n              }\n\n              break;\n\n            case \"desiredSkills\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Desired Skills'\", \"Complete 'Desired Skills'!\", 4500);\n              }\n\n              break;\n\n            case \"hashtags\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Hashtags'\", \"Complete 'Hashtags'!\", 4500);\n              }\n\n              break;\n\n            case \"maxNumberOfApplicants\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Max Number Of Applicants'\", \"Complete 'Max Number Of Applicants'!\", 4500);\n              }\n\n              break;\n\n            case \"tokensRequiredToApply\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Tokens Required To Apply'\", \"Complete 'Tokens Required To Apply'!\", 4500);\n              }\n\n              break;\n\n            case \"disclosureVisibility\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Disclosure Visibility'\", \"Complete 'Disclosure Visibility'!\", 4500);\n              }\n\n              break;\n\n            case \"typeOfHack\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Type Of Hacks'\", \"Complete 'Type Of Hacks'!\", 4500);\n              }\n\n              break;\n\n            case \"listingVisibility\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Listing Visibility'\", \"Complete 'Listing Visibility'!\", 4500);\n              }\n\n              break;\n\n            case \"estimatedCompletionDate\":\n              if (el && typeof el.getMonth === 'function') {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Estimated Completion Date'\", \"Complete 'Estimated Completion Date'!\", 4500);\n              }\n\n              break;\n\n            case \"businessAddress\":\n              if (!_.isEmpty(el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Business Address'\", \"Complete 'Business Address'!\", 4500);\n              }\n\n              break;\n\n            case \"assetArray\":\n              if (typeof el !== \"undefined\" && el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Asset List'\", \"Complete 'Asset List'!\", 4500);\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        ;\n\n        if (count >= 17) {\n          var jobData = {\n            assetArray: _assetArray,\n            typeOfHack: _typeOfHack,\n            testingDatesHackers: testingDatesHackers,\n            rulesOfEngagement: rulesOfEngagement,\n            publicCompanyName: publicCompanyName,\n            outOfScopeVulnerabilities: outOfScopeVulnerabilities,\n            listingDescription: listingDescription,\n            hashtags: hashtags,\n            businessAddress: businessAddress,\n            requiredRankToApply: _requiredRankToApply,\n            experienceAndCost: _experienceAndCost,\n            desiredSkills: _desiredSkills,\n            maxNumberOfApplicants: _maxNumberOfApplicants,\n            disclosureVisibility: _disclosureVisibility,\n            tokensRequiredToApply: _tokensRequiredToApply,\n            listingVisibility: _listingVisibility,\n            estimatedCompletionDate: estimatedCompletionDate,\n            physicalLocation: true\n          };\n          history.push(\"/review/employer/listing/data/payment\", {\n            jobData: jobData\n          });\n        }\n      } else {\n        var _props$previousData3 = props.previousData,\n            _assetArray2 = _props$previousData3.assetArray,\n            _typeOfHack2 = _props$previousData3.typeOfHack,\n            _testingDatesHackers = _props$previousData3.testingDatesHackers,\n            _rulesOfEngagement = _props$previousData3.rulesOfEngagement,\n            _publicCompanyName = _props$previousData3.publicCompanyName,\n            _outOfScopeVulnerabilities = _props$previousData3.outOfScopeVulnerabilities,\n            _listingDescription = _props$previousData3.listingDescription,\n            _hashtags = _props$previousData3.hashtags,\n            _requiredRankToApply2 = _props$previousData3.requiredRankToApply,\n            _experienceAndCost2 = _props$previousData3.experienceAndCost,\n            _desiredSkills2 = _props$previousData3.desiredSkills,\n            _maxNumberOfApplicants2 = _props$previousData3.maxNumberOfApplicants,\n            _disclosureVisibility2 = _props$previousData3.disclosureVisibility,\n            _tokensRequiredToApply2 = _props$previousData3.tokensRequiredToApply,\n            _listingVisibility2 = _props$previousData3.listingVisibility,\n            _estimatedCompletionDate = _props$previousData3.estimatedCompletionDate;\n\n        for (var _key in props.previousData) {\n          var _el = props.previousData[_key];\n          console.log(\"digital - \", _key, _el);\n\n          switch (_key) {\n            case \"listingDescription\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Listing Description'\", \"Complete 'Listing Description'!\", 4500);\n              }\n\n              break;\n\n            case \"rulesOfEngagement\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Rules Of Engagement'\", \"Complete 'Rules Of Engagement'!\", 4500);\n              }\n\n              break;\n\n            case \"publicCompanyName\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Public Company Name'\", \"Complete 'Public Company Name'!\", 4500);\n              }\n\n              break;\n\n            case \"outOfScopeVulnerabilities\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Out Of Scope Vulnerabilities'\", \"Complete 'Out Of Scope Vulnerabilities'!\", 4500);\n              }\n\n              break;\n\n            case \"requiredRankToApply\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Required Rank To Apply'\", \"Complete 'Required Rank To Apply'!\", 4500);\n              }\n\n              break;\n\n            case \"experienceAndCost\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Experience & Cost'\", \"Complete 'Experience & Cost'!\", 4500);\n              }\n\n              break;\n\n            case \"desiredSkills\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Desired Skills'\", \"Complete 'Desired Skills'!\", 4500);\n              }\n\n              break;\n\n            case \"hashtags\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Hashtags'\", \"Complete 'Hashtags'!\", 4500);\n              }\n\n              break;\n\n            case \"maxNumberOfApplicants\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Max Number Of Applicants'\", \"Complete 'Max Number Of Applicants'!\", 4500);\n              }\n\n              break;\n\n            case \"tokensRequiredToApply\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Tokens Required To Apply'\", \"Complete 'Tokens Required To Apply'!\", 4500);\n              }\n\n              break;\n\n            case \"disclosureVisibility\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Disclosure Visibility'\", \"Complete 'Disclosure Visibility'!\", 4500);\n              }\n\n              break;\n\n            case \"typeOfHack\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Type Of Hacks'\", \"Complete 'Type Of Hacks'!\", 4500);\n              }\n\n              break;\n\n            case \"listingVisibility\":\n              if (!_.isEmpty(_el)) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Listing Visibility'\", \"Complete 'Listing Visibility'!\", 4500);\n              }\n\n              break;\n\n            case \"estimatedCompletionDate\":\n              if (_el && typeof _el.getMonth === 'function') {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Estimated Completion Date'\", \"Complete 'Estimated Completion Date'!\", 4500);\n              }\n\n              break;\n\n            case \"assetArray\":\n              if (typeof _el !== \"undefined\" && _el.length > 0) {\n                count++;\n              } else {\n                NotificationManager.error(\"You are missing or haven't filled out the 'Asset List'\", \"Complete 'Asset List'!\", 4500);\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        if (count >= 15) {\n          var _jobData = {\n            assetArray: _assetArray2,\n            typeOfHack: _typeOfHack2,\n            testingDatesHackers: null,\n            rulesOfEngagement: _rulesOfEngagement,\n            publicCompanyName: _publicCompanyName,\n            outOfScopeVulnerabilities: _outOfScopeVulnerabilities,\n            listingDescription: _listingDescription,\n            hashtags: _hashtags,\n            businessAddress: null,\n            requiredRankToApply: _requiredRankToApply2,\n            experienceAndCost: _experienceAndCost2,\n            desiredSkills: _desiredSkills2,\n            maxNumberOfApplicants: _maxNumberOfApplicants2,\n            disclosureVisibility: _disclosureVisibility2,\n            tokensRequiredToApply: _tokensRequiredToApply2,\n            listingVisibility: _listingVisibility2,\n            estimatedCompletionDate: _estimatedCompletionDate,\n            physicalLocation: false\n          };\n          history.push(\"/review/employer/listing/data/payment\", {\n            jobData: _jobData\n          });\n        }\n      }\n    } else {\n      NotificationManager.error(\"You must choose a hack type - physical OR digital but you must choose.\", \"Choose Hack Type!\", 4500);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Create Listing\",\n    title: \"Create a public employer listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#f11946\",\n    progress: progress,\n    onLoaderFinished: function onLoaderFinished() {\n      return setProgress(0);\n    },\n    className: \"loadingBarRaise\",\n    containerClassName: \"loadingBarRaise\",\n    height: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"12 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-40 img-fluid m-r-20\",\n    src: one,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"f-w-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 49\n    }\n  }, \"Create an employer listing\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 45\n    }\n  }, \"Create a listing requesting for your company to be hacked (this will be public visible information to our database of hackers)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 41\n    }\n  }, \"General Details\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 57\n    }\n  }, \"Public Company Name:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    value: data.publicCompanyName,\n    onChange: handleChangeInput,\n    className: \"form-control\",\n    id: \"exampleFormControlInput1\",\n    name: \"publicCompanyName\",\n    type: \"text\",\n    placeholder: \"Enter your company's publically known name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 57\n    }\n  }, \"Preferred Rank/Level Required To Apply:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 138\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Select, {\n    value: requiredRankToApply,\n    onChange: function onChange(value) {\n      setRequiredRankToApply(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        requiredRankToApply: value\n      }));\n    },\n    options: rankOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 57\n    }\n  }, \"Experience Rewarded To Winner + Cost To Post:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 144\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7px\",\n      paddingBottom: \"7px\"\n    },\n    className: \"text-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 57\n    }\n  }, \"Experience is rewarded to the hacker winner. Hackers level up their accounts with XP points and can redeem the XP for cash ($-USD) after reaching certain ranks/levels. Having a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 311\n    }\n  }, \"higher\"), \" XP reward will incentivize hackers to pick your company over others - however it \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 416\n    }\n  }, \"costs more\"), \".\"), /*#__PURE__*/React.createElement(Select, {\n    value: experienceAndCost,\n    onChange: function onChange(value) {\n      setExperienceAndCost(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        experienceAndCost: value\n      }));\n    },\n    options: experienceOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlpassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 57\n    }\n  }, \"Required/Desired Skills From Hackers:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 138\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(MultiSelect, {\n    options: desiredSkillsOptions,\n    value: desiredSkills,\n    onChange: function onChange(value) {\n      setDesiredSkills(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        desiredSkills: value\n      }));\n    },\n    labelledBy: \"Select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlpassword1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 57\n    }\n  }, \"HashTags/Tags (Hackers will use these to find your listing):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 162\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(CreateHashtagsListingComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-form-label pt-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 90\n    }\n  }, \"MAX\"), \" Number Of Required Hackers:\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: maxNumberOfApplicants,\n    onChange: function onChange(value) {\n      setMaxNumberOfApplicants(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        maxNumberOfApplicants: value\n      }));\n    },\n    options: maxNumberOfHackersOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      setPopoverOpen(true);\n    },\n    id: \"PopoverID\",\n    className: \"col-form-label pt-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 53\n    }\n  }, \"Amount Of Tokens Required To Apply (hover for info):\"), /*#__PURE__*/React.createElement(Popover, {\n    placement: \"top\",\n    isOpen: popoverOpen,\n    target: \"PopoverID\",\n    toggle: function toggle() {\n      setPopoverOpen(!popoverOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 57\n    }\n  }, \"Tokens are required from hackers to apply to this job\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    onMouseLeave: function onMouseLeave() {\n      setPopoverOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 57\n    }\n  }, \"Hackers purchase tokens in which they then use to apply to your listing(s). These are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 147\n    }\n  }, \"REQUIRED\"), \" to apply to listings so please choose the amount you charge proportionally to the work required from your company and the reward given to successful hackers.\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: tokensRequiredToApply,\n    onChange: function onChange(value) {\n      setTokensRequiredToApply(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        tokensRequiredToApply: value\n      }));\n    },\n    options: tokensApplyOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 57\n    }\n  }, \"Public Or Private Vulnerability Disclosures (Upon Successful Hack):\"), /*#__PURE__*/React.createElement(Select, {\n    value: disclosureVisibility,\n    onChange: function onChange(value) {\n      setDisclosureVisibility(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        disclosureVisibility: value\n      }));\n    },\n    options: disclosureOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 57\n    }\n  }, \"Type Of Hack Required (Physical/in-person \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 141\n    }\n  }, \"OR\"), \" digital/online assets):\"), /*#__PURE__*/React.createElement(Select, {\n    value: typeOfHack,\n    onChange: function onChange(value) {\n      setTypeOfHack(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        typeOfHack: value\n      }));\n    },\n    options: physicalOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 41\n    }\n  }, \"Timespan & Timeline Information + Visibility Type\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 61\n    }\n  }, \"Visibility Type (Who Can See Your Listing Or Apply Once Live):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 165\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Select, {\n    value: listingVisibility,\n    onChange: function onChange(value) {\n      setListingVisibility(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        listingVisibility: value\n      }));\n    },\n    options: visibilityOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 61\n    }\n  })), renderPhysicalHackingDates())), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    lg: \"12\",\n    xl: \"6 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 57\n    }\n  }, \"Estimated/Expected Day Of Completion (Must Be Successfully Hacked By This Day For Full Payment):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 195\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 57\n    }\n  }, \"These are the days in which you expect the hired hackers/contractors to have \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 171\n    }\n  }, \"successfully\"), \" completed any hacks or attacks (digital or physical) against your company. Disclosures will occurr shortly after whichever days are selected and any further testing or reporting shall proceed at that point.\"), /*#__PURE__*/React.createElement(Calendar, {\n    minDate: new Date(),\n    date: _.has(props.previousData, \"estimatedCompletionDate\") ? new Date(props.previousData.estimatedCompletionDate) : new Date(),\n    onChange: handleDeadlineSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 57\n    }\n  }))))), renderBusinessLocationPortion(), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 62\n    }\n  }, \"DIGITAL\"), \" Assets & Payment/Reward Information - Digital Scope\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"12 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 57\n    }\n  }, \"Asset Endpoint Or URL:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 121\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleChangeInput,\n    value: data.assetName,\n    className: \"form-control\",\n    id: \"exampleFormControlInput7\",\n    name: \"assetName\",\n    type: \"text\",\n    placeholder: \"Eg.'s - api.yourcompany.com OR https://www.yourcompanywebsite.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAssetAddition,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 97\n    }\n  }, \"Add Asset\"))))), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 49\n    }\n  }, typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray.map(function (asset, index) {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"list-group-item flex-column align-items-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingBottom: \"12px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      active: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 65\n      }\n    }, asset.name, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        setAssetArray(function (prevState) {\n          props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n            assetArray: prevState.filter(function (item, index) {\n              if (item.id !== asset.id) {\n                return item;\n              }\n            })\n          }));\n          return prevState.filter(function (item, index) {\n            if (item.id !== asset.id) {\n              return item;\n            }\n          });\n        });\n      },\n      id: \"float-right-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 99\n      }\n    }, /*#__PURE__*/React.createElement(XCircle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 90\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#ffc800\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 80\n      }\n    }, \"Low\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: function onChange(e) {\n        changeBountyPrices(e, \"lowSeverity\", asset);\n      },\n      value: asset.lowSeverity,\n      className: \"form-control\",\n      type: \"number\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#ed3824\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 80\n      }\n    }, \"Medium\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: function onChange(e) {\n        changeBountyPrices(e, \"mediumSeverity\", asset);\n      },\n      value: asset.mediumSeverity,\n      className: \"form-control\",\n      type: \"number\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#8f0091\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 80\n      }\n    }, \"High\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: function onChange(e) {\n        changeBountyPrices(e, \"highSeverity\", asset);\n      },\n      value: asset.highSeverity,\n      className: \"form-control\",\n      type: \"number\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#b30211\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 80\n      }\n    }, \"Critical\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: function onChange(e) {\n        changeBountyPrices(e, \"criticalSeverity\", asset);\n      },\n      value: asset.criticalSeverity,\n      className: \"form-control\",\n      type: \"number\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 73\n      }\n    }))))));\n  }) : null))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 41\n    }\n  }, \"Upload Any Supporting Documents/Files\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label pt-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 57\n    }\n  }, \"Upload File(s):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 111\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 5,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Drop A File(s)\",\n    styles: {\n      dropzone: {\n        height: 225\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 61\n    }\n  })))))), /*#__PURE__*/React.createElement(ListGroup, {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 41\n    }\n  }, typeof props.previousData.uploadedFiles !== \"undefined\" && props.previousData.uploadedFiles.length > 0 ? props.previousData.uploadedFiles.map(function (file, index) {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 53\n      }\n    }, file.name, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n          uploadedFiles: props.previousData.uploadedFiles.filter(function (item, indxxx) {\n            if (item.id !== file.id) {\n              return item;\n            }\n          })\n        }));\n      },\n      className: \"badge badge-primary counter digits hover-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 141\n      }\n    }, \"Remove file from uploads\"));\n  }) : null), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 41\n    }\n  }, \"Listing Description/Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 41\n    }\n  }, \"Include as detailed of a description as you possibly can so our hackers will know what they're being asked to attempt/hack. This can be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 214\n    }\n  }, \"general\"), \" information as well as any other information that you'd like to include. Strong/detailed listing descriptions generally always have higher response/application rates compared to minimal detail listings.\"), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"editor_container\",\n    onChange: onChangeDescription,\n    value: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\",\n      paddingTop: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 41\n    }\n  }, \"Program/Listing Rules & Conditions Of Engagement\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 41\n    }\n  }, \"Please include an \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 96\n    }\n  }, \"exhaustive list\"), \" of specific \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 141\n    }\n  }, \"RULES\"), \" our hackers should follow and abide by while applying allowed hacks to avoid \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 241\n    }\n  }, \"termination or suspension\"), \" from our platform for misuse (referring to our hackers). We stand by our rules and proceedures so please be as detailed and clear as possible while outlines what you expect from potential hacker candiates and the conditions in place once hired.\"), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"editor_container\",\n    onChange: function onChange(value) {\n      setRules(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        rulesOfEngagement: value\n      }));\n    },\n    value: rules,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\",\n      paddingTop: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 116\n    }\n  }, \"OUT OF SCOPE\"), \" Vulnerabilities & Boundaries\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 41\n    }\n  }, \"Please include an exhaustive list of which vulnerabilities are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 141\n    }\n  }, \"NOT\"), \" included as acceptable reports as well as anything you would like our hackers to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 243\n    }\n  }, \"abstain\"), \" from testing or tampering with such as texting accounts, unauthenticated tests, etc... \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 355\n    }\n  }, \"BE AS SPECIFIC AS POSSIBLE.\")), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"editor_container_two\",\n    onChange: function onChange(value) {\n      setOutOfScope(value);\n      props.saveListingData(_objectSpread(_objectSpread({}, props.previousData), {}, {\n        outOfScopeVulnerabilities: value\n      }));\n    },\n    value: outOfScope,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: handleListingSubmission,\n    color: \"primary mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 37\n    }\n  }, \"Submit & Continue To Payment/Confirmation Page\"))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    previousData: _.has(state.listingData, \"listingData\") ? _objectSpread({\n      testingDatesHackers: [],\n      listingDescription: \"\",\n      rulesOfEngagement: \"\",\n      assetArray: [],\n      typeOfHack: {},\n      publicCompanyName: \"\",\n      outOfScopeVulnerabilities: \"\",\n      hashtags: [],\n      businessAddress: {},\n      requiredRankToApply: {},\n      experienceAndCost: {},\n      desiredSkills: [],\n      maxNumberOfApplicants: {},\n      disclosureVisibility: {},\n      tokensRequiredToApply: {},\n      listingVisibility: {},\n      estimatedCompletionDate: null\n    }, state.listingData.listingData) : {}\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveListingData: saveListingData\n})(CreateJobListingMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/createListing/create/createEmployerListing.js"],"names":["React","Fragment","useEffect","useState","Breadcrumb","one","Container","Row","Col","Card","CardBody","Media","Button","Form","FormGroup","Label","Input","InputGroup","InputGroupAddon","ListGroup","ListGroupItem","Popover","PopoverBody","PopoverHeader","Select","uuid","_","MultiSelect","CreateHashtagsListingComponent","LocationSearchInput","XCircle","SimpleMDE","DateRangePicker","Calendar","Dropzone","connect","saveListingData","experienceOptions","desiredSkillsOptions","rankOptions","maxNumberOfHackersOptions","tokensApplyOptions","disclosureOptions","physicalOptions","visibilityOptions","NotificationManager","axios","LoadingBar","useHistory","CreateJobListingMainHelper","props","history","assetArray","setAssetArray","data","setData","requiredRankToApply","setRequiredRankToApply","experienceAndCost","setExperienceAndCost","desiredSkills","setDesiredSkills","content","setContent","maxNumberOfApplicants","setMaxNumberOfApplicants","popoverOpen","setPopoverOpen","tokensRequiredToApply","setTokensRequiredToApply","disclosureVisibility","setDisclosureVisibility","typeOfHack","setTypeOfHack","rules","setRules","outOfScope","setOutOfScope","progress","setProgress","Date","selectionRange","setSelectionRange","count","setCount","startDate","endDate","key","availiableHackerDates","handleHackerDates","listingVisibility","setListingVisibility","previousData","testingDatesHackers","rulesOfEngagement","publicCompanyName","outOfScopeVulnerabilities","listingDescription","estimatedCompletionDate","length","prevState","onChangeDescription","value","handleChangeInput","e","target","name","handleAssetAddition","preventDefault","id","assetName","changeBountyPrices","rewardLevel","asset","map","item","i","Number","renderBusinessLocationPortion","has","indexOf","renderPhysicalHackingDates","color","paddingBottom","handleDatesSelectable","handleDeadlineSelect","date","warning","console","log","ranges","selection","getUploadParams","meta","url","handleChangeStatus","status","file","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","generatedID","uploadedFiles","onlineID","success","catch","err","handleListingSubmission","hashtags","businessAddress","el","error","isEmpty","getMonth","jobData","physicalLocation","push","paddingTop","index","filter","lowSeverity","mediumSeverity","highSeverity","criticalSeverity","dropzone","height","dropzoneActive","borderColor","indxxx","width","mapStateToProps","state","listingData"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport one from '../../../../../../assets/images/job-search/1.jpg';\nimport { Container, Row, Col, Card, CardBody, Media, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Select from 'react-select';\nimport uuid from \"react-uuid\";\nimport _ from \"lodash\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport CreateHashtagsListingComponent from \"./helpers/hashtags/createHashtagsListing.js\";\nimport LocationSearchInput from \"./helpers/location/searchAddress.js\";\nimport { XCircle } from \"react-feather\";\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { DateRangePicker, Calendar } from 'react-date-range';\nimport Dropzone from 'react-dropzone-uploader';\nimport { connect } from \"react-redux\";\nimport { saveListingData } from \"../../../../../../redux/actions/employer/listings/listingData.js\";\nimport {\n    experienceOptions,\n    desiredSkillsOptions,\n    rankOptions,\n    maxNumberOfHackersOptions,\n    tokensApplyOptions,\n    disclosureOptions,\n    physicalOptions,\n    visibilityOptions\n} from \"./helpers/options/selectionOptions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport LoadingBar from 'react-top-loading-bar';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CreateJobListingMainHelper = (props) => {\n\n    const history = useHistory();\n\n    const [ assetArray, setAssetArray ] = useState([]);\n    const [ data, setData ] = useState({});\n    const [ requiredRankToApply, setRequiredRankToApply ] = useState(null);\n    const [ experienceAndCost, setExperienceAndCost ] = useState(null);\n    const [ desiredSkills, setDesiredSkills ] = useState([]);\n    const [ content,setContent ] = useState(\"\");\n    const [ maxNumberOfApplicants, setMaxNumberOfApplicants ] = useState(null);\n    const [ popoverOpen, setPopoverOpen ] = useState(false);\n    const [ tokensRequiredToApply, setTokensRequiredToApply ] = useState(null);\n    const [ disclosureVisibility, setDisclosureVisibility ] = useState(null);\n    const [ typeOfHack, setTypeOfHack ] = useState(null);\n    const [ rules, setRules ] = useState(\"\");\n    const [ outOfScope, setOutOfScope ] = useState(\"\");\n    const [ progress, setProgress ] = useState(0);\n    const [ selectionRange, setSelectionRange ] = useState(new Date());\n    const [ count, setCount ] = useState(0);\n    const [ availiableHackerDates, handleHackerDates ] = useState([{\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection'\n    }]);\n    const [ listingVisibility, setListingVisibility ] = useState(null);\n\n    useEffect(() => {\n        const { assetArray, typeOfHack, testingDatesHackers, rulesOfEngagement, publicCompanyName, outOfScopeVulnerabilities, listingDescription, requiredRankToApply, experienceAndCost, desiredSkills, maxNumberOfApplicants, disclosureVisibility, tokensRequiredToApply, listingVisibility, estimatedCompletionDate } = props.previousData;\n\n        // update state according to redux memory...\n\n        setAssetArray(typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray : []);\n        setTypeOfHack(typeof typeOfHack !== \"undefined\" ? typeOfHack : null);\n        setRules(typeof rulesOfEngagement !== \"undefined\" ? rulesOfEngagement : \"\");\n        setData(typeof publicCompanyName !== \"undefined\" ? prevState => {\n            return {\n                ...prevState,\n                publicCompanyName\n            }\n        } : {});\n        setOutOfScope(typeof outOfScopeVulnerabilities !== \"undefined\" ? outOfScopeVulnerabilities : \"\");\n        setContent(typeof listingDescription !== \"undefined\" ? listingDescription : \"\");\n        setMaxNumberOfApplicants(typeof maxNumberOfApplicants !== \"undefined\" ? maxNumberOfApplicants : null);\n        setRequiredRankToApply(typeof requiredRankToApply !== \"undefined\" ? requiredRankToApply : null);\n        setExperienceAndCost(typeof experienceAndCost !== \"undefined\" ? experienceAndCost : null);\n        setDesiredSkills(typeof desiredSkills !== \"undefined\" ? desiredSkills : []);\n        setDisclosureVisibility(typeof disclosureVisibility !== \"undefined\" ? disclosureVisibility : null);\n        setTokensRequiredToApply(typeof tokensRequiredToApply !== \"undefined\" ? tokensRequiredToApply : null);\n        setListingVisibility(typeof listingVisibility !== \"undefined\" ? listingVisibility : null);\n\n        props.saveListingData({\n            ...props.previousData,\n            testingDatesHackers: []\n        })\n    }, [])\n\n    const onChangeDescription = (value) => {\n\n        setContent(value);\n\n        props.saveListingData({\n            ...props.previousData,\n            listingDescription: value\n        })\n    }\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n\n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        })\n\n        props.saveListingData({\n            ...props.previousData,\n            [name]: value\n        })\n    }\n    const handleAssetAddition = (e) => {\n        e.preventDefault();\n        // assetName\n\n        setAssetArray(prevState => {\n            props.saveListingData({\n                ...props.previousData,\n                assetArray: [...prevState, {\n                    id: uuid(),\n                    name: data.assetName\n                }]\n            })\n            return [...prevState, {\n                id: uuid(),\n                name: data.assetName\n            }]\n        });\n        setData(prevState => {\n            return {\n                ...prevState,\n                assetName: \"\"\n            }\n        })\n    }\n    const changeBountyPrices = (e, rewardLevel, asset) => {\n        const { value } = e.target;\n\n        setAssetArray(prevState => {\n            props.saveListingData({\n                ...props.previousData,\n                assetArray: prevState.map((item, i) => {\n                    if (item.id === asset.id) {\n                        return {\n                            ...item,\n                            [rewardLevel]: Number(value)\n                        }\n                    } else {\n                        return item;\n                    }\n                })\n            })\n            return prevState.map((item, i) => {\n                if (item.id === asset.id) {\n                    return {\n                        ...item,\n                        [rewardLevel]: Number(value)\n                    }\n                } else {\n                    return item;\n                }\n            });\n        });\n    }\n    const renderBusinessLocationPortion = () => {\n        if (_.has(props.previousData, \"typeOfHack\") && typeOfHack !== null && [\"physical-hack\", \"both-assets\"].indexOf(typeOfHack.value) > -1) {\n            return (\n                <Fragment>\n                    <h6 className=\"mb-0\">Location - Physical Hacking (Only Provided To <strong>SELECTED/HIRED</strong> Applicants)</h6>\n                    <Form className=\"theme-form\">\n                        <Row>\n                            <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                                <FormGroup>\n                                    <Label htmlFor=\"exampleFormControlInput1\">Enter your company business address (the address that your hackers will be testing at):<span className=\"font-danger\">*</span></Label>\n                                    <LocationSearchInput props={props} />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Fragment>\n            );\n        }\n    }\n    const renderPhysicalHackingDates = () => {\n        if (_.has(props.previousData, \"typeOfHack\") && typeOfHack !== null && [\"physical-hack\", \"both-assets\"].indexOf(typeOfHack.value) > -1) {\n            return (\n                <Fragment>\n                    <Label htmlFor=\"exampleFormControlInput1\">Dates Availiable To Hackers To Test Physical Assets:<span className=\"font-danger\">*</span></Label>\n                    <p>These are the days that will be available to the <strong>hired/selected</strong> hacker canidates to choose from when deciding which days they will attempt to infiltrate your company. This is only relevant for <strong style={{ color: \"blue\" }}>PHYSICAL</strong> hacking requirements.</p>\n                    <p style={{ paddingBottom: \"20px\" }}></p>\n                    <DateRangePicker\n                        minDate={new Date()}\n                        showSelectionPreview={true}\n                        moveRangeOnFirstSelection={true}\n                        ranges={availiableHackerDates}\n                        onChange={handleDatesSelectable}\n                    />\n                    <div onClick={() => {\n                        handleDatesSelectable([]);\n                    }} className=\"outlined-box\">\n                        <p className=\"lead blue-text\">Clear previously selected dates...</p>\n                    </div>\n                </Fragment>\n            );\n        }\n    }\n    const handleDeadlineSelect = (date) => {\n\n        if (new Date(date) > new Date()) {\n            setSelectionRange(date);\n\n            props.saveListingData({\n                ...props.previousData,\n                estimatedCompletionDate: date\n            });\n        } else {\n            NotificationManager.warning(`You must select a date that is current or beyond today's current date.`, \"Pick a valid date!\", 3500);\n        }\n    }\n    console.log(\"availiableHackerDates\", availiableHackerDates);\n    const handleDatesSelectable = (ranges) => {\n        console.log(\"ranges\", ranges.selection);\n\n        if (typeof ranges.selection !== \"undefined\") {\n            if (new Date(ranges.selection.startDate) > new Date()) {\n                if (count === 0) {\n                    handleHackerDates(prevState => {\n    \n                        console.log(\"ran.\", prevState);\n            \n                        props.saveListingData({\n                            ...props.previousData,\n                            testingDatesHackers: [ranges.selection]\n                        });\n                        return [ranges.selection];\n                    });\n                    setCount(count + 1);\n                } else {\n                    handleHackerDates(prevState => {\n    \n                        console.log(\"ran.\", prevState);\n            \n                        props.saveListingData({\n                            ...props.previousData,\n                            testingDatesHackers: [...prevState, ranges.selection]\n                        });\n                        return [...prevState, ranges.selection];\n                    });\n                    setCount(count + 1);\n                }\n            } else {\n                NotificationManager.warning(`You must select a date that is current or beyond today's current date.`, \"Pick a valid date!\", 3500);\n            };\n        } else {\n            handleHackerDates(prevState => {\n    \n                console.log(\"ran else!...\", prevState);\n    \n                props.saveListingData({\n                    ...props.previousData,\n                    testingDatesHackers: [{\n                        startDate: new Date(),\n                        endDate: new Date(),\n                        key: 'selection'\n                    }]\n                });\n                return [{\n                    startDate: new Date(),\n                    endDate: new Date(),\n                    key: 'selection'\n                }];\n            });\n        }\n    }\n    const getUploadParams = ({ meta }) => { \n        return { \n            url: 'https://httpbin.org/post' \n        } \n    };\n\n    const handleChangeStatus = ({ meta, file }, status) => { \n        console.log(status, meta, file);\n\n        if (status === \"done\") {\n            const data = new FormData();\n    \n            data.append(\"file\", file);\n            data.append(\"meta\", meta);\n\n            const config = {\n                onUploadProgress: function(progressEvent) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    console.log(\"percentCompleted\", percentCompleted);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/file/upon/selection/employer/listing`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded content!\") {\n                    console.log(res.data);\n\n                    const { file, generatedID } = res.data;\n\n                    if (typeof props.previousData.uploadedFiles !== \"undefined\" && props.previousData.uploadedFiles.length > 0) {\n                        props.saveListingData({\n                            ...props.previousData,\n                            uploadedFiles: [...props.previousData.uploadedFiles, {\n                                ...file,\n                                onlineID: generatedID\n                            }]\n                        });\n                    } else {\n                        props.saveListingData({\n                            ...props.previousData,\n                            uploadedFiles: [{\n                                ...file,\n                                onlineID: generatedID\n                            }]\n                        });\n                    }\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n                } else {\n                    console.log(\"err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    };\n    const handleListingSubmission = (e) => {\n\n        e.preventDefault();\n\n        let count = 0;\n\n        if (typeof props.previousData.typeOfHack !== \"undefined\") {\n            if (props.previousData.typeOfHack.value === \"physical-hack\") {\n                const { assetArray, typeOfHack, testingDatesHackers, rulesOfEngagement, publicCompanyName, outOfScopeVulnerabilities, listingDescription, hashtags, businessAddress, requiredRankToApply, experienceAndCost, desiredSkills, maxNumberOfApplicants, disclosureVisibility, tokensRequiredToApply, listingVisibility, estimatedCompletionDate } = props.previousData;\n\n                for (const key in props.previousData) {\n                    const el = props.previousData[key];\n        \n                    switch (key) {\n                        case \"testingDatesHackers\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Required Testing Dates'`, \"Complete 'required testing dates'!\", 4500);\n                            }\n                            break;\n                        case \"listingDescription\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Listing Description'`, \"Complete 'Listing Description'!\", 4500);\n                            }\n                            break;\n                        case \"rulesOfEngagement\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Rules Of Engagement'`, \"Complete 'Rules Of Engagement'!\", 4500);\n                            }\n                            break;\n                        case \"publicCompanyName\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Public Company Name'`, \"Complete 'Public Company Name'!\", 4500);\n                            }\n                            break;\n                        case \"outOfScopeVulnerabilities\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Out Of Scope Vulnerabilities'`, \"Complete 'Out Of Scope Vulnerabilities'!\", 4500);\n                            }\n                            break;\n                        case \"requiredRankToApply\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Required Rank To Apply'`, \"Complete 'Required Rank To Apply'!\", 4500);\n                            }\n                            break;\n                        case \"experienceAndCost\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Experience & Cost'`, \"Complete 'Experience & Cost'!\", 4500);\n                            }\n                            break;\n                        case \"desiredSkills\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Desired Skills'`, \"Complete 'Desired Skills'!\", 4500);\n                            }\n                            break;\n                        case \"hashtags\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Hashtags'`, \"Complete 'Hashtags'!\", 4500);\n                            }\n                            break;\n                        case \"maxNumberOfApplicants\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Max Number Of Applicants'`, \"Complete 'Max Number Of Applicants'!\", 4500);\n                            }\n                            break;\n                        case \"tokensRequiredToApply\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Tokens Required To Apply'`, \"Complete 'Tokens Required To Apply'!\", 4500);\n                            }\n                            break;\n                        case \"disclosureVisibility\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Disclosure Visibility'`, \"Complete 'Disclosure Visibility'!\", 4500);\n                            }\n                            break;\n                        case \"typeOfHack\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Type Of Hacks'`, \"Complete 'Type Of Hacks'!\", 4500);\n                            }\n                            break;\n                        case \"listingVisibility\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Listing Visibility'`, \"Complete 'Listing Visibility'!\", 4500);\n                            }\n                            break;\n                        case \"estimatedCompletionDate\":\n                            if (el && typeof el.getMonth === 'function') {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Estimated Completion Date'`, \"Complete 'Estimated Completion Date'!\", 4500);\n                            }\n                            break;\n                        case \"businessAddress\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Business Address'`, \"Complete 'Business Address'!\", 4500);\n                            }\n                            break;\n                        case \"assetArray\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Asset List'`, \"Complete 'Asset List'!\", 4500);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                };\n\n                if (count >= 17) {\n                    const jobData = {\n                        assetArray, \n                        typeOfHack, \n                        testingDatesHackers, \n                        rulesOfEngagement, \n                        publicCompanyName, \n                        outOfScopeVulnerabilities, \n                        listingDescription, \n                        hashtags, \n                        businessAddress, \n                        requiredRankToApply, \n                        experienceAndCost, \n                        desiredSkills, \n                        maxNumberOfApplicants, \n                        disclosureVisibility, \n                        tokensRequiredToApply, \n                        listingVisibility, \n                        estimatedCompletionDate,\n                        physicalLocation: true \n                    };\n                    history.push(\"/review/employer/listing/data/payment\", { jobData });\n                }\n            } else {\n                const { assetArray, typeOfHack, testingDatesHackers, rulesOfEngagement, publicCompanyName, outOfScopeVulnerabilities, listingDescription, hashtags, requiredRankToApply, experienceAndCost, desiredSkills, maxNumberOfApplicants, disclosureVisibility, tokensRequiredToApply, listingVisibility, estimatedCompletionDate } = props.previousData;\n\n                for (const key in props.previousData) {\n                    const el = props.previousData[key];\n\n                    console.log(\"digital - \", key, el);\n        \n                    switch (key) {\n                        case \"listingDescription\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Listing Description'`, \"Complete 'Listing Description'!\", 4500);\n                            }\n                            break;\n                        case \"rulesOfEngagement\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Rules Of Engagement'`, \"Complete 'Rules Of Engagement'!\", 4500);\n                            }\n                            break;\n                        case \"publicCompanyName\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Public Company Name'`, \"Complete 'Public Company Name'!\", 4500);\n                            }\n                            break;\n                        case \"outOfScopeVulnerabilities\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Out Of Scope Vulnerabilities'`, \"Complete 'Out Of Scope Vulnerabilities'!\", 4500);\n                            }\n                            break;\n                        case \"requiredRankToApply\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Required Rank To Apply'`, \"Complete 'Required Rank To Apply'!\", 4500);\n                            }\n                            break;\n                        case \"experienceAndCost\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Experience & Cost'`, \"Complete 'Experience & Cost'!\", 4500);\n                            }\n                            break;\n                        case \"desiredSkills\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Desired Skills'`, \"Complete 'Desired Skills'!\", 4500);\n                            }\n                            break;\n                        case \"hashtags\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Hashtags'`, \"Complete 'Hashtags'!\", 4500);\n                            }\n                            break;\n                        case \"maxNumberOfApplicants\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Max Number Of Applicants'`, \"Complete 'Max Number Of Applicants'!\", 4500);\n                            }\n                            break;\n                        case \"tokensRequiredToApply\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Tokens Required To Apply'`, \"Complete 'Tokens Required To Apply'!\", 4500);\n                            }\n                            break;\n                        case \"disclosureVisibility\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Disclosure Visibility'`, \"Complete 'Disclosure Visibility'!\", 4500);\n                            }\n                            break;\n                        case \"typeOfHack\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Type Of Hacks'`, \"Complete 'Type Of Hacks'!\", 4500);\n                            }\n                            break;\n                        case \"listingVisibility\":\n                            if (!_.isEmpty(el)) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Listing Visibility'`, \"Complete 'Listing Visibility'!\", 4500);\n                            }\n                            break;\n                        case \"estimatedCompletionDate\":\n                            if (el && typeof el.getMonth === 'function') {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Estimated Completion Date'`, \"Complete 'Estimated Completion Date'!\", 4500);\n                            }\n                            break;\n                        case \"assetArray\":\n                            if (typeof el !== \"undefined\" && el.length > 0) {\n                                count++;\n                            } else {\n                                NotificationManager.error(`You are missing or haven't filled out the 'Asset List'`, \"Complete 'Asset List'!\", 4500);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                }\n\n                if (count >= 15) {\n                    const jobData = {\n                        assetArray, \n                        typeOfHack, \n                        testingDatesHackers: null, \n                        rulesOfEngagement, \n                        publicCompanyName, \n                        outOfScopeVulnerabilities, \n                        listingDescription, \n                        hashtags, \n                        businessAddress: null, \n                        requiredRankToApply, \n                        experienceAndCost, \n                        desiredSkills, \n                        maxNumberOfApplicants, \n                        disclosureVisibility, \n                        tokensRequiredToApply, \n                        listingVisibility, \n                        estimatedCompletionDate,\n                        physicalLocation: false\n                    };\n                    history.push(\"/review/employer/listing/data/payment\", { jobData });\n                }\n            }\n        } else {\n            NotificationManager.error(\"You must choose a hack type - physical OR digital but you must choose.\", \"Choose Hack Type!\", 4500);\n        }\n    }\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Create Listing\" title=\"Create a public employer listing\"/>\n            <LoadingBar\n                color='#f11946'\n                progress={progress}\n                onLoaderFinished={() => setProgress(0)}\n                className=\"loadingBarRaise\"\n                containerClassName=\"loadingBarRaise\"\n                height={5}\n            />\n            <Container fluid={true}>\n                <Row>\n                    {/* <JobFilter /> */}\n                    <Col xl=\"12 xl-100\">\n                        <Card>\n                            <div className=\"job-search\">\n                                <CardBody className=\"pb-0\">\n                                    <Media>\n                                        <img className=\"img-40 img-fluid m-r-20\" src={one} alt=\"\" />\n                                        <Media body>\n                                            <h6 className=\"f-w-600\">\n                                                <a href=\"#\">Create an employer listing</a>\n                                                <span className=\"pull-right\">\n                                                {/* <Button color=\"primary\">\n                                                    <span>\n                                                        <i className=\"fa fa-check text-white\">\n                                                        </i>\n                                                    </span>{\"Save this job\"}\n                                                </Button> */}\n                                                </span>\n                                            </h6>\n                                            <p>Create a listing requesting for your company to be hacked (this will be public visible information to our database of hackers)</p>\n                                        </Media>\n                                    </Media>\n                                    <div className=\"job-description\">\n                                        <h6 className=\"mb-0\">General Details</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col md=\"6\" lg=\"6\" sm=\"12\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Public Company Name:<span className=\"font-danger\">*</span></Label>\n                                                        <Input value={data.publicCompanyName} onChange={handleChangeInput} className=\"form-control\" id=\"exampleFormControlInput1\" name=\"publicCompanyName\" type=\"text\" placeholder=\"Enter your company's publically known name\" />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\" lg=\"6\" sm=\"12\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Preferred Rank/Level Required To Apply:<span className=\"font-danger\">*</span></Label>\n                                                        <Select\n                                                            value={requiredRankToApply}\n                                                            onChange={(value) => {\n                                                                setRequiredRankToApply(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    requiredRankToApply: value\n                                                                })\n                                                            }}\n                                                            options={rankOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput3\">Experience Rewarded To Winner + Cost To Post:<span className=\"font-danger\">*</span></Label>\n                                                        <p style={{ paddingTop: \"7px\", paddingBottom: \"7px\" }} className=\"text-left\">Experience is rewarded to the hacker winner. Hackers level up their accounts with XP points and can redeem the XP for cash ($-USD) after reaching certain ranks/levels. Having a <strong>higher</strong> XP reward will incentivize hackers to pick your company over others - however it <strong>costs more</strong>.</p>\n                                                        <Select\n                                                            value={experienceAndCost}\n                                                            onChange={(value) => {\n                                                                setExperienceAndCost(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    experienceAndCost: value\n                                                                })\n                                                            }}\n                                                            options={experienceOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlpassword\">Required/Desired Skills From Hackers:<span className=\"font-danger\">*</span></Label>\n                                                        <MultiSelect\n                                                            options={desiredSkillsOptions}\n                                                            value={desiredSkills}\n                                                            onChange={(value) => {\n                                                                setDesiredSkills(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    desiredSkills: value\n                                                                })\n                                                            }}\n                                                            labelledBy=\"Select\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlpassword1\">HashTags/Tags (Hackers will use these to find your listing):<span className=\"font-danger\">*</span></Label>\n                                                        <CreateHashtagsListingComponent />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm=\"6\">\n                                                    <div className=\"col-form-label pt-0\"><strong>MAX</strong> Number Of Required Hackers:</div>\n                                                    <FormGroup>\n                                                        <Select\n                                                            value={maxNumberOfApplicants}\n                                                            onChange={(value) => {\n                                                                setMaxNumberOfApplicants(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    maxNumberOfApplicants: value\n                                                                })\n                                                            }}\n                                                            options={maxNumberOfHackersOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\">\n                                                    <div onMouseEnter={() => {\n                                                        setPopoverOpen(true);\n                                                    }} id=\"PopoverID\" className=\"col-form-label pt-0\">Amount Of Tokens Required To Apply (hover for info):</div>\n                                                    <Popover\n                                                        placement={\"top\"}\n                                                        isOpen={popoverOpen}\n                                                        target={\"PopoverID\"}\n                                                        toggle={() => {\n                                                            setPopoverOpen(!popoverOpen);\n                                                        }}\n                                                    >\n                                                        <PopoverHeader>Tokens are required from hackers to apply to this job</PopoverHeader>\n                                                        <PopoverBody onMouseLeave={() => {\n                                                            setPopoverOpen(false);\n                                                        }}>\n                                                            Hackers purchase tokens in which they then use to apply to your listing(s). These are <strong>REQUIRED</strong> to apply to listings so please choose the amount you charge proportionally to the work required from your company and the reward given to successful hackers.\n                                                        </PopoverBody>\n                                                    </Popover>\n                                                    <FormGroup>\n                                                        <Select\n                                                            value={tokensRequiredToApply}\n                                                            onChange={(value) => {\n                                                                setTokensRequiredToApply(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    tokensRequiredToApply: value\n                                                                })\n                                                            }}\n                                                            options={tokensApplyOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput4\">Public Or Private Vulnerability Disclosures (Upon Successful Hack):</Label>\n                                                        <Select\n                                                            value={disclosureVisibility}\n                                                            onChange={(value) => {\n                                                                setDisclosureVisibility(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    disclosureVisibility: value\n                                                                })\n                                                            }}\n                                                            options={disclosureOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput4\">Type Of Hack Required (Physical/in-person <strong>OR</strong> digital/online assets):</Label>\n                                                        <Select\n                                                            value={typeOfHack}\n                                                            onChange={(value) => {\n                                                                setTypeOfHack(value);\n\n                                                                props.saveListingData({\n                                                                    ...props.previousData,\n                                                                    typeOfHack: value\n                                                                })\n                                                            }}\n                                                            options={physicalOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        <h6 className=\"mb-0\">Timespan & Timeline Information + Visibility Type</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col md=\"6\" lg=\"6\" xl=\"6\">\n                                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12 xl-100\">\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"exampleFormControlInput1\">Visibility Type (Who Can See Your Listing Or Apply Once Live):<span className=\"font-danger\">*</span></Label>\n                                                            <Select\n                                                                value={listingVisibility}\n                                                                onChange={(value) => {\n                                                                    setListingVisibility(value);\n\n                                                                    props.saveListingData({\n                                                                        ...props.previousData,\n                                                                        listingVisibility: value\n                                                                    })\n                                                                }}\n                                                                options={visibilityOptions}\n                                                            />\n                                                        </FormGroup>\n                                                        {renderPhysicalHackingDates()}\n                                                    </Col>\n                                                </Col>\n                                                <Col md=\"12\" lg=\"12\" xl=\"6 xl-100\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Estimated/Expected Day Of Completion (Must Be Successfully Hacked By This Day For Full Payment):<span className=\"font-danger\">*</span></Label>\n                                                        <p style={{ paddingBottom: \"20px\" }}>These are the days in which you expect the hired hackers/contractors to have <strong>successfully</strong> completed any hacks or attacks (digital or physical) against your company. Disclosures will occurr shortly after whichever days are selected and any further testing or reporting shall proceed at that point.</p>\n                                                        <Calendar \n                                                            minDate={new Date()}\n                                                            date={_.has(props.previousData, \"estimatedCompletionDate\") ? new Date(props.previousData.estimatedCompletionDate) : new Date()}\n                                                            onChange={handleDeadlineSelect}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        {renderBusinessLocationPortion()}\n                                        <h6 className=\"mb-0\"><strong>DIGITAL</strong> Assets & Payment/Reward Information - Digital Scope</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col xl=\"12 xl-100\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput7\">Asset Endpoint Or URL:<span className=\"font-danger\">*</span></Label>\n                                                        <InputGroup>\n                                                            <Input onChange={handleChangeInput} value={data.assetName} className=\"form-control\" id=\"exampleFormControlInput7\" name=\"assetName\" type=\"text\" placeholder=\"Eg.'s - api.yourcompany.com OR https://www.yourcompanywebsite.com\" />\n                                                            <InputGroupAddon addonType=\"append\"><Button onClick={handleAssetAddition} color=\"secondary\">Add Asset</Button></InputGroupAddon>\n                                                        </InputGroup>\n                                                    </FormGroup>\n                                                </Col>\n                                                <ListGroup>\n                                                {typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray.map((asset, index) => {\n                                                    return (\n                                                        <ListGroupItem key={index} className=\"list-group-item flex-column align-items-start\">\n                                                            <Row style={{ paddingBottom: \"12px\" }}>\n                                                                <ListGroupItem active>{asset.name}<div onClick={() => {\n                                                                    setAssetArray(prevState => {\n                                                                        props.saveListingData({\n                                                                            ...props.previousData,\n                                                                            assetArray: prevState.filter((item, index) => {\n                                                                                if (item.id !== asset.id) {\n                                                                                    return item;\n                                                                                }\n                                                                            })\n                                                                        }) \n                                                                        return prevState.filter((item, index) => {\n                                                                            if (item.id !== asset.id) {\n                                                                                return item;\n                                                                            }\n                                                                        });\n                                                                    });  \n                                                                }} id=\"float-right-icon\"><XCircle /></div></ListGroupItem>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#ffc800\" }}>Low</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"lowSeverity\", asset);\n                                                                        }} value={asset.lowSeverity} className=\"form-control\" type=\"number\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#ed3824\" }}>Medium</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"mediumSeverity\", asset);\n                                                                        }} value={asset.mediumSeverity} className=\"form-control\" type=\"number\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#8f0091\" }}>High</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"highSeverity\", asset);\n                                                                        }} value={asset.highSeverity} className=\"form-control\" type=\"number\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#b30211\" }}>Critical</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"criticalSeverity\", asset);\n                                                                        }} value={asset.criticalSeverity} className=\"form-control\" type=\"number\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroupItem>\n                                                    );\n                                                }) : null}\n                                                </ListGroup>\n                                            </Row>\n                                        </Form>\n                                        <h6 className=\"mb-0\">Upload Any Supporting Documents/Files</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label className=\"col-form-label pt-0\">Upload File(s):<span className=\"font-danger\">*</span></Label>\n                                                        <div className=\"dz-message needsclick\">\n                                                            <Dropzone\n                                                                getUploadParams={getUploadParams}\n                                                                onChangeStatus={handleChangeStatus}\n                                                                maxFiles={5}\n                                                                multiple={false}\n                                                                canCancel={false}\n                                                                inputContent=\"Drop A File(s)\"\n                                                                styles={{\n                                                                    dropzone: { height: 225 },\n                                                                    dropzoneActive: { borderColor: 'green' },\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        <ListGroup style={{ paddingBottom: \"25px\" }}>\n                                            {typeof props.previousData.uploadedFiles !== \"undefined\" && props.previousData.uploadedFiles.length > 0 ? props.previousData.uploadedFiles.map((file, index) => {\n                                                return (\n                                                    <ListGroupItem className=\"d-flex justify-content-between align-items-center\">{file.name}<span onClick={() => {\n                                                        props.saveListingData({\n                                                            ...props.previousData,\n                                                            uploadedFiles: props.previousData.uploadedFiles.filter((item, indxxx) => {\n                                                                if (item.id !== file.id) {\n                                                                    return item;\n                                                                }\n                                                            })\n                                                        });\n                                                    }} className=\"badge badge-primary counter digits hover-text\">Remove file from uploads</span></ListGroupItem>\n                                                );\n                                            }) : null}\n                                        </ListGroup>\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\" }}>Listing Description/Information</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Include as detailed of a description as you possibly can so our hackers will know what they're being asked to attempt/hack. This can be <strong>general</strong> information as well as any other information that you'd like to include. Strong/detailed listing descriptions generally always have higher response/application rates compared to minimal detail listings.</p>\n                                        <SimpleMDE\n                                            id=\"editor_container\"\n                                            onChange={onChangeDescription}\n                                            value={content}\n                                        />\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\", paddingTop: \"25px\" }}>Program/Listing Rules & Conditions Of Engagement</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Please include an <strong>exhaustive list</strong> of specific <strong>RULES</strong> our hackers should follow and abide by while applying allowed hacks to avoid <strong>termination or suspension</strong> from our platform for misuse (referring to our hackers). We stand by our rules and proceedures so please be as detailed and clear as possible while outlines what you expect from potential hacker candiates and the conditions in place once hired.</p>\n                                        <SimpleMDE\n                                            id=\"editor_container\"\n                                            onChange={(value) => {\n                                                setRules(value);\n\n                                                props.saveListingData({\n                                                    ...props.previousData,\n                                                    rulesOfEngagement: value\n                                                })\n                                            }}\n                                            value={rules}\n                                        />\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\", paddingTop: \"25px\" }}><strong>OUT OF SCOPE</strong> Vulnerabilities & Boundaries</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Please include an exhaustive list of which vulnerabilities are <strong>NOT</strong> included as acceptable reports as well as anything you would like our hackers to <strong>abstain</strong> from testing or tampering with such as texting accounts, unauthenticated tests, etc... <em>BE AS SPECIFIC AS POSSIBLE.</em></p>\n                                        <SimpleMDE\n                                            id=\"editor_container_two\"\n                                            onChange={(value) => {\n                                                setOutOfScope(value);\n\n                                                props.saveListingData({\n                                                    ...props.previousData,\n                                                    outOfScopeVulnerabilities: value\n                                                })\n                                            }}\n                                            value={outOfScope}\n                                        />\n                                    </div>\n                                </CardBody>\n                                <div className=\"card-footer\">\n                                    <Button style={{ width: \"100%\" }} onClick={handleListingSubmission} color=\"primary mr-1\">Submit & Continue To Payment/Confirmation Page</Button>\n                                </div>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        previousData: _.has(state.listingData, \"listingData\") ? {\n            testingDatesHackers: [],\n            listingDescription: \"\",\n            rulesOfEngagement: \"\",\n            assetArray: [], \n            typeOfHack: {}, \n            publicCompanyName: \"\", \n            outOfScopeVulnerabilities: \"\", \n            hashtags: [], \n            businessAddress: {}, \n            requiredRankToApply: {}, \n            experienceAndCost: {}, \n            desiredSkills: [], \n            maxNumberOfApplicants: {}, \n            disclosureVisibility: {}, \n            tokensRequiredToApply: {}, \n            listingVisibility: {}, \n            estimatedCompletionDate: null,\n            ...state.listingData.listingData\n        } : {}\n    }\n}\nexport default connect(mapStateToProps, { saveListingData })(CreateJobListingMainHelper);"]},"metadata":{},"sourceType":"module"}