{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageOne/pageOneMain.js\";\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Col, Button, Form, Label, Input, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { State, City, Zip, SubmitForm } from '../../../../../../../constant';\nimport \"./styles.css\";\nimport Select from 'react-select';\nimport _ from \"lodash\";\nimport { languageList } from \"./helpers/programmingLanguageList/languageList.js\";\nimport SimpleMDE from \"react-simplemde-editor\";\nconst categoryOptions = [{\n  value: 'malware-related',\n  label: 'Malware Related Codes'\n}, {\n  value: 'phishing',\n  label: 'Phishing'\n}, {\n  value: \"cross-site-scripting-xss\",\n  label: \"Cross Site Scripting (XSS)\"\n}, {\n  value: \"denial-of-service\",\n  label: \"Denial Of Service (DDoS)\"\n}, {\n  value: \"session-hijacking-man-in-middle\",\n  label: \"Session Hijacking & Man-In-Middle Attacks\"\n}, {\n  value: \"macro-malware-in-documents\",\n  label: \"Macro-Malware In Documents\"\n}, {\n  value: \"iot-attack\",\n  label: \"IoT Attack\"\n}, {\n  value: \"clickjacking-ui-redress\",\n  label: \"Clickjacking/UI Redress\"\n}, {\n  value: \"dns-spoofing\",\n  label: \"DNS Spoofing\"\n}, {\n  value: \"watering-hole-attack\",\n  label: \"Watering Hole Attack\"\n}, {\n  value: \"keylogger-attack\",\n  label: \"Keylogger Attack\"\n}, {\n  value: \"bruteforce-attack\",\n  label: \"Brute-Force Attack\"\n}, {\n  value: \"dictionary-attack\",\n  label: \"Dictionary Attack\"\n}, // easy/lazy BELOW\n{\n  value: \"credential-reuse\",\n  label: \"Credential Reuse\"\n}, {\n  value: 'sql-injection-attack',\n  label: 'SQL Injection Attack'\n}, {\n  value: \"fake-wap\",\n  label: \"Fake WAP\"\n}, {\n  value: \"bait-and-switch\",\n  label: \"Bait & Switch\"\n}, {\n  value: \"browser-locker\",\n  label: \"Browser Locker\"\n} // easy/lazy ABOVE\n];\n\nconst PageOneMainHelper = props => {\n  let categorySelectRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\",\n    delayError: 500\n  });\n  const [validateClass, setValidateClass] = useState(false);\n  const [data, setData] = useState({});\n  const [showSelectOneError, setSelectOneErrorStatus] = useState(false);\n\n  const onSubmit = (e, data) => {\n    console.log(\"submitting (onSubmit function)...!!\");\n    e.preventDefault();\n\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const onError = (errors, e) => {\n    console.log(\"error submitting...!\");\n    console.log(errors, e); // for (const key in errors) {\n    //     const error = errors[key];\n    //     console.log(error);\n    //     switch (error) {\n    //         case \"category\":\n    //             if (showSelectOneError === true) {\n    //                 clearErrors(\"category\");\n    //             }\n    //             break;\n    //         default:\n    //             break;\n    //    }\n    // }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    clearErrors(name);\n    setData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n    return value;\n  };\n\n  console.log(\"data\", data);\n  useEffect(() => {// const watchCategory = watch(\"category\", false);\n    // console.log(\"watchCategory : \", watchCategory);\n  }, []);\n\n  const menuClosedSelectInput = () => {\n    if (_.has(data, \"category\")) {\n      setSelectOneErrorStatus(true);\n    }\n  };\n\n  const autofocusNoSpellcheckerOptions = useMemo(() => {\n    return {\n      autofocus: false,\n      spellChecker: false\n    };\n  }, []);\n  console.log(\"errors\", errors);\n  console.log(\"categorySelectRef : \", categorySelectRef);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Listing Title (Be As Specific As Possible)\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, register(\"listingTitle\", {\n    required: {\n      value: true,\n      message: \"You MUST enter a value between 15-75 characters\"\n    },\n    minLength: {\n      value: 15,\n      message: \"You must enter AT Least 15 characters\"\n    },\n    maxLength: {\n      value: 75,\n      message: \"You may ONLY enter 75 characters or less\"\n    }\n  }), {\n    className: \"form-control\",\n    name: \"listingTitle\",\n    type: \"text\",\n    placeholder: \"Listing title\",\n    onChange: handleInputChange,\n    value: data.listingTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), errors.listingTitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 44\n    }\n  }, errors.listingTitle.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Type Of Hack Being Sold\"), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"category\"\n  }, register(\"category\", {\n    required: true,\n    onBlur: () => {\n      console.log(\"onBlur...!\");\n\n      if (showSelectOneError === true) {\n        alert(\"category HAS value\");\n      } else {\n        clearErrors(\"category\");\n      }\n    }\n  }), {\n    render: _ref => {\n      let {\n        field\n      } = _ref;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: categorySelectRef,\n        autoBlur: true,\n        defaultValue: null,\n        onMenuClose: menuClosedSelectInput,\n        value: data.selectedOption,\n        onChange: selectedOption => {\n          setData(prevState => {\n            return { ...prevState,\n              category: selectedOption\n            };\n          });\n          setValue('category', selectedOption, {\n            shouldValidate: false\n          });\n          categorySelectRef.current.blur();\n        },\n        options: categoryOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  })), errors.category ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 40\n    }\n  }, errors.category && 'Category is required') : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, City), /*#__PURE__*/React.createElement(Input, Object.assign({\n    className: \"form-control\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, errors.city && 'Please provide a valid city'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, State), /*#__PURE__*/React.createElement(Input, Object.assign({\n    className: \"form-control\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, errors.state && 'Please provide a valid state.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, Zip), /*#__PURE__*/React.createElement(Input, Object.assign({\n    className: \"form-control\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, errors.zip && 'Please provide a valid zip.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-check-input\",\n    id: \"invalidCheck3\",\n    type: \"checkbox\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, \"Agree to terms and conditions\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"bottom-row-spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    sm: \"12\",\n    xl: \"12\",\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"description\",\n    defaultValue: \"\",\n    value: data.description\n  }, register(\"description\", {\n    required: {\n      value: true,\n      message: \"You must enter between 325-1250 characters to proceed\"\n    },\n    minLength: {\n      value: 325,\n      message: \"You must enter AT least 325 characters or more to proceed\"\n    },\n    maxLength: {\n      value: 1250,\n      message: \"You may only enter up to a max of 1250 characters\"\n    },\n    onBlur: data => {\n      setTimeout(() => {\n        console.log(\"onBlur...!\", data);\n      }, 1000); // if (showSelectOneError === true) {\n      //     alert(\"description HAS value\")\n      // } else {\n      //     clearErrors(\"description\");\n      // }\n    }\n  }), {\n    render: _ref2 => {\n      let {\n        field,\n        ref\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(SimpleMDE, Object.assign({\n        ref: ref\n      }, field, {\n        placeholder: \"Enter your text here... (You can use MARKUP & various text styling tools with the bar above)\",\n        name: \"description\",\n        id: \"editor_container\",\n        onChange: value => {\n          setData(prevState => {\n            return { ...prevState,\n              description: value\n            };\n          });\n          return value;\n        },\n        value: data.description,\n        options: autofocusNoSpellcheckerOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    sm: \"12\",\n    xl: \"12\",\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 47\n    }\n  }, errors.description.message) : null)), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => setValidateClass(!validateClass),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, SubmitForm)));\n};\n\nexport default PageOneMainHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageOne/pageOneMain.js"],"names":["React","useEffect","useState","useRef","useMemo","useForm","Controller","Col","Button","Form","Label","Input","FormGroup","InputGroup","InputGroupAddon","InputGroupText","Row","State","City","Zip","SubmitForm","Select","_","languageList","SimpleMDE","categoryOptions","value","label","PageOneMainHelper","props","categorySelectRef","register","handleSubmit","control","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","delayError","validateClass","setValidateClass","data","setData","showSelectOneError","setSelectOneErrorStatus","onSubmit","e","console","log","preventDefault","alert","showMessages","onError","handleInputChange","name","target","prevState","menuClosedSelectInput","has","autofocusNoSpellcheckerOptions","autofocus","spellChecker","required","message","minLength","maxLength","listingTitle","onBlur","field","selectedOption","category","shouldValidate","current","blur","city","state","zip","description","setTimeout","ref"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Col,Button,Form,Label,Input,FormGroup,InputGroup,InputGroupAddon,InputGroupText, Row } from 'reactstrap';\nimport { State,City,Zip,SubmitForm } from '../../../../../../../constant';\nimport \"./styles.css\";\nimport Select from 'react-select';\nimport _ from \"lodash\";\nimport { languageList } from \"./helpers/programmingLanguageList/languageList.js\";\nimport SimpleMDE from \"react-simplemde-editor\";\n\nconst categoryOptions = [\n    { value: 'malware-related', label: 'Malware Related Codes' },\n    { value: 'phishing', label: 'Phishing' },\n    { value: \"cross-site-scripting-xss\", label: \"Cross Site Scripting (XSS)\" },\n    { value: \"denial-of-service\", label: \"Denial Of Service (DDoS)\" },\n    { value: \"session-hijacking-man-in-middle\", label: \"Session Hijacking & Man-In-Middle Attacks\" },\n    { value: \"macro-malware-in-documents\", label: \"Macro-Malware In Documents\" },\n    { value: \"iot-attack\", label: \"IoT Attack\" },\n    { value: \"clickjacking-ui-redress\", label: \"Clickjacking/UI Redress\" },\n    { value: \"dns-spoofing\", label: \"DNS Spoofing\" },\n    { value: \"watering-hole-attack\", label: \"Watering Hole Attack\" },\n    { value: \"keylogger-attack\", label: \"Keylogger Attack\" },\n    { value: \"bruteforce-attack\", label: \"Brute-Force Attack\" },\n    { value: \"dictionary-attack\", label: \"Dictionary Attack\" },\n    // easy/lazy BELOW\n    { value: \"credential-reuse\", label: \"Credential Reuse\" },\n    { value: 'sql-injection-attack', label: 'SQL Injection Attack' },\n    { value: \"fake-wap\", label: \"Fake WAP\" },\n    { value: \"bait-and-switch\", label: \"Bait & Switch\" },\n    { value: \"browser-locker\", label: \"Browser Locker\" },\n    // easy/lazy ABOVE\n];\n  \n\nconst PageOneMainHelper = (props) => {\n\n    let categorySelectRef = useRef(null);\n\n    const { register, handleSubmit, control, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\",\n        delayError: 500\n    });\n\n    const [validateClass , setValidateClass] = useState(false);\n    const [ data, setData ] = useState({});\n    const [ showSelectOneError, setSelectOneErrorStatus ] = useState(false);\n\n\n    const onSubmit = (e, data) => {\n\n        console.log(\"submitting (onSubmit function)...!!\");\n\n        e.preventDefault();\n\n        if (data !== '') {\n            alert('You submitted the form and stuff!');\n        } else {\n            errors.showMessages();\n        }\n    };\n    const onError = (errors, e) => {\n        console.log(\"error submitting...!\");\n\n        console.log(errors, e);\n\n        // for (const key in errors) {\n\n        //     const error = errors[key];\n            \n        //     console.log(error);\n\n        //     switch (error) {\n        //         case \"category\":\n        //             if (showSelectOneError === true) {\n        //                 clearErrors(\"category\");\n        //             }\n        //             break;\n            \n        //         default:\n        //             break;\n        //    }\n        // }\n    };\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        clearErrors(name);\n\n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n\n        return value;\n    };\n    console.log(\"data\", data);\n\n    useEffect(() => {\n        // const watchCategory = watch(\"category\", false);\n\n        // console.log(\"watchCategory : \", watchCategory);\n    }, []);\n\n    const menuClosedSelectInput = () => {\n        if (_.has(data, \"category\")) {\n            setSelectOneErrorStatus(true);\n        } \n    }\n\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        };\n    }, []);\n\n    console.log(\"errors\", errors);\n    \n    console.log(\"categorySelectRef : \", categorySelectRef);\n    return (\n        <div>\n            <Form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit, onError)}>\n                <div className=\"form-row\">\n                <Col md=\"6 mb-3\">\n                    <Label>Listing Title (Be As Specific As Possible)</Label>\n                    <input {...register(\"listingTitle\", { required: {\n                        value: true,\n                        message: \"You MUST enter a value between 15-75 characters\"\n                    }, minLength: {\n                        value: 15,\n                        message: \"You must enter AT Least 15 characters\"\n                    }, maxLength: {\n                        value: 75,\n                        message: \"You may ONLY enter 75 characters or less\"\n                    }})} className=\"form-control\" name=\"listingTitle\" type=\"text\" placeholder=\"Listing title\" onChange={handleInputChange} value={data.listingTitle} />\n                    {/* 'Listing title is required & total length must be less than 50 charectors' */}\n                    {errors.listingTitle ? <span className=\"span-tooltip\">{errors.listingTitle.message}</span> : null}\n                    <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                </Col>\n                <Col md=\"6 mb-3\">\n                    <Label>Type Of Hack Being Sold</Label>\n                    <Controller\n                        control={control}\n                        name=\"category\"\n                        {...register(\"category\", { required: true, onBlur: () => {\n                            console.log(\"onBlur...!\");\n\n                            if (showSelectOneError === true) {\n                                alert(\"category HAS value\")\n                            } else {\n                                clearErrors(\"category\");\n                            }\n                        }})}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                ref={categorySelectRef}\n                                autoBlur={true}\n                                defaultValue={null}\n                                onMenuClose={menuClosedSelectInput}\n                                value={data.selectedOption}\n                                onChange={(selectedOption) => {\n                                    setData(prevState => {\n                                        return {\n                                            ...prevState,\n                                            category: selectedOption\n                                        }\n                                    });\n                                    setValue('category', selectedOption, { shouldValidate: false })\n                                    categorySelectRef.current.blur();\n                                }}\n                                options={categoryOptions}\n                            />\n                        )}\n                    />\n                    {errors.category ? <span className=\"span-tooltip\">{errors.category && 'Category is required'}</span> : null}\n                    <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                </Col>\n                {/* <Col md=\"4 mb-3\">\n                    <Label>{Username}</Label>\n                    <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText >{\"@\"}</InputGroupText>\n                        </InputGroupAddon>\n                    <Input className=\"form-control\"  name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.lastName && 'User name is required'}</span>\n                    <div className=\"invalid-feedback\">{\"Please choose a username.\"}</div>\n                    </InputGroup>\n                </Col> */}\n                </div>\n                <div className=\"form-row\">\n                <Col md=\"6 mb-3\">\n                    <Label>{City}</Label>\n                    <Input className=\"form-control\"  name=\"city\" type=\"text\" placeholder=\"City\" {...register((\"testing\"), { required: true })} onChange={handleInputChange} />\n                    <span>{errors.city && 'Please provide a valid city'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid city.\"}</div>\n                </Col>\n                <Col md=\"3 mb-3\">\n                    <Label>{State}</Label>\n                    <Input className=\"form-control\"  name=\"state\" type=\"text\" placeholder=\"State\" {...register((\"testing\"), { required: true })} onChange={handleInputChange} />\n                    <span>{errors.state && 'Please provide a valid state.'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid state.\"}</div>\n                </Col>\n                <Col md=\"3 mb-3\">\n                    <Label>{Zip}</Label>\n                    <Input className=\"form-control\"  name=\"zip\" type=\"text\" placeholder=\"Zip\" {...register((\"testing\"), { required: true })} onChange={handleInputChange} />\n                    <span>{errors.zip && 'Please provide a valid zip.'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid zip.\"}</div>\n                </Col>\n                </div>\n                <FormGroup>\n                <div className=\"form-check\">\n                    <div className=\"checkbox p-0\">\n                    <Input className=\"form-check-input\" id=\"invalidCheck3\" type=\"checkbox\" onChange={handleInputChange} />\n                    <Label className=\"form-check-label\" htmlFor=\"invalidCheck3\">{\"Agree to terms and conditions\"}</Label>\n                    </div>\n                </div>\n                </FormGroup>\n                <hr />\n                <Row className=\"bottom-row-spacing\">\n                    <Col md=\"12\" sm=\"12\" xl=\"12\" lg=\"12\"> \n                    <Controller\n                        control={control}\n                        name=\"description\"\n                        defaultValue={\"\"}\n                        value={data.description}\n                        {...register(\"description\", { required: {\n                            value: true,\n                            message: \"You must enter between 325-1250 characters to proceed\"\n                        }, minLength: {\n                            value: 325,\n                            message: \"You must enter AT least 325 characters or more to proceed\"\n                        }, maxLength: {\n                            value: 1250,\n                            message: \"You may only enter up to a max of 1250 characters\"\n                        }, onBlur: (data) => {\n                            setTimeout(() => {\n                                console.log(\"onBlur...!\", data);\n                            }, 1000)\n\n                            // if (showSelectOneError === true) {\n                            //     alert(\"description HAS value\")\n                            // } else {\n                            //     clearErrors(\"description\");\n                            // }\n                        }})}\n                        render={({ field, ref }) => (\n                            <SimpleMDE\n                                ref={ref}\n                                {...field}\n                                placeholder={\"Enter your text here... (You can use MARKUP & various text styling tools with the bar above)\"}\n                                name=\"description\"\n                                id=\"editor_container\"\n                                onChange={(value) => {\n                                    setData(prevState => {\n                                        return {\n                                            ...prevState,\n                                            description: value\n                                        }\n                                    });\n                                    return value;\n                                }}\n                                value={data.description}\n                                options={autofocusNoSpellcheckerOptions}\n                            />\n                        )}\n                    />\n                    </Col>\n                    <Col md=\"12\" sm=\"12\" xl=\"12\" lg=\"12\">\n                        {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                    </Col>\n                </Row>\n                <Button color=\"primary\"  type=\"submit\" onClick={() => setValidateClass(!validateClass)}>{SubmitForm}</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default PageOneMainHelper;\n"]},"metadata":{},"sourceType":"module"}