{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/helpers/displayMessages/displayMessages.js\";\nimport React, { Fragment, useState, Component } from 'react';\nimport { Media, Popover, PopoverHeader, PopoverBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport moment from \"moment\";\nimport start_conversion from '../../../../../../../assets/images/start-conversion.jpg';\n\nclass RenderMessagListStreaming extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMessageClickPopover = (item, index) => {\n      console.log(\"handleMessageClickPopover item/index\", item, index);\n      const {\n        channel\n      } = this.props;\n\n      if (channel !== null) {\n        console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");\n        this.setState({\n          [`popoverCustom${channel.url}${index}`]: true\n        });\n      }\n    };\n\n    this.closeMessagePopover = (item, index) => {\n      console.log(\"closeMessagePopover item/index\", item, index);\n      const {\n        channel\n      } = this.props;\n\n      if (channel !== null) {\n        console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");\n        this.setState({\n          [`popoverCustom${channel.url}${index}`]: false\n        });\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      messageList,\n      channel,\n      userData,\n      index\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, messageList.length > 0 ? messageList.map((item, index) => {\n      console.log(\"item/message - :\", item);\n      {\n        /* const participators = allMembers.chats.find(x => x.id === item.sender); */\n      }\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: `popoverCustom${channel.url}${index}`,\n        onClick: () => this.handleMessageClickPopover(item, index),\n        className: `message add-hover-message-convo-individual my-message ${item._sender.userId !== userData.uniqueId ? '' : 'float-right'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        className: \"custom-chat-popover\",\n        isOpen: this.state[`popoverCustom${channel.url}${index}`],\n        toggle: () => this.closeMessagePopover(item, index),\n        placement: \"bottom\",\n        target: `popoverCustom${channel.url}${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseLeave: () => {\n          console.log(\"mouse LEFT.\");\n          this.closeMessagePopover(item, index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }\n      }, \" ~ Message Actions/Modification's ~ \"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"list-group-item-action custom-message-action-listgroup\",\n        onClick: () => null,\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 53\n        }\n      }, \"DELETE This Message (Permanently Remove)\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"list-group-item-action custom-message-action-listgroup\",\n        onClick: () => null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 53\n        }\n      }, \"PIN This Message (Note MSG As IMPORTANT)\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"list-group-item-action custom-message-action-listgroup\",\n        onClick: () => null,\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }\n      }, \"MARK As Read (Show You've Seen It)\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"list-group-item-action custom-message-action-listgroup\",\n        onClick: () => null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 53\n        }\n      }, \"ADD Extra Data To Existing MSG (MODIFY Message)\"))))), /*#__PURE__*/React.createElement(Media, {\n        src: item._sender.plainProfileUrl,\n        className: `rounded-circle ${item._sender.userId !== userData.uniqueId ? 'float-left' : 'float-right'} chat-user-img img-30`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"message-data text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: item._sender.userId !== userData.uniqueId ? \"message-data-time message-data-time-custom-left float-left\" : \"message-data-time message-data-time-custom-right float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }, moment(item.createdAt).format(\"MM/DD, h:mm a\"), \" by \", item._sender.nickname.length > 0 ? item._sender.nickname : \"Unknown Participant.\")), item.message, /*#__PURE__*/React.createElement(\"div\", {\n        className: item._sender.userId !== userData.uniqueId ? \"delivery-status-wrapper-right\" : \"delivery-status-wrapper-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: item._sender.userId !== userData.uniqueId ? \"delivery-confirmation-right\" : \"delivery-confirmation-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, item.sendingStatus === \"succeeded\" ? \"Delivered!\" : \"Pending Delivery...\"))));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"img-fluid\",\n      src: start_conversion,\n      alt: \"start conversion \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default {\n  RenderMessagListStreaming\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/helpers/displayMessages/displayMessages.js"],"names":["React","Fragment","useState","Component","Media","Popover","PopoverHeader","PopoverBody","ListGroup","ListGroupItem","moment","start_conversion","RenderMessagListStreaming","constructor","props","handleMessageClickPopover","item","index","console","log","channel","setState","url","closeMessagePopover","state","render","messageList","userData","length","map","_sender","userId","uniqueId","plainProfileUrl","createdAt","format","nickname","message","sendingStatus"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, Component } from 'react';\nimport { Media, Popover, PopoverHeader, PopoverBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport moment from \"moment\";\nimport start_conversion from '../../../../../../../assets/images/start-conversion.jpg';\n\n\nclass RenderMessagListStreaming extends Component {\n    constructor (props) {\n        super(props);\n    \n        this.state = {\n    \n        }\n    }\n    handleMessageClickPopover = (item, index) => {\n        console.log(\"handleMessageClickPopover item/index\", item, index);\n\n        const { channel } = this.props;\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");\n\n            this.setState({\n                [`popoverCustom${channel.url}${index}`]: true\n            }) \n        } \n    }\n\n    closeMessagePopover = (item, index) => {\n        console.log(\"closeMessagePopover item/index\", item, index);\n\n        const { channel } = this.props;\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");\n\n            this.setState({\n                [`popoverCustom${channel.url}${index}`]: false\n            })   \n        } \n    }\n    render () {\n        const { messageList, channel, userData, index } = this.props;\n        return (\n            <Fragment key={index}>\n                <ul>\n                    {messageList.length > 0 ? messageList.map((item, index) => {\n                        console.log(\"item/message - :\", item);\n                        {/* const participators = allMembers.chats.find(x => x.id === item.sender); */}\n                        return (\n                            <li key={index} className=\"clearfix\">\n                                <div id={`popoverCustom${channel.url}${index}`} onClick={() => this.handleMessageClickPopover(item, index)} className={`message add-hover-message-convo-individual my-message ${item._sender.userId !== userData.uniqueId ? '' : 'float-right'}`}>\n                                    <Popover className={\"custom-chat-popover\"} isOpen={this.state[`popoverCustom${channel.url}${index}`]} toggle={() => this.closeMessagePopover(item, index)} placement=\"bottom\" target={`popoverCustom${channel.url}${index}`}>\n                                        <div onMouseLeave={() => {\n                                            console.log(\"mouse LEFT.\");\n\n                                            this.closeMessagePopover(item, index)\n                                        }}>\n                                            <PopoverHeader> ~ Message Actions/Modification's ~ </PopoverHeader>\n                                            <PopoverBody>\n                                                <ListGroup>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null} active>{\"DELETE This Message (Permanently Remove)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null}>{\"PIN This Message (Note MSG As IMPORTANT)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null} active>{\"MARK As Read (Show You've Seen It)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null}>{\"ADD Extra Data To Existing MSG (MODIFY Message)\"}</ListGroupItem>\n                                                </ListGroup>\n                                            </PopoverBody>\n                                        </div>\n                                    </Popover>\n                                    <Media src={item._sender.plainProfileUrl}\n                                        className={`rounded-circle ${item._sender.userId !== userData.uniqueId ? 'float-left' : 'float-right'} chat-user-img img-30`} alt=\"\" />\n                                    <div className=\"message-data text-right\">\n                                        <span className={item._sender.userId !== userData.uniqueId ? \"message-data-time message-data-time-custom-left float-left\" : \"message-data-time message-data-time-custom-right float-right\"}>{moment(item.createdAt).format(\"MM/DD, h:mm a\")} by {item._sender.nickname.length > 0 ? item._sender.nickname : \"Unknown Participant.\"}</span>\n                                    </div>\n                                    {item.message}\n                                    <div className={item._sender.userId !== userData.uniqueId ? \"delivery-status-wrapper-right\" : \"delivery-status-wrapper-left\"}>\n                                        <p className={item._sender.userId !== userData.uniqueId ? \"delivery-confirmation-right\" : \"delivery-confirmation-left\"}>{item.sendingStatus === \"succeeded\" ? \"Delivered!\" : \"Pending Delivery...\"}</p>\n                                    </div>\n                                </div>\n                            </li>\n                        );\n                    }) : <div>\n                        <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                    </div>}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nexport default {\n    RenderMessagListStreaming\n};\n"]},"metadata":{},"sourceType":"module"}