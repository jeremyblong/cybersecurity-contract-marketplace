{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart';\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst ViewIndividualLiveStreamHelper = _ref => {\n  let {\n    location,\n    information,\n    SBData\n  } = _ref;\n  // create history obj for redirects\n  const history = useHistory();\n  const [state, setState] = useState({\n    nav1: null,\n    nav2: null\n  });\n  const [userCount, setUserCount] = useState(0);\n  const [streamData, setStreamData] = useState(null); // eslint-disable-next-line\n\n  const generated = uuid(); // chat begin\n\n  const allMembers = [];\n  const chats = [];\n  const selectedUser = {\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    online: false,\n    id: generated,\n    name: \"Jeremy Blong\",\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n  };\n  const currentUser = {\n    id: generated\n  };\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [videoUrl, setVideoUrlState] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [channel, setChannelData] = useState(null);\n  const [userList, setUserListState] = useState([]); // chat end\n\n  const slider1 = useRef();\n  const slider2 = useRef();\n  useEffect(() => () => {\n    console.log(\"Unmounted....\");\n    const CHANNEL_URL = location.state.stream.channelUrl;\n    SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n      if (error) {\n        // Handle error.\n        console.log(\"error getting channel to LEAVE group...:\", error);\n      } else {\n        openChannel.exit((response, error) => {\n          if (error) {\n            // Handle error.\n            console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n          } else {\n            console.log(\"EXIT channel SUCCESS!\", response);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n    setStreamData(location.state.stream);\n    const configuration = {\n      params: {\n        uniqueId: information.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        const CHANNEL_URL = location.state.stream.channelUrl;\n        SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n          if (error) {\n            // Handle error.\n            console.log(\"error GETTING channel...:\", error);\n          } // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n\n\n          openChannel.enter((response, error) => {\n            if (error) {\n              // Handle error.\n              console.log(\"error entering channel...:\", error);\n            } else {\n              console.log(\"successfully entered channel...\", response);\n              setChannelData(openChannel);\n              setUserData(user);\n            }\n          });\n        });\n      } else {\n        console.log(\"Err\", res.data);\n        NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n    });\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const addEmoji = emoji => {\n    const text = `${messageInput}${emoji.native}`;\n    setShowEmojiPicker(false);\n    setMessageInput(text);\n  };\n\n  const handleMessageChange = message => {\n    setMessageInput(message);\n  };\n\n  const renderSendbirdLiveCommands = () => {\n    const channelHandler = new SBData.ChannelHandler();\n    const CHANNEL_URL = location.state.stream.channelUrl;\n\n    channelHandler.onUserEntered = (openChannel, user) => {\n      console.log(\"onUserEntered entered\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(prevState => {\n        return [...prevState, user];\n      });\n    };\n\n    channelHandler.onUserExited = (openChannel, user) => {\n      console.log(\"onUserExited exited\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(prevState => {\n        return prevState.filter((item, idx) => {\n          if (item.userId !== user.userId) {\n            return true;\n          }\n        });\n      });\n    };\n\n    SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n  };\n\n  const handleMessagePress = e => {\n    if (e.key === \"Enter\" || e === \"send\") {\n      let container = document.querySelector(\".chat-history\");\n      setTimeout(function () {\n        container.scrollBy({\n          top: 200,\n          behavior: 'smooth'\n        });\n      }, 310);\n      let currentUserId = currentUser.id;\n      let selectedUserId = selectedUser.id;\n      let selectedUserName = selectedUser.name;\n\n      if (messageInput.length > 0) {\n        setMessageInput('');\n        setTimeout(() => {\n          const replyMessage = \"Hey This is \" + selectedUserName + \", Sorry I busy right now, I will text you later\";\n          if (selectedUser.online === true) document.querySelector(\".status-circle\").classList.add('online');\n          selectedUser.online = true;\n        }, 5000);\n      }\n    }\n  };\n\n  const chatMenuToggle = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const selectedChat = allMembers && chats && selectedUser ? chats.find(x => x.users.includes(currentUser.id) && x.users.includes(selectedUser.id)) : null;\n\n  const renderLiveStreamPlayer = () => {\n    if (videoUrl !== null) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          height: \"100%\"\n        },\n        className: \"ribbon-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"ribbon-wrapped-streaming-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ribbon ribbon-clip ribbon-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }\n      }, \"LIVE FEED!\"), /*#__PURE__*/React.createElement(ReactHlsPlayer, {\n        className: \"custom-streaming-player\",\n        src: videoUrl,\n        autoPlay: true,\n        controls: true,\n        width: \"100%\",\n        height: \"95%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"stretch-bars\",\n        count: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  const renderProfilePictureOrVideo = last => {\n    // last image will be rendered\n    if (!last.type.includes(\"video\")) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        src: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n        className: \"rounded-circle\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n        className: \"rounded-circle media media-body\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  console.log(\"userData\", userData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Live Streaming\",\n    title: \"Individual Live Stream (Currently LIVE)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, renderSendbirdLiveCommands(), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"7\",\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, renderLiveStreamPlayer()), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"5\",\n    xl: \"5 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"streaming-chat-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, userData !== null ? /*#__PURE__*/React.createElement(CardBody, {\n    className: \"streaming-chat-card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"pr-0 chat-right-aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  }, renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : /*#__PURE__*/React.createElement(Media, {\n    src: \"../../../../../assets/images/placeholder.png\",\n    className: \"rounded-circle\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 226\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 53\n    }\n  }, \"Streamed by \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 69\n    }\n  }, `${userData.firstName} ${userData.lastName}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 53\n    }\n  }, true ? 'online' : selectedUser.lastSeenDate, \" w/\", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 105\n    }\n  }, userCount), \" Current Viewer's\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline float-left float-sm-right chat-menu-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-clip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-headphone-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-video-camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item toogle-bar\",\n    onClick: () => chatMenuToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 130\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 145\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history chat-msg-box custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 49\n    }\n  }, typeof selectedChat !== \"undefined\" && selectedChat.messages.length > 0 ? selectedChat.messages.map((item, index) => {\n    const participators = allMembers.chats.find(x => x.id === item.sender);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `message my-message ${item.sender !== currentUser.id ? '' : 'float-right'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      src: selectedUser.image,\n      className: `rounded-circle ${item.sender !== currentUser.id ? 'float-left' : 'float-right'} chat-user-img img-30`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 73\n      }\n    }, item.time)), item.text));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"img-fluid\",\n    src: start_conversion,\n    alt: \"start conversion \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 61\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, showEmojiPicker ? /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 57\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    xl: \"12\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smiley-box bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker\",\n    onClick: () => toggleEmojiPicker(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: require('../../../../../assets/images/smiley.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control input-txt-bx\",\n    placeholder: \"Type a message......\",\n    value: messageInput,\n    onKeyPress: e => handleMessagePress(e),\n    onChange: e => handleMessageChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => handleMessagePress('send'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 61\n    }\n  }, Send)))))))))) : null)))), /*#__PURE__*/React.createElement(BottomContainerHelper, {\n    channel: channel,\n    userData: userData,\n    streamData: streamData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    information: state.auth.data,\n    SBData: state.sendbirdInitData.sendbirdInitData\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewIndividualLiveStreamHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","Button","Media","CardBody","Form","FormGroup","Input","InputGroup","InputGroupAddon","Nav","NavItem","NavLink","TabPane","TabContent","BottomContainerHelper","useHistory","withRouter","connect","start_conversion","Picker","Send","uuid","moment","ReactHlsPlayer","Skeleton","SkeletonTheme","NotificationManager","axios","ReactPlayer","_","ViewIndividualLiveStreamHelper","location","information","SBData","history","state","setState","nav1","nav2","userCount","setUserCount","streamData","setStreamData","generated","allMembers","chats","selectedUser","image","require","online","id","name","lastSeenDate","format","currentUser","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","menuToggle","setMenuToggle","videoUrl","setVideoUrlState","userData","setUserData","channel","setChannelData","userList","setUserListState","slider1","slider2","console","log","CHANNEL_URL","stream","channelUrl","OpenChannel","getChannel","openChannel","error","exit","response","playback_id","configuration","params","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","user","enter","catch","err","current","toggleEmojiPicker","addEmoji","emoji","text","native","handleMessageChange","renderSendbirdLiveCommands","channelHandler","ChannelHandler","onUserEntered","participantCount","prevState","onUserExited","filter","item","idx","userId","addChannelHandler","handleMessagePress","e","key","container","document","querySelector","setTimeout","scrollBy","top","behavior","currentUserId","selectedUserId","selectedUserName","length","replyMessage","classList","add","chatMenuToggle","selectedChat","find","x","users","includes","renderLiveStreamPlayer","height","renderProfilePictureOrVideo","last","type","REACT_APP_ASSET_LINK","link","has","profilePicsVideos","textDecorationLine","firstName","lastName","color","messages","map","index","participators","sender","time","target","value","mapStateToProps","auth","sendbirdInitData"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart'\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\n\nconst  ViewIndividualLiveStreamHelper = ({ location, information, SBData })  => {\n    // create history obj for redirects\n    const history = useHistory();\n    const [ state, setState ] = useState({ nav1: null, nav2: null });\n    const [ userCount, setUserCount ] = useState(0);\n    const [ streamData, setStreamData ] = useState(null);\n    // eslint-disable-next-line\n    const generated = uuid();\n    // chat begin\n    const allMembers = [];\n    const chats = [];\n    const selectedUser = {\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        online: false,\n        id: generated,\n        name: \"Jeremy Blong\",\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n    };\n    const currentUser = {\n        id: generated\n    };\n    const [ messageInput, setMessageInput ] = useState('');\n    const [ showEmojiPicker, setShowEmojiPicker ] = useState(false)\n    const [ menuToggle, setMenuToggle ] = useState(false);\n    const [ videoUrl, setVideoUrlState ] = useState(null);\n    const [ userData, setUserData ] = useState(null);\n    const [ channel, setChannelData ] = useState(null);\n    const [ userList, setUserListState ] = useState([]);\n    // chat end\n    const slider1 = useRef();\n    const slider2 = useRef();\n\n    useEffect(() => () => {\n        console.log(\"Unmounted....\");\n\n        const CHANNEL_URL = location.state.stream.channelUrl;\n\n        SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"error getting channel to LEAVE group...:\", error);\n            } else {\n                openChannel.exit((response, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n                    } else {\n                        console.log(\"EXIT channel SUCCESS!\", response);\n                    }\n                });\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n\n        setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n        setStreamData(location.state.stream);\n\n        const configuration = {\n            params: {\n                uniqueId: information.uniqueId\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                const CHANNEL_URL = location.state.stream.channelUrl;\n\n                SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"error GETTING channel...:\", error);\n                    }\n                \n                    // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n                    openChannel.enter((response, error) => {\n                        if (error) {\n                            // Handle error.\n                            console.log(\"error entering channel...:\", error);\n                        } else {\n                            console.log(\"successfully entered channel...\", response);\n\n                            setChannelData(openChannel);\n\n                            setUserData(user);\n                        }\n                    });\n                });\n            } else {\n                console.log(\"Err\", res.data);\n\n                NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n        })\n\n        setState({\n            nav1: slider1.current,\n            nav2: slider2.current\n          });\n      } , []);\n\n    const toggleEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n  \n    const addEmoji = (emoji) =>  {\n        const text = `${messageInput}${emoji.native}`;\n        setShowEmojiPicker(false);\n        setMessageInput(text)\n    }\n\n    const handleMessageChange = (message) => {\n        setMessageInput(message)\n    }\n    const renderSendbirdLiveCommands = () => {\n        const channelHandler = new SBData.ChannelHandler();\n\n        const CHANNEL_URL = location.state.stream.channelUrl;\n\n        channelHandler.onUserEntered = (openChannel, user) => {\n            console.log(\"onUserEntered entered\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n             // update current user list...\n            setUserListState(prevState => {\n                return [...prevState, user];\n            });\n        };\n        channelHandler.onUserExited = (openChannel, user) => {\n            console.log(\"onUserExited exited\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n            // update current user list...\n            setUserListState(prevState => {\n                return prevState.filter((item, idx) => {\n                    if (item.userId !== user.userId) {\n                        return true;\n                    }\n                })\n            });\n        };\n\n        SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n    }\n    const handleMessagePress = (e) => {\n        if (e.key === \"Enter\" || e === \"send\") {\n\n            let container = document.querySelector(\".chat-history\");\n            setTimeout(function () {\n                container.scrollBy({ top: 200, behavior: 'smooth' });\n            }, 310)\n\n            let currentUserId = currentUser.id;\n            let selectedUserId = selectedUser.id;\n            let selectedUserName = selectedUser.name;\n           \n            if (messageInput.length > 0) {\n\n                setMessageInput('');\n                setTimeout(() => {\n                    const replyMessage = \"Hey This is \" + selectedUserName + \", Sorry I busy right now, I will text you later\";\n                    if (selectedUser.online === true)\n                        document.querySelector(\".status-circle\").classList.add('online');\n                        selectedUser.online = true;\n\n                }, 5000);\n            }\n        }\n    }\n\n    const chatMenuToggle = () => {\n        setMenuToggle(!menuToggle)\n    }\n    const selectedChat = (allMembers && chats && selectedUser) ? chats.find(x => x.users.includes(currentUser.id) && x.users.includes(selectedUser.id)) : null;\n\n    const renderLiveStreamPlayer = () => {\n        if (videoUrl !== null) {\n            return (\n                <Fragment>\n                    <Card style={{ height: \"100%\" }} className=\"ribbon-wrapper\">\n                        <CardBody className={\"ribbon-wrapped-streaming-card\"}>\n                            <div className=\"ribbon ribbon-clip ribbon-info\">LIVE FEED!</div>\n                            <ReactHlsPlayer \n                                className={\"custom-streaming-player\"}\n                                src={videoUrl}\n                                autoPlay={true}\n                                controls={true}\n                                width=\"100%\"\n                                height=\"95%\"\n                            />\n                        </CardBody>\n                    </Card>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"stretch-bars\"} count={30} />\n                        </p>\n                    </SkeletonTheme>\n                </Fragment>\n            );\n        }\n    }\n    const renderProfilePictureOrVideo = (last) => {\n        // last image will be rendered\n        if (!last.type.includes(\"video\")) {\n            return (\n                <Fragment>\n                    <Media src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} className=\"rounded-circle\" alt=\"\" />\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} className=\"rounded-circle media media-body\" alt=\"\" />\n                </Fragment>\n            );\n        }\n    }\n    console.log(\"userData\", userData);\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Live Streaming\" title=\"Individual Live Stream (Currently LIVE)\"/>\n            <Container fluid={true}>\n                {renderSendbirdLiveCommands()}\n                <Row>\n                    <Col>\n                    <Card>\n                        <Row className=\"product-page-main\">\n                            <Col sm=\"12\" md=\"12\" lg=\"7\" xl=\"7\">\n                                {renderLiveStreamPlayer()}\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"5\" xl=\"5 xl-100\">\n                                <Card className={\"streaming-chat-card-wrapper\"}>\n                                    {userData !== null ? <CardBody className={\"streaming-chat-card-body p-0\"}>\n                                        <Row className=\"chat-box\">\n                                        <Col className=\"pr-0 chat-right-aside\">\n                                            <div className=\"chat\">\n                                            <div className=\"chat-header clearfix\">\n                                                {renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : <Media src={\"../../../../../assets/images/placeholder.png\"} className=\"rounded-circle\" alt=\"\" />)}\n                                                <div className=\"about\">\n                                                    <div className=\"name\">\n                                                        Streamed by <strong style={{ textDecorationLine: \"underline\" }}>{`${userData.firstName} ${userData.lastName}`}</strong>\n                                                    </div>\n                                                    <div className=\"status digits\" >\n                                                        {true ? 'online' : selectedUser.lastSeenDate} w/<strong style={{ color: \"blue\" }}>{userCount}</strong> Current Viewer's\n                                                    </div>\n                                                </div>\n                                                <ul className=\"list-inline float-left float-sm-right chat-menu-icons\">\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-search\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-clip\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-headphone-alt\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-video-camera\"></i></a></li>\n                                                    <li className=\"list-inline-item toogle-bar\" onClick={() => chatMenuToggle()}><a href={null}><i className=\"icon-menu\"></i></a></li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-history chat-msg-box custom-scrollbar\" >\n                                                <ul>\n                                                    {typeof selectedChat !== \"undefined\" && selectedChat.messages.length > 0 ? selectedChat.messages.map((item, index) => {\n                                                        const participators = allMembers.chats.find(x => x.id === item.sender);\n                                                        return (\n                                                            <li key={index} className=\"clearfix\">\n                                                                <div className={`message my-message ${item.sender !== currentUser.id ? '' : 'float-right'}`}>\n                                                                    <Media src={selectedUser.image}\n                                                                        className={`rounded-circle ${item.sender !== currentUser.id ? 'float-left' : 'float-right'} chat-user-img img-30`} alt=\"\" />\n                                                                    <div className=\"message-data text-right\">\n                                                                        <span className=\"message-data-time\">{item.time}</span>\n                                                                    </div>\n                                                                    {item.text}\n                                                                </div>\n                                                            </li>\n                                                        );\n                                                    }) :\n                                                        <div>\n                                                            <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                                                        </div>\n                                                    }\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-message clearfix\">\n                                                <Row>\n                                                <div className=\"mb-2\">\n                                                {showEmojiPicker ? (\n                                                        <Picker set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                                                ) : null}\n                                                </div>\n                                                <Col xl=\"12\" className=\"d-flex\">\n                                                    <div className=\"smiley-box bg-primary\">\n                                                    \n                                                        <div className=\"picker\" onClick={() => toggleEmojiPicker()}>\n                                                        <Media src={require('../../../../../assets/images/smiley.png')}  alt=\"\"/>\n                                                        </div>\n\n                                                    </div>\n                                                    <InputGroup className=\"text-box\">\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control input-txt-bx\"\n                                                            placeholder=\"Type a message......\"\n                                                            value={messageInput}\n                                                            onKeyPress={(e) => handleMessagePress(e)}\n                                                            onChange={(e) => handleMessageChange(e.target.value)}\n                                                        />\n                                                        <InputGroupAddon addonType=\"append\">\n                                                            <Button color=\"primary\" onClick={() => handleMessagePress('send')} >{Send}</Button>\n                                                        </InputGroupAddon>\n                                                    </InputGroup>\n                                                </Col>\n                                                </Row>\n                                            </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </CardBody> : null}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n                <BottomContainerHelper channel={channel} userData={userData} streamData={streamData} /></Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        information: state.auth.data,\n        SBData: state.sendbirdInitData.sendbirdInitData\n    }\n}\nexport default connect(mapStateToProps, {  })(withRouter(ViewIndividualLiveStreamHelper));\n"]},"metadata":{},"sourceType":"module"}