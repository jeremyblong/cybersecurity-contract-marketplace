{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/messagingPane/messagingHelper.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from \"react-redux\";\n\nconst MessagingPanePrivateHelper = _ref => {\n  let {\n    messagePaneOpen,\n    setMessagePaneState,\n    employerName,\n    SBData,\n    userData,\n    employerID\n  } = _ref;\n  const [formData, setFormData] = useState({\n    subject: \"\",\n    message: \"\"\n  });\n\n  const handleInputChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFormData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleFormSubmission = () => {\n    console.log(\"handleFormSubmission ran...!\");\n    const reversedProfilePicVideos = userData.profilePicsVideos.reverse();\n    let coverURLImage = \"\";\n    const generatedChannelID = uuid();\n\n    for (let index = 0; index < reversedProfilePicVideos.length; index++) {\n      const item = reversedProfilePicVideos[index];\n\n      if (item.type.includes(\"image\")) {\n        coverURLImage = `${process.env.REACT_APP_ASSET_LINK}/${item.link}`;\n        break;\n      }\n    }\n\n    console.log(coverURLImage, userData.uniqueId, employerID, formData.subject, generatedChannelID);\n    const params = new SBData.OpenChannelParams(); // channel parameters\n\n    params.name = formData.subject;\n    params.coverUrlOrImage = coverURLImage;\n    params.operatorUserIds = [userData.uniqueId, employerID];\n    params.data = formData.subject;\n    params.isPublic = false;\n    params.isDistinct = true;\n    params.customType = \"group\"; // params.channelUrl = generatedChannelID; \n    // START BACK UP HERE!!!\n\n    SBData.OpenChannel.createChannel(params, (openChannel, error) => {\n      if (error) {\n        // Handle error.\n        console.log(\"opening channel error occurred... :\", error);\n      }\n\n      const channelUrl = openChannel.channelUrl;\n      console.log(\"openChannel - channelUrl: \", openChannel, channelUrl);\n    });\n  };\n\n  const handleMessageSubmission = () => {\n    const {\n      subject,\n      message\n    } = formData;\n\n    if (typeof subject !== \"undefined\" && subject.length > 0) {\n      if (typeof message !== \"undefined\" && message.length > 0) {\n        handleFormSubmission();\n      } else {\n        NotificationManager.warning(\"You MUST complete (fill-out) the 'message' field/input before proceeding...!\", \"Fill-out the 'message' field!\", 4500);\n      }\n    } else {\n      NotificationManager.warning(\"You MUST complete (fill-out) the 'subject' line/input before proceeding...!\", \"Fill-out the 'subject' line!\", 4500);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: messagePaneOpen,\n    onClose: () => setMessagePaneState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12 box-col-12\",\n    xl: \"12 xl-100\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-messaging-initialize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, \"Create a new \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 62\n    }\n  }, \"private message\"), \" to \", employerName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, \"This will send a \\\"Private Message\\\" to \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 103\n    }\n  }, \"ONLY\"), \" the employer/poster of this listing - this information is encrypted & protected for privacy.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 61\n    }\n  }, \"Message Title/Subject\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 69\n    }\n  }, \"Msg Subject\")), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    value: formData.subject,\n    className: \"form-control\",\n    name: \"subject\",\n    type: \"text\",\n    placeholder: \"Subject or title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 65\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 61\n    }\n  }, \"Message Content\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    value: formData.message,\n    className: \"form-control\",\n    rows: 12,\n    name: \"message\",\n    type: \"textarea\",\n    placeholder: \"Enter your chat message here,  this is essential your 'private message' text...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 61\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleMessageSubmission,\n    style: {\n      width: \"75%\"\n    },\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 57\n    }\n  }, \"Submit/Send Message!\"))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    SBData: state.sendbirdInitData.sendbirdInitData,\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(MessagingPanePrivateHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/messagingPane/messagingHelper.js"],"names":["React","Fragment","useEffect","useState","Sheet","Container","Row","Col","Card","CardBody","Button","Form","Label","Input","InputGroup","InputGroupAddon","InputGroupText","uuid","NotificationManager","connect","MessagingPanePrivateHelper","messagePaneOpen","setMessagePaneState","employerName","SBData","userData","employerID","formData","setFormData","subject","message","handleInputChange","e","value","name","target","prevState","handleFormSubmission","console","log","reversedProfilePicVideos","profilePicsVideos","reverse","coverURLImage","generatedChannelID","index","length","item","type","includes","process","env","REACT_APP_ASSET_LINK","link","uniqueId","params","OpenChannelParams","coverUrlOrImage","operatorUserIds","data","isPublic","isDistinct","customType","OpenChannel","createChannel","openChannel","error","channelUrl","handleMessageSubmission","warning","textDecorationLine","width","mapStateToProps","state","sendbirdInitData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from \"react-redux\";\n\nconst MessagingPanePrivateHelper = ({ messagePaneOpen, setMessagePaneState, employerName, SBData, userData, employerID }) => {\n\n    const [ formData, setFormData ] = useState({\n        subject: \"\",\n        message: \"\"\n    });\n    const handleInputChange = (e) => {\n        const { value, name } = e.target;\n\n        setFormData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        })\n    }\n    const handleFormSubmission = () => {\n        console.log(\"handleFormSubmission ran...!\");\n\n        const reversedProfilePicVideos = userData.profilePicsVideos.reverse();\n\n        let coverURLImage = \"\";\n        const generatedChannelID = uuid();\n\n        for (let index = 0; index < reversedProfilePicVideos.length; index++) {\n            const item = reversedProfilePicVideos[index];\n            \n            if (item.type.includes(\"image\")) {\n                coverURLImage = `${process.env.REACT_APP_ASSET_LINK}/${item.link}`;\n                break;\n            }\n        }\n        console.log(coverURLImage, userData.uniqueId, employerID, formData.subject, generatedChannelID);\n\n        const params = new SBData.OpenChannelParams();\n        // channel parameters\n        params.name = formData.subject;\n        params.coverUrlOrImage = coverURLImage;\n        params.operatorUserIds = [userData.uniqueId, employerID];\n        params.data = formData.subject;\n        params.isPublic = false;\n        params.isDistinct = true;\n        params.customType = \"group\";\n        // params.channelUrl = generatedChannelID; \n        // START BACK UP HERE!!!\n        SBData.OpenChannel.createChannel(params, (openChannel, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"opening channel error occurred... :\", error);\n            }\n            const channelUrl = openChannel.channelUrl;\n\n            console.log(\"openChannel - channelUrl: \", openChannel, channelUrl);\n        });\n    }\n    const handleMessageSubmission = () => {\n        const { subject, message } = formData;\n\n        if (typeof subject !== \"undefined\" && subject.length > 0) {\n            if (typeof message !== \"undefined\" && message.length > 0) {\n                handleFormSubmission();\n            } else {\n                NotificationManager.warning(\"You MUST complete (fill-out) the 'message' field/input before proceeding...!\", \"Fill-out the 'message' field!\", 4500);\n            }\n        } else {\n            NotificationManager.warning(\"You MUST complete (fill-out) the 'subject' line/input before proceeding...!\", \"Fill-out the 'subject' line!\", 4500);\n        }\n    }\n    return (\n        <Fragment>\n            <Sheet isOpen={messagePaneOpen} onClose={() => setMessagePaneState(false)}>\n                <Sheet.Container>\n                    <Sheet.Header />\n                        <Sheet.Content>\n                            <Container fluid={true}>\n                                <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                    <Card className={\"card-shadow-messaging-initialize\"}>\n                                        <CardBody>\n                                            <h3>Create a new <strong>private message</strong> to {employerName}</h3>\n                                            <p className=\"lead\">This will send a \"Private Message\" to <strong style={{ textDecorationLine: \"underline\" }}>ONLY</strong> the employer/poster of this listing - this information is encrypted & protected for privacy.</p>\n                                            <hr />\n                                            <Form>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"12 mb-3\">\n                                                            <Label>Message Title/Subject</Label>\n                                                            <InputGroup>\n                                                                <InputGroupAddon addonType=\"prepend\">\n                                                                    <InputGroupText>{\"Msg Subject\"}</InputGroupText>\n                                                                </InputGroupAddon>\n                                                                <Input onChange={handleInputChange} value={formData.subject} className=\"form-control\" name=\"subject\" type=\"text\" placeholder=\"Subject or title...\" />\n                                                            </InputGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"12 mb-3\">\n                                                            <Label>Message Content</Label>\n                                                            <Input onChange={handleInputChange} value={formData.message} className=\"form-control\" rows={12} name=\"message\" type=\"textarea\" placeholder=\"Enter your chat message here,  this is essential your 'private message' text...\" />\n                                                        </Col>\n                                                    </div>\n                                                    <div className={\"centered-both-ways\"}>\n                                                        <Button onClick={handleMessageSubmission} style={{ width: \"75%\" }} outline color=\"info-2x\">{\"Submit/Send Message!\"}</Button>\n                                                    </div>\n                                                </Form>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Container>\n                        </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        SBData: state.sendbirdInitData.sendbirdInitData,\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(MessagingPanePrivateHelper);"]},"metadata":{},"sourceType":"module"}