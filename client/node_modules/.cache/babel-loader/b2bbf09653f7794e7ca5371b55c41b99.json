{"ast":null,"code":"import _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js\";\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\nimport PaginationEmployerListingHelper from \"../../../universal/pagination/paginationHelper.js\";\nimport moment from \"moment\";\nimport { useHistory } from 'react-router-dom'; // pagination settings and/or setup\n\nvar itemsPerPage = 15;\n\nvar ViewNotificationListHelper = function ViewNotificationListHelper(_ref) {\n  var userData = _ref.userData;\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ready = _useState4[0],\n      setReady = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pageCount = _useState8[0],\n      setPageCount = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      itemOffset = _useState10[0],\n      setItemOffset = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      immutableData = _useState12[0],\n      setImmutableData = _useState12[1];\n\n  useEffect(function () {\n    var endOffset = itemOffset + itemsPerPage;\n    setPageCount(Math.ceil(immutableData.length / itemsPerPage));\n    setNotifications(immutableData.slice(itemOffset, endOffset));\n  }, [itemOffset, itemsPerPage]);\n  useEffect(function () {\n    var configuration = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    var promises = [];\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/account/notifications\"), configuration).then(function (res) {\n      if (res.data.message === \"Successfully gathered notifications!\") {\n        console.log(\"successfully bookmarked profile...:\", res.data);\n        var _notifications = res.data.notifications;\n\n        var _loop = function _loop(index) {\n          var notify = _notifications[index];\n          promises.push(new Promise( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n              var result, file;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/fetch/profile/pic/video/only\"), {\n                        params: {\n                          uniqueId: notify.metadata.from\n                        }\n                      });\n\n                    case 2:\n                      result = _context.sent;\n\n                      if (result.data.message === \"Gathered resource!\") {\n                        file = result.data.file;\n                        notify.profilePicVideo = file;\n                        resolve(notify);\n                      } else {\n                        resolve(null);\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x, _x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n        };\n\n        for (var index = 0; index < _notifications.length; index++) {\n          _loop(index);\n        }\n\n        Promise.all(promises).then(function (passedData) {\n          console.log(\"passedData\", passedData);\n          var endOffset = itemOffset + itemsPerPage;\n          setPageCount(Math.ceil(passedData.length / itemsPerPage));\n          setNotifications(passedData.slice(itemOffset, endOffset));\n          setImmutableData(passedData);\n          setReady(true);\n        });\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n    });\n  }, []);\n\n  var renderProfilePicVideo = function renderProfilePicVideo(last) {\n    if (last !== null && _.has(last, \"link\")) {\n      if (last.type.includes(\"video\")) {\n        // video logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          playing: true,\n          loop: true,\n          muted: true,\n          width: \"100%\",\n          className: \"notification-pic-video\",\n          wrapper: \"div\",\n          url: \"\".concat(process.env.REACT_APP_ASSET_LINK, \"/\").concat(last.link),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        // image logic\n        return /*#__PURE__*/React.createElement(Media, {\n          className: \"notification-pic-video\",\n          body: true,\n          alt: \"profile-picture-sub\",\n          src: \"\".concat(process.env.REACT_APP_ASSET_LINK, \"/\").concat(last.link),\n          \"data-intro\": \"This is Profile image\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Media, {\n        className: \"notification-pic-video\",\n        body: true,\n        alt: \"profile-picture-sub\",\n        src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n        \"data-intro\": \"This is Profile image\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  var calculateWhereToRedirect = function calculateWhereToRedirect(data) {\n    console.log(\"calculateWhereToRedirect ran...!\");\n\n    if (_.has(data, \"action\") && data.action === \"video-invite\") {\n      history.push(\"/start/video/interview/chat/employer/\".concat(data.metadata.attachments.attachment.generatedRoomID));\n    } else {}\n  };\n\n  var handleNotificationClick = function handleNotificationClick(notification) {\n    console.log(\"handleNotificationClick clicked..\");\n    var configuration = {\n      notification: notification,\n      uniqueId: userData.uniqueId,\n      accountType: userData.accountType\n    };\n    axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/mark/notification/viewed/both/account/types\"), configuration).then( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var _notification, findIndexNotification, shallowCopy, result, file;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(res.data.message === \"Marked notification as seen!\")) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log(\"Marked notification as seen!...:\", res.data);\n                _notification = res.data.notification;\n                findIndexNotification = notifications.findIndex(function (item) {\n                  return item !== null && item.id === _notification.id;\n                });\n                shallowCopy = _toConsumableArray(notifications);\n                _context2.next = 7;\n                return axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/fetch/profile/pic/video/only\"), {\n                  params: {\n                    uniqueId: _notification.metadata.from\n                  }\n                });\n\n              case 7:\n                result = _context2.sent;\n\n                if (result.data.message === \"Gathered resource!\") {\n                  file = result.data.file;\n                  console.log(\"file\", file);\n                  _notification.profilePicVideo = file;\n                  shallowCopy[findIndexNotification] = _notification;\n                  console.log(\"shallowCopy\", shallowCopy);\n                  setNotifications(shallowCopy);\n                  NotificationManager.success(\"We've successfully marked this notification as 'read' or 'seen' - you will be redirected momentarily IF this notification has any related logic, otherwise no action will be taken.\", \"Successfully marked as viewed/seen!\", 4750);\n                  calculateWhereToRedirect(_notification);\n                } else {\n                  NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n                } // setNotifications(notifications);\n\n\n                _context2.next = 13;\n                break;\n\n              case 11:\n                console.log(\"err\", res.data);\n                NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()).catch(function (err) {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Notification(s), Changes & Updates\",\n    title: \"View & Manage Your Notification's!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-notification-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-notification\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, \"View your notifications, manage updates & more! (click notifications to be redirected approriately)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, \"Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map(function (notification, index) {\n    if (notification !== null) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        onClick: function onClick() {\n          return handleNotificationClick(notification);\n        },\n        className: notification.seenRead === true ? \"list-group-item-action flex-column align-items-start notification-custom-notification active\" : \"list-group-item-action flex-column align-items-start notification-custom-notification\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"1\",\n        lg: \"1\",\n        xl: \"1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 61\n        }\n      }, renderProfilePicVideo(notification.profilePicVideo)), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"11\",\n        lg: \"11\",\n        xl: \"11\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-1 maxed-title-notification\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 69\n        }\n      }, notification.title), /*#__PURE__*/React.createElement(\"small\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 140\n        }\n      }, moment(notification.date).fromNow())), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 65\n        }\n      }, notification.description), /*#__PURE__*/React.createElement(\"small\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 65\n        }\n      }, notification.dateString)))));\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../assets/images/no-current-notifications.png\"),\n    className: \"no-notifications-img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-pagination-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PaginationEmployerListingHelper, {\n    itemsPerPage: itemsPerPage,\n    loopingData: immutableData,\n    currentPage: currentPage,\n    pageCount: pageCount,\n    setItemOffset: setItemOffset,\n    setCurrentPage: setCurrentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewNotificationListHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/notifications/employers/viewNotificationList/viewNotifications.js"],"names":["React","Fragment","useState","useEffect","ListGroup","ListGroupItem","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Media","axios","connect","NotificationManager","Breadcrumb","_","ReactPlayer","PaginationEmployerListingHelper","moment","useHistory","itemsPerPage","ViewNotificationListHelper","userData","history","notifications","setNotifications","ready","setReady","currentPage","setCurrentPage","pageCount","setPageCount","itemOffset","setItemOffset","immutableData","setImmutableData","endOffset","Math","ceil","length","slice","configuration","params","uniqueId","accountType","promises","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","index","notify","push","Promise","resolve","reject","metadata","from","result","file","profilePicVideo","all","passedData","error","catch","err","renderProfilePicVideo","last","has","type","includes","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","calculateWhereToRedirect","action","attachments","attachment","generatedRoomID","handleNotificationClick","notification","post","findIndexNotification","findIndex","item","id","shallowCopy","success","map","seenRead","title","date","fromNow","description","dateString","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Media } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport _ from \"lodash\";\nimport ReactPlayer from 'react-player';\nimport PaginationEmployerListingHelper from \"../../../universal/pagination/paginationHelper.js\";\nimport moment from \"moment\";\nimport { useHistory } from 'react-router-dom';\n\n\n// pagination settings and/or setup\nconst itemsPerPage = 15;\n\n\nconst ViewNotificationListHelper = ({ userData }) => {\n\n    const history = useHistory();\n\n    const [ notifications, setNotifications ] = useState([]);\n    const [ ready, setReady ] = useState(false);\n    const [ currentPage, setCurrentPage ] = useState(0);\n    const [ pageCount, setPageCount ] = useState(0);\n    const [ itemOffset, setItemOffset ] = useState(0);\n    const [ immutableData, setImmutableData ] = useState([]);\n\n    useEffect(() => {\n        const endOffset = itemOffset + itemsPerPage;\n\n        setPageCount(Math.ceil(immutableData.length / itemsPerPage));\n\n        setNotifications(immutableData.slice(itemOffset, endOffset));\n        \n    }, [ itemOffset, itemsPerPage ]);\n\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType \n            }\n        }\n\n        const promises = [];\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/account/notifications`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered notifications!\") {\n                console.log(\"successfully bookmarked profile...:\", res.data);\n\n                const { notifications } = res.data;\n\n                for (let index = 0; index < notifications.length; index++) {\n                    const notify = notifications[index];\n                    \n                    promises.push(new Promise(async (resolve, reject) => {\n                        const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n                            params: {\n                                uniqueId: notify.metadata.from\n                            }\n                        })\n\n                        if (result.data.message === \"Gathered resource!\") {\n                            const file = result.data.file;\n\n                            notify.profilePicVideo = file;\n\n                            resolve(notify);\n                        } else {\n                            resolve(null);\n                        }\n                    }))\n                }\n\n                Promise.all(promises).then((passedData) => {\n                    console.log(\"passedData\", passedData);\n\n                    const endOffset = itemOffset + itemsPerPage;\n\n                    setPageCount(Math.ceil(passedData.length / itemsPerPage));\n\n                    setNotifications(passedData.slice(itemOffset, endOffset));\n                    setImmutableData(passedData);\n                    setReady(true);\n                })\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred while attempting to gather related profile notifications! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        })\n    }, []);\n\n\n    const renderProfilePicVideo = (last) => {\n        if (last !== null && _.has(last, \"link\")) {\n            if (last.type.includes(\"video\")) {\n                // video logic\n                return (\n                    <Media className=\"notification-pic-video\" body>\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"notification-pic-video\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} />\n                    </Media>\n                );\n            } else {\n                // image logic\n                return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} data-intro=\"This is Profile image\" />;\n            }  \n        } else {\n            // image logic\n            return <Media className=\"notification-pic-video\" body alt=\"profile-picture-sub\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} data-intro=\"This is Profile image\" />;\n        } \n    }\n\n    const calculateWhereToRedirect = (data) => {\n        console.log(\"calculateWhereToRedirect ran...!\");\n\n        if (_.has(data, \"action\") && data.action === \"video-invite\") {\n            history.push(`/start/video/interview/chat/employer/${data.metadata.attachments.attachment.generatedRoomID}`);\n        } else {\n            \n        }\n    }\n\n    const handleNotificationClick = (notification) => {\n        console.log(\"handleNotificationClick clicked..\");\n\n        const configuration = {\n            notification,\n            uniqueId: userData.uniqueId,\n            accountType: userData.accountType\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/mark/notification/viewed/both/account/types`, configuration).then(async (res) => {\n            if (res.data.message === \"Marked notification as seen!\") {\n                console.log(\"Marked notification as seen!...:\", res.data);\n\n                const { notification } = res.data;\n\n                const findIndexNotification = notifications.findIndex((item) => item !== null && item.id === notification.id);\n\n                const shallowCopy = [...notifications];\n\n                const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/profile/pic/video/only`, {\n                    params: {\n                        uniqueId: notification.metadata.from\n                    }\n                })\n\n                if (result.data.message === \"Gathered resource!\") {\n                    const file = result.data.file;\n\n                    console.log(\"file\", file);\n\n                    notification.profilePicVideo = file;\n\n                    shallowCopy[findIndexNotification] = notification;\n\n                    console.log(\"shallowCopy\", shallowCopy);\n\n                    setNotifications(shallowCopy);\n\n                    NotificationManager.success(\"We've successfully marked this notification as 'read' or 'seen' - you will be redirected momentarily IF this notification has any related logic, otherwise no action will be taken.\", \"Successfully marked as viewed/seen!\", 4750);\n\n                    calculateWhereToRedirect(notification);\n                } else {\n                    NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n                }\n\n                // setNotifications(notifications);\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred while attempting mark notification as 'viewed' & process notification logic! Please reload the page or contact support if the problem persists..\", \"Error occurred while fetching notifications!\", 4750);\n        })\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Notification(s), Changes & Updates\" title=\"View & Manage Your Notification's!\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className='shadow-notification-card'>\n                            <CardHeader className='b-l-primary b-r-primary'>\n                                <h4 className='header-notification'>View your notifications, manage updates & more! (click notifications to be redirected approriately)</h4>\n                                <p className='lead'>Click certain notifications will redirect you to the approriate changes/updates. Some notifications will not be linked to anything however some will, you can view your 'already viewed' notifications by the tinted color...</p>\n                            </CardHeader>\n                            <CardBody>\n                                <ListGroup>\n                                    {typeof notifications !== \"undefined\" && notifications.length > 0 ? notifications.map((notification, index) => {\n                                        if (notification !== null) {\n                                            return (\n                                                <Fragment key={index}>\n                                                    <ListGroupItem onClick={() => handleNotificationClick(notification)} className={notification.seenRead === true ? \"list-group-item-action flex-column align-items-start notification-custom-notification active\" : \"list-group-item-action flex-column align-items-start notification-custom-notification\"}>\n                                                        <Row>\n                                                            <Col sm=\"12\" md=\"1\" lg=\"1\" xl=\"1\">\n                                                                {renderProfilePicVideo(notification.profilePicVideo)}\n                                                            </Col>\n                                                            <Col sm=\"12\" md=\"11\" lg=\"11\" xl=\"11\">\n                                                                <div className=\"d-flex w-100 justify-content-between\">\n                                                                    <h5 className=\"mb-1 maxed-title-notification\">{notification.title}</h5><small>{moment(notification.date).fromNow()}</small>\n                                                                </div>\n                                                                <p className=\"mb-1\">{notification.description}</p>\n                                                                <small>{notification.dateString}</small>\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroupItem>\n                                                </Fragment>\n                                            );\n                                        }\n                                    }) : <Fragment>\n                                        <img src={require(\"../../../../../assets/images/no-current-notifications.png\")} className={\"no-notifications-img\"} />\n                                    </Fragment>}\n                                </ListGroup>\n                                <div className='notification-pagination-wrapper'>\n                                    <PaginationEmployerListingHelper itemsPerPage={itemsPerPage} loopingData={immutableData} currentPage={currentPage} pageCount={pageCount} setItemOffset={setItemOffset} setCurrentPage={setCurrentPage}  />\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewNotificationListHelper);"]},"metadata":{},"sourceType":"module"}