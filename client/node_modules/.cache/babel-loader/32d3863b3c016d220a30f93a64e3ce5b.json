{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageThree/index.js\";\nimport React, { Fragment, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/helperFunctions/helpers.js\";\nimport { Button, Row, Col, Card, CardBody, CardHeader, FormGroup, Label, Input, Media, InputGroup, Form, InputGroupAddon, InputGroupText, Progress, ListGroupItem, Container } from 'reactstrap';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { useForm, Controller } from 'react-hook-form';\nimport reactHookHelpers from \"./helpers/helperFunctions/hookFormHelpers.js\";\nimport options from \"./helpers/helperFunctions/options.js\";\nconst {\n  lanuageOptions\n} = options; // react-hook-form imports/helpers\n\nconst subtitleChecks = reactHookHelpers().subtitleChecks;\nconst languageSpokenChecks = reactHookHelpers().languageSpokenChecks; // actual component\n\nconst CreateNewCoursePageThree = _ref => {\n  let {\n    userData,\n    courseData,\n    overallProgress,\n    setOverallProgress,\n    setProgress\n  } = _ref;\n  const languageSpokenRef = useRef(null); // redux form logic\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    resetField,\n    unregister,\n    getValues,\n    array,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues();\n\n  const handleSubmission = () => {\n    console.log(\"handleSubmission ran...\");\n  };\n\n  const onSubmit = (data, e) => {\n    console.log(\"onSubmit ran...\", data, e);\n  };\n\n  const errorsSubmit = (e, errors) => {\n    console.log(\"errorsSubmit\", e, errors);\n  };\n\n  console.log(\"current VALUES:\", currentValues);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-horizontally-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-above-bar-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, overallProgress, \"% Complete\")), /*#__PURE__*/React.createElement(Progress, {\n    className: \"course-creation-progress-bar\",\n    animated: true,\n    color: \"info\",\n    value: overallProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"course-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }, \"More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"specifics-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary card-header-customized-specifics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 49\n    }\n  }, \"More required detailed information related to core listing\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit, (e, errors) => {\n      return errorsSubmit(e, errors);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12 mb-3\",\n    lg: \"12 mb-3\",\n    xl: \"12 mb-3\",\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 61\n    }\n  }, subtitleChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, subtitleChecks.check(setError, register), {\n    onChange: e => subtitleChecks.onChange(e, setValue),\n    value: currentValues.subtitle,\n    className: \"form-control\",\n    name: subtitleChecks.name,\n    type: subtitleChecks.type,\n    placeholder: subtitleChecks.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 61\n    }\n  })), errors.subtitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 80\n    }\n  }, errors.subtitle.message) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"6 mb-3\",\n    xl: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 61\n    }\n  }, \"FirstName\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"6 mb-3\",\n    xl: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 65\n    }\n  }, languageSpokenChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: languageSpokenChecks.name\n  }, languageSpokenChecks.check(setError, register, clearErrors), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: languageSpokenRef,\n        autoBlur: true,\n        placeholder: languageSpokenChecks.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          languageSpokenRef.current.blur();\n        },\n        value: currentValues.languageSpoken,\n        onChange: selectedOption => languageSpokenChecks.onChange(selectedOption, setValue, clearErrors),\n        options: lanuageOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 73\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 65\n    }\n  })), errors.pricing ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 83\n    }\n  }, errors.pricing.message) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 61\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 61\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    id: \"validationCustom04\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"validationCustom05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 61\n    }\n  }, \"Zip\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    id: \"validationCustom05\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 61\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    className: \"btn-square-info\",\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 53\n    }\n  }, \"Submit form & proceed w/rest of logic\"))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmission,\n    className: \"btn-square-secondary\",\n    color: \"secondary-2x\",\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Submit & Continue W/Form Process\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCourseInformationData\n})(CreateNewCoursePageThree);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageThree/index.js"],"names":["React","Fragment","useState","useRef","connect","helpers","Button","Row","Col","Card","CardBody","CardHeader","FormGroup","Label","Input","Media","InputGroup","Form","InputGroupAddon","InputGroupText","Progress","ListGroupItem","Container","updateCourseInformationData","_","uuid","moment","Select","useForm","Controller","reactHookHelpers","options","lanuageOptions","subtitleChecks","languageSpokenChecks","CreateNewCoursePageThree","userData","courseData","overallProgress","setOverallProgress","setProgress","languageSpokenRef","register","handleSubmit","control","resetField","unregister","getValues","array","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","handleSubmission","console","log","onSubmit","data","e","errorsSubmit","marginTop","label","check","onChange","subtitle","name","type","placeholder","message","field","current","blur","languageSpoken","selectedOption","pricing","width","mapStateToProps","state","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/helperFunctions/helpers.js\";\nimport { Button, Row, Col, Card, CardBody, CardHeader, FormGroup, Label, Input, Media, InputGroup, Form, InputGroupAddon, InputGroupText, Progress, ListGroupItem, Container } from 'reactstrap';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { useForm, Controller } from 'react-hook-form';\nimport reactHookHelpers from \"./helpers/helperFunctions/hookFormHelpers.js\";\nimport options from \"./helpers/helperFunctions/options.js\";\n\nconst { lanuageOptions } = options;\n\n// react-hook-form imports/helpers\nconst subtitleChecks = reactHookHelpers().subtitleChecks;\nconst languageSpokenChecks = reactHookHelpers().languageSpokenChecks;\n\n// actual component\nconst CreateNewCoursePageThree = ({ userData, courseData, overallProgress, setOverallProgress, setProgress }) => {\n\n    const languageSpokenRef = useRef(null);\n    // redux form logic\n    const { register, handleSubmit, control, resetField, unregister, getValues, array, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n\n    const handleSubmission = () => {\n        console.log(\"handleSubmission ran...\");\n    }\n    const onSubmit = (data, e) => {\n        console.log(\"onSubmit ran...\", data, e);\n    }\n    const errorsSubmit = (e, errors) => {\n        console.log(\"errorsSubmit\", e, errors);\n    }\n    console.log(\"current VALUES:\", currentValues);\n    return (\n        <Fragment>\n            <div className={\"centered-horizontally-course\"}>\n                <div className={\"position-above-bar-percentage\"}>\n                    <h1>{overallProgress}% Complete</h1>\n                </div>\n                <Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} />\n            </div>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <h4 className={\"course-custom-title\"}>More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...</h4>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ marginTop: \"17.5px\" }}>\n                                        <Card className={\"specifics-card\"}>\n                                            <CardHeader className=\"b-l-primary card-header-customized-specifics\">\n                                                <h4>More required detailed information related to core listing</h4>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Form onSubmit={handleSubmit(onSubmit, (e, errors) => {\n                                                    return errorsSubmit(e, errors);\n                                                })}>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{subtitleChecks.label}</Label>\n                                                            <Input {...subtitleChecks.check(setError, register)} onChange={(e) => subtitleChecks.onChange(e, setValue)} value={currentValues.subtitle} className=\"form-control\" name={subtitleChecks.name} type={subtitleChecks.type} placeholder={subtitleChecks.placeholder} />\n                                                            {errors.subtitle ? <span className=\"span-tooltip\">{errors.subtitle.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <Label>FirstName</Label>\n                                                            <Input className=\"form-control\" name=\"firstName\" type=\"text\" placeholder=\"First name\" />\n                                                        </Col>\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{languageSpokenChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={languageSpokenChecks.name}\n                                                                    {...languageSpokenChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={languageSpokenRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={languageSpokenChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                languageSpokenRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.languageSpoken}\n                                                                            onChange={(selectedOption) => languageSpokenChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={lanuageOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.pricing ? <span className=\"span-tooltip\">{errors.pricing.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"6 mb-3\">\n                                                            <Label htmlFor=\"validationCustom03\">City</Label>\n                                                            <Input className=\"form-control\" name=\"city\" type=\"text\" placeholder=\"City\" />\n                                                        </Col>\n                                                        <Col md=\"3 mb-3\">\n                                                            <Label htmlFor=\"validationCustom04\">State</Label>\n                                                            <Input className=\"form-control\" id=\"validationCustom04\" name=\"state\" type=\"text\" placeholder=\"State\" />\n                                                        </Col>\n                                                        <Col md=\"3 mb-3\">\n                                                            <Label htmlFor=\"validationCustom05\">Zip</Label>\n                                                            <Input className=\"form-control\" id=\"validationCustom05\" name=\"zip\" type=\"text\" placeholder=\"Zip\" />\n                                                        </Col>\n                                                    </div>\n                                                    <hr />\n                                                    <Button style={{ width: \"100%\" }} outline className={\"btn-square-info\"} color=\"info-2x\">{\"Submit form & proceed w/rest of logic\"}</Button>\n                                                    </Form>\n                                            </CardBody>\n                                        </Card>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardBody>\n                                \n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardBody>\n                                <Button onClick={handleSubmission} className={\"btn-square-secondary\"} color={\"secondary-2x\"} outline style={{ width: \"100%\" }}>Submit & Continue W/Form Process</Button>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []    \n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData })(CreateNewCoursePageThree);"]},"metadata":{},"sourceType":"module"}