{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/createNewListing.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport PageOneMainHelper from \"./multiStepPages/pageOne/pageOneMain.js\";\nimport { Container, Col, Row, CardHeader, CardBody, Card, Progress } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport LoadingBar from 'react-top-loading-bar';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport PageTwoMainHelper from \"./multiStepPages/pageTwo/pageTwoMain.js\";\nimport \"./styles.css\";\nimport PageThreeHelper from \"./multiStepPages/pageThree/pageThreeMain.js\";\nimport PageFourMainHelper from \"./multiStepPages/pageFour/pageFourMain.js\";\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\n\nconst CreateNewSoftwareListingHelper = _ref => {\n  let {\n    currentPage\n  } = _ref;\n  // state for this component ONLY - PROGRESS\n  const [progress, setProgress] = useState(0); // refs for this component ONLY\n\n  const isFirstRender = useRef(true); // run this REF only ONCE\n\n  const renderOnlyOnce = useRef(false);\n\n  const renderConditionalPageContent = () => {\n    switch (currentPage) {\n      case 1:\n        return /*#__PURE__*/React.createElement(PageOneMainHelper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }\n        });\n        break;\n\n      case 2:\n        return /*#__PURE__*/React.createElement(PageTwoMainHelper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 24\n          }\n        });\n        break;\n\n      case 3:\n        return /*#__PURE__*/React.createElement(PageThreeHelper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }\n        });\n        break;\n\n      case 4:\n        return /*#__PURE__*/React.createElement(PageFourMainHelper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculateProgressPercentage = page => {\n    switch (page) {\n      case 1:\n        return 20;\n        break;\n\n      case 2:\n        return 40;\n        break;\n\n      case 3:\n        return 60;\n        break;\n\n      case 4:\n        return 80;\n        break;\n\n      case 5:\n        return 100;\n        break;\n\n      default:\n        break;\n    }\n  }; // confetti on END helper function\n\n\n  const handleConfettiCompletion = (data, other) => {\n    console.log(\"handleConfettiCompletion ended...\", data, other);\n  };\n\n  useEffect(() => {\n    console.log(\"logged!!!! useEffect ran...!\"); // check if FIRST render and do logic only FIRST TIME\n\n    if (renderOnlyOnce === false) {\n      // FIRST RENDER\n      console.log(\"FIRST RENDER\"); // UPDATE progress state (mainly for animation effect).\n\n      setProgress(calculateProgressPercentage(currentPage));\n    } // run conditional to check for 'first render' then alter ref data\n\n\n    if (isFirstRender.current) {\n      console.log(\"isFirstRender conditional FIRST TIME.\"); // change data to false in preperation for next check upon next change\n\n      isFirstRender.current = false;\n    } else {\n      console.log(\"isFirstRender conditional SUBSEQUENT RUN.\");\n      setProgress(calculateProgressPercentage(currentPage));\n    }\n  }, [currentPage]); // create window height/width sizes for confetti component\n\n  const {\n    width,\n    height\n  } = useWindowSize(); // MAIN logic below... (returning majority of data)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#f73164\",\n    height: 8,\n    className: \"create-listing-software-loadbar\",\n    progress: progress,\n    containerClassName: \"container-create-listing-software-loadbar\",\n    loaderSpeed: 3500,\n    onLoaderFinished: () => {\n      setProgress(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Confetti, {\n    width: width,\n    height: height,\n    wind: 0.25,\n    gravity: 0.2,\n    numberOfPieces: 500,\n    onConfettiComplete: handleConfettiCompletion,\n    recycle: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Software (digital assets) Marketplace\",\n    title: \"Create a listing to sell software/code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"full-height-container\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"full-height-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, \"Create a \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 46\n    }\n  }, \"software\"), \" listing - post a code snippet, malware, viruses, etc...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, \"We are \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 43\n    }\n  }, \"NOT\"), \" in any shape or form responsible if you use these codes/programs in a malicious manner AND any suspicious activity or reports \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 240\n    }\n  }, \"WILL\"), \" be throughly investigated & reported to the appropriate authorities.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spacer-paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, \"In order to post a listing to sell or trade digital software related content, you will need to complete the following \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 183\n    }\n  }, \"multi-page\"), \" form to completion & your listing/item will be immediately posted shortly thereafter!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"push-bottom-progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-middle-bar-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"progress-text-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, `${progress}% Completed (Create-listing flow)`)), /*#__PURE__*/React.createElement(Progress, {\n    className: \"reactstrap-progress-bar-custom\",\n    animated: true,\n    color: \"secondary\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"full-height-cardbody-extra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, renderConditionalPageContent()))))));\n};\n\nconst mapStateToProps = state => {\n  console.log(\"State in 'createNewListing.js'\", state);\n  return {\n    currentPage: _.has(state.softwareListingSale, \"softwareListingSaleInfo\") && Object.keys(state.softwareListingSale.softwareListingSaleInfo).length > 0 ? state.softwareListingSale.softwareListingSaleInfo.currentPage : 1\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewSoftwareListingHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/createNewListing.js"],"names":["React","useRef","useState","useEffect","PageOneMainHelper","Container","Col","Row","CardHeader","CardBody","Card","Progress","Breadcrumb","LoadingBar","connect","_","PageTwoMainHelper","PageThreeHelper","PageFourMainHelper","useWindowSize","Confetti","CreateNewSoftwareListingHelper","currentPage","progress","setProgress","isFirstRender","renderOnlyOnce","renderConditionalPageContent","calculateProgressPercentage","page","handleConfettiCompletion","data","other","console","log","current","width","height","color","textDecorationLine","mapStateToProps","state","has","softwareListingSale","Object","keys","softwareListingSaleInfo","length"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport PageOneMainHelper from \"./multiStepPages/pageOne/pageOneMain.js\";\nimport { Container, Col, Row, CardHeader, CardBody, Card, Progress } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport LoadingBar from 'react-top-loading-bar';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport PageTwoMainHelper from \"./multiStepPages/pageTwo/pageTwoMain.js\";\nimport \"./styles.css\";\nimport PageThreeHelper from \"./multiStepPages/pageThree/pageThreeMain.js\";\nimport PageFourMainHelper from \"./multiStepPages/pageFour/pageFourMain.js\";\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\n\nconst CreateNewSoftwareListingHelper = ({ currentPage }) => {\n    // state for this component ONLY - PROGRESS\n    const [ progress, setProgress ] = useState(0);\n\n    // refs for this component ONLY\n    const isFirstRender = useRef(true);\n    // run this REF only ONCE\n    const renderOnlyOnce = useRef(false);\n\n    const renderConditionalPageContent = () => {\n\n        switch (currentPage) {\n            case 1:\n                return <PageOneMainHelper />;\n                break;\n            case 2: \n                return <PageTwoMainHelper />;\n                break;\n            case 3: \n                return <PageThreeHelper />;\n                break;\n            case 4: \n                return <PageFourMainHelper />\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateProgressPercentage = (page) => {\n        switch (page) {\n            case 1:\n                return 20;\n                break;\n            case 2:\n                return 40;\n                break;\n            case 3: \n                return 60;\n                break;\n            case 4: \n                return 80;\n                break;\n            case 5:\n                return 100;\n                break\n            default:\n                break;\n        }\n    }\n    // confetti on END helper function\n    const handleConfettiCompletion = (data, other) => {\n        console.log(\"handleConfettiCompletion ended...\", data, other);\n    }\n    useEffect(() => {\n        console.log(\"logged!!!! useEffect ran...!\");\n        // check if FIRST render and do logic only FIRST TIME\n        if (renderOnlyOnce === false) {\n            // FIRST RENDER\n            console.log(\"FIRST RENDER\");\n            // UPDATE progress state (mainly for animation effect).\n            setProgress(calculateProgressPercentage(currentPage))\n        } \n        // run conditional to check for 'first render' then alter ref data\n        if (isFirstRender.current) {\n            console.log(\"isFirstRender conditional FIRST TIME.\");\n            // change data to false in preperation for next check upon next change\n            isFirstRender.current = false;\n        } else {\n            console.log(\"isFirstRender conditional SUBSEQUENT RUN.\");\n\n            setProgress(calculateProgressPercentage(currentPage))\n        }\n    }, [currentPage]);\n    \n    // create window height/width sizes for confetti component\n    const { width, height } = useWindowSize();\n\n    // MAIN logic below... (returning majority of data)\n    return (\n        <div>\n            <LoadingBar\n                color='#f73164'\n                height={8}\n                className={\"create-listing-software-loadbar\"}\n                progress={progress}\n                containerClassName={\"container-create-listing-software-loadbar\"}\n                loaderSpeed={3500}\n                onLoaderFinished={() => {\n                    setProgress(false);\n                }}\n            />\n            <Confetti\n                width={width}\n                height={height}\n                wind={0.25}\n                gravity={0.2}\n                numberOfPieces={500}\n                onConfettiComplete={handleConfettiCompletion}\n                recycle={false}\n            />\n            <Breadcrumb parent=\"Software (digital assets) Marketplace\" title=\"Create a listing to sell software/code\"/>\n            <Container className=\"full-height-container\" fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className=\"full-height-container\">\n                            <CardHeader>\n                                <h5>Create a <strong style={{ color: \"blue\" }}>software</strong> listing - post a code snippet, malware, viruses, etc...</h5>\n                                <p>We are <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>NOT</em> in any shape or form responsible if you use these codes/programs in a malicious manner AND any suspicious activity or reports <strong style={{ textDecorationLine: \"underline\", color: \"red\" }}>WILL</strong> be throughly investigated & reported to the appropriate authorities.</p>\n                                <hr />\n                                <p className=\"spacer-paragraph\">In order to post a listing to sell or trade digital software related content, you will need to complete the following <strong>multi-page</strong> form to completion & your listing/item will be immediately posted shortly thereafter!</p>\n                                <div className=\"push-bottom-progress-bar\">\n                                    <div className=\"position-middle-bar-div\">\n                                        <h4 id=\"progress-text-centered\">{`${progress}% Completed (Create-listing flow)`}</h4>\n                                    </div>\n                                    <Progress className=\"reactstrap-progress-bar-custom\" animated color=\"secondary\" value={progress} />\n                                </div>\n                            </CardHeader>\n                            <CardBody className=\"full-height-cardbody-extra\">\n                                {renderConditionalPageContent()}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    console.log(\"State in 'createNewListing.js'\", state);\n\n    return {\n        currentPage: _.has(state.softwareListingSale, \"softwareListingSaleInfo\") && Object.keys(state.softwareListingSale.softwareListingSaleInfo).length > 0 ? state.softwareListingSale.softwareListingSaleInfo.currentPage : 1\n    }\n}\nexport default connect(mapStateToProps, {  })(CreateNewSoftwareListingHelper);"]},"metadata":{},"sourceType":"module"}