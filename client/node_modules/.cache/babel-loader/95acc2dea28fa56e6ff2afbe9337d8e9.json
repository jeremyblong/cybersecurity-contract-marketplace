{"ast":null,"code":"import _defineProperty from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/hackers/mainPaymentLogic/helpers/bottomTabbed/bottomTabbedHelper.js\";\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Cards from 'react-credit-cards';\nimport { Row, Col, Button, Card, CardBody, Input, FormGroup, Form, CardHeader, TabContent, TabPane, Nav, NavItem, NavLink, Container, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport crypto from \"../../../../../../../utils/crypto.js\";\nvar encryptObject = crypto.encryptObject;\n\nvar BottomAddNewPaymentMethodTabbedHelper = function BottomAddNewPaymentMethodTabbedHelper(_ref) {\n  var currentlyDue = _ref.currentlyDue,\n      setCurrentlyDue = _ref.setCurrentlyDue,\n      setModalOpenToDo = _ref.setModalOpenToDo,\n      setPaymentMethods = _ref.setPaymentMethods,\n      userData = _ref.userData,\n      handleInputChange = _ref.handleInputChange,\n      cardInfo = _ref.cardInfo,\n      setCardInfo = _ref.setCardInfo;\n\n  var _useState = useState('1'),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valid = _useState4[0],\n      setValidness = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      capabilities = _useState6[0],\n      setCapabilities = _useState6[1];\n\n  var _useState7 = useState({\n    capability0: false,\n    capability1: false,\n    capability2: false\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popover = _useState8[0],\n      setPopover = _useState8[1];\n\n  var history = useHistory();\n  useEffect(function () {\n    var configuration = {\n      params: {\n        hackerID: userData.uniqueId\n      }\n    };\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/list/employer/capabilities/payments\"), configuration).then(function (res) {\n      if (res.data.message === \"Successfully gathered payment capabilities!\") {\n        console.log(res.data);\n        var _capabilities = res.data.capabilities;\n        var arr = [];\n\n        if (typeof _capabilities.data !== \"undefined\" && _capabilities.data.length > 0) {\n          for (var index = 0; index < _capabilities.data.length; index++) {\n            var el = _capabilities.data[index];\n\n            if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n              arr.push(el);\n            }\n          }\n        }\n\n        console.log(\"arr\", arr);\n        setCapabilities(arr);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(function (err) {\n      console.log(\"Critical errror...:\", err);\n    });\n  }, []);\n\n  var calculateType = function calculateType(type) {\n    switch (type) {\n      case \"card_payments\":\n        return \"Card Payment's\";\n        break;\n\n      case \"link_payments\":\n        return \"Link Payment's\";\n        break;\n\n      case \"us_bank_account_ach_payments\":\n        return \"US Bank Account ACH Payment's\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var handleActivation = function handleActivation(element, idx) {\n    var id = element.id,\n        status = element.status;\n\n    if (status === \"active\") {\n      NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n    } else {\n      var configuration = {\n        params: {\n          hackerID: userData.uniqueId,\n          elementID: id\n        }\n      };\n      axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/modify/employer/capabilities/payments\"), configuration).then(function (res) {\n        if (res.data.message === \"Successfully modified payment capabilities!\") {\n          console.log(res.data);\n          var _res$data = res.data,\n              capability = _res$data.capability,\n              elementID = _res$data.elementID;\n          var findIndexMatch = capabilities.findIndex(function (x) {\n            return x.id === elementID;\n          });\n\n          var shallowCopy = _toConsumableArray(capabilities);\n\n          shallowCopy[findIndexMatch] = capability;\n          setCapabilities(shallowCopy);\n          setPopover(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, \"capability\".concat(idx), false));\n          });\n          NotificationManager.success(\"Successfully modified the desired capabilities & updated stripe information! You're capability \".concat(elementID, \" is now ACTIVE!\"), \"Changed \".concat(elementID, \" and is now ACTIVE!\"), 4750);\n        } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n          var _currentlyDue = res.data.currentlyDue;\n          setCurrentlyDue(_currentlyDue);\n          setTimeout(function () {\n            setModalOpenToDo(true);\n          }, 625);\n        } else {\n          console.log(\"Err\", res.data);\n          NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n        }\n      }).catch(function (err) {\n        console.log(\"Critical errror...:\", err);\n        NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n      });\n    }\n  };\n\n  console.log(\"capabilities\", capabilities);\n  console.log(\"popover\", popover);\n\n  var calculateReadiness = function calculateReadiness() {\n    var number = cardInfo.number,\n        name = cardInfo.name,\n        expiry = cardInfo.expiry,\n        cvc = cardInfo.cvc;\n\n    if (valid === true && typeof name !== \"undefined\" && name.length > 0 && typeof expiry !== \"undefined\" && expiry.length >= 4 && typeof cvc !== \"undefined\" && cvc.length >= 3) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var addNewCardToAccount = function addNewCardToAccount() {\n    var encryptedCardInfo = encryptObject(cardInfo);\n    var config = {\n      hackerID: userData.uniqueId,\n      encryptedCardInfo: encryptedCardInfo\n    };\n    axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/add/new/payment/method/hacker\"), config).then(function (res) {\n      if (res.data.message === \"Successfully added a new payment method!\") {\n        console.log(res.data);\n        var account = res.data.account;\n        setCardInfo({\n          cvc: \"\",\n          expiry: \"\",\n          focus: \"\",\n          name: \"\",\n          number: \"\",\n          cardType: \"\"\n        });\n        setPaymentMethods(function (prevState) {\n          return [].concat(_toConsumableArray(prevState), [account]);\n        });\n      } else if (res.data.err === \"This card doesn't appear to be a debit card.\") {\n        setCardInfo({\n          cvc: \"\",\n          expiry: \"\",\n          focus: \"\",\n          name: \"\",\n          number: \"\",\n          cardType: \"\"\n        });\n        NotificationManager.error(\"This card type (Anything outside of DEBIT) is NOT allowed! You MUST enter a debit card if you wish to enter a valid card payment type...\", \"Enter a DEBIT card ONLY! This is NOT a debit card.\", 4750);\n      } else if (res.data.err === \"This card doesn't appear to support payouts.\") {\n        NotificationManager.warning(\"This card does NOT support 'payouts' (payments sent to YOUR account/card after receiving funds via our platform). Please note that you will NOT be able to receive payouts to this card though!\", \"Payouts NOT allowed with this card!\", 4750);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-card-add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    className: \"border-tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"#\",\n    className: activeTab === '1' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('1');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, \"Add New Card Payment Method\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"material-border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    href: \"#\",\n    className: activeTab === '2' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('2');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Manage Your Payment Account Capabilities\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"material-border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    xl: \"12 xl-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"height-equal credit-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, \"Add a Credit/Debit Card\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form mega-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    value: cardInfo.name,\n    placeholder: \"Name (Full Name - First/Last)\",\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"number\",\n    value: cardInfo.number,\n    placeholder: \"Enter your card number..\",\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: function onChange(e) {\n      var value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n        setCardInfo(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            expiry: cardInfo.expiry\n          });\n        });\n      }\n    },\n    style: {\n      marginLeft: \"15px\"\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireMM\",\n    id: \"expireMM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 65\n    }\n  }, \"Select a month\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 65\n    }\n  }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 65\n    }\n  }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 65\n    }\n  }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 65\n    }\n  }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 65\n    }\n  }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 65\n    }\n  }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 65\n    }\n  }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 65\n    }\n  }, \"August\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 65\n    }\n  }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 65\n    }\n  }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 65\n    }\n  }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 65\n    }\n  }, \"December\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: function onChange(e) {\n      var value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n        setCardInfo(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            expiry: cardInfo.expiry\n          });\n        });\n      }\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireYY\",\n    id: \"expireYY\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 65\n    }\n  }, \"Select a year\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 65\n    }\n  }, \"2020\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"21\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 65\n    }\n  }, \"2021\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"22\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 65\n    }\n  }, \"2022\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"23\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 65\n    }\n  }, \"2023\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 65\n    }\n  }, \"2024\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"25\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 65\n    }\n  }, \"2025\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"26\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 65\n    }\n  }, \"2026\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"27\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 65\n    }\n  }, \"2027\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"28\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 65\n    }\n  }, \"2028\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"29\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 65\n    }\n  }, \"2029\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 65\n    }\n  }, \"2030\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"31\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 65\n    }\n  }, \"2031\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"32\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 65\n    }\n  }, \"2032\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"33\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 65\n    }\n  }, \"2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"34\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 65\n    }\n  }, \"2034\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"35\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 65\n    }\n  }, \"2035\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"36\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 65\n    }\n  }, \"2036\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"cvc\",\n    placeholder: \"CVC... (Security Code On Back)\",\n    value: cardInfo.cvc,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: \"5\",\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    callback: function callback(type, isValid) {\n      setCardInfo(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          cardType: type.issuer\n        });\n      });\n      setValidness(isValid);\n    },\n    cvc: cardInfo.cvc,\n    expiry: cardInfo.expiry,\n    focused: cardInfo.focus,\n    name: cardInfo.name,\n    number: cardInfo.number,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addNewCardToAccount,\n    disabled: calculateReadiness(),\n    style: {\n      width: \"100%\"\n    },\n    color: \"success\",\n    className: \"btn-square-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-submit mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 49\n    }\n  }), \" Submit New Payment Method\")))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"capabilities-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 49\n    }\n  }, \"Capabilities related to payment method's\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 49\n    }\n  }, \"Capabilities are the 'activated/enabled' various payment features and/or functionality on your account. The below table will display what features ARE ENABLED and which ones are NOT enabled but can be enabled by clicking the animated 'plus sign' image..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 49\n    }\n  }, typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map(function (element, idx) {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 73\n      }\n    }, \"Payment Type:\")), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#f73164\",\n        textDecorationLine: \"underline\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 73\n      }\n    }, calculateType(element.id))), /*#__PURE__*/React.createElement(Col, {\n      className: \"target-me\",\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-row-capability\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#7366ff\",\n        textDecorationLine: \"underline\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 77\n      }\n    }, element.status), /*#__PURE__*/React.createElement(\"img\", {\n      id: \"capability\".concat(idx),\n      onClick: function onClick() {\n        setPopover(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, \"capability\".concat(idx), true));\n        });\n      },\n      src: require(\"../../../../../../../assets/gifs/add.gif\"),\n      className: \"gif-add-capability\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onMouseLeave: function onMouseLeave() {\n        setPopover(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, \"capability\".concat(idx), false));\n        });\n      },\n      className: \"zindex-pop-me\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      className: \"elevate-popover\",\n      placement: \"bottom\",\n      isOpen: popover[\"capability\".concat(idx)],\n      target: \"capability\".concat(idx),\n      toggle: function toggle() {\n        setPopover(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, \"capability\".concat(idx), !popover[\"capability\".concat(idx)]));\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 85\n      }\n    }, \"Update/Activate Capability\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 85\n      }\n    }, \"Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return handleActivation(element, idx);\n      },\n      className: \"btn-square-success\",\n      outline: true,\n      color: \"success-2x\",\n      style: {\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 85\n      }\n    }, \"Activate!\"))))))));\n  }) : null))))))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(BottomAddNewPaymentMethodTabbedHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/paymentLogic/hackers/mainPaymentLogic/helpers/bottomTabbed/bottomTabbedHelper.js"],"names":["React","Fragment","useState","useEffect","Cards","Row","Col","Button","Card","CardBody","Input","FormGroup","Form","CardHeader","TabContent","TabPane","Nav","NavItem","NavLink","Container","ListGroup","ListGroupItem","Popover","PopoverHeader","PopoverBody","axios","connect","NotificationManager","useHistory","crypto","encryptObject","BottomAddNewPaymentMethodTabbedHelper","currentlyDue","setCurrentlyDue","setModalOpenToDo","setPaymentMethods","userData","handleInputChange","cardInfo","setCardInfo","activeTab","setActiveTab","valid","setValidness","capabilities","setCapabilities","capability0","capability1","capability2","popover","setPopover","history","configuration","params","hackerID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","arr","length","index","el","id","push","catch","err","calculateType","type","handleActivation","element","idx","status","info","elementID","capability","findIndexMatch","findIndex","x","shallowCopy","prevState","success","setTimeout","error","calculateReadiness","number","name","expiry","cvc","addNewCardToAccount","encryptedCardInfo","config","post","account","focus","cardType","warning","e","value","target","substring","marginLeft","isValid","issuer","width","map","color","textDecorationLine","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Cards from 'react-credit-cards';\nimport { Row, Col, Button, Card, CardBody, Input, FormGroup, Form, CardHeader, TabContent, TabPane, Nav, NavItem, NavLink, Container, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport crypto from \"../../../../../../../utils/crypto.js\";\n\n\nconst { \n    encryptObject \n} = crypto;\n\nconst BottomAddNewPaymentMethodTabbedHelper = ({ currentlyDue, setCurrentlyDue, setModalOpenToDo, setPaymentMethods, userData, handleInputChange, cardInfo, setCardInfo }) => {\n    const [activeTab, setActiveTab] = useState('1');\n    const [ valid, setValidness ] = useState(false);\n    const [ capabilities, setCapabilities ] = useState([]);\n    const [ popover, setPopover ] = useState({\n        capability0: false,\n        capability1: false,\n        capability2: false\n    })\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const configuration = {\n            params: { \n                hackerID: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered payment capabilities!\") {\n                console.log(res.data);\n\n                const { capabilities } = res.data;\n\n                const arr = [];\n\n                if (typeof capabilities.data !== \"undefined\" && capabilities.data.length > 0) {\n                    for (let index = 0; index < capabilities.data.length; index++) {\n                        const el = capabilities.data[index];\n                        if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n                            arr.push(el);\n                        }\n                    }\n                }\n                console.log(\"arr\", arr);\n\n                setCapabilities(arr);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n        })\n    }, [])\n\n    const calculateType = (type) => {\n        switch (type) {\n            case \"card_payments\":\n                return \"Card Payment's\"\n                break;\n            case \"link_payments\":\n                return \"Link Payment's\";\n                break;\n            case \"us_bank_account_ach_payments\":\n                return \"US Bank Account ACH Payment's\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleActivation = (element, idx) => {\n\n        const { id, status } = element; \n\n        if (status === \"active\") {\n            NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n        } else {\n            const configuration = {\n                params: { \n                    hackerID: userData.uniqueId,\n                    elementID: id\n                }\n            }\n            axios.get(`${process.env.REACT_APP_BASE_URL}/modify/employer/capabilities/payments`, configuration).then((res) => {\n                if (res.data.message === \"Successfully modified payment capabilities!\") {\n                    console.log(res.data);\n\n                    const { capability, elementID } = res.data;\n\n                    const findIndexMatch = capabilities.findIndex(x => x.id === elementID);\n\n                    const shallowCopy = [...capabilities];\n\n                    shallowCopy[findIndexMatch] = capability;\n\n                    setCapabilities(shallowCopy);\n                    \n                    setPopover(prevState => {\n                        return {\n                            ...prevState,\n                            [`capability${idx}`]: false\n                        }\n                    })\n\n                    NotificationManager.success(`Successfully modified the desired capabilities & updated stripe information! You're capability ${elementID} is now ACTIVE!`, `Changed ${elementID} and is now ACTIVE!`, 4750);\n                } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n\n                    const { currentlyDue } = res.data;\n\n                    setCurrentlyDue(currentlyDue);\n\n                    setTimeout(() => {\n                        setModalOpenToDo(true);\n                    },  625);\n                } else {\n                    console.log(\"Err\", res.data);\n\n                    NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n                }\n            }).catch((err) => {\n                console.log(\"Critical errror...:\", err);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n            })\n        }\n    }\n\n    console.log(\"capabilities\", capabilities);\n\n    console.log(\"popover\", popover);\n\n    const calculateReadiness = () => {\n        const { number, name, expiry, cvc } = cardInfo;\n\n        if (valid === true && typeof name !== \"undefined\" && name.length > 0 && typeof expiry !== \"undefined\" && expiry.length >= 4 && typeof cvc !== \"undefined\" && cvc.length >= 3) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    const addNewCardToAccount = () => {\n        const encryptedCardInfo = encryptObject(cardInfo);\n\n        const config = {\n            hackerID: userData.uniqueId,\n            encryptedCardInfo\n        }\n    \n        axios.post(`${process.env.REACT_APP_BASE_URL}/add/new/payment/method/hacker`, config).then((res) => {\n            if (res.data.message === \"Successfully added a new payment method!\") {\n\n                console.log(res.data);\n\n                const { account } = res.data;\n\n                setCardInfo({\n                    cvc: \"\",\n                    expiry: \"\",\n                    focus: \"\",\n                    name: \"\",\n                    number: \"\",\n                    cardType: \"\"\n                })\n\n                setPaymentMethods(prevState => [...prevState, account]);\n\n            } else if (res.data.err === \"This card doesn't appear to be a debit card.\") {\n\n                setCardInfo({\n                    cvc: \"\",\n                    expiry: \"\",\n                    focus: \"\",\n                    name: \"\",\n                    number: \"\",\n                    cardType: \"\"\n                })\n                \n                NotificationManager.error(\"This card type (Anything outside of DEBIT) is NOT allowed! You MUST enter a debit card if you wish to enter a valid card payment type...\", \"Enter a DEBIT card ONLY! This is NOT a debit card.\", 4750);\n\n            } else if (res.data.err === \"This card doesn't appear to support payouts.\") {\n                NotificationManager.warning(\"This card does NOT support 'payouts' (payments sent to YOUR account/card after receiving funds via our platform). Please note that you will NOT be able to receive payouts to this card though!\", \"Payouts NOT allowed with this card!\", 4750);\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"An unknown error has occurred, please reload this page or contact support if this problem persists...\", \"An unknown error has occurred!\", 4750);\n        })\n    }\n    return (\n        <Fragment>\n            <Card className=\"card-shadow-card-add\">\n                <Row className=\"product-page-main m-0\">\n                    <Col sm=\"12\">\n                    <Nav tabs className=\"border-tab\">\n                        <NavItem  id=\"myTab\" role=\"tablist\">\n                            <NavLink href=\"#\" className={activeTab === '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                Add New Card Payment Method\n                            </NavLink>\n                            <div className=\"material-border\"></div>\n                        </NavItem>\n                        <NavItem  id=\"myTab\" role=\"tablist\">\n                            <NavLink href=\"#\"  className={activeTab === '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                Manage Your Payment Account Capabilities\n                            </NavLink>\n                            <div className=\"material-border\"></div>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <Col lg=\"12\" sm=\"12\" md=\"12\" xl=\"12 xl-100\">\n                                <Card className=\"height-equal credit-form\">\n                                    <CardHeader className=\"py-4\">\n                                        <h5>Add a Credit/Debit Card</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col md=\"7\">\n                                                <Form className=\"theme-form mega-form\">\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"name\"\n                                                            value={cardInfo.name}\n                                                            placeholder=\"Name (Full Name - First/Last)\"\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"number\"\n                                                            value={cardInfo.number}\n                                                            placeholder=\"Enter your card number..\"\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Row>\n                                                            <select onChange={(e) => {\n                                                                const value = e.target.value;\n\n                                                                if (value !== \"\") {\n                                                            \n                                                                    cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n\n                                                                    setCardInfo(prevState => {\n                                                                        return {\n                                                                            ...prevState,\n                                                                            expiry: cardInfo.expiry\n                                                                        }\n                                                                    })\n                                                                }\n                                                            }} style={{ marginLeft: \"15px\" }} className=\"form-control digits year-date-format\" name='expireMM' id='expireMM'>\n                                                                <option value=''>Select a month</option>\n                                                                <option value='01'>January</option>\n                                                                <option value='02'>February</option>\n                                                                <option value='03'>March</option>\n                                                                <option value='04'>April</option>\n                                                                <option value='05'>May</option>\n                                                                <option value='06'>June</option>\n                                                                <option value='07'>July</option>\n                                                                <option value='08'>August</option>\n                                                                <option value='09'>September</option>\n                                                                <option value='10'>October</option>\n                                                                <option value='11'>November</option>\n                                                                <option value='12'>December</option>\n                                                            </select> \n                                                            <select onChange={(e) => {\n                                                                const value = e.target.value;\n\n                                                                if (value !== \"\") {\n                                                                    \n                                                                    cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n\n                                                                    setCardInfo(prevState => {\n                                                                        return {\n                                                                            ...prevState,\n                                                                            expiry: cardInfo.expiry\n                                                                        }\n                                                                    })\n                                                                }\n                                                            }} className=\"form-control digits year-date-format\" name='expireYY' id='expireYY'>\n                                                                <option value=''>Select a year</option>\n                                                                <option value='20'>2020</option>\n                                                                <option value='21'>2021</option>\n                                                                <option value='22'>2022</option>\n                                                                <option value='23'>2023</option>\n                                                                <option value='24'>2024</option>\n                                                                <option value='25'>2025</option>\n                                                                <option value='26'>2026</option>\n                                                                <option value='27'>2027</option>\n                                                                <option value='28'>2028</option>\n                                                                <option value='29'>2029</option>\n                                                                <option value='30'>2030</option>\n                                                                <option value='31'>2031</option>\n                                                                <option value='32'>2032</option>\n                                                                <option value='33'>2033</option>\n                                                                <option value='34'>2034</option>\n                                                                <option value='35'>2035</option>\n                                                                <option value='36'>2036</option>\n                                                            </select> \n                                                        </Row>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Input\n                                                            className=\"form-control\"\n                                                            type=\"text\"\n                                                            name=\"cvc\"\n                                                            placeholder=\"CVC... (Security Code On Back)\"\n                                                            value={cardInfo.cvc}\n                                                            onChange={(e) => handleInputChange(e)}\n                                                        />\n                                                    </FormGroup>\n                                                </Form>\n                                            </Col>\n                                            <Col md=\"5\" className=\"text-center\">\n                                                <Cards\n                                                    callback={(type, isValid) => {\n                                                        setCardInfo(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                cardType: type.issuer\n                                                            }\n                                                        })\n                                                        setValidness(isValid);\n                                                    }}\n                                                    cvc={cardInfo.cvc}\n                                                    expiry={cardInfo.expiry}\n                                                    focused={cardInfo.focus}\n                                                    name={cardInfo.name}\n                                                    number={cardInfo.number}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Button onClick={addNewCardToAccount} disabled={calculateReadiness()} style={{ width: \"100%\" }} color=\"success\" className=\"btn-square-success\">\n                                                <i className=\"fa fa-submit mr-1\"></i> Submit New Payment Method\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Container fluid={true}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='card-payment-entirely-halved'>\n                                            <CardHeader>\n                                                <h3 className='capabilities-header'>Capabilities related to payment method's</h3>\n                                                <hr />\n                                                <p className='lead'>Capabilities are the 'activated/enabled' various payment features and/or functionality on your account. The below table will display what features ARE ENABLED and which ones are NOT enabled but can be enabled by clicking the animated 'plus sign' image..</p>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <ListGroup className=\"list-group-flush\">\n                                                    {typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n                                                        return (\n                                                            <ListGroupItem key={idx}>\n                                                                <Row>\n                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <strong>Payment Type:</strong>\n                                                                    </Col>\n                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateType(element.id)}</strong>\n                                                                    </Col>\n                                                                    <Col className='target-me' sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                        <div className={\"create-row-capability\"}>\n                                                                            <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{element.status}</strong>\n                                                                            <img id={`capability${idx}`} onClick={() => {\n                                                                                setPopover(prevState => {\n                                                                                    return {\n                                                                                        ...prevState,\n                                                                                        [`capability${idx}`]: true\n                                                                                    }\n                                                                                })\n                                                                            }} src={require(\"../../../../../../../assets/gifs/add.gif\")} className={\"gif-add-capability\"} />\n                                                                            <div onMouseLeave={() => {\n                                                                                setPopover(prevState => {\n                                                                                    return {\n                                                                                        ...prevState,\n                                                                                        [`capability${idx}`]: false\n                                                                                    }\n                                                                                })\n                                                                            }} className='zindex-pop-me'>\n                                                                                <Popover className={\"elevate-popover\"} placement=\"bottom\" isOpen={popover[`capability${idx}`]} target={`capability${idx}`} toggle={() => {\n                                                                                    setPopover(prevState => {\n                                                                                        return {\n                                                                                            ...prevState,\n                                                                                            [`capability${idx}`]: !popover[`capability${idx}`]\n                                                                                        }\n                                                                                    })\n                                                                                }}>\n                                                                                    <PopoverHeader>Update/Activate Capability</PopoverHeader>\n                                                                                    <PopoverBody>Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\n                                                                                    <hr />\n                                                                                    <Button onClick={() => handleActivation(element, idx)} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }}>Activate!</Button>\n                                                                                    </PopoverBody>\n                                                                                </Popover>\n                                                                            </div>\n                                                                        </div>\n                                                                    </Col>\n                                                                </Row>\n                                                            </ListGroupItem>\n                                                        );\n                                                    }) : null}\n                                                </ListGroup>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </TabPane>\n                    </TabContent>\n                    </Col>\n                </Row>\n            </Card>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(BottomAddNewPaymentMethodTabbedHelper);"]},"metadata":{},"sourceType":"module"}