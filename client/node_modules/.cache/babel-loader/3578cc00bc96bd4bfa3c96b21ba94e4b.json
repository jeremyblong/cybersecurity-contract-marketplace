{"ast":null,"code":"import _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js\";\n\nimport React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Progress, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport \"../styles.css\";\nvar renderCustomButtonDropzone = helpers.renderCustomButtonDropzone,\n    onSubmitHelper = helpers.onSubmitHelper,\n    calculateFileType = helpers.calculateFileType;\n\nvar SheetHelperPaneUploadCourseContent = function SheetHelperPaneUploadCourseContent(_ref) {\n  var isOpen = _ref.isOpen,\n      setIsOpen = _ref.setIsOpen,\n      setProgress = _ref.setProgress,\n      shiftCoreStyles = _ref.shiftCoreStyles,\n      disableBodyScroll = _ref.disableBodyScroll,\n      clearAllBodyScrollLocks = _ref.clearAllBodyScrollLocks,\n      courseData = _ref.courseData,\n      updateCourseInformationData = _ref.updateCourseInformationData,\n      selectedCourseContent = _ref.selectedCourseContent,\n      setCourseContentState = _ref.setCourseContentState,\n      coursesArray = _ref.coursesArray;\n  var dropzoneRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      changeOptions = _useState2[0],\n      setChangeOptions = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fileReady = _useState4[0],\n      setFileReadyStatus = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentFileSelectedUpload = _useState6[0],\n      setCurrentUploadFileStatus = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filePathData = _useState8[0],\n      setCurrentFilePathData = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileMetaData = _useState10[0],\n      setMetaFileData = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      description = _useState12[0],\n      setDescription = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showInitial = _useState14[0],\n      setShowInitialState = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      videoFile = _useState16[0],\n      setVideoFileState = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      loaded = _useState18[0],\n      setLoadedState = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      alreadyExisted = _useState20[0],\n      alreadyExistedState = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      videoLoadingProgress = _useState22[0],\n      setVideoLoadingProgressState = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      cancelToken = _useState24[0],\n      setCancelToken = _useState24[1];\n\n  var renderPreviewOfFile = function renderPreviewOfFile(data) {\n    var file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: function onError(err) {\n          return console.log(\"fileviewer error - \", err);\n        },\n        key: file.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(function () {\n    console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent); // check if previously already updated\n\n    var futureRequest = axios.CancelToken.source(); // conditional checks\n\n    if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n      console.log(\"main chunk\");\n      setDescription(selectedCourseContent.description); // check if rendering from previous upload\n\n      alreadyExistedState(true);\n      var configuration = {\n        method: 'get',\n        url: \"\".concat(process.env.REACT_APP_ASSET_LINK, \"/\").concat(selectedCourseContent.video.link),\n        responseType: 'blob',\n        onDownloadProgress: function onDownloadProgress(progressEvent) {\n          var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setVideoLoadingProgressState(percentCompleted);\n        },\n        cancelToken: futureRequest.token\n      };\n      axios(configuration).then(function (response) {\n        console.log(\"response\", response); // create fileready\n\n        var file = new File([response.data], selectedCourseContent.video.name); // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n        // setFileReadyStatus(true);\n        // mark pane READY to display content\n\n        setLoadedState(true);\n      }).catch(function (error) {\n        console.log(\"error api request...:\", error);\n      });\n    } else {\n      console.log(\"second chunk\");\n    }\n\n    return function () {\n      console.log(\"unmounting!!!!!!\");\n      futureRequest.cancel();\n      setVideoLoadingProgressState(0);\n    }; // update local component state to reflect already-made changes\n  }, [isOpen]);\n\n  var CustomInputHelper = function CustomInputHelper(_ref2) {\n    var accept = _ref2.accept,\n        onFiles = _ref2.onFiles;\n    var text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered-both-ways\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone-text-courses\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, text)), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: function onChange(e) {\n        var file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(e) {\n    var value = e.target.value;\n    setDescription(value);\n  };\n\n  var handleAdditionFileDescription = function handleAdditionFileDescription() {\n    console.log(\"handleAdditionFileDescription clicked...\");\n\n    if (videoFile !== null) {\n      if (typeof description !== \"undefined\" && description.length >= 25 && description.length <= 750) {\n        // mock a copy of redux state\n        var shallowCopy = _toConsumableArray(coursesArray); // newly created obj with desc and video info data\n\n\n        var newlyAddedData = {\n          description: description,\n          video: videoFile,\n          id: uuid(),\n          systemDate: Date.now(),\n          date: new Date(),\n          formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n          comments: [],\n          likes: 0,\n          dislikes: 0\n        }; // courseData\n\n        var matchingItem = shallowCopy.find(function (course, index) {\n          if (course.id === selectedCourseContent.id) {\n            return true;\n          }\n        }); // combined OLD and NEW state\n\n        var combinedPreviousPlusNew = _objectSpread(_objectSpread({}, matchingItem), newlyAddedData); // find index of matching item\n\n\n        var updatedStateIndex = shallowCopy.findIndex(function (item) {\n          return item.id === selectedCourseContent.id;\n        }); // replace matching item\n\n        shallowCopy[updatedStateIndex] = combinedPreviousPlusNew; // update redux state\n\n        updateCourseInformationData(_objectSpread(_objectSpread({}, courseData), {}, {\n          pageTwoData: {\n            courseContentSections: shallowCopy\n          }\n        })); // close modal\n\n        closeModalRelated();\n        NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n      } else {\n        NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n      }\n    } else {\n      NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n    }\n  };\n\n  var closeModalRelated = function closeModalRelated() {\n    // set state back to default\n    alreadyExistedState(false); // clear video logic\n\n    setCourseContentState(null); // image upload logic CLEAR existing state\n\n    setCurrentUploadFileStatus(null); // revert image state back to default\n\n    setVideoFileState(null); // set current file path to default state\n\n    setCurrentFilePathData(null); // set description back to default\n\n    setDescription(\"\"); // image upload logic CLEAR existing state\n\n    setMetaFileData(null); // image upload logic CLEAR existing state\n\n    setFileReadyStatus(false); // allow background clicking again\n\n    shiftCoreStyles(false); // change loading state back to default\n\n    setLoadedState(false); // close modal\n\n    setIsOpen(false); // clear scroll locks as PANE is closed now...\n\n    clearAllBodyScrollLocks();\n  };\n\n  var onBufferEnded = function onBufferEnded() {\n    setVideoLoadingProgressState(0);\n  };\n\n  var renderPreChecks = function renderPreChecks() {\n    if (loaded === true) {\n      // ready to display live content\n      if (currentFileSelectedUpload === null) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-boxshadow-courses centered-both-ways\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"header-no-content\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 89\n          }\n        }, \"Current NO file(s) is selected/uploaded - please select a file.\")));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          onBufferEnd: onBufferEnded,\n          progressInterval: 1000,\n          controls: true,\n          playIcon: true,\n          playing: false,\n          loop: false,\n          volume: 1,\n          width: \"100%\",\n          height: \"100%\",\n          url: filePathData,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }\n        }));\n      }\n    } else {\n      // still loading display skelaton\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-positied-loading-courses\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, alreadyExisted === true ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-loading-wrapper-bar\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-above-bar-percentage-video\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }\n      }, \"Downloading video...\", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"#f73164\",\n          fontSize: \"1.75rem\",\n          textDecorationLine: \"underline\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 53\n        }\n      }, videoLoadingProgress, \"%\"), \" of video loaded/complete...\")), /*#__PURE__*/React.createElement(Progress, {\n        className: \"course-creation-progress-bar-video\",\n        animated: true,\n        color: \"secondary\",\n        value: videoLoadingProgress,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      })) : null, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"custom-loading-courses\",\n        count: 8,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  console.log(\"cancelToken\", cancelToken);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: \"17.5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: closeModalRelated,\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger\",\n    size: \"md-2x\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, \"Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 49\n    }\n  }, \"This is the form that is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 78\n    }\n  }, \"primarily\"), \" used to upload/change content related to \\\"course content\\\". Use the form below to upload video's to each course \\\"clip/section\\\" and enter a description if you'd like...\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-video-overlay-courses-upload centered-both-ways\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 49\n    }\n  }, renderPreChecks())), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: function PreviewComponent(data) {\n      return renderPreviewOfFile(data);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: function onChangeStatus(functions) {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: function SubmitButtonComponent(data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 61\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData));\n    },\n    className: \"shadow-courses-dropzone\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  }), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 71\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: function onClick(e) {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      setCurrentFilePathData(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 57\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 49\n    }\n  }, \"Course Section/Segment Description (Between 25-750 Charector's in length)\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      return handleDescriptionChange(e);\n    },\n    value: description,\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: \"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"75%\"\n    },\n    onClick: function onClick() {\n      return handleAdditionFileDescription();\n    },\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 49\n    }\n  }, \"Submit New Information/Details & File(s)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : [],\n    coursesArray: _.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\") ? state.courseData.courseData.pageTwoData.courseContentSections : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles: shiftCoreStyles,\n  updateCourseInformationData: updateCourseInformationData\n})(SheetHelperPaneUploadCourseContent);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","useEffect","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Progress","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","Dropzone","_","connect","shiftCoreStyles","ReactPlayer","uuid","moment","updateCourseInformationData","NotificationManager","axios","Skeleton","SkeletonTheme","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setProgress","disableBodyScroll","clearAllBodyScrollLocks","courseData","selectedCourseContent","setCourseContentState","coursesArray","dropzoneRef","changeOptions","setChangeOptions","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","description","setDescription","showInitial","setShowInitialState","videoFile","setVideoFileState","loaded","setLoadedState","alreadyExisted","alreadyExistedState","videoLoadingProgress","setVideoLoadingProgressState","cancelToken","setCancelToken","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","futureRequest","CancelToken","source","video","has","Object","keys","length","configuration","method","url","process","env","REACT_APP_ASSET_LINK","link","responseType","onDownloadProgress","progressEvent","percentCompleted","Math","round","total","token","then","response","File","name","URL","createObjectURL","catch","error","cancel","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","handleDescriptionChange","value","handleAdditionFileDescription","shallowCopy","newlyAddedData","systemDate","Date","now","date","formattedDate","format","comments","likes","dislikes","matchingItem","find","course","index","combinedPreviousPlusNew","updatedStateIndex","findIndex","item","pageTwoData","courseContentSections","closeModalRelated","success","onBufferEnded","renderPreChecks","fontSize","textDecorationLine","margin","width","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","marginTop","remove","mapStateToProps","state","userData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Progress, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport \"../styles.css\";\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setProgress, shiftCoreStyles, disableBodyScroll, clearAllBodyScrollLocks, courseData, updateCourseInformationData, selectedCourseContent, setCourseContentState, coursesArray }) => {\n    const dropzoneRef = useRef(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ description, setDescription ] = useState(\"\");\n    const [ showInitial, setShowInitialState ] = useState(true);\n    const [ videoFile, setVideoFileState ] = useState(null);\n    const [ loaded, setLoadedState ] = useState(false);\n    const [ alreadyExisted, alreadyExistedState ] = useState(false);\n    const [ videoLoadingProgress, setVideoLoadingProgressState ] = useState(0);\n    const [ cancelToken, setCancelToken ] = useState(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    useEffect(() => {\n        console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent);\n        // check if previously already updated\n\n        const futureRequest = axios.CancelToken.source();\n\n        // conditional checks\n        if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n            console.log(\"main chunk\");\n            setDescription(selectedCourseContent.description);\n\n            // check if rendering from previous upload\n            alreadyExistedState(true);\n\n            const configuration = {\n                method: 'get',\n                url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n                responseType: 'blob',\n                onDownloadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        \n                    setVideoLoadingProgressState(percentCompleted);\n                },\n                cancelToken: futureRequest.token\n            };\n\n            axios(configuration).then((response) => {\n                console.log(\"response\", response);\n                // create fileready\n                const file = new File([response.data], selectedCourseContent.video.name); \n                // set current file path to convert to readable URL later\n                setCurrentFilePathData(URL.createObjectURL(file));\n                // set status update for current file\n                setCurrentUploadFileStatus(file);\n                // mark file as READY \n                // setFileReadyStatus(true);\n                // mark pane READY to display content\n                setLoadedState(true);\n            }).catch((error) => {\n                console.log(\"error api request...:\", error);\n            })\n        }  else {\n            console.log(\"second chunk\")\n        }\n\n        return () => {\n            console.log(\"unmounting!!!!!!\");\n\n            futureRequest.cancel();\n\n            setVideoLoadingProgressState(0);\n        }\n        // update local component state to reflect already-made changes\n    }, [isOpen])\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    <p className={\"dropzone-text-courses\"}>{text}</p>\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleDescriptionChange = (e) => {\n        const value = e.target.value;\n\n        setDescription(value);\n    }\n    const handleAdditionFileDescription = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        if (videoFile !== null) {\n            if (typeof description !== \"undefined\" && (description.length >= 25 && description.length <= 750)) {\n                // mock a copy of redux state\n                const shallowCopy = [...coursesArray];\n                // newly created obj with desc and video info data\n                const newlyAddedData = {\n                    description,\n                    video: videoFile,\n                    id: uuid(),\n                    systemDate: Date.now(),\n                    date: new Date(),\n                    formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                    comments: [],\n                    likes: 0,\n                    dislikes: 0\n                }\n                // courseData\n                const matchingItem = shallowCopy.find((course, index) => {\n                    if (course.id === selectedCourseContent.id) {\n                        return true;\n                    }\n                });\n                // combined OLD and NEW state\n                const combinedPreviousPlusNew = {\n                    ...matchingItem,\n                    ...newlyAddedData\n                }\n                // find index of matching item\n                const updatedStateIndex = shallowCopy.findIndex((item) => item.id === selectedCourseContent.id);\n                // replace matching item\n                shallowCopy[updatedStateIndex] = combinedPreviousPlusNew;\n                // update redux state\n                updateCourseInformationData({\n                    ...courseData,\n                    pageTwoData: {\n                        courseContentSections: shallowCopy\n                    }\n                });\n                // close modal\n                closeModalRelated();\n\n                NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n            } else {\n                NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n            }\n        } else {\n            NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n        }\n    }\n    const closeModalRelated = () => {\n        // set state back to default\n        alreadyExistedState(false);\n        // clear video logic\n        setCourseContentState(null);\n        // image upload logic CLEAR existing state\n        setCurrentUploadFileStatus(null);\n        // revert image state back to default\n        setVideoFileState(null);\n        // set current file path to default state\n        setCurrentFilePathData(null);\n        // set description back to default\n        setDescription(\"\");\n        // image upload logic CLEAR existing state\n        setMetaFileData(null);\n        // image upload logic CLEAR existing state\n        setFileReadyStatus(false);\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // change loading state back to default\n        setLoadedState(false);\n        // close modal\n        setIsOpen(false);\n        // clear scroll locks as PANE is closed now...\n        clearAllBodyScrollLocks();\n    }\n    const onBufferEnded = () => {\n        setVideoLoadingProgressState(0);\n    }\n    const renderPreChecks = () => {\n        if (loaded === true) {\n            // ready to display live content\n            if (currentFileSelectedUpload === null) {\n                return (\n                    <Fragment>\n                        <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <ReactPlayer onBufferEnd={onBufferEnded} progressInterval={1000} controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                    </Fragment>\n                );   \n            }\n        } else {\n            // still loading display skelaton\n            return (\n                <div className={\"absolutely-positied-loading-courses\"}>\n                    {alreadyExisted === true ? <div className={\"video-loading-wrapper-bar\"}>\n                        <div className={\"position-above-bar-percentage-video\"}>\n                            <h6>Downloading video...<strong style={{ color: \"#f73164\", fontSize: \"1.75rem\", textDecorationLine: \"underline\" }}>{videoLoadingProgress}%</strong> of video loaded/complete...</h6>\n                        </div>\n                        <Progress className={\"course-creation-progress-bar-video\"} animated color=\"secondary\" value={videoLoadingProgress} />\n                    </div> : null}\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"custom-loading-courses\"} count={8} />\n                        </p>\n                    </SkeletonTheme>\n                </div>\n            );\n        }\n    }\n    console.log(\"cancelToken\", cancelToken);\n    return (\n        <Fragment>\n            <div id=\"sheet-container\">\n                <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row style={{ margin: \"17.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button style={{ width: \"100%\" }} onClick={closeModalRelated} className=\"btn-square-danger\" outline color=\"danger\" size=\"md-2x\">Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)</Button>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Row>\n                                <Card>\n                                    <CardBody>\n                                        <Row style={{ marginBottom: \"20px\" }}>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h3>This is the form that is <strong>primarily</strong> used to upload/change content related to \"course content\". Use the form below to upload video's to each course \"clip/section\" and enter a description if you'd like...</h3>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <div className={\"add-video-overlay-courses-upload centered-both-ways\"}>\n                                                    {renderPreChecks()}\n                                                </div>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    getFilesFromEvent={null}\n                                                    onSubmit={onSubmitHelper}\n                                                    accept=\"video/*\"\n                                                    SubmitButtonComponent={(data) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    className={\"shadow-courses-dropzone\"}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 350 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                                {fileReady === true ? <Fragment>\n                                                    <hr className=\"secondary-hr\" />\n                                                    <div className=\"centered-both-ways\">\n                                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                            setMetaFileData(null);\n                                                            setFileReadyStatus(false);\n                                                            setCurrentUploadFileStatus(null);\n                                                            setCurrentFilePathData(null);\n\n                                                            changeOptions.remove();\n                                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                    </div>\n                                                </Fragment> : null}\n                                            </Col>\n                                            <hr style={{ marginTop: \"25px\" }} />\n                                            <FormGroup className=\" m-form__group\">\n                                                <Label>Course Section/Segment Description (Between 25-750 Charector's in length)</Label>\n                                                <InputGroup>\n                                                    <Input onChange={(e) => handleDescriptionChange(e)} value={description} className=\"form-control\" rows={6} type=\"textarea\" placeholder={\"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}/>\n                                                </InputGroup>\n                                            </FormGroup>\n                                            <hr />\n                                            <div className={\"centered-both-ways\"}>\n                                                <Button outline style={{ width: \"75%\" }} onClick={() => handleAdditionFileDescription()} className=\"btn-square-info\" color=\"info\" size=\"md\">Submit New Information/Details & File(s)</Button>\n                                            </div>\n                                        </Row>\n                                        <hr />\n                                    </CardBody>\n                                </Card>\n                            </Row>\n                        </Sheet.Content>\n                        </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet>\n            </div>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : [],\n        coursesArray: (_.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\")) ? state.courseData.courseData.pageTwoData.courseContentSections : []\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, updateCourseInformationData })(SheetHelperPaneUploadCourseContent);"]},"metadata":{},"sourceType":"module"}