{"ast":null,"code":"import allReducers from \"../reducers/root.js\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer, createTransform } from 'redux-persist'; // import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport storage from 'redux-persist/lib/storage';\nimport promiseMiddleware from 'redux-promise';\nimport Flatted from 'flatted';\nconst transformCircular = createTransform((inboundState, key) => Flatted.stringify(inboundState), (outboundState, key) => Flatted.parse(outboundState));\nconst persistConfig = {\n  key: 'primary',\n  storage: storage,\n  transforms: [transformCircular]\n};\nconst pReducer = persistReducer(persistConfig, allReducers);\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(pReducer, composeEnhancers(applyMiddleware(reduxThunk, promiseMiddleware)));\nexport const persistor = persistStore(store);\nstore.subscribe(() => {\n  console.log(\"Store is now: \", store.getState());\n});","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/redux/store/store.js"],"names":["allReducers","reduxThunk","createStore","applyMiddleware","compose","thunk","persistStore","persistReducer","createTransform","storage","promiseMiddleware","Flatted","transformCircular","inboundState","key","stringify","outboundState","parse","persistConfig","transforms","pReducer","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","subscribe","console","log","getState"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,QAA8D,eAA9D,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,iBAAiB,GAAGJ,eAAe,CACrC,CAACK,YAAD,EAAeC,GAAf,KAAuBH,OAAO,CAACI,SAAR,CAAkBF,YAAlB,CADc,EAErC,CAACG,aAAD,EAAgBF,GAAhB,KAAwBH,OAAO,CAACM,KAAR,CAAcD,aAAd,CAFa,CAAzC;AAKA,MAAME,aAAa,GAAG;AACrBJ,EAAAA,GAAG,EAAE,SADgB;AAErBL,EAAAA,OAAO,EAAEA,OAFY;AAGrBU,EAAAA,UAAU,EAAE,CAACP,iBAAD;AAHS,CAAtB;AAMA,MAAMQ,QAAQ,GAAGb,cAAc,CAACW,aAAD,EAAgBlB,WAAhB,CAA/B;AAEA,MAAMqB,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAxE;AAEA,OAAO,MAAMqB,KAAK,GAAGvB,WAAW,CAACkB,QAAD,EAAWE,gBAAgB,CAACnB,eAAe,CAACF,UAAD,EAAaS,iBAAb,CAAhB,CAA3B,CAAzB;AAEP,OAAO,MAAMgB,SAAS,GAAGpB,YAAY,CAACmB,KAAD,CAA9B;AAEPA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAAK,CAACK,QAAN,EAA9B;AACA,CAFD","sourcesContent":["import allReducers from \"../reducers/root.js\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer, createTransform } from 'redux-persist';\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport promiseMiddleware from 'redux-promise';\nimport Flatted from 'flatted';\n\nconst transformCircular = createTransform(\n    (inboundState, key) => Flatted.stringify(inboundState),\n    (outboundState, key) => Flatted.parse(outboundState),\n)\n\nconst persistConfig = {\n key: 'primary',\n storage: storage,\n transforms: [transformCircular]\n};\n\nconst pReducer = persistReducer(persistConfig, allReducers);\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(pReducer, composeEnhancers(applyMiddleware(reduxThunk, promiseMiddleware)));\n\nexport const persistor = persistStore(store);\n\nstore.subscribe(() => {\n\tconsole.log(\"Store is now: \", store.getState());\n})"]},"metadata":{},"sourceType":"module"}