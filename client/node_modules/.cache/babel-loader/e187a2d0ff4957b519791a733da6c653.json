{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/createNewWallData.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../layout/breadcrumb\";\nimport Dropzone from 'react-dropzone-uploader';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst CreateNewHackerProfileContentPostHelper = _ref => {\n  let {} = _ref;\n  const dropzoneRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedFileTwo, setSelectedFileTwo] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: onError,\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const handleSubmit = runSubmit => {\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n    const data = new FormData();\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n    const config = {\n      onUploadProgress: progressEvent => {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(percentCompleted);\n      },\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n      if (res.data.message === \"Successfully uploaded file!\") {\n        console.log(res.data);\n        const {\n          file\n        } = res.data; // do something with file.\n\n        NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n        setMetaFileData(null);\n        setFileReadyStatus(false);\n        setCurrentUploadFileStatus(null);\n        runSubmit();\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderCustomButtonDropzone = (data, e) => {\n    const {\n      meta\n    } = data.files[0];\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmit(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Creating new 'primary content' post/posting\",\n    title: \"Create a new main content posting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"new-post-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center custom-card-header-create-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"You're currently on the 'create a new post' page which will create new data to post on your primary profile content section/sector...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: getFilesFromEvent,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }\n      }, renderCustomButtonDropzone(data, e));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: {\n      marginTop: \"7.5px\",\n      width: \"75%\"\n    },\n    color: \"success-2x\",\n    outline: true,\n    className: \"btn-square-success text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-plus m-r-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 178\n    }\n  }), \"Submit & Post New Data!\"))))))));\n};\n\nexport default CreateNewHackerProfileContentPostHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/createNewWallData.js"],"names":["React","Fragment","useEffect","useState","useRef","Container","Row","Col","Card","CardHeader","Button","CardBody","Breadcrumb","Dropzone","Skeleton","SkeletonTheme","FileViewer","_","axios","connect","NotificationManager","LoadingBar","CreateNewHackerProfileContentPostHelper","dropzoneRef","progress","setProgress","fileModalOpen","setFileModalOpenStatus","selectedFile","setSelectedFile","selectedFileTwo","setSelectedFileTwo","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","renderPreviewOfFile","data","file","fileWithMeta","calculateFileType","type","onError","id","handleSubmit","runSubmit","console","log","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","catch","err","renderCustomButtonDropzone","e","meta","files","marginTop","preventDefault","onSubmit","warning","functions","CustomInputHelper","getFilesFromEvent","onSubmitHelper","dropzone","height","dropzoneActive","borderColor","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, Button, CardBody } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../layout/breadcrumb\";\nimport Dropzone from 'react-dropzone-uploader';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst CreateNewHackerProfileContentPostHelper = ({  }) => {\n    \n    const dropzoneRef = useRef(null);\n    const [progress, setProgress] = useState(0);\n    const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [selectedFileTwo, setSelectedFileTwo] = useState(null);\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={onError}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const handleSubmit = (runSubmit) => {\n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                // do something with file.\n\n                NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                setMetaFileData(null);\n                setFileReadyStatus(false);\n                setCurrentUploadFileStatus(null);\n\n                runSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Creating new 'primary content' post/posting\" title=\"Create a new main content posting\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"new-post-card-wrapper\"}>\n                            <CardHeader className=\"b-l-primary border-3\">\n                                <h4 className={\"text-center custom-card-header-create-post\"}>You're currently on the 'create a new post' page which will create new data to post on your primary profile content section/sector...</h4>\n                            </CardHeader>\n                            <CardBody>\n                                <Dropzone\n                                    ref={dropzoneRef}\n                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                    maxFiles={1}\n                                    autoUpload={true}\n                                    onChangeStatus={(functions) => {\n                                        setChangeOptions(functions);\n                                    }}\n                                    submitButtonDisabled={false}\n                                    InputComponent={CustomInputHelper}\n                                    getFilesFromEvent={getFilesFromEvent}\n                                    onSubmit={onSubmitHelper}\n                                    SubmitButtonComponent={(data, e) => {\n                                        return (\n                                            <div className=\"absolutely-position-submit-btn\">\n                                                {renderCustomButtonDropzone(data, e)}\n                                            </div>\n                                        );\n                                    }}\n                                    multiple={false}\n                                    canCancel={false}\n                                    styles={{\n                                        dropzone: { height: 275 },\n                                        dropzoneActive: { borderColor: 'green' },\n                                    }}\n                                />\n                                <hr />\n                                <div className={\"centered-both-ways\"}>\n                                    <Button type={\"submit\"} style={{ marginTop: \"7.5px\", width: \"75%\" }} color={\"success-2x\"} outline className=\"btn-square-success text-center\"><i className=\"fa fa-plus m-r-5\"></i>Submit & Post New Data!</Button>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nexport default CreateNewHackerProfileContentPostHelper;"]},"metadata":{},"sourceType":"module"}