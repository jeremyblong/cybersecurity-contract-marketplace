{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/forums/createNewForumPost/createNewForumPost.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { CardBody, CardHeader, Card, Col, Container, Row } from \"reactstrap\";\nimport \"./styles.css\";\nimport Select from \"react-dropdown-select\";\nconst options = [{\n  label: \"c/BlackHat\",\n  value: \"c/BlackHat\",\n  memberCount: \"17,556\"\n}, {\n  label: \"c/CryptoCurrency\",\n  value: \"c/CryptoCurrency\",\n  memberCount: \"37,875\"\n}, {\n  label: \"c/JavaScriptGalore\",\n  value: \"c/JavaScriptGalore\",\n  memberCount: \"106,887\"\n}, {\n  label: \"c/CodingCompeitions\",\n  value: \"c/CodingCompeitions\",\n  memberCount: \"90,017\"\n}, {\n  label: \"c/ShowerThoughts\",\n  value: \"c/ShowerThoughts\",\n  memberCount: \"45,786\"\n}, {\n  label: \"c/RedditThoughtsRandomized\",\n  value: \"c/RedditThoughtsRandomized\",\n  memberCount: \"7,886\"\n}, {\n  label: \"c/HackingTechniques\",\n  value: \"c/HackingTechniques\",\n  memberCount: \"3,677\"\n}];\n\nconst CreateNewForumPostingHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  console.log(\"selectedGroup\", selectedGroup);\n\n  const customDropdownRenderer = _ref2 => {\n    let {\n      props,\n      state,\n      methods\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-and-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"h6-forum-option-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Your Communities\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, selectedGroup === null ? options.slice(0, 6).map((option, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options-mapped-div\",\n        key: index,\n        onClick: () => {\n          console.log(\"clicked.\");\n          setSelectedGroup(option);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../../../../assets/icons/reddit-${index + 1}.png`),\n        className: \"community-icon-forum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option-list-item-wrapper-forum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, option.label), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"membercount-forum-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, option.memberCount, \" Member's\")));\n    }) : null, selectedGroup !== null ? /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"selected-forum-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 43\n      }\n    }, \"You've Selected The \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#f73164\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 101\n      }\n    }, selectedGroup.label), \" community. \", /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => setSelectedGroup(null),\n      href: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 213\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#7366ff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 267\n      }\n    }, \"Click here\"), \" to re-select another/different community\")) : null));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Create a new forum post (Must be associated with a \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"create-forum-post-a\",\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 88\n    }\n  }, \"community\"), \")\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Search for a related 'community' to post in...\",\n    dropdownRenderer: customDropdownRenderer,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewForumPostingHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/forums/createNewForumPost/createNewForumPost.js"],"names":["React","Fragment","useState","useEffect","axios","connect","CardBody","CardHeader","Card","Col","Container","Row","Select","options","label","value","memberCount","CreateNewForumPostingHelper","userData","selectedGroup","setSelectedGroup","console","log","customDropdownRenderer","props","state","methods","slice","map","option","index","require","color","textDecorationLine","marginTop","mapStateToProps","auth","data"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { CardBody, CardHeader, Card, Col, Container, Row } from \"reactstrap\";\nimport \"./styles.css\";\nimport Select from \"react-dropdown-select\";\n\nconst options = [{\n    label: \"c/BlackHat\",\n    value: \"c/BlackHat\",\n    memberCount: \"17,556\"\n}, {\n    label: \"c/CryptoCurrency\",\n    value: \"c/CryptoCurrency\",\n    memberCount: \"37,875\"\n}, {\n    label: \"c/JavaScriptGalore\",\n    value: \"c/JavaScriptGalore\",\n    memberCount: \"106,887\"\n}, {\n    label: \"c/CodingCompeitions\",\n    value: \"c/CodingCompeitions\",\n    memberCount: \"90,017\"\n}, {\n    label: \"c/ShowerThoughts\",\n    value: \"c/ShowerThoughts\",\n    memberCount: \"45,786\"\n}, {\n    label: \"c/RedditThoughtsRandomized\",\n    value: \"c/RedditThoughtsRandomized\",\n    memberCount: \"7,886\"\n}, {\n    label: \"c/HackingTechniques\",\n    value: \"c/HackingTechniques\",\n    memberCount: \"3,677\"\n}]\n\nconst CreateNewForumPostingHelper = ({ userData }) => {\n\n    const [ selectedGroup, setSelectedGroup ] = useState(null);\n\n    console.log(\"selectedGroup\", selectedGroup);\n\n    const customDropdownRenderer = ({ props, state, methods }) => {\n        return (\n          <div>\n            <div className=\"search-and-toggle\">\n              <h6 className=\"h6-forum-option-header\">Your Communities</h6>\n            </div>\n            <div className=\"items-items\">\n              {selectedGroup === null ? options.slice(0, 6).map((option, index) => {\n                  return (\n                    <div\n                        className={\"options-mapped-div\"}\n                        key={index}\n                        onClick={() => {\n                            console.log(\"clicked.\");\n\n                            setSelectedGroup(option);\n                        }}>\n                        <img src={require(`../../../../assets/icons/reddit-${index + 1}.png`)} className={\"community-icon-forum\"} />\n                        <div className=\"option-list-item-wrapper-forum\">\n                            <h5>{option.label}</h5>\n                            <p className=\"membercount-forum-option\">{option.memberCount} Member's</p>\n                        </div>\n                    </div>\n                  );\n                }) : null}\n                {selectedGroup !== null ? <h4 className=\"selected-forum-option\">You've Selected The <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{selectedGroup.label}</strong> community. <a onClick={() => setSelectedGroup(null)} href={null}><strong style={{ color: \"#7366ff\" }}>Click here</strong> to re-select another/different community</a></h4> : null}\n            </div>\n          </div>\n        );\n    };\n    return (\n        <Fragment>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card style={{ marginTop: \"50px\" }}>\n                            <CardHeader className=\"b-l-info b-r-info\">\n                                <h3>Create a new forum post (Must be associated with a <a className=\"create-forum-post-a\" href={null}>community</a>)</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Select placeholder={\"Search for a related 'community' to post in...\"} dropdownRenderer={customDropdownRenderer} options={options} />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CreateNewForumPostingHelper); "]},"metadata":{},"sourceType":"module"}