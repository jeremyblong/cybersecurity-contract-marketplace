{"ast":null,"code":"import React from \"react\";\nimport { NotificationManager } from 'react-notifications'; // functions with export ability to slim down main component (pageThreeMain.js)..\n\nconst CalculateWhetherURLIsLegit = data => {\n  // check wether http/https is legitmate and correct...    \n  const isValidHttpUrl = string => {\n    let url;\n\n    try {\n      url = new URL(string);\n    } catch (_) {\n      return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n  }; // create function variable in preparation for conditional check\n\n\n  const isValid = isValidHttpUrl(data); // check if valid URL\n\n  if (isValid) {\n    return true;\n  } else {\n    return false;\n  }\n\n  ;\n};\n\nconst listingTimespanOptions = [{\n  value: 1440,\n  label: \"1 Day (24 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 2160,\n  label: \"1.5 Days (36 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 2880,\n  label: \"2 Days (48 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 3600,\n  label: \"2.5 Days (60 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 4320,\n  label: \"3 Days (72 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 5760,\n  label: \"4 Days (96 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 7200,\n  label: \"5 Days (120 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 8640,\n  label: \"6 Days (144 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 10080,\n  label: \"7 Days (168 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 14400,\n  label: \"10 Days (240 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 20160,\n  label: \"14 Days (336 Hours)\",\n  countMethod: \"minute(s)\"\n}, {\n  value: 30240,\n  label: \"21 Days (504 Hours)\",\n  countMethod: \"minute(s)\"\n}];\nexport default {\n  CalculateWhetherURLIsLegit,\n  listingTimespanOptions\n}; // NotificationManager.success(\"It fuckin' worked!\", \"YAY!\", 45000);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/mainFunctions.js"],"names":["React","NotificationManager","CalculateWhetherURLIsLegit","data","isValidHttpUrl","string","url","URL","_","protocol","isValid","listingTimespanOptions","value","label","countMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,qBAApC,C,CAEA;;AACA,MAAMC,0BAA0B,GAAIC,IAAD,IAAU;AACzC;AACA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AAC/B,QAAIC,GAAJ;;AAEA,QAAI;AACAA,MAAAA,GAAG,GAAG,IAAIC,GAAJ,CAAQF,MAAR,CAAN;AACH,KAFD,CAEE,OAAOG,CAAP,EAAU;AACR,aAAO,KAAP;AACH;;AAED,WAAOF,GAAG,CAACG,QAAJ,KAAiB,OAAjB,IAA4BH,GAAG,CAACG,QAAJ,KAAiB,QAApD;AACH,GAVD,CAFyC,CAazC;;;AACA,QAAMC,OAAO,GAAGN,cAAc,CAACD,IAAD,CAA9B,CAdyC,CAezC;;AACA,MAAIO,OAAJ,EAAa;AACT,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;;AAAA;AACJ,CArBD;;AAsBA,MAAMC,sBAAsB,GAAG,CAC3B;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,kBAAtB;AAA0CC,EAAAA,WAAW,EAAE;AAAvD,CAD2B,EAE3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,qBAAtB;AAA6CC,EAAAA,WAAW,EAAE;AAA1D,CAF2B,EAG3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,mBAAtB;AAA2CC,EAAAA,WAAW,EAAE;AAAxD,CAH2B,EAI3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,qBAAtB;AAA6CC,EAAAA,WAAW,EAAE;AAA1D,CAJ2B,EAK3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,mBAAtB;AAA2CC,EAAAA,WAAW,EAAE;AAAxD,CAL2B,EAM3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,mBAAtB;AAA2CC,EAAAA,WAAW,EAAE;AAAxD,CAN2B,EAO3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,oBAAtB;AAA4CC,EAAAA,WAAW,EAAE;AAAzD,CAP2B,EAQ3B;AAAEF,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE,oBAAtB;AAA4CC,EAAAA,WAAW,EAAE;AAAzD,CAR2B,EAS3B;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,oBAAvB;AAA6CC,EAAAA,WAAW,EAAE;AAA1D,CAT2B,EAU3B;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,qBAAvB;AAA8CC,EAAAA,WAAW,EAAE;AAA3D,CAV2B,EAW3B;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,qBAAvB;AAA8CC,EAAAA,WAAW,EAAE;AAA3D,CAX2B,EAY3B;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,qBAAvB;AAA8CC,EAAAA,WAAW,EAAE;AAA3D,CAZ2B,CAA/B;AAeA,eAAe;AAAEZ,EAAAA,0BAAF;AAA8BS,EAAAA;AAA9B,CAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { NotificationManager } from 'react-notifications';\n\n// functions with export ability to slim down main component (pageThreeMain.js)..\nconst CalculateWhetherURLIsLegit = (data) => {\n    // check wether http/https is legitmate and correct...    \n    const isValidHttpUrl = (string) => {\n        let url;\n        \n        try {\n            url = new URL(string);\n        } catch (_) {\n            return false;  \n        }\n        \n        return url.protocol === \"http:\" || url.protocol === \"https:\";\n    }\n    // create function variable in preparation for conditional check\n    const isValid = isValidHttpUrl(data);\n    // check if valid URL\n    if (isValid) {\n        return true;\n    } else {\n        return false;\n    };\n}\nconst listingTimespanOptions = [\n    { value: 1440, label: \"1 Day (24 Hours)\", countMethod: \"minute(s)\" },\n    { value: 2160, label: \"1.5 Days (36 Hours)\", countMethod: \"minute(s)\" },\n    { value: 2880, label: \"2 Days (48 Hours)\", countMethod: \"minute(s)\" },\n    { value: 3600, label: \"2.5 Days (60 Hours)\", countMethod: \"minute(s)\" },\n    { value: 4320, label: \"3 Days (72 Hours)\", countMethod: \"minute(s)\" },\n    { value: 5760, label: \"4 Days (96 Hours)\", countMethod: \"minute(s)\" },\n    { value: 7200, label: \"5 Days (120 Hours)\", countMethod: \"minute(s)\" },\n    { value: 8640, label: \"6 Days (144 Hours)\", countMethod: \"minute(s)\" },\n    { value: 10080, label: \"7 Days (168 Hours)\", countMethod: \"minute(s)\" },\n    { value: 14400, label: \"10 Days (240 Hours)\", countMethod: \"minute(s)\" },\n    { value: 20160, label: \"14 Days (336 Hours)\", countMethod: \"minute(s)\" },\n    { value: 30240, label: \"21 Days (504 Hours)\", countMethod: \"minute(s)\" }\n];\n\nexport default { CalculateWhetherURLIsLegit, listingTimespanOptions };\n\n// NotificationManager.success(\"It fuckin' worked!\", \"YAY!\", 45000);"]},"metadata":{},"sourceType":"module"}