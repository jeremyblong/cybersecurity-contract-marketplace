{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageTwo/pageTwoSection.js\";\nimport React, { Fragment, useState, useRef } from 'react';\nimport { Row, Col, Form, Label, Input, ListGroupItem, ListGroup, Button } from 'reactstrap';\nimport { NotificationManager } from \"react-notifications\";\nimport Dropzone from 'react-dropzone-uploader';\n\nconst PageTwoVideoCreationHelper = _ref => {\n  let {\n    saveNewDetails,\n    jumpToStep,\n    progress,\n    setProgress\n  } = _ref;\n  const dropzoneRef = useRef(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const gatheredValues = getValues();\n  console.log(\"gatheredValues\", gatheredValues);\n\n  const onSubmit = data => {\n    if (data !== '') {\n      console.log(\"Great success!\");\n      saveNewDetails(data);\n      jumpToStep(2);\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setValue(name, value, {\n      shouldValidate: true\n    });\n  };\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(imageChangeAndConversion(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleSubmit = runSubmit => {\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n    if (!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") || previouslySavedSoftwareData.uploadedPublicFiles.length <= 10) {\n      const data = new FormData();\n      data.append(\"file\", currentFileSelectedUpload);\n      data.append(\"meta\", fileMetaData);\n      const config = {\n        onUploadProgress: progressEvent => {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n          console.log(res.data);\n          const {\n            file\n          } = res.data;\n          saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n            uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n          });\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n          setMetaFileData(null);\n          setFileReadyStatus(false);\n          setCurrentUploadFileStatus(null);\n          runSubmit();\n        } else {\n          console.log(\"Err\", res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      // here!\n      NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n    }\n  };\n\n  const onError = e => {\n    console.log(e, 'error in file-viewer');\n  };\n\n  const calculateFileType = type => {\n    switch (type) {\n      case \"video/mp4\":\n        return \"mp4\";\n        break;\n\n      case \"image/png\":\n        return \"png\";\n        break;\n\n      case \"image/jpeg\":\n        return \"jpeg\";\n        break;\n\n      case \"image/jpg\":\n        return \"jpg\";\n        break;\n\n      case \"image/gif\":\n        return \"gif\";\n        break;\n\n      case \"image/bmp\":\n        return \"bmp\";\n        break;\n\n      case \"application/pdf\":\n        return \"pdf\";\n        break;\n\n      case \"text/csv\":\n        return \"csv\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n        return \"xlsx\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n        return \"docx\";\n        break;\n\n      case \"video/webm\":\n        return \"webm\";\n        break;\n\n      case \"audio/mpeg\":\n        return \"mp3\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const renderCustomButtonDropzone = (data, e) => {\n    const {\n      meta\n    } = data.files[0];\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmit(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: onError,\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const imageChangeAndConversion = file => {\n    return URL.createObjectURL(file);\n  };\n\n  const onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach(file => {\n      file.remove();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"needs-validation\",\n    onSubmit: handleSubmit(onSubmit, (errorsss, e) => {\n      console.log(\"errrrrrs\", errorsss, e);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"Upload your video content (up-to 30 minutes in length)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: getFilesFromEvent,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 49\n        }\n      }, renderCustomButtonDropzone(data, e));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 425\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 41\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-success\",\n    color: \"success\",\n    style: {\n      width: \"100%\",\n      marginBottom: \"12.5px\",\n      marginTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Proceed Forward W/Next Step\")))));\n};\n\nexport default PageTwoVideoCreationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/tutorialVideos/create/formSteps/pageTwo/pageTwoSection.js"],"names":["React","Fragment","useState","useRef","Row","Col","Form","Label","Input","ListGroupItem","ListGroup","Button","NotificationManager","Dropzone","PageTwoVideoCreationHelper","saveNewDetails","jumpToStep","progress","setProgress","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","gatheredValues","getValues","console","log","onSubmit","data","errors","showMessages","handleInputChange","e","value","name","target","setValue","shouldValidate","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","file","files","imageChangeAndConversion","handleSubmit","runSubmit","_","has","previouslySavedSoftwareData","uploadedPublicFiles","length","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","axios","post","process","env","REACT_APP_BASE_URL","then","res","message","saveSoftwareListingInfo","success","catch","err","error","onError","calculateFileType","type","renderCustomButtonDropzone","meta","marginTop","preventDefault","warning","renderPreviewOfFile","fileWithMeta","id","URL","createObjectURL","onSubmitHelper","allFiles","forEach","remove","errorsss","functions","setChangeOptions","getFilesFromEvent","dropzone","height","dropzoneActive","borderColor","changeOptions","width","marginBottom"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport { Row, Col, Form, Label, Input, ListGroupItem, ListGroup, Button } from 'reactstrap';\nimport { NotificationManager } from \"react-notifications\";\nimport Dropzone from 'react-dropzone-uploader';\n\n\nconst PageTwoVideoCreationHelper = ({ saveNewDetails, jumpToStep, progress, setProgress }) => {\n\n    const dropzoneRef = useRef(null);\n\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n\n    const gatheredValues = getValues();\n\n    console.log(\"gatheredValues\", gatheredValues);\n\n    const onSubmit = data => {\n\n        if (data !== '') {\n            \n            console.log(\"Great success!\");\n\n            saveNewDetails(data);\n\n            jumpToStep(2);\n        } else {\n            errors.showMessages();\n        }\n    };\n    const handleInputChange = (e) => {\n        const { value, name } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(imageChangeAndConversion(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => {\n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        if ((!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\")) || (previouslySavedSoftwareData.uploadedPublicFiles.length <= 10)) {\n            const data = new FormData();\n\n            data.append(\"file\", currentFileSelectedUpload);\n            data.append(\"meta\", fileMetaData);\n\n            const config = {\n                onUploadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded file!\") {\n                    console.log(res.data);\n\n                    const { file } = res.data;\n\n                    saveSoftwareListingInfo({\n                        ...previouslySavedSoftwareData,\n                        uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n                    })\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                    setMetaFileData(null);\n                    setFileReadyStatus(false);\n                    setCurrentUploadFileStatus(null);\n\n                    runSubmit();\n                } else {\n                    console.log(\"Err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        } else {\n            // here!\n            NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n        }\n    };\n    const onError = (e) => {\n        console.log(e, 'error in file-viewer');\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/jpg\":\n                return \"jpg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={onError}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const imageChangeAndConversion = (file) => {\n        return URL.createObjectURL(file);\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Form className=\"needs-validation\" onSubmit={handleSubmit(onSubmit, (errorsss, e) => {\n                        console.log(\"errrrrrs\", errorsss, e);\n                    })}>\n                        <div className=\"form-row\">\n                            <Col md=\"12 mb-3\">\n                                <Label>Upload your video content (up-to 30 minutes in length)</Label>\n                                <div className=\"dz-message needsclick\">\n                                    <Dropzone\n                                        ref={dropzoneRef}\n                                        PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                        maxFiles={1}\n                                        autoUpload={true}\n                                        onChangeStatus={(functions) => {\n                                            setChangeOptions(functions);\n                                        }}\n                                        submitButtonDisabled={false}\n                                        InputComponent={CustomInputHelper}\n                                        getFilesFromEvent={getFilesFromEvent}\n                                        onSubmit={onSubmitHelper}\n                                        SubmitButtonComponent={(data, e) => {\n                                            return (\n                                                <div className=\"absolutely-position-submit-btn\">\n                                                    {renderCustomButtonDropzone(data, e)}\n                                                </div>\n                                            );\n                                        }}\n                                        multiple={false}\n                                        canCancel={false}\n                                        styles={{\n                                            dropzone: { height: 425 },\n                                            dropzoneActive: { borderColor: 'green' },\n                                        }}\n                                    />\n                                </div>\n                                {fileReady === true ? <Fragment>\n                                    <hr className=\"secondary-hr\" />\n                                    <div className=\"centered-both-ways\">\n                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                            setMetaFileData(null);\n                                            setFileReadyStatus(false);\n                                            setCurrentUploadFileStatus(null);\n\n                                            changeOptions.remove();\n                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                    </div>\n                                </Fragment> : null}\n                            </Col>\n                        </div>\n                        <Button type={\"submit\"} className={\"btn-square-success\"} color={\"success\"} style={{ width: \"100%\", marginBottom: \"12.5px\", marginTop: \"12.5px\" }}>Proceed Forward W/Next Step</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default PageTwoVideoCreationHelper;"]},"metadata":{},"sourceType":"module"}