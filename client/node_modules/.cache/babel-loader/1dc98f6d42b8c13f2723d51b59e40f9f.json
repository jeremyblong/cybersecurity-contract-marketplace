{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageFour/helpers/mainHelperFunctions.js\";\nimport React, { Fragment } from \"react\";\nimport Slider from \"react-slick\";\n\nconst renderSupportDetails = option => {\n  const renderHelper = () => {\n    if (option.supportProvidedExternalURL === true) {\n      return `and it is available via a support URL at ${option.supportExternalURL}!`;\n    } else {\n      return \"!\";\n    }\n  }; // render and return related support details into main helper function ---- <p>{category.label}</p>\n\n\n  if (option.supportProvidedExternalURL === true) {\n    // support URL exists and supported\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, option.supportProvidedExternalURL, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Support \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }\n    }, \"IS PROVIDED\"), \" with this listing \", renderHelper()));\n  } else {\n    // support URL does NOT exist - no support\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }\n    }, \"NO\"), \" support is provided with this listing.\"));\n  }\n};\n\nconst ReactSlickSliderUploadedPublicFilesHelper = _ref => {\n  let {\n    uploadedPublicFiles\n  } = _ref;\n  console.log(\"uploadedPublicFiles\", uploadedPublicFiles);\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), typeof uploadedPublicFiles !== \"undefined\" && uploadedPublicFiles.length > 0 ? uploadedPublicFiles.map((file, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, index)));\n  }) : null));\n};\n\nexport default {\n  renderSupportDetails,\n  ReactSlickSliderUploadedPublicFilesHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageFour/helpers/mainHelperFunctions.js"],"names":["React","Fragment","Slider","renderSupportDetails","option","renderHelper","supportProvidedExternalURL","supportExternalURL","color","ReactSlickSliderUploadedPublicFilesHelper","uploadedPublicFiles","console","log","settings","dots","infinite","speed","slidesToShow","slidesToScroll","length","map","file","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAGA,MAAMC,oBAAoB,GAAIC,MAAD,IAAY;AACrC,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAID,MAAM,CAACE,0BAAP,KAAsC,IAA1C,EAAgD;AAC5C,aAAQ,4CAA2CF,MAAM,CAACG,kBAAmB,GAA7E;AACH,KAFD,MAEO;AACH,aAAO,GAAP;AACH;AACJ,GAND,CADqC,CAQrC;;;AACA,MAAIH,MAAM,CAACE,0BAAP,KAAsC,IAA1C,EAAgD;AAC5C;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,MAAM,CAACE,0BAAlB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW;AAAQ,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAX,yBAAoFH,YAAY,EAAhG,CADJ,CADJ;AAKH,GAPD,MAOO;AACH;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAQ,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,4CADJ,CADJ;AAKH;AACJ,CAxBD;;AA0BA,MAAMC,yCAAyC,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA;AAAF,GAA4B;AAE3EC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,mBAAnC;AAEA,QAAMG,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE;AALH,GAAjB;AAQA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,oBAAYL,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACK,OAAOH,mBAAP,KAA+B,WAA/B,IAA8CA,mBAAmB,CAACS,MAApB,GAA6B,CAA3E,GAA+ET,mBAAmB,CAACU,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrH,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CADJ,CADJ,CADJ;AAOH,GAR+E,CAA/E,GAQI,IATT,CADJ,CADJ;AAeH,CA3BD;;AA6BA,eAAe;AACXnB,EAAAA,oBADW;AAEXM,EAAAA;AAFW,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport Slider from \"react-slick\";\n\n\nconst renderSupportDetails = (option) => {\n    const renderHelper = () => {\n        if (option.supportProvidedExternalURL === true) {\n            return `and it is available via a support URL at ${option.supportExternalURL}!`\n        } else {\n            return \"!\";\n        }\n    }\n    // render and return related support details into main helper function ---- <p>{category.label}</p>\n    if (option.supportProvidedExternalURL === true) {\n        // support URL exists and supported\n        return (\n            <Fragment>{option.supportProvidedExternalURL}\n                <p>Support <strong style={{ color: \"red\" }}>IS PROVIDED</strong> with this listing {renderHelper()}</p>\n            </Fragment>\n        );\n    } else {\n        // support URL does NOT exist - no support\n        return (\n            <Fragment>\n                <p><strong style={{ color: \"red\" }}>NO</strong> support is provided with this listing.</p>\n            </Fragment>\n        );\n    }\n}\n\nconst ReactSlickSliderUploadedPublicFilesHelper = ({ uploadedPublicFiles }) => {\n\n    console.log(\"uploadedPublicFiles\", uploadedPublicFiles);\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <Fragment>\n            <Slider {...settings}>\n                {typeof uploadedPublicFiles !== \"undefined\" && uploadedPublicFiles.length > 0 ? uploadedPublicFiles.map((file, index) => {\n                    return (\n                        <Fragment>\n                            <div>\n                                <h3>{index}</h3>\n                            </div>\n                        </Fragment>\n                    );\n                }) : null}\n            </Slider>\n        </Fragment>\n    );\n}\n\nexport default {\n    renderSupportDetails,\n    ReactSlickSliderUploadedPublicFilesHelper\n};"]},"metadata":{},"sourceType":"module"}