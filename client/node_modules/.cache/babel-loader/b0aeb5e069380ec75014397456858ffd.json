{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/hackers/liveHiredGigsActive/viewLiveActiveHiredGigs.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, Button, Progress, Badge } from 'reactstrap';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nconst ViewLiveActivehiredJobsGigsDisplayHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [listings, setListings] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const configuration = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/active/hired/jobs/list/full`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered active/hired jobs!\") {\n        console.log(\"Successfully gathered active jobs :... \", res.data);\n        const {\n          listingData\n        } = res.data;\n        setListings(listingData);\n      } else {\n        console.log(\"ERROR gathering active/hired applications...:\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"CRITICAL ERROR gathering active/hired applications...:\", err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cardheader-active-jobs-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, \"View/Manage Your Active Hired Jobs/Gigs...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewLiveActivehiredJobsGigsDisplayHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/hackers/liveHiredGigsActive/viewLiveActiveHiredGigs.js"],"names":["React","useState","useEffect","Fragment","axios","connect","useHistory","withRouter","Container","Row","Col","Card","CardBody","CardHeader","Button","Progress","Badge","ReactMarkdown","remarkGfm","ViewLiveActivehiredJobsGigsDisplayHelper","userData","listings","setListings","history","configuration","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","listingData","catch","err","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, Button, Progress, Badge } from 'reactstrap';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nconst ViewLiveActivehiredJobsGigsDisplayHelper = ({ userData }) => {\n    const [ listings, setListings ] = useState([]);\n\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/active/hired/jobs/list/full`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered active/hired jobs!\") {\n                console.log(\"Successfully gathered active jobs :... \", res.data);\n                \n                const { listingData } = res.data;\n\n                setListings(listingData);\n            } else {\n                console.log(\"ERROR gathering active/hired applications...:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"CRITICAL ERROR gathering active/hired applications...:\", err);\n        })\n    }, [])\n    return (\n        <Fragment>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardHeader className={\"b-l-info\"}>\n                                <h1 className='cardheader-active-jobs-main'>View/Manage Your Active Hired Jobs/Gigs...</h1>\n                            </CardHeader>\n                            <CardBody>\n                                {/* {typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, index) => {\n                                    console.log(\"listing\", listing);\n\n                                    const progress = Math.floor(Math.random() * (100 - 0 + 1) + 0);\n                                    const random = Math.floor(Math.random() * (500 - 25 + 1) + 25);\n                                    const hashtags = listing.originalListingData.hashtags;\n                                    const secondaryOrNot = (index % 2 === 1) ? true : false;\n\n                                    return (\n                                        <Fragment key={index}>\n                                            <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mt-4\">\n                                                <div className={secondaryOrNot === true ? \"project-box add-shadow-auction-wrapper-secondary\" : \"project-box add-shadow-auction-wrapper-info\"}>\n                                                    <span className={`badge ${index % 2 === 1 ? 'badge-secondary' : 'badge-info'}`}>{\"Bid/Bet On This Auction Listing\"}</span>\n                                                    <h6 className=\"auction-mapped-title\">{listing.originalListingData.publicCompanyName}</h6>\n                                                    <div className=\"media\">\n                                                        <img className=\"img-20 mr-1 rounded-circle\" src={require(`../../../../../assets/images/user/user.png`)} alt=\"\" />\n                                                    </div>\n                                                    <div className=\"auction-tags-mapped-wrapper\">\n                                                        {typeof hashtags !== \"undefined\" && hashtags.length > 0 ? hashtags.map((tag, idx) => {\n                                                            return (\n                                                                <Fragment key={idx}>\n                                                                    <Badge className=\"tags-tag-auction-mapped\" color={secondaryOrNot === true ? \"secondary\" : \"info\"}>{tag.text}</Badge>\n                                                                </Fragment>\n                                                            );\n                                                        }) : null}\n                                                    </div>\n                                                    <ReactMarkdown className=\"markdown-description-auction\" children={listing.originalListingData.listingDescription} remarkPlugins={[remarkGfm]} />\n                                                    <Row className=\"details\">\n                                                        <Col xs=\"10\" lg=\"10\" xl=\"10\" md=\"10\"><span className=\"span-betting\">Current Active Bids/Bets </span></Col>\n                                                        <Col xs=\"2\" lg=\"2\" xl=\"2\" md=\"2\" className={\"spacer-col-span-auction\"}><span className={secondaryOrNot === true ? 'text-secondary-custom' : 'text-info-custom'}>{random}</span></Col>\n                                                        <Col xs=\"10\" lg=\"10\" xl=\"10\" md=\"10\"><span className=\"span-betting\">Total Participant's (Betting Related)</span></Col>\n                                                        <Col xs=\"2\" lg=\"2\" xl=\"2\" md=\"2\" className={\"spacer-col-span-auction\"}><span className={secondaryOrNot === true ? 'text-secondary-custom' : 'text-info-custom'}>{random}</span></Col>\n                                                        <Col xs=\"10\" lg=\"10\" xl=\"10\" md=\"10\"> <span className=\"span-betting\">Total Cumlative Bids/Bets (Activity)</span></Col>\n                                                        <Col xs=\"2\" lg=\"2\" xl=\"2\" md=\"2\" className={\"spacer-col-span-auction\"}><span className={secondaryOrNot === true ? 'text-secondary-custom' : 'text-info-custom'}>{listing.allBids.length}</span></Col>\n                                                        <Col xs=\"10\" lg=\"10\" xl=\"10\" md=\"10\"> <span className=\"span-betting\"># Of Hacker's Participating</span></Col>\n                                                        <Col xs=\"2\" lg=\"2\" xl=\"2\" md=\"2\" className={\"spacer-col-span-auction\"}><span className={secondaryOrNot === true ? 'text-secondary-custom' : 'text-info-custom'}>{listing.hiredHackers.length}</span></Col>\n                                                    </Row>\n                                                    <div className=\"customers\">\n                                                    <ul>\n                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle\" src={require(`../../../../../assets/images/user/2.png`)} alt=\"\" /></li>\n                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle\" src={require(`../../../../../assets/images/user/3.png`)} alt=\"\" /></li>\n                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle\" src={require(`../../../../../assets/images/user/user.png`)} alt=\"\" /></li>\n                                                        <li className=\"d-inline-block ml-2\">\n                                                        <p className=\"f-12\">{`+${listing.totalParticipants.length} More`}</p>\n                                                        </li>\n                                                    </ul>\n                                                    </div>\n                                                    <div className=\"project-status mt-4\">\n                                                    <div className=\"media mb-0\">\n                                                        <p className={secondaryOrNot === true ? \"remove-bold-restyle-auction-left-secondary\" : \"remove-bold-restyle-auction-left-info\"}>{progress} Day's Left... </p>\n                                                        <div className=\"media-body text-right\"><span>Time Remaining To Bid</span></div>\n                                                    </div>\n                                                    {progress === \"100\" ?\n                                                        <Progress className=\"sm-progress-bar progress-bar-animated\" striped color={secondaryOrNot === true ? \"secondary\" : \"info\"} value={progress} style={{ height: \"7.5px\" }} />\n                                                        :\n                                                        <Progress className=\"sm-progress-bar progress-bar-animated\" striped color={secondaryOrNot === true ? \"secondary\" : \"info\"} value={progress} style={{ height: \"7.5px\" }} />\n                                                    }\n\n                                                    </div>\n                                                    <div className=\"centered-both-ways bottom-container-auction\">\n                                                        <Button onClick={() => {\n                                                            history.push(`/individual/hired/job/data/view/manage/${listing.id}`)\n                                                        }} className={secondaryOrNot === true ? \"btn-square-secondary\" : \"btn-square-info\"} outline color={secondaryOrNot === true ? \"secondary-2x\" : \"info-2x\"} style={{ width: \"82.5%\" }}>View/Manage Listing Data</Button>\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Fragment>\n                                    );\n                                }) : null} */}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(withRouter(ViewLiveActivehiredJobsGigsDisplayHelper));"]},"metadata":{},"sourceType":"module"}