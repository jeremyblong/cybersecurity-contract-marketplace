{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/panes/videoInvitePane/videoInvite.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport Select from \"react-select\";\nimport moment from 'moment';\nconst currentDate = new Date();\nconst timeSlotsOptions = [{\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0),\n  label: '12:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 1, 0, 0),\n  label: '1:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 2, 0, 0),\n  label: '2:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 3, 0, 0),\n  label: '3:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 4, 0, 0),\n  label: '4:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 5, 0, 0),\n  label: '5:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 6, 0, 0),\n  label: '6:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 7, 0, 0),\n  label: '7:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 8, 0, 0),\n  label: '8:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 9, 0, 0),\n  label: '9:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 10, 0, 0),\n  label: '10:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 11, 0, 0),\n  label: '11:00AM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 12, 0, 0),\n  label: '12:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 13, 0, 0),\n  label: '1:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 14, 0, 0),\n  label: '2:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 15, 0, 0),\n  label: '3:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 16, 0, 0),\n  label: '4:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 17, 0, 0),\n  label: '5:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 18, 0, 0),\n  label: '6:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 19, 0, 0),\n  label: '7:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 20, 0, 0),\n  label: '8:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 21, 0, 0),\n  label: '9:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 22, 0, 0),\n  label: '10:00PM'\n}, {\n  value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 23, 0, 0),\n  label: '11:00PM'\n}];\n\nconst VideoInvitePaneInviteEmployerHelper = _ref => {\n  let {\n    videoInterviewPane,\n    setVideoInterviewStartPane\n  } = _ref;\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleSelect = date => {\n    console.log(date);\n\n    if (new Date(date) > new Date()) {\n      setSelectedDate(date);\n    } else {\n      NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\", \"Date is BEFORE the current date! Reselect..\", 4750);\n    }\n  };\n\n  const handleTimeChange = selected => {\n    setSelectedOption(selected);\n  };\n\n  console.log(\"selectedDate\", selectedDate);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: videoInterviewPane,\n    onClose: () => setVideoInterviewStartPane(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginized-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    onClick: () => setVideoInterviewStartPane(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Cancel/Close Pane\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container-invite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Send An Invite & Start A Video Interview!\",\n    title: \"Initialize A Video Interview With This User!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12 box-col-12\",\n    xl: \"12 xl-100\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-messaging-initialize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 49\n    }\n  }, \"Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    date: selectedDate,\n    onChange: handleSelect,\n    shownDate: new Date(),\n    className: \"custom-date-range-picker\",\n    showMonthAndYearPickers: false,\n    staticRanges: [],\n    direction: \"horizontal\",\n    showMonthArrow: true,\n    months: 2,\n    showDateDisplay: false,\n    inputRanges: [],\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"label-time-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 57\n    }\n  }, \"Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedOption,\n    onChange: handleTimeChange,\n    options: timeSlotsOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 57\n    }\n  }), selectedOption !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 84\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"selectedtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 61\n    }\n  }, \"You've selected the timeslot of \", selectedOption.label, \" on the date of \", selectedDate !== null ? moment(selectedDate).format(\"MM/DD/YYYY\") : \"-------\", \"!\")) : null))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 49\n    }\n  }, \"This is going to invite \", \"\", \" to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..\")))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default VideoInvitePaneInviteEmployerHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/panes/videoInvitePane/videoInvite.js"],"names":["React","Fragment","useState","useEffect","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","CardFooter","Form","Label","Input","InputGroup","InputGroupAddon","InputGroupText","NotificationManager","Breadcrumb","Calendar","Select","moment","currentDate","Date","timeSlotsOptions","value","getFullYear","getMonth","getDate","label","VideoInvitePaneInviteEmployerHelper","videoInterviewPane","setVideoInterviewStartPane","selectedDate","setSelectedDate","selectedOption","setSelectedOption","handleSelect","date","console","log","warning","handleTimeChange","selected","width","format"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport Select from \"react-select\";\nimport moment from 'moment';\n\nconst currentDate = new Date();\n\nconst timeSlotsOptions = [\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0), label: '12:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 1, 0, 0), label: '1:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 2, 0, 0), label: '2:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 3, 0, 0), label: '3:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 4, 0, 0), label: '4:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 5, 0, 0), label: '5:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 6, 0, 0), label: '6:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 7, 0, 0), label: '7:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 8, 0, 0), label: '8:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 9, 0, 0), label: '9:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 10, 0, 0), label: '10:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 11, 0, 0), label: '11:00AM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 12, 0, 0), label: '12:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 13, 0, 0), label: '1:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 14, 0, 0), label: '2:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 15, 0, 0), label: '3:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 16, 0, 0), label: '4:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 17, 0, 0), label: '5:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 18, 0, 0), label: '6:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 19, 0, 0), label: '7:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 20, 0, 0), label: '8:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 21, 0, 0), label: '9:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 22, 0, 0), label: '10:00PM' },\n    { value: new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 23, 0, 0), label: '11:00PM' }\n]\n\nconst VideoInvitePaneInviteEmployerHelper = ({ videoInterviewPane, setVideoInterviewStartPane }) => {\n\n    const [ selectedDate, setSelectedDate ] = useState(new Date());\n    const [ selectedOption, setSelectedOption ] = useState(null);\n\n    const handleSelect = (date) => {\n        console.log(date);\n\n        if (new Date(date) > new Date()) {\n            setSelectedDate(date);\n        } else {\n            NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\", \"Date is BEFORE the current date! Reselect..\", 4750);\n        }\n    }\n\n    const handleTimeChange = (selected) => {\n        setSelectedOption(selected);\n    }\n\n    console.log(\"selectedDate\", selectedDate);\n\n    return (\n        <Fragment>\n            <Sheet isOpen={videoInterviewPane} onClose={() => setVideoInterviewStartPane(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div className='marginized-header'>\n                            <Button className='btn-square-danger' color={\"danger-2x\"} style={{ width: \"100%\" }} outline onClick={() => setVideoInterviewStartPane(false)}>Cancel/Close Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                        <div className='inner-container-invite'>\n                            <Breadcrumb parent=\"Send An Invite & Start A Video Interview!\" title=\"Initialize A Video Interview With This User!\" />\n                            <Sheet.Content>\n                                <Container fluid={true}>\n                                    <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                        <Card className={\"card-shadow-messaging-initialize\"}>\n                                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                                <h3>Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!</h3>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Calendar\n                                                            date={selectedDate}\n                                                            onChange={handleSelect}\n                                                            shownDate={new Date()}\n                                                            className={\"custom-date-range-picker\"}\n                                                            showMonthAndYearPickers={false}\n                                                            staticRanges={[]}\n                                                            direction={\"horizontal\"}\n                                                            showMonthArrow={true}\n                                                            months={2}\n                                                            showDateDisplay={false}\n                                                            inputRanges={[]}\n                                                            rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                                        />\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Label className='label-time-selector'>Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..</Label>\n                                                        <Select\n                                                            value={selectedOption}\n                                                            onChange={handleTimeChange}\n                                                            options={timeSlotsOptions}\n                                                        />\n                                                        <hr />\n                                                        {selectedOption !== null ? <Fragment>\n                                                            <h4 className='selectedtext'>You've selected the timeslot of {selectedOption.label} on the date of {selectedDate !== null ? moment(selectedDate).format(\"MM/DD/YYYY\") : \"-------\"}!</h4>\n                                                        </Fragment> : null}\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter className={\"b-l-primary b-r-primary\"}>\n                                                <p className='lead'>This is going to invite {\"\"} to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..</p>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Container>\n                            </Sheet.Content>\n                        </div>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\n\nexport default VideoInvitePaneInviteEmployerHelper;"]},"metadata":{},"sourceType":"module"}