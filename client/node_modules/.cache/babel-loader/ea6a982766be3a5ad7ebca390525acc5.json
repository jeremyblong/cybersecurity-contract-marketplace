{"ast":null,"code":"import React,{useState,useEffect,Fragment}from'react';import\"./styles.css\";import Sheet from'react-modal-sheet';import{Button,Container,Row,Col,Card,CardHeader,CardBody,Progress,Badge,Label,Input,InputGroup,FormGroup}from\"reactstrap\";import axios from'axios';import{NotificationManager}from\"react-notifications\";import Cards from'react-credit-cards';import Select from'react-select';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';const monthOptions=[{value:'01',label:'01'},{value:'02',label:'02'},{value:'03',label:'03'},{value:'04',label:'04'},{value:'05',label:'05'},{value:'06',label:'06'},{value:'07',label:'07'},{value:'08',label:'08'},{value:'09',label:'09'},{value:'10',label:'10'},{value:'11',label:'11'},{value:'12',label:'12'}];const yearOptions=[{label:\"2022\",value:\"22\"},{label:\"2023\",value:\"23\"},{label:\"2024\",value:\"24\"},{label:\"2025\",value:\"25\"},{label:\"2026\",value:\"26\"},{label:\"2027\",value:\"27\"},{label:\"2028\",value:\"28\"},{label:\"2029\",value:\"29\"},{label:\"2030\",value:\"30\"},{label:\"2031\",value:\"31\"},{label:\"2032\",value:\"32\"},{label:\"2033\",value:\"33\"},{label:\"2034\",value:\"34\"},{label:\"2035\",value:\"35\"}];const PromoteProfileBoostSheetHelper=_ref=>{let{profileBoostedSelected,setProfileBoostedSelection,userData,boostProfilePaneOpen,setSheetOpenProfileBoost}=_ref;const[cardPaymentSelected,setSelectedCardPayment]=useState(null);const[previousCards,setPreviousCardsData]=useState([]);const[selectedMonth,setSelectedMonth]=useState(null);const[selectedYear,setSelectedYear]=useState(null);const[ready,setReady]=useState(false);const[cardData,setCardData]=useState({focus:\"\",cvc:\"\",name:\"\",number:\"\",expiry:\"\"});useEffect(()=>{const config={params:{id:userData.uniqueId}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/employer/payment/methods/cards/only\"),config).then(res=>{if(res.data.message===\"Gathered employer payment cards!\"){console.log(res.data);const{cards}=res.data;const convertedPaymentsArr=[];for(let index=0;index<cards.data.length;index++){const method=cards.data[index];const{last4}=method.card;convertedPaymentsArr.push({label:\"**** **** **** \".concat(last4),value:method});}setPreviousCardsData(convertedPaymentsArr);setReady(true);}else{console.log(\"err\",res.data);NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\",\"Failed to load previous method's!\",4750);}}).catch(err=>{console.log(err);NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\",\"Failed to load previous method's!\",4750);});},[]);const calculateBoostCost=tier=>{switch(tier){case\"tier-1\":return\"$15.00 (plus applicable taxes)\";break;case\"tier-2\":return\"$35.00 (plus applicable taxes)\";break;case\"tier-3\":return\"55.00 (plus applicable taxes)\";break;default:break;}};const calculateTier=tier=>{switch(tier){case\"tier-1\":return\"Tier One (1)\";break;case\"tier-2\":return\"Tier Two (2)\";break;case\"tier-3\":return\"Tier Three (3)\";break;default:break;}};const handleInputChange=e=>{const{name,value}=e.target;if(name===\"number\"){if(value.length!==0){let filtered=value.replace(/\\D/,'');setCardData(prevState=>{return{...prevState,number:filtered};});setSelectedCardPayment(null);}else{setCardData(prevState=>{return{...prevState,number:\"\"};});setSelectedCardPayment(null);}}else if(name===\"cvc\"){if(value.length!==0){let filtered=value.replace(/\\D/,'');setCardData(prevState=>{return{...prevState,cvc:filtered};});setSelectedCardPayment(null);}else{setCardData(prevState=>{return{...prevState,cvc:\"\"};});setSelectedCardPayment(null);}}else{setCardData(prevState=>{return{...prevState,[name]:value};});setSelectedCardPayment(null);}};const handleInputFocus=e=>{setCardData(prevState=>{return{...prevState,focus:e.target.name};});};const handleSelectBlur=(type,full,monthOrYear)=>{if(type===\"selectedMonth\"){setTimeout(()=>{setCardData(prevState=>{return{...prevState,expiry:\"\".concat(monthOrYear,\"/\").concat(selectedYear!==null?selectedYear.value:\"--\")};});},500);}else if(type===\"selectedYear\"){setTimeout(()=>{setCardData(prevState=>{return{...prevState,expiry:\"\".concat(selectedMonth!==null?selectedMonth.value:\"--\",\"/\").concat(monthOrYear)};});},500);}};const handleCardSelectionChange=value=>{console.log(\"handleCardSelectionChange ran/running..:\",value);setSelectedCardPayment(value);setCardData(prevState=>{return{...prevState,cvc:\"\",expiry:\"\",focus:\"\",name:\"\",number:\"\"};});};const clearPreviousState=()=>{setSelectedCardPayment(null);setSelectedMonth(null);setSelectedYear(null);setCardData({focus:\"\",cvc:\"\",name:\"\",number:\"\",expiry:\"\"});};const handleSubmission=()=>{console.log(\"handle handleSubmission submission!\");const configuration={employerId:userData.uniqueId,card:cardData,manuallyEntered:cardPaymentSelected!==null?false:true,cardPaymentSelected,profileBoostedSelected};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/boost/employer/profile/period/time\"),configuration).then(res=>{if(res.data.message===\"Successfully boosted your selected profile!\"){console.log(res.data);const{user,cost}=res.data;setSheetOpenProfileBoost(false);clearPreviousState();NotificationManager.success(\"We've successfully boosted your profile with the company name of '\".concat(user.firstName,\" \").concat(user.lastName,\"' at the cost of '$\").concat(cost/100,\"'! Succesfully initialized your promoted profile & it is NOW LIVE!\"),\"Successfully charged desired card and profile is NOW PROMOTED!\",5000);}else if(res.data.message===\"Already boosted this profile account!\"){setSheetOpenProfileBoost(false);NotificationManager.warning(\"You've ALREADY boosted this profile, you CANNOT double boost a profile as it would be a waste of your money. Please wait for this boosted profile to expire (check back periodically if you'd like) before boosting again or select another profile!\",\"profile is already boosted!\",4750);}else{console.log(\"Err\",res.data);setSheetOpenProfileBoost(false);clearPreviousState();NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\",\"Unknown error has occurred..!\",4750);}}).catch(err=>{console.log(err);setSheetOpenProfileBoost(false);clearPreviousState();NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\",\"Unknown error has occurred..!\",4750);});};const calculateDisabled=()=>{const{name,number,expiry,cvc}=cardData;if(typeof number!==\"undefined\"&&number.length>=12&&typeof cvc!==\"undefined\"&&cvc.length>=3&&typeof name!==\"undefined\"&&name.length>=8&&typeof expiry!==\"undefined\"&&expiry.length===5||cardPaymentSelected!==null){return false;}else{return true;}};console.log(\"cardData\",cardData,selectedMonth,selectedYear);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Sheet,{disableDrag:true,isOpen:boostProfilePaneOpen,onClose:()=>setSheetOpenProfileBoost(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{className:\"margin-medium-button-pane\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-danger\",color:\"danger-2x\",outline:true,style:{width:\"100%\"},onClick:()=>{clearPreviousState();setSheetOpenProfileBoost(false);}},\"Close/Exit Pane\"))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{style:{marginTop:\"25px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"bordered-shadowed-card-deposit\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"header-deposit-card-funds\"},\"You've selected \",profileBoostedSelected,\" which means you have selected the \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},calculateTier(profileBoostedSelected)),\" boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},calculateBoostCost(profileBoostedSelected))),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Please fill out or select the related \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\"}},\"payment information\"),\" BEFORE continuing with this profile boost submission. We will charge you approx. \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},calculateBoostCost(profileBoostedSelected)),\" for this specific choosen boost!\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h2\",{style:{textDecorationLine:\"underline\"},className:\"header-deposit-card-funds\"},\"Please select the payment method you'd like to use for this transaction..\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},ready===true?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-primary b-r-primary project-boxed-shadowized-min-second\"},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"h4-two-col-header\"},\"Enter your \",/*#__PURE__*/React.createElement(\"strong\",null,\"card details\"),\" in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Add your payment details in the live form collection unit below. This will not only use \",/*#__PURE__*/React.createElement(\"strong\",null,\"THIS CARD AS A PAYMENT METHOD\"),\" but will also save this card information to your account for a later date and/or future purchases down the road..\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Card Number\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.number,name:\"number\",className:\"form-control\",maxLength:19,size:19,type:\"number\",placeholder:\"Debit/Credit Card Number\",\"aria-label\":\"Debit/Credit Card Number\"}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Full Name\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.name,name:\"name\",maxLength:\"35\",size:\"35\",className:\"form-control\",type:\"text\",placeholder:\"Full Name\",\"aria-label\":\"Full Name\"})))),/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Expiration\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Select,{value:selectedMonth,onChange:value=>{setSelectedMonth(value);setSelectedCardPayment(null);},onBlur:()=>{handleSelectBlur(\"selectedMonth\",selectedMonth,selectedMonth.value);},className:\"stretch\",placeholder:\"MONTH\",options:monthOptions}),/*#__PURE__*/React.createElement(Select,{value:selectedYear,onChange:value=>{setSelectedYear(value);setSelectedCardPayment(null);},onBlur:()=>{handleSelectBlur(\"selectedYear\",selectedYear,selectedYear.value);},className:\"stretch-two\",placeholder:\"YEAR\",options:yearOptions})))),/*#__PURE__*/React.createElement(Col,{sm:\"6\",md:\"4\",lg:\"4\",xl:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"CVC\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{onFocus:handleInputFocus,onChange:handleInputChange,value:cardData.cvc,name:\"cvc\",className:\"form-control\",maxLength:\"4\",size:\"4\",type:\"number\",placeholder:\"CVC\",\"aria-label\":\"CVC\"}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Cards,{cvc:cardData.cvc,expiry:cardData.expiry,focused:cardData.focus,name:cardData.name,number:cardData.number})))))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#d4d4d4\",highlightColor:\"#8f8f8f\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{containerClassName:\"stretch-bars\",count:25}))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},ready===true?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-primary b-r-primary project-boxed-shadowized-min-second\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"h4-two-col-header\"},\"Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(Row,{style:{paddingBottom:\"10px\"}},/*#__PURE__*/React.createElement(Label,null,\"Select An Existing Registered Card (Previously registered on a different date/time)\"),/*#__PURE__*/React.createElement(Select,{value:cardPaymentSelected,onChange:handleCardSelectionChange,options:previousCards})))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#d4d4d4\",highlightColor:\"#8f8f8f\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{containerClassName:\"stretch-bars\",count:25})))))),/*#__PURE__*/React.createElement(Row,{style:{marginBottom:\"37.5px\"}},/*#__PURE__*/React.createElement(Button,{disabled:calculateDisabled(),outline:calculateDisabled()?true:false,className:\"btn-square-success\",onClick:handleSubmission,style:{width:\"100%\"},color:\"success\"},\"Submit & Purchase Boost/Promotion!\"))))))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)));};export default PromoteProfileBoostSheetHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostProfileOnly/profileBoosts.js"],"names":["React","useState","useEffect","Fragment","Sheet","Button","Container","Row","Col","Card","CardHeader","CardBody","Progress","Badge","Label","Input","InputGroup","FormGroup","axios","NotificationManager","Cards","Select","Skeleton","SkeletonTheme","monthOptions","value","label","yearOptions","PromoteProfileBoostSheetHelper","profileBoostedSelected","setProfileBoostedSelection","userData","boostProfilePaneOpen","setSheetOpenProfileBoost","cardPaymentSelected","setSelectedCardPayment","previousCards","setPreviousCardsData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","ready","setReady","cardData","setCardData","focus","cvc","name","number","expiry","config","params","id","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","cards","convertedPaymentsArr","index","length","method","last4","card","push","warning","catch","err","calculateBoostCost","tier","calculateTier","handleInputChange","e","target","filtered","replace","prevState","handleInputFocus","handleSelectBlur","type","full","monthOrYear","setTimeout","handleCardSelectionChange","clearPreviousState","handleSubmission","configuration","employerId","manuallyEntered","post","user","cost","success","firstName","lastName","error","calculateDisabled","width","marginTop","color","textDecorationLine","paddingBottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup }  from \"reactstrap\";\nimport axios from 'axios';\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst monthOptions = [\n  { value: '01', label: '01' },\n  { value: '02', label: '02' },\n  { value: '03', label: '03' },\n  { value: '04', label: '04' },\n  { value: '05', label: '05' },\n  { value: '06', label: '06' },\n  { value: '07', label: '07' },\n  { value: '08', label: '08' },\n  { value: '09', label: '09' },\n  { value: '10', label: '10' },\n  { value: '11', label: '11' },\n  { value: '12', label: '12' },\n];\nconst yearOptions = [\n    { label: \"2022\", value: \"22\" },\n    { label: \"2023\", value: \"23\" },\n    { label: \"2024\", value: \"24\" },\n    { label: \"2025\", value: \"25\" },\n    { label: \"2026\", value: \"26\" },\n    { label: \"2027\", value: \"27\" },\n    { label: \"2028\", value: \"28\" },\n    { label: \"2029\", value: \"29\" },\n    { label: \"2030\", value: \"30\" },\n    { label: \"2031\", value: \"31\" },\n    { label: \"2032\", value: \"32\" },\n    { label: \"2033\", value: \"33\" },\n    { label: \"2034\", value: \"34\" },\n    { label: \"2035\", value: \"35\" }\n];\n\nconst PromoteProfileBoostSheetHelper = ({ profileBoostedSelected, setProfileBoostedSelection, userData, boostProfilePaneOpen, setSheetOpenProfileBoost }) => {\n\n    const [ cardPaymentSelected, setSelectedCardPayment ] = useState(null);\n    const [ previousCards, setPreviousCardsData ] = useState([]);\n    const [ selectedMonth, setSelectedMonth ] = useState(null);\n    const [ selectedYear, setSelectedYear ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ cardData, setCardData ] = useState({\n        focus: \"\",\n        cvc: \"\",\n        name: \"\",\n        number: \"\",\n        expiry: \"\"\n    })\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                const convertedPaymentsArr = [];\n\n                for (let index = 0; index < cards.data.length; index++) {\n                    const method = cards.data[index];\n\n                    const { last4 } = method.card;\n                    \n                    convertedPaymentsArr.push({ label: `**** **** **** ${last4}`, value: method })\n                }\n\n                setPreviousCardsData(convertedPaymentsArr);\n\n                setReady(true);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n        })\n    }, [])\n\n    const calculateBoostCost = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"$15.00 (plus applicable taxes)\";\n                break;\n            case \"tier-2\":\n                return \"$35.00 (plus applicable taxes)\";\n                break;\n            case \"tier-3\":\n                return \"55.00 (plus applicable taxes)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateTier = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"Tier One (1)\";\n                break;\n            case \"tier-2\":\n                return \"Tier Two (2)\";\n                break;\n            case \"tier-3\":\n                return \"Tier Three (3)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === \"number\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else if (name === \"cvc\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else {\n\n            setCardData(prevState => {\n                return {\n                    ...prevState,\n                    [name]: value\n                }\n            });\n            setSelectedCardPayment(null);\n        }\n    }\n    const handleInputFocus = (e) => {\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                focus: e.target.name\n            }\n        });\n    }\n    const handleSelectBlur = (type, full, monthOrYear) => {\n        if (type === \"selectedMonth\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n                    }\n                });\n            }, 500)\n        } else if (type === \"selectedYear\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n                    }\n                });\n            }, 500)\n        }\n    }\n    const handleCardSelectionChange = (value) => {\n        console.log(\"handleCardSelectionChange ran/running..:\", value);\n\n        setSelectedCardPayment(value);\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                cvc: \"\",\n                expiry: \"\",\n                focus: \"\",\n                name: \"\",\n                number: \"\"\n            }\n        });\n    }\n    const clearPreviousState = () => {\n        setSelectedCardPayment(null);\n        setSelectedMonth(null);\n        setSelectedYear(null);\n        setCardData({\n            focus: \"\",\n            cvc: \"\",\n            name: \"\",\n            number: \"\",\n            expiry: \"\"\n        });\n    }\n    const handleSubmission = () => {\n        console.log(\"handle handleSubmission submission!\");\n        \n        const configuration = {\n            employerId: userData.uniqueId,\n            card: cardData,\n            manuallyEntered: cardPaymentSelected !== null ? false : true,\n            cardPaymentSelected,\n            profileBoostedSelected\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/profile/period/time`, configuration).then((res) => {\n            if (res.data.message === \"Successfully boosted your selected profile!\") {\n                console.log(res.data);\n\n                const { user, cost } = res.data;\n\n                setSheetOpenProfileBoost(false);\n\n                clearPreviousState();\n\n                NotificationManager.success(`We've successfully boosted your profile with the company name of '${user.firstName} ${user.lastName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted profile & it is NOW LIVE!`, \"Successfully charged desired card and profile is NOW PROMOTED!\", 5000);\n\n            } else if (res.data.message === \"Already boosted this profile account!\") {\n\n                setSheetOpenProfileBoost(false);\n\n                NotificationManager.warning(\"You've ALREADY boosted this profile, you CANNOT double boost a profile as it would be a waste of your money. Please wait for this boosted profile to expire (check back periodically if you'd like) before boosting again or select another profile!\", \"profile is already boosted!\", 4750);\n            } else {\n                console.log(\"Err\", res.data);\n\n                setSheetOpenProfileBoost(false);\n\n                clearPreviousState();\n\n                NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            setSheetOpenProfileBoost(false);\n\n            clearPreviousState();\n\n            NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n        })\n    }\n    const calculateDisabled = () => {\n\n        const  { name, number, expiry, cvc } = cardData;\n\n        if (((typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5) || (cardPaymentSelected !== null))) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n    return (\n        <div>\n            <Sheet disableDrag={true} isOpen={boostProfilePaneOpen} onClose={() => setSheetOpenProfileBoost(false)}>\n                <Sheet.Container>\n                <Sheet.Header>\n                    <div className='margin-medium-button-pane'>\n                        <Button className={\"btn-square-danger\"} color={\"danger-2x\"} outline style={{ width: \"100%\" }} onClick={() => {\n                            clearPreviousState();\n                            setSheetOpenProfileBoost(false)\n                        }}>Close/Exit Pane</Button>\n                    </div>\n                </Sheet.Header>\n                <Sheet.Content>\n                    <Container fluid={true}>\n                        <Row style={{ marginTop: \"25px\" }}>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card className='bordered-shadowed-card-deposit'>\n                                    <CardHeader className={\"b-l-info b-r-info\"}>\n                                        <h2 className='header-deposit-card-funds'>You've selected {profileBoostedSelected} which means you have selected the <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateTier(profileBoostedSelected)}</strong> boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>{calculateBoostCost(profileBoostedSelected)}</strong></h2>\n                                        <p className='lead'>Please fill out or select the related <strong style={{ color: \"#f73164\" }}>payment information</strong> BEFORE continuing with this profile boost submission. We will charge you approx. <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateBoostCost(profileBoostedSelected)}</strong> for this specific choosen boost!</p>\n                                        <hr />\n                                        <h2 style={{ textDecorationLine: \"underline\" }} className='header-deposit-card-funds'>Please select the payment method you'd like to use for this transaction..</h2>\n                                        <hr />\n                                        <p className='lead'>Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                            <Row>\n                                                                <h4 className='h4-two-col-header'>Enter your <strong>card details</strong> in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).</h4>\n                                                                <hr />\n                                                                <p className='lead'>Add your payment details in the live form collection unit below. This will not only use <strong>THIS CARD AS A PAYMENT METHOD</strong> but will also save this card information to your account for a later date and/or future purchases down the road..</p>\n                                                                <hr />\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <FormGroup>\n                                                                        <Label>Card Number</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.number} name=\"number\" className=\"form-control\" maxLength={19} size={19} type=\"number\" placeholder=\"Debit/Credit Card Number\" aria-label=\"Debit/Credit Card Number\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Full Name</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.name} name=\"name\" maxLength=\"35\" size=\"35\" className=\"form-control\" type=\"text\" placeholder=\"Full Name\" aria-label=\"Full Name\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Expiration</Label>\n                                                                        <InputGroup>\n                                                                            <Select\n                                                                                value={selectedMonth}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedMonth(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n                                                                                }}\n                                                                                className=\"stretch\"\n                                                                                placeholder={\"MONTH\"}\n                                                                                options={monthOptions}\n                                                                            />\n                                                                            <Select\n                                                                                value={selectedYear}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedYear(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n                                                                                }}\n                                                                                className=\"stretch-two\"\n                                                                                placeholder={\"YEAR\"}\n                                                                                options={yearOptions}\n                                                                            />\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>CVC</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.cvc} name=\"cvc\" className=\"form-control\" maxLength=\"4\" size=\"4\" type=\"number\" placeholder=\"CVC\" aria-label=\"CVC\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <Cards\n                                                                        cvc={cardData.cvc}\n                                                                        expiry={cardData.expiry}\n                                                                        focused={cardData.focus}\n                                                                        name={cardData.name}\n                                                                        number={cardData.number}\n                                                                    />\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Row>\n                                                            <h4 className='h4-two-col-header'>Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.</h4>\n                                                            <hr />\n                                                            <p className='lead'>Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!</p>\n                                                            <hr />\n                                                        </Row>\n                                                        <Row style={{ paddingBottom: \"10px\" }}>\n                                                            <Label>Select An Existing Registered Card (Previously registered on a different date/time)</Label>\n                                                            <Select\n                                                                value={cardPaymentSelected}\n                                                                onChange={handleCardSelectionChange}\n                                                                options={previousCards}\n                                                            />\n                                                        </Row>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginBottom: \"37.5px\" }}>\n                                            <Button disabled={calculateDisabled()} outline={calculateDisabled() ? true : false} className='btn-square-success' onClick={handleSubmission} style={{ width: \"100%\" }} color={\"success\"}>Submit & Purchase Boost/Promotion!</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Sheet.Content>\n                </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </div>\n    );\n}\n\nexport default PromoteProfileBoostSheetHelper;"]},"metadata":{},"sourceType":"module"}