{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/timelineTab.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Row, Col, Card, CardBody, Button, Media, Badge } from 'reactstrap';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport LeftBar from './leftBar';\nimport RightBar from './rightBar';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport helpers from \"./miscFunctions/helperFunctions.js\";\nimport _ from \"lodash\";\nimport { Link, useHistory } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nconst {\n  renderProfilePicVideoSmallRounded\n} = helpers;\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n  interactive: false\n});\n\nconst TimelineTabEmployerProfileHelper = _ref => {\n  let {\n    employerData,\n    activeHearts,\n    userData\n  } = _ref;\n  const [location, setLocation] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [listings, setListingsData] = useState([]);\n  const history = useHistory();\n\n  const handleRedirectIndividualPage = listing => {\n    console.log(\"listing passed: \", listing);\n    history.push(`/view/individual/employer/listing/public/${listing.uniqueId}`, {\n      listing\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (_.has(employerData, \"currentCompanyAddress\")) {\n        axios.get(`https://api.tomtom.com/search/2/geocode/${encodeURIComponent(employerData.currentCompanyAddress.addressPostalCode)}.json?key=${process.env.REACT_APP_TOMTOM_API_KEY}&countrySet=US`).then(res => {\n          if (res.data) {\n            console.log(\"res.data\", res.data);\n            const {\n              results\n            } = res.data;\n\n            for (let index = 0; index < results.length; index++) {\n              const el = results[index];\n\n              if (el.type === \"Geography\") {\n                setLocation(el);\n                setReady(true);\n                break;\n              }\n            }\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        setReady(true);\n      }\n    }, 575);\n  }, []);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, {\n      params: {\n        id: employerData.uniqueId\n      }\n    }).then(res => {\n      if (res.data.message === \"Gathered related listings to choose from!\") {\n        console.log(res.data);\n        const {\n          listings\n        } = res.data;\n        setListingsData(listings);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"3 xl-40 box-col-4\",\n    lg: \"12\",\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"default-according style-1 faq-accordion job-accordion\",\n    id: \"accordionoc4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LeftBar, {\n    activeHearts: activeHearts,\n    employerData: employerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: \"6 xl-60 box-col-8\",\n    lg: \"12\",\n    md: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-card-employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-users-social\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }, renderProfilePicVideoSmallRounded(_.has(employerData, \"profilePicsVideos\") && typeof employerData.profilePicsVideos !== \"undefined\" && employerData.profilePicsVideos.length > 0 ? employerData.profilePicsVideos[employerData.profilePicsVideos.length - 1] : null), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0 f-w-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 49\n    }\n  }, \"Employer Approx. Location\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 49\n    }\n  }, `${employerData.firstName} ${employerData.lastName}`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"map-header-employer-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }, \"Employer \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 94\n    }\n  }, \"GENERAL\"), \" location (NOT the employer's actual location - ONLY APPROX.)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"leader-employer-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, \"This is the employer's approx. location so you can 'ballpark' which contracted gigs are appropriate VS which jobs arent \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 200\n    }\n  }, \"IF\"), \" you're looking for a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 241\n    }\n  }, \"physical hack contract\"), \" - this will generally just show the relevant city based on a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 342\n    }\n  }, \"zip-code lookup\"), \".\"), location !== null ? /*#__PURE__*/React.createElement(Map, {\n    center: [location.position.lon, location.position.lat],\n    zoom: [10],\n    style: \"mapbox://styles/mapbox/streets-v9\",\n    containerStyle: {\n      height: \"275px\",\n      width: '100%',\n      border: \"2px solid grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 62\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    coordinates: [location.position.lon, location.position.lat],\n    anchor: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../assets/icons/location.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 49\n    }\n  }))) : ready === true ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../assets/images/no-loc.png\"),\n    className: \"no-loc-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 67\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 164\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 53\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, i) => {\n    console.log(\"listing\", listing);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      className: `${false ? 'shadow-card-employer' : 'ribbon-vertical-left-wrapper shadow-card-employer'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"job-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      id: \"custom-cardbody-listing-map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-40 img-fluid m-r-20\",\n      src: require(`../../../../../../assets/images/user/6.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"f-w-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"heavy-blue\",\n      to: `${process.env.PUBLIC_URL}/app/jobSearch/job-detail`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 61\n      }\n    }, listing.publicCompanyName), listing.applicants.includes(userData.uniqueId) ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 65\n      }\n    }, \"Already Applied!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon ribbon-bookmark ribbon-vertical-left ribbon-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-love\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 57\n      }\n    }, \"XP Reward: \", /*#__PURE__*/React.createElement(\"em\", {\n      className: \"heavy-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 71\n      }\n    }, listing.experienceAndCost.experience), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 142\n      }\n    }, \"~\"), \" \", /*#__PURE__*/React.createElement(\"em\", {\n      className: \"heavy-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 161\n      }\n    }, listing.tokensRequiredToApply.value), \" tokens required to apply...\"))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 49\n      }\n    }, \"Preferred applicant rank: \", /*#__PURE__*/React.createElement(\"em\", {\n      className: \"heavy-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 107\n      }\n    }, listing.requiredRankToApply.label)), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"-15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }\n    }, \"Posted on: \", /*#__PURE__*/React.createElement(\"em\", {\n      className: \"heavy-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 94\n      }\n    }, moment(listing.systemDate).fromNow())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacing-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 49\n      }\n    }, typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, indexxxx) => {\n      return /*#__PURE__*/React.createElement(Badge, {\n        key: indexxxx,\n        color: \"info\",\n        pill: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 64\n        }\n      }, tag.text);\n    }) : null), /*#__PURE__*/React.createElement(ReactMarkdown, {\n      className: \"custom-markdown-container\",\n      children: listing.listingDescription,\n      remarkPlugins: [remarkGfm],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-redirect-listing-container-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        handleRedirectIndividualPage(listing);\n      },\n      style: {\n        width: \"100%\"\n      },\n      className: \"btn-pill btn-air-info\",\n      outline: true,\n      color: \"info-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }, \"Visit/View Listing\")))));\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../assets/images/no-listings-availiable.png\"),\n    className: \"no-listings-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    xl: \"3 xl-100 box-col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"default-according style-1 faq-accordion job-accordion\",\n    id: \"accordionoc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RightBar, {\n    employerData: employerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(TimelineTabEmployerProfileHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/timelineTab.js"],"names":["React","Fragment","useEffect","useState","Row","Col","Card","CardBody","Button","Media","Badge","ReactMapboxGl","Marker","LeftBar","RightBar","axios","Skeleton","SkeletonTheme","helpers","_","Link","useHistory","ReactMarkdown","remarkGfm","connect","moment","renderProfilePicVideoSmallRounded","Map","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","interactive","TimelineTabEmployerProfileHelper","employerData","activeHearts","userData","location","setLocation","ready","setReady","listings","setListingsData","history","handleRedirectIndividualPage","listing","console","log","push","uniqueId","setTimeout","has","get","encodeURIComponent","currentCompanyAddress","addressPostalCode","REACT_APP_TOMTOM_API_KEY","then","res","data","results","index","length","el","type","catch","err","REACT_APP_BASE_URL","params","id","message","profilePicsVideos","firstName","lastName","position","lon","lat","height","width","border","require","map","i","PUBLIC_URL","publicCompanyName","applicants","includes","experienceAndCost","experience","tokensRequiredToApply","value","marginTop","requiredRankToApply","label","systemDate","fromNow","hashtags","tag","indexxxx","text","listingDescription","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Row, Col, Card, CardBody, Button, Media, Badge } from 'reactstrap';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport LeftBar from './leftBar';\nimport RightBar from './rightBar';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport helpers from \"./miscFunctions/helperFunctions.js\";\nimport _ from \"lodash\";\nimport { Link, useHistory }  from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\n\nconst { renderProfilePicVideoSmallRounded } = helpers;\n\nconst Map = ReactMapboxGl({\n    accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    interactive: false\n});\n   \n\nconst TimelineTabEmployerProfileHelper = ({ employerData, activeHearts, userData }) => {\n\n    const [ location, setLocation ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ listings, setListingsData ] = useState([]);\n\n    const history = useHistory();\n\n    const handleRedirectIndividualPage = (listing) => {\n        console.log(\"listing passed: \", listing);\n\n        history.push(`/view/individual/employer/listing/public/${listing.uniqueId}`, { listing });\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (_.has(employerData, \"currentCompanyAddress\")) {\n                axios.get(`https://api.tomtom.com/search/2/geocode/${encodeURIComponent(employerData.currentCompanyAddress.addressPostalCode)}.json?key=${process.env.REACT_APP_TOMTOM_API_KEY}&countrySet=US`).then((res) => {\n                    if (res.data) {\n                        console.log(\"res.data\", res.data);\n                        \n                        const { results } = res.data;\n\n                        for (let index = 0; index < results.length; index++) {\n                            const el = results[index];\n                            \n                            if (el.type === \"Geography\") {\n                                setLocation(el);\n                                setReady(true);\n                                break;\n                            }\n                        }\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                })\n            } else {\n                setReady(true);\n            }\n        }, 575)\n    }, []);\n\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, {\n            params: {\n                id: employerData.uniqueId\n            }\n        }).then((res) => {\n            if (res.data.message === \"Gathered related listings to choose from!\") {\n                console.log(res.data);\n\n                const { listings } = res.data;\n\n                setListingsData(listings);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    return (\n        <Fragment>\n            <Row>\n                <Col xl=\"3 xl-40 box-col-4\" lg=\"12\" md=\"5\">\n                    <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc4\">\n                        <Row>\n                            <LeftBar activeHearts={activeHearts} employerData={employerData} />\n                        </Row>\n                    </div>\n                </Col>\n                <Col xl=\"6 xl-60 box-col-8\" lg=\"12\" md=\"7\">\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card className='shadow-card-employer'>\n                                <CardBody>\n                                    <div className=\"new-users-social\">\n                                        <Media>\n                                            {renderProfilePicVideoSmallRounded(_.has(employerData, \"profilePicsVideos\") && typeof employerData.profilePicsVideos !== \"undefined\" && employerData.profilePicsVideos.length > 0 ? employerData.profilePicsVideos[employerData.profilePicsVideos.length - 1] : null)}\n                                            <Media body>\n                                                <h6 className=\"mb-0 f-w-700\">Employer Approx. Location</h6>\n                                                <p>{`${employerData.firstName} ${employerData.lastName}`}</p>\n                                            </Media>\n                                        </Media>\n                                    </div>\n                                    <div className='map-content-wrapper'>\n                                        <h4 className='map-header-employer-profile'>Employer <strong>GENERAL</strong> location (NOT the employer's actual location - ONLY APPROX.)</h4>\n                                        <p className='leader-employer-profile'>This is the employer's approx. location so you can 'ballpark' which contracted gigs are appropriate VS which jobs arent <strong>IF</strong> you're looking for a <strong>physical hack contract</strong> - this will generally just show the relevant city based on a <strong>zip-code lookup</strong>.</p>\n                                        {location !== null ? <Map\n                                            center={[location.position.lon, location.position.lat]}\n                                            zoom={[10]}\n                                            style=\"mapbox://styles/mapbox/streets-v9\"\n                                            containerStyle={{\n                                                height: \"275px\",\n                                                width: '100%',\n                                                border: \"2px solid grey\"\n                                            }}\n                                        >\n                                            <Marker\n                                                coordinates={[location.position.lon, location.position.lat]}\n                                                anchor=\"bottom\"\n                                            >\n                                                <img src={require(\"../../../../../../assets/icons/location.png\")}/>\n                                            </Marker>\n                                        </Map> : ready === true ? <img src={require(\"../../../../../../assets/images/no-loc.png\")} className={\"no-loc-image\"} /> : <Fragment>\n                                            <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                                <p>\n                                                    <Skeleton count={35} />\n                                                </p>\n                                            </SkeletonTheme>\n                                        </Fragment>}\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\">\n                            {typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, i) => {\n                                console.log(\"listing\", listing);\n                                return (\n                                    <Card key={i} className={`${false ? 'shadow-card-employer' : 'ribbon-vertical-left-wrapper shadow-card-employer'}`}>\n                                        <div className=\"job-search\">\n                                            <CardBody id=\"custom-cardbody-listing-map\">\n                                                <Media>\n                                                    <img className=\"img-40 img-fluid m-r-20\" src={require(`../../../../../../assets/images/user/6.jpg`)} alt=\"\" />\n                                                    <Media body>\n                                                        <h6 className=\"f-w-600\">\n                                                            <Link className=\"heavy-blue\" to={`${process.env.PUBLIC_URL}/app/jobSearch/job-detail`}> \n                                                                {listing.publicCompanyName}\n                                                            </Link>\n                                                            {(listing.applicants.includes(userData.uniqueId) ?\n                                                                <span className=\"badge badge-primary pull-right\">\n                                                                    {\"Already Applied!\"}\n                                                                </span>\n                                                                : <div className=\"ribbon ribbon-bookmark ribbon-vertical-left ribbon-secondary\">\n                                                                    <i className=\"icofont icofont-love\"></i>\n                                                                </div>\n                                                            )}\n                                                        </h6>\n                                                        <p>XP Reward: <em className=\"heavy-blue\">{listing.experienceAndCost.experience}</em> <strong>~</strong> <em className=\"heavy-blue\">{listing.tokensRequiredToApply.value}</em> tokens required to apply...</p>\n                                                    </Media>\n                                                </Media>\n                                                <p style={{ marginTop: \"0px\" }}>Preferred applicant rank: <em className=\"heavy-blue\">{listing.requiredRankToApply.label}</em></p>\n                                                <p style={{ marginTop: \"-15px\" }}>Posted on: <em className=\"heavy-blue\">{moment(listing.systemDate).fromNow()}</em></p>\n                                                <div className=\"spacing-bottom\">\n                                                    {typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, indexxxx) => {\n                                                        return <Badge key={indexxxx} color=\"info\" pill>{tag.text}</Badge>;\n                                                    }) : null}\n                                                </div>\n                                                <ReactMarkdown className=\"custom-markdown-container\" children={listing.listingDescription} remarkPlugins={[remarkGfm]} />\n                                                <div className=\"btn-redirect-listing-container-wrapper\">\n                                                    <Button onClick={() => {\n                                                        handleRedirectIndividualPage(listing);\n                                                    }} style={{ width: \"100%\" }} className=\"btn-pill btn-air-info\" outline color=\"info-2x\">Visit/View Listing</Button>\n                                                </div>\n                                            </CardBody>\n                                        </div>\n                                    </Card>\n                                )\n                            }) : <Fragment>\n                                <Card>\n                                    <CardBody>\n                                        <img src={require(\"../../../../../../assets/images/no-listings-availiable.png\")} className={\"no-listings-availiable\"} />\n                                    </CardBody>\n                                </Card>\n                            </Fragment>}\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xl=\"3 xl-100 box-col-12\">\n                        <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc1\">\n                            <Row>\n                                <RightBar employerData={employerData} />\n                            </Row>\n                        </div>\n                    </Col>\n            </Row>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {})(TimelineTabEmployerProfileHelper);"]},"metadata":{},"sourceType":"module"}