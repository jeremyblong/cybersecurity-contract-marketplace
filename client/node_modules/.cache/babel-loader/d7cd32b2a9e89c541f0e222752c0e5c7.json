{"ast":null,"code":"import React,{Fragment,useState,useEffect,useMemo}from\"react\";import axios from\"axios\";import{connect}from\"react-redux\";import{CardBody,CardHeader,Card,Col,Container,Label,Row,Button,Form,InputGroupAddon,Input,InputGroup,FormGroup,InputGroupText}from\"reactstrap\";import\"./styles.css\";import Select from\"react-dropdown-select\";import SimpleMDE from\"react-simplemde-editor\";import{useForm,Controller}from'react-hook-form';import formHelpers from\"./helpers/reduxFormHelpers/helperReduxForm.js\";import helpers from\"./helpers/helperLogic.js\";import Sheet from'react-modal-sheet';import LoadingBar from'react-top-loading-bar';import{NotificationManager}from\"react-notifications\";import{useHistory}from\"react-router-dom\";const{CreateACommunityForumRelatedHelper,PaneSheetOpenTwoHelper}=helpers;const mainDescriptionChecker=formHelpers().mainDescriptionChecker;const postTitleChecker=formHelpers().postTitleChecker;const communityChecks=formHelpers().communityChecks;const CreateNewForumPostingHelper=_ref=>{let{userData}=_ref;const[selectedGroup,setSelectedGroup]=useState(null);const[paneSheetOpen,openPaneSheet]=useState(false);const[progress,setProgress]=useState(0);const[options,setOptions]=useState([]);const[paneTwoOpen,openPaneTwoSheet]=useState(false);const history=useHistory();const{register,handleSubmit,control,reset,getValues,setValue,setError,clearErrors,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});useEffect(()=>{const config={params:{signedinID:userData.uniqueId}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/related/user/groups/communities\"),config).then(res=>{if(res.data.message===\"Successfully fetched the desired communities!\"){console.log(res.data);const{communities}=res.data;setOptions(communities);}else{console.log(\"Err\",res.data);}}).catch(err=>{console.log(\"Err critical\",err);});},[]);// get form-redux values\nconst currentValues=getValues();console.log(\"errors\",errors);console.log(\"selectedGroup\",selectedGroup);const customDropdownRenderer=onChange=>{return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"search-and-toggle\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"h6-forum-option-header\"},\"Your Communities\")),/*#__PURE__*/React.createElement(\"div\",{className:\"items-items\"},selectedGroup===null?options.map((option,index)=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"options-mapped-div\",key:index,onClick:()=>{console.log(\"clicked.\");onChange(option,setValue,clearErrors);setSelectedGroup(option);}},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(option.communityMainPic.link),className:\"community-icon-forum\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"option-list-item-wrapper-forum\"},/*#__PURE__*/React.createElement(\"h5\",null,option.communityName),/*#__PURE__*/React.createElement(\"p\",{className:\"membercount-forum-option\"},option.members.length,\" Member's\")));}):null,selectedGroup!==null?/*#__PURE__*/React.createElement(\"h4\",{className:\"selected-forum-option\"},\"You've Selected The \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},selectedGroup.communityName),\" community, \",/*#__PURE__*/React.createElement(\"a\",{onClick:()=>setSelectedGroup(null),href:null},/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#7366ff\"}},\"Click here\"),\" to re-select another/different community\")):null));};const renderFormError=(e,errors)=>{console.log(\"errrror form logic...:\",e,errors);};const handleForumSubmission=data=>{console.log(\"Success!\",data);const{communityName,mainDescription,title}=data;const config={signedinID:userData.uniqueId,communityName,mainDescription,title};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/post/new/forum/post/to/community\"),config).then(res=>{if(res.data.message===\"Successfully posted to the desired community!\"){console.log(res.data);const{updatedCommunity}=res.data;setTimeout(()=>{history.push(\"/forum/main/homepage\");},4500);NotificationManager.success(\"Successfully posted your forum posting to the desired community & your listing/post is now LIVE!\",\"Successfully posted your NEW forum post!\",4750);}else{console.log(\"Err\",res.data);NotificationManager.error(\"An error occurred while attempting to post your forum posting to the desired community, please try again or contact support if the problem persists!\",\"Error attempting to post forum posting!\",4750);}}).catch(err=>{console.log(\"Err critical\",err);NotificationManager.error(\"An error occurred while attempting to post your forum posting to the desired community, please try again or contact support if the problem persists!\",\"Error attempting to post forum posting!\",4750);});};const autofocusNoSpellcheckerOptions=useMemo(()=>{return{autofocus:false,spellChecker:false};},[]);const handleGroupCommunitySelection=community=>{setValue(\"communityName\",community,{shouldValidate:true});clearErrors([\"communityName\"]);setSelectedGroup(community);openPaneTwoSheet(false);};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(LoadingBar,{onLoaderFinished:()=>setProgress(0),progress:progress,color:\"#51bb25\",containerClassName:\"loader-container-classname-forum\",height:9}),/*#__PURE__*/React.createElement(Sheet,{draggable:false,isOpen:paneSheetOpen,onClose:()=>openPaneSheet(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{style:{margin:\"12.5px\"},className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>openPaneSheet(false),className:\"btn-square-danger\",outline:true,color:\"danger-2x\",style:{width:\"100%\"}},\"Exit/Close This Pane\"))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(CreateACommunityForumRelatedHelper,{setOptions:setOptions,setProgress:setProgress,openPaneSheet:openPaneSheet,userData:userData}))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)),/*#__PURE__*/React.createElement(Sheet,{draggable:false,isOpen:paneTwoOpen,onClose:()=>openPaneTwoSheet(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{style:{margin:\"12.5px\"},className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>openPaneTwoSheet(false),className:\"btn-square-danger\",outline:true,color:\"danger-2x\",style:{width:\"100%\"}},\"Exit/Close This Pane\"))),/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(PaneSheetOpenTwoHelper,{handleGroupCommunitySelection:handleGroupCommunitySelection,setOptions:setOptions,setProgress:setProgress,openPaneTwoSheet:openPaneTwoSheet,userData:userData}))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-forum-creation\",style:{marginTop:\"50px\"}},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Create a new forum post (Must be associated with a \",/*#__PURE__*/React.createElement(\"a\",{className:\"create-forum-post-a\",href:null},\"community\"),\")\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-right-create-group-btn\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>openPaneSheet(true),className:\"btn-square-secondary\",color:\"secondary-2x\",style:{width:\"100%\"},outline:true},\"Create a new community (sub-thread)\"))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-right-actually-create-group-btn\"},/*#__PURE__*/React.createElement(Button,{onClick:()=>openPaneTwoSheet(true),className:\"btn-square-info\",color:\"info-2x\",style:{width:\"100%\"},outline:true},\"Select a community (sub-thread) to post to\")))),/*#__PURE__*/React.createElement(Form,{className:\"needs-validation streaming-start-form-wrapper\",noValidate:\"\",onSubmit:handleSubmit(handleForumSubmission,(e,errors)=>renderFormError(e,errors))},/*#__PURE__*/React.createElement(Select,Object.assign({},communityChecks.check(setError,register),{placeholder:\"Search for a related 'community' to post in...\",dropdownRenderer:()=>customDropdownRenderer(communityChecks.onChange),options:options})),errors.communityName?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.communityName.message):null,selectedGroup!==null?/*#__PURE__*/React.createElement(\"h6\",{className:\"selected-forum-option-non-dropdown\"},\"You've selected to post in the \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},selectedGroup.communityName),\" community/group!\"):null,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(FormGroup,{className:\" m-form__group\"},/*#__PURE__*/React.createElement(Label,null,postTitleChecker.label),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,\"Title\")),/*#__PURE__*/React.createElement(Input,Object.assign({},postTitleChecker.check(setError,register),{onChange:e=>postTitleChecker.onChange(e.target.value,setValue),value:currentValues.title,name:\"title\",placeholder:postTitleChecker.placeholder,className:\"form-control\",type:\"text\"}))),errors.title?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.title.message):null),/*#__PURE__*/React.createElement(Label,{className:\"create-forum-label\"},mainDescriptionChecker.label),/*#__PURE__*/React.createElement(SimpleMDE,Object.assign({},mainDescriptionChecker.check(setError,register),{id:\"Ref_container\",onChange:value=>mainDescriptionChecker.onChange(value,setValue),value:currentValues.mainDescription,placeholder:mainDescriptionChecker.placeholder,options:autofocusNoSpellcheckerOptions})),errors.mainDescription?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.mainDescription.message):null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:\"27.5px\"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-info\",color:\"info-2x\",outline:true,style:{width:\"100%\"},type:\"submit\"},\"Submit New Form Post Details\"))))))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(CreateNewForumPostingHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/forums/createNewForumPost/createNewForumPost.js"],"names":["React","Fragment","useState","useEffect","useMemo","axios","connect","CardBody","CardHeader","Card","Col","Container","Label","Row","Button","Form","InputGroupAddon","Input","InputGroup","FormGroup","InputGroupText","Select","SimpleMDE","useForm","Controller","formHelpers","helpers","Sheet","LoadingBar","NotificationManager","useHistory","CreateACommunityForumRelatedHelper","PaneSheetOpenTwoHelper","mainDescriptionChecker","postTitleChecker","communityChecks","CreateNewForumPostingHelper","userData","selectedGroup","setSelectedGroup","paneSheetOpen","openPaneSheet","progress","setProgress","options","setOptions","paneTwoOpen","openPaneTwoSheet","history","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","config","params","signedinID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","communities","catch","err","currentValues","customDropdownRenderer","onChange","map","option","index","REACT_APP_ASSET_LINK","communityMainPic","link","communityName","members","length","color","textDecorationLine","renderFormError","e","handleForumSubmission","mainDescription","title","post","updatedCommunity","setTimeout","push","success","error","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleGroupCommunitySelection","community","shouldValidate","margin","width","marginTop","check","label","target","value","placeholder","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { CardBody, CardHeader, Card, Col, Container, Label, Row, Button, Form, InputGroupAddon, Input, InputGroup, FormGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Select from \"react-dropdown-select\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { useForm, Controller } from 'react-hook-form';\nimport formHelpers from \"./helpers/reduxFormHelpers/helperReduxForm.js\";\nimport helpers from \"./helpers/helperLogic.js\";\nimport Sheet from 'react-modal-sheet';\nimport LoadingBar from 'react-top-loading-bar'\nimport { NotificationManager } from \"react-notifications\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst { CreateACommunityForumRelatedHelper, PaneSheetOpenTwoHelper } = helpers;\n\nconst mainDescriptionChecker = formHelpers().mainDescriptionChecker;\nconst postTitleChecker = formHelpers().postTitleChecker;\nconst communityChecks = formHelpers().communityChecks;\n\nconst CreateNewForumPostingHelper = ({ userData }) => {\n\n    const [ selectedGroup, setSelectedGroup ] = useState(null);\n    const [ paneSheetOpen, openPaneSheet ] = useState(false);\n    const [ progress, setProgress ] = useState(0);\n    const [ options, setOptions ] = useState([]);\n    const [ paneTwoOpen, openPaneTwoSheet ] = useState(false);\n\n    const history = useHistory();\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    useEffect(() => {\n        const config = {\n            params: {\n                signedinID: userData.uniqueId\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/related/user/groups/communities`, config).then((res) => {\n            if (res.data.message === \"Successfully fetched the desired communities!\") {\n                console.log(res.data);\n\n                const { communities } = res.data;\n\n                setOptions(communities);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Err critical\", err);\n        })\n    }, [])\n\n    // get form-redux values\n    const currentValues = getValues();\n\n    console.log(\"errors\", errors);\n\n    console.log(\"selectedGroup\", selectedGroup);\n\n    const customDropdownRenderer = (onChange) => {\n        return (\n          <div>\n            <div className=\"search-and-toggle\">\n              <h6 className=\"h6-forum-option-header\">Your Communities</h6>\n            </div>\n            <div className=\"items-items\">\n                {selectedGroup === null ? options.map((option, index) => {\n                    return (\n                        <div\n                            className={\"options-mapped-div\"}\n                            key={index}\n                            onClick={() => {\n                                console.log(\"clicked.\");\n\n                                onChange(option, setValue, clearErrors);\n\n                                setSelectedGroup(option);\n                            }}>\n                            <img src={`${process.env.REACT_APP_ASSET_LINK}/${option.communityMainPic.link}`} className={\"community-icon-forum\"} />\n                            <div className=\"option-list-item-wrapper-forum\">\n                                <h5>{option.communityName}</h5>\n                                <p className=\"membercount-forum-option\">{option.members.length} Member's</p>\n                            </div>\n                        </div>\n                    );\n                }) : null}\n                {selectedGroup !== null ? <h4 className=\"selected-forum-option\">You've Selected The <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{selectedGroup.communityName}</strong> community, <a onClick={() => setSelectedGroup(null)} href={null}><strong style={{ color: \"#7366ff\" }}>Click here</strong> to re-select another/different community</a></h4> : null}\n            </div>\n          </div>\n        );\n    };\n    const renderFormError = (e, errors) => {\n        console.log(\"errrror form logic...:\", e, errors);\n    }\n    const handleForumSubmission = (data) => {\n        console.log(\"Success!\", data);\n\n        const { communityName, mainDescription, title } = data;\n\n        const config = {\n            signedinID: userData.uniqueId,\n            communityName, \n            mainDescription, \n            title\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/post/new/forum/post/to/community`, config).then((res) => {\n            if (res.data.message === \"Successfully posted to the desired community!\") {\n                console.log(res.data);\n\n                const { updatedCommunity } = res.data;\n\n                setTimeout(() => {\n                    history.push(\"/forum/main/homepage\");\n                }, 4500);\n\n                NotificationManager.success(\"Successfully posted your forum posting to the desired community & your listing/post is now LIVE!\", \"Successfully posted your NEW forum post!\", 4750);\n\n            } else {\n                console.log(\"Err\", res.data);\n\n                NotificationManager.error(\"An error occurred while attempting to post your forum posting to the desired community, please try again or contact support if the problem persists!\", \"Error attempting to post forum posting!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(\"Err critical\", err);\n\n            NotificationManager.error(\"An error occurred while attempting to post your forum posting to the desired community, please try again or contact support if the problem persists!\", \"Error attempting to post forum posting!\", 4750);\n        })\n    }\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        }\n    }, []);\n\n    const handleGroupCommunitySelection = (community) => {\n        setValue(\"communityName\", community, { shouldValidate: true });\n        clearErrors([\"communityName\"])\n\n        setSelectedGroup(community);\n\n        openPaneTwoSheet(false);\n    }\n    return (\n        <Fragment>\n            <LoadingBar onLoaderFinished={() => setProgress(0)} progress={progress} color={\"#51bb25\"} containerClassName={\"loader-container-classname-forum\"} height={9} />\n            <Sheet draggable={false} isOpen={paneSheetOpen} onClose={() => openPaneSheet(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => openPaneSheet(false)} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <CreateACommunityForumRelatedHelper setOptions={setOptions} setProgress={setProgress} openPaneSheet={openPaneSheet} userData={userData} />\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n            <Sheet draggable={false} isOpen={paneTwoOpen} onClose={() => openPaneTwoSheet(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => openPaneTwoSheet(false)} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <PaneSheetOpenTwoHelper handleGroupCommunitySelection={handleGroupCommunitySelection} setOptions={setOptions} setProgress={setProgress} openPaneTwoSheet={openPaneTwoSheet} userData={userData} />\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className=\"card-forum-creation\" style={{ marginTop: \"50px\" }}>\n                            <CardHeader className=\"b-l-info b-r-info\">\n                                <h3>Create a new forum post (Must be associated with a <a className=\"create-forum-post-a\" href={null}>community</a>)</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"position-right-create-group-btn\">\n                                            <Button onClick={() => openPaneSheet(true)} className={\"btn-square-secondary\"} color={\"secondary-2x\"} style={{ width: \"100%\" }} outline>Create a new community (sub-thread)</Button>\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"position-right-actually-create-group-btn\">\n                                            <Button onClick={() => openPaneTwoSheet(true)} className={\"btn-square-info\"} color={\"info-2x\"} style={{ width: \"100%\" }} outline>Select a community (sub-thread) to post to</Button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Form className=\"needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(handleForumSubmission, (e, errors) => renderFormError(e, errors))}>\n                                    <Select {...communityChecks.check(setError, register)} placeholder={\"Search for a related 'community' to post in...\"} dropdownRenderer={() => customDropdownRenderer(communityChecks.onChange)} options={options} />\n                                    {errors.communityName ? <span className=\"span-tooltip\">{errors.communityName.message}</span> : null}\n                                    {selectedGroup !== null ? <h6 className=\"selected-forum-option-non-dropdown\">You've selected to post in the <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{selectedGroup.communityName}</strong> community/group!</h6> : null}\n                                    <hr />\n                                    <FormGroup className=\" m-form__group\">\n                                        <Label>{postTitleChecker.label}</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Title\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...postTitleChecker.check(setError, register)}  onChange={(e) => postTitleChecker.onChange(e.target.value, setValue)} value={currentValues.title} name={\"title\"} placeholder={postTitleChecker.placeholder} className=\"form-control\" type=\"text\" />\n                                        </InputGroup>\n                                        {errors.title ? <span className=\"span-tooltip\">{errors.title.message}</span> : null}\n                                    </FormGroup>\n                                    <Label className=\"create-forum-label\">{mainDescriptionChecker.label}</Label>\n                                    <SimpleMDE\n                                        {...mainDescriptionChecker.check(setError, register)} \n                                        id=\"Ref_container\"\n                                        onChange={(value) => mainDescriptionChecker.onChange(value, setValue)}\n                                        value={currentValues.mainDescription}\n                                        placeholder={mainDescriptionChecker.placeholder} \n                                        options={autofocusNoSpellcheckerOptions}\n                                    />\n                                    {errors.mainDescription ? <span className=\"span-tooltip\">{errors.mainDescription.message}</span> : null}\n                                    <Row style={{ marginTop: \"27.5px\" }}>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Button className={\"btn-square-info\"} color={\"info-2x\"} outline style={{ width: \"100%\" }} type={\"submit\"}>Submit New Form Post Details</Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CreateNewForumPostingHelper); "]},"metadata":{},"sourceType":"module"}