{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageOne/pageOneMain.js\";\nimport React, { useState, Fragment } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Col, Button, Form, Label, Input, FormGroup, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { FirstName, LastName, Username, State, City, Zip, SubmitForm } from '../../../../../../../constant';\nimport \"./styles.css\";\n\nconst PageOneMainHelper = props => {\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [validateClass, setValidateClass] = useState(false);\n  const [data, setData] = useState({});\n\n  const onSubmit = (e, data) => {\n    e.preventDefault();\n\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value\n    });\n  };\n\n  console.log(\"data\", data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Listing Title (Be As Specific As Possible)\"), /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: handleInputChange,\n    className: \"form-control\",\n    name: \"listingTitle\",\n    type: \"text\",\n    placeholder: \"Listing title\"\n  }, register(\"listingTitle\", {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, errors.listingTitle && 'Listing title is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, LastName), /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: handleInputChange,\n    className: \"form-control\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, errors.lastName && 'Last name is required'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, City), /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: handleInputChange,\n    className: \"form-control\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, errors.city && 'Please provide a valid city'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, State), /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: handleInputChange,\n    className: \"form-control\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, errors.state && 'Please provide a valid state.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(Col, {\n    md: \"3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, Zip), /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: handleInputChange,\n    className: \"form-control\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\"\n  }, register(\"testing\", {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, errors.zip && 'Please provide a valid zip.'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    className: \"form-check-input\",\n    id: \"invalidCheck3\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Agree to terms and conditions\")))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => setValidateClass(!validateClass),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, SubmitForm)));\n};\n\nexport default PageOneMainHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageOne/pageOneMain.js"],"names":["React","useState","Fragment","useForm","Col","Button","Form","Label","Input","FormGroup","InputGroup","InputGroupAddon","InputGroupText","FirstName","LastName","Username","State","City","Zip","SubmitForm","PageOneMainHelper","props","register","handleSubmit","formState","errors","validateClass","setValidateClass","data","setData","onSubmit","e","preventDefault","alert","showMessages","handleInputChange","name","value","target","console","log","required","listingTitle","lastName","city","state","zip"],"mappings":"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","sourcesContent":["import React ,{useState, Fragment} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {Col,Button,Form,Label,Input,FormGroup,InputGroup,InputGroupAddon,InputGroupText} from 'reactstrap';\nimport {FirstName,LastName,Username,State,City,Zip,SubmitForm} from '../../../../../../../constant';\nimport \"./styles.css\";\n\nconst PageOneMainHelper = (props) => {\n\n    const { register, handleSubmit, formState: { errors }} = useForm();\n    const [validateClass , setValidateClass] = useState(false);\n    const [ data, setData ] = useState({});\n\n\n    const onSubmit = (e, data) => {\n\n        e.preventDefault();\n\n        if (data !== '') {\n            alert('You submitted the form and stuff!');\n        } else {\n            errors.showMessages();\n        }\n    };\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setData({...data,\n            [name]: value\n        })\n    };\n    console.log(\"data\", data);\n    return (\n        <div>\n            <Form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-row\">\n                <Col md=\"6 mb-3\">\n                    <Label>Listing Title (Be As Specific As Possible)</Label>\n                    <Input onChange={handleInputChange} className=\"form-control\" name=\"listingTitle\" type=\"text\" placeholder=\"Listing title\" {...register((\"listingTitle\"), { required: true })} />\n                    <span>{errors.listingTitle && 'Listing title is required'}</span>\n                    <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                </Col>\n                <Col md=\"6 mb-3\">\n                    <Label>{LastName}</Label>\n                    <Input onChange={handleInputChange} className=\"form-control\"  name=\"lastName\" type=\"text\" placeholder=\"Last name\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.lastName && 'Last name is required'}</span>\n                    <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                </Col>\n                {/* <Col md=\"4 mb-3\">\n                    <Label>{Username}</Label>\n                    <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText >{\"@\"}</InputGroupText>\n                        </InputGroupAddon>\n                    <Input className=\"form-control\"  name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.lastName && 'User name is required'}</span>\n                    <div className=\"invalid-feedback\">{\"Please choose a username.\"}</div>\n                    </InputGroup>\n                </Col> */}\n                </div>\n                <div className=\"form-row\">\n                <Col md=\"6 mb-3\">\n                    <Label>{City}</Label>\n                    <Input onChange={handleInputChange} className=\"form-control\"  name=\"city\" type=\"text\" placeholder=\"City\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.city && 'Please provide a valid city'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid city.\"}</div>\n                </Col>\n                <Col md=\"3 mb-3\">\n                    <Label>{State}</Label>\n                    <Input onChange={handleInputChange} className=\"form-control\"  name=\"state\" type=\"text\" placeholder=\"State\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.state && 'Please provide a valid state.'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid state.\"}</div>\n                </Col>\n                <Col md=\"3 mb-3\">\n                    <Label>{Zip}</Label>\n                    <Input onChange={handleInputChange} className=\"form-control\"  name=\"zip\" type=\"text\" placeholder=\"Zip\" {...register((\"testing\"), { required: true })} />\n                    <span>{errors.zip && 'Please provide a valid zip.'}</span>\n                    <div className=\"invalid-feedback\">{\"Please provide a valid zip.\"}</div>\n                </Col>\n                </div>\n                <FormGroup>\n                <div className=\"form-check\">\n                    <div className=\"checkbox p-0\">\n                    <Input onChange={handleInputChange} className=\"form-check-input\" id=\"invalidCheck3\" type=\"checkbox\" />\n                    <Label className=\"form-check-label\" htmlFor=\"invalidCheck3\">{\"Agree to terms and conditions\"}</Label>\n                    </div>\n                </div>\n                </FormGroup>\n                <Button color=\"primary\"  type=\"submit\" onClick={() => setValidateClass(!validateClass)}>{SubmitForm}</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default PageOneMainHelper;\n"]},"metadata":{},"sourceType":"module"}