{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/pageThreeMain.js\";\nimport React, { useState, useRef, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport helpers from \"./helpers/mainFunctions.js\";\nimport { Col, Button, Form, Label, Input, NavItem, NavLink, TabContent, TabPane, Nav, Card, CardHeader, CardBody, Media, Badge, Row, Popover, PopoverBody, PopoverHeader, Container, ListGroupItem, ListGroup } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from 'axios';\nimport LoadingBar from 'react-top-loading-bar';\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13]\n};\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst PageThreeHelper = _ref => {\n  let {\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData,\n    userData\n  } = _ref;\n  // create redirect ability\n  const history = useHistory(); // create Refs...\n\n  const listingTimespanGeneratedRef = useRef(null);\n  const dropzoneVideoDemoRef = useRef(null);\n  const dropzoneScreenshotsRef = useRef(null);\n  const dropzoneRef = useRef(null);\n  const mounted = useRef(); // state creation...\n\n  const [selectors, setSelectorsState] = useState(null);\n  const [validateClass, setValidateClass] = useState(false);\n  const [reviewerPopoverStatus, setPopoverReviewerStatus] = useState(false);\n  const [tags, setTagsState] = useState([]);\n  const [suggestions, setSuggestionsState] = useState(helpers.suggestionsPreselected);\n  const [activeTab, setActiveTab] = useState('1');\n  const [activeTabUploadState, setActiveTabUploads] = useState('1');\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [thumbnailImage, setThumbnailImageState] = useState(null);\n  const [videoDemoFile, setVideoFileDemoState] = useState(null);\n  const [screenshotUploadImages, setScreenshotUploadStatus] = useState([]);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }); // get form-redux values\n\n  const gatheredValues = getValues(); // imported helpers from mainFunctions.js file (deconstructed)\n\n  const {\n    handleDrag,\n    handleDelete,\n    renderPreviewOfFile,\n    imageChangeAndConversion,\n    renderThumbnailImage,\n    renderVideoDemoPreview,\n    RenderGallerySlideshowUploadedScreenshots,\n    RenderOptionsRadioSelectsAuctionType\n  } = helpers; // react state initialization goes here...\n\n  const [data, setData] = useState({\n    demoURL: \"\"\n  }); // const [validateClass , setValidateClass] = useState(false);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    clearErrors(name);\n    setData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n    return value;\n  };\n\n  const onSubmit = (data, e) => {\n    // prevent reload\n    e.preventDefault();\n\n    if (typeof gatheredValues.hashtags !== \"undefined\" && gatheredValues.hashtags.length >= 5) {\n      console.log(\"hashtags have been completed...\"); // run final logic\n\n      if (data !== '') {\n        // everything is properly filled out\n        console.log(\"success! :) - : \", data);\n      } else {\n        errors.showMessages();\n      }\n    } else {\n      setError(\"hashtags\", {\n        type: \"manual\",\n        message: \"You MUST enter a MINIMUM of 5 (five) hashtags\"\n      });\n    }\n  };\n\n  const onError = (errors, e) => {\n    console.log(\"error submitting...!\", errors);\n  };\n\n  const listingTimelineSelectClose = data => {\n    const timespan = gatheredValues.listingTimespan;\n\n    if (typeof timespan !== \"undefined\" && Object.keys(timespan).length > 0) {\n      clearErrors(\"listingTimespan\");\n    }\n\n    ;\n  };\n\n  console.log(\"getValues(listingTimespan)\", getValues());\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(imageChangeAndConversion(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleFileUploadAnyType = (onSubmit, uploadType) => {\n    // upload file to aws S3\n    const data = new FormData();\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", fileMetaData);\n    const config = {\n      onUploadProgress: progressEvent => {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(percentCompleted);\n      },\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n      if (res.data.message === \"Successfully uploaded file!\") {\n        console.log(res.data);\n        const {\n          file\n        } = res.data;\n\n        switch (uploadType) {\n          case \"previewDisplayImage\":\n            setThumbnailImageState(file);\n            break;\n\n          case \"videoDemoPreview\":\n            setVideoFileDemoState(file);\n            break;\n\n          case \"screenshotsUpload\":\n            setScreenshotUploadStatus([...screenshotUploadImages, {\n              original: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n              thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`\n            }]);\n            break;\n\n          default:\n            break;\n        }\n\n        ;\n        NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n        setMetaFileData(null);\n        setFileReadyStatus(false);\n        setCurrentUploadFileStatus(null);\n        onSubmit();\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderCustomButtonDropzone = (data, e, uploadType) => {\n    const {\n      meta\n    } = data.files[0];\n\n    switch (uploadType) {\n      case \"previewImageMainDisplayUpload\":\n        if (currentFileSelectedUpload === null) {\n          return null;\n        } else {\n          if (fileReady === true) {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: e => {\n                e.preventDefault(); // file meta data for next action\n\n                setMetaFileData(meta); // set file status as ready or prepared.\n\n                setFileReadyStatus(false);\n                const runSubmit = data.onSubmit;\n                handleFileUploadAnyType(runSubmit, \"previewDisplayImage\");\n              },\n              className: \"btn-air-secondary\",\n              color: \"secondary\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Preview/Main-display Image!\"));\n          } else {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: () => {\n                NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n              },\n              className: \"btn-air-light\",\n              color: \"light\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Preview/Main-display Image!\"));\n          }\n        }\n\n        break;\n\n      case \"videoDemoUpload\":\n        if (currentFileSelectedUpload === null) {\n          return null;\n        } else {\n          if (fileReady === true) {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: e => {\n                e.preventDefault(); // file meta data for next action\n\n                setMetaFileData(meta); // set file status as ready or prepared.\n\n                setFileReadyStatus(false);\n                const runSubmit = data.onSubmit;\n                handleFileUploadAnyType(runSubmit, \"videoDemoPreview\");\n              },\n              className: \"btn-air-secondary\",\n              color: \"secondary\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Video Preview!\"));\n          } else {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: () => {\n                NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n              },\n              className: \"btn-air-light\",\n              color: \"light\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Video Preview!\"));\n          }\n        }\n\n        break;\n\n      case \"screenshotsUpload\":\n        if (currentFileSelectedUpload === null) {\n          return null;\n        } else {\n          if (fileReady === true) {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: e => {\n                e.preventDefault(); // file meta data for next action\n\n                setMetaFileData(meta); // set file status as ready or prepared.\n\n                setFileReadyStatus(false);\n                const runSubmit = data.onSubmit;\n                handleFileUploadAnyType(runSubmit, \"screenshotsUpload\");\n              },\n              className: \"btn-air-secondary\",\n              color: \"secondary\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Preview/Snapshot Images!\"));\n          } else {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              style: {\n                marginTop: \"25px\"\n              },\n              onClick: () => {\n                NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n              },\n              className: \"btn-air-light\",\n              color: \"light\",\n              size: \"md\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }\n            }, \"Submit & Upload Preview/Snapshot Images!\"));\n          }\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach((file, index) => {\n      file.remove();\n\n      if (allFiles.length - 1 === index) {\n        // setFileReadyStatus(true);\n        setCurrentUploadFileStatus(null);\n      }\n    });\n  };\n\n  const changePageUploadTabs = page => {\n    setChangeOptions(null);\n    setActiveTabUploads(page);\n  };\n\n  useEffect(() => {\n    console.log(\"updated or ran.\");\n    const custom = RenderOptionsRadioSelectsAuctionType();\n\n    if (!mounted.current) {\n      // do componentDidMount logic\n      mounted.current = true;\n      console.log(\"component mounted.\");\n      setSelectorsState(custom);\n    } else {\n      // do componentDidUpdate logic\n      console.log(\"component did update!!\");\n    }\n\n    console.log(\"custom\", custom);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 4.25,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, \"Demo URL (\", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 46\n    }\n  }, \"optional\"), \" - if you want to display working code at an external URL)\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, register(\"demoURL\", {\n    required: false,\n    minLength: {\n      value: 15,\n      message: \"You must enter AT Least 15 characters\"\n    },\n    maxLength: {\n      value: 75,\n      message: \"You may ONLY enter 75 characters or less\"\n    },\n    onBlur: e => {\n      // check if valid url in helper file.\n      return helpers.CalculateWhetherURLIsLegit(e.target.value);\n    }\n  }), {\n    className: \"form-control\",\n    name: \"demoURL\",\n    type: \"text\",\n    placeholder: \"Listing title\",\n    onChange: handleInputChange,\n    value: data.demoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"input-surrounding-col\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, \"Select how long you would like your listing to run for (length of \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 102\n    }\n  }, \"both\"), \" \\\"buy-it-now\\\" & \\\"actions\\\")\"), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"listingTimespan\"\n  }, register(\"listingTimespan\", {\n    required: {\n      value: true,\n      message: \"You must select a value before proceeding\"\n    },\n    onBlur: e => {\n      console.log(\"onBlur...!\", e);\n      const value = e.target.value;\n      setTimeout(() => {\n        // clear error after proper selection\n        if (typeof value !== \"undefined\" && Object.keys(value).length > 0) {\n          clearErrors(\"listingTimespan\");\n        } else {\n          // set error as nothing was selected (blank 'click-off' selection of selector)\n          setError(\"listingTimespan\", {\n            type: \"manual\",\n            message: \"You haven't selected a 'timespan' & a selection is required before proceeding\"\n          });\n        }\n      }, 50);\n    }\n  }), {\n    render: _ref3 => {\n      let {\n        field\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: listingTimespanGeneratedRef,\n        autoBlur: true,\n        defaultValue: null,\n        onMenuClose: listingTimelineSelectClose,\n        value: gatheredValues.listingTimespan,\n        onChange: selectedOption => {\n          // run conditionals\n          if (typeof gatheredValues.listingTimespan === \"undefined\") {\n            setValue('listingTimespan', selectedOption, {\n              shouldValidate: false\n            });\n          } else {\n            clearErrors(\"listingTimespan\");\n          }\n\n          listingTimespanGeneratedRef.current.blur();\n        },\n        options: helpers.listingTimespanOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 29\n    }\n  })), errors.listingTimespan ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 55\n    }\n  }, errors.listingTimespan.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, \"Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 142\n    }\n  }, \"5(MIN) - 15(MAX) Tags\")), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"hashtags\"\n  }, register(\"hashtags\", {\n    required: {\n      value: true,\n      message: \"You MUST enter AT least 5 (five) tags up to a maximum of 15 (fifteen) tags\"\n    }\n  }), {\n    render: _ref4 => {\n      let {\n        field\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(ReactTags, Object.assign({}, field, {\n        tags: gatheredValues.hashtags,\n        name: \"hashtags\",\n        suggestions: suggestions,\n        classNames: {\n          tags: 'hashtagsTagsClass',\n          tagInput: 'hashtagsTagInputClass',\n          tagInputField: 'hashtagsTagInputFieldClass',\n          selected: 'hashtagsSelectedClass',\n          tag: 'hashtagsTagClass badge badge-primary',\n          remove: 'hashtagsRemoveClass',\n          suggestions: 'hashtagsSuggestionsClass',\n          activeSuggestion: 'hashtagsActiveSuggestionClass'\n        },\n        handleDelete: index => {\n          setValue('hashtags', handleDelete(index, gatheredValues.hashtags), {\n            shouldValidate: true\n          });\n        },\n        renderSuggestion: suggestion => {\n          // return list item(s)\n          return /*#__PURE__*/React.createElement(ListGroupItem, {\n            className: \"custom-suggestion-groupitem\",\n            key: suggestion.index,\n            onClick: () => {\n              // run conditional checks\n              if (typeof gatheredValues.hashtags !== \"undefined\") {\n                if (gatheredValues.hashtags.length < 15) {\n                  if (gatheredValues.hashtags.length > 0) {\n                    setValue('hashtags', [...gatheredValues.hashtags, suggestion], {\n                      shouldValidate: true\n                    });\n                  } else {\n                    setValue('hashtags', [suggestion], {\n                      shouldValidate: true\n                    });\n                  }\n                } else {\n                  NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4250);\n                }\n              } else {\n                setValue('hashtags', [suggestion], {\n                  shouldValidate: true\n                });\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 49\n            }\n          }, suggestion.text);\n        },\n        readOnly: false,\n        placeholder: \"Enter a tag (these are how people search & find your listing)\",\n        maxLength: 15,\n        handleAddition: tag => {\n          if (typeof gatheredValues.hashtags !== \"undefined\") {\n            if (gatheredValues.hashtags.length < 15) {\n              if (gatheredValues.hashtags.length > 0) {\n                setValue('hashtags', [...gatheredValues.hashtags, tag], {\n                  shouldValidate: true\n                });\n              } else {\n                setValue('hashtags', [tag], {\n                  shouldValidate: true\n                });\n              }\n            } else {\n              NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4500);\n            }\n          } else {\n            setValue('hashtags', [tag], {\n              shouldValidate: true\n            });\n          }\n        },\n        handleDrag: (tag, currPos, newPos) => {\n          setValue('hashtags', handleDrag(tag, currPos, newPos, gatheredValues.hashtags), {\n            shouldValidate: true\n          });\n        },\n        delimiters: delimiters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }))), errors.hashtags ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 48\n    }\n  }, errors.hashtags.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, \"Looks good!\"))), selectors, /*#__PURE__*/React.createElement(Row, {\n    id: \"upload-row-custom\",\n    style: {\n      marginTop: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-primary outsider-header-card-custom-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"subheader-tabbed-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 37\n    }\n  }, \"Upload/Manage various uploads via this tabbed form\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"tabbed-card custom-tabbed-card-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"nav-pills nav-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTabUploadState === '1' ? 'active' : '',\n    onClick: () => changePageUploadTabs(\"1\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-ui-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 49\n    }\n  }), \"Thumbnail/Display Image\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTabUploadState === '2' ? 'active' : '',\n    onClick: () => changePageUploadTabs(\"2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-man-in-glasses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 49\n    }\n  }), \"Video Demo Preview (Optional)\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTabUploadState === '3' ? 'active' : '',\n    onClick: () => changePageUploadTabs(\"3\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 49\n    }\n  }), \"Screenshots/Demonstration Images\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTabUploadState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card-upload-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 53\n    }\n  }, \"Upload a thumbnail/display image (this will be the first image user's see - on homepage list view for ex.)\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    style: {\n      marginBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 53\n    }\n  }, \"You can preview your \\\"Thumbnail\\\" below after successfully uploading an image that will be displayed via our \\\"listing homepage view\\\" when user's are searching for various software code to purchase (main page - general display area)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => {\n      return renderPreviewOfFile(data, filePathData, fileReady);\n    },\n    maxFiles: 1,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    autoUpload: true,\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 69\n        }\n      }, renderCustomButtonDropzone(data, e, \"previewImageMainDisplayUpload\"));\n    },\n    accept: \"image/*\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 57\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 61\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null))), /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card-upload-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 53\n    }\n  }, \"Upload a video demonstration/demo breifly giving an overview of the functionality of your code/software that is being sold (this is \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 189\n    }\n  }, \"optional\"), \" however it greatly boosts sales & sale liklihood)\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    style: {\n      marginBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 53\n    }\n  }, \"You can preview your \\\"Video Demo\\\" below after successfully uploading an \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 165\n    }\n  }, \"accepted\"), \" video that will be displayed when people visit your listing (after interacting/clicking your listing). This video should accurately depict what is included when purchasing your software/code.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneVideoDemoRef,\n    PreviewComponent: data => {\n      return renderPreviewOfFile(data, filePathData, fileReady);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 69\n        }\n      }, renderCustomButtonDropzone(data, e, \"videoDemoUpload\"));\n    },\n    accept: \"video/*\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 57\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 61\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null))), /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card-upload-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 53\n    }\n  }, \"Upload any \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 68\n    }\n  }, \"accurate\"), \" images/screenshots depicting what will be bought when a user decides to purchase your listing's contents - you may upload up-to 10 supporting screenshots/images describing what is being sold.\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    style: {\n      marginBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 53\n    }\n  }, \"You can preview your \\\"Demonstration/Demo Screenshots\\\" below after successfully uploading an images. These should accurately depict and give user's on \", process.env.REACT_APP_APPLICATION_NAME, \"'s platform a good/exceptional idea of what they will be purchasing in this listing.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneScreenshotsRef,\n    PreviewComponent: data => {\n      return renderPreviewOfFile(data, filePathData, fileReady);\n    },\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 69\n        }\n      }, renderCustomButtonDropzone(data, e, \"screenshotsUpload\"));\n    },\n    accept: \"image/*\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 57\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 61\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null)))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-adjustment-upload-related\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    id: \"upload-row-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"subheader-tabbed-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 37\n    }\n  }, \"Please upload a \\\"Thumbnail\\\" image\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"tabbed-card custom-tabbed-card-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"nav-pills nav-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTab === '1' ? 'active' : '',\n    onClick: () => setActiveTab('1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-ui-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 49\n    }\n  }), \"Uploaded Thumbnail Content Preview\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTab === '2' ? 'active' : '',\n    onClick: () => setActiveTab('2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-man-in-glasses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 49\n    }\n  }), \"Video Demo Preview (Optional)\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: activeTab === '3' ? 'active' : '',\n    onClick: () => setActiveTab('3'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 49\n    }\n  }), \"Screenshots/Demonstration Images\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 53\n    }\n  }, \"Manage/View your uploaded content below - Select & manage what you want to upload above!\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 53\n    }\n  }, renderThumbnailImage(thumbnailImage))))), /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 53\n    }\n  }, \"Manage/View your uploaded content below - Select & manage what you want to upload above!\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 53\n    }\n  }, renderVideoDemoPreview(videoDemoFile))))), /*#__PURE__*/React.createElement(TabPane, {\n    className: \"tabpane-custom-maxed\",\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redesign-custom-tab-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3 add-custom-card-border-tabbed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 53\n    }\n  }, \"Manage/View your uploaded content below - Select & manage what you want to upload above!\")), /*#__PURE__*/React.createElement(CardBody, {\n    id: \"cardbody-dropzone-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 49\n    }\n  }, RenderGallerySlideshowUploadedScreenshots(screenshotUploadImages))))))))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 37\n    }\n  }, \"Leave a comment for \\\"\", process.env.REACT_APP_APPLICATION_NAME, \"\\\" \", /*#__PURE__*/React.createElement(\"strong\", {\n    onClick: () => {\n      setPopoverReviewerStatus(true);\n    },\n    id: \"PopoverReviewersInfo\",\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 107\n    }\n  }, \"reviewers\")), /*#__PURE__*/React.createElement(Popover, {\n    className: \"make-popover-interactive\",\n    placement: \"bottom\",\n    isOpen: reviewerPopoverStatus,\n    target: \"PopoverReviewersInfo\",\n    toggle: () => {\n      setPopoverReviewerStatus(!reviewerPopoverStatus);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 41\n    }\n  }, \"What is a \\\"Reviewer\\\"? \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-cancel-container\",\n    onClick: () => {\n      setPopoverReviewerStatus(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 78\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../../assets/icons/close-64.png\"),\n    className: \"small-close-popover-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 44\n    }\n  }))), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 54\n    }\n  }, \"What is a reviewer you may ask?\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 153\n    }\n  }), \"Reviewers are employee's of \", process.env.REACT_APP_APPLICATION_NAME, \"'s platform that personally review each submission of an \\\"item-for-sale\\\" before posting it publically for safety reasons. This typically takes anywhere from 1-3 days but you will be notified upon the completion of a final decision.\")), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n    rows: 8\n  }, register(\"commentToReviewer\", {\n    required: {\n      value: true,\n      message: \"You MUST enter AT least 50 characters with a maximum of 500 characters\"\n    },\n    minLength: {\n      value: 50,\n      message: \"You must enter AT Least 50 characters\"\n    },\n    maxLength: {\n      value: 500,\n      message: \"You may ONLY enter 500 characters or less\"\n    },\n    onBlur: e => {\n      // check whether valid on click-off/blur\n      console.log(\"blurred.\");\n    }\n  }), {\n    className: \"form-control\",\n    name: \"commentToReviewer\",\n    type: \"textarea\",\n    placeholder: \"Leave a comment for our reviewers\",\n    onChange: handleInputChange,\n    value: data.commentToReviewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 37\n    }\n  })), errors.commentToReviewer ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 65\n    }\n  }, errors.commentToReviewer.message) : null)))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 29\n    }\n  }, \"~ Submit form details and proceed to next page ~\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveSoftwareListingInfo\n})(PageThreeHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/pageThreeMain.js"],"names":["React","useState","useRef","useEffect","Fragment","connect","NotificationManager","saveSoftwareListingInfo","_","useHistory","helpers","Col","Button","Form","Label","Input","NavItem","NavLink","TabContent","TabPane","Nav","Card","CardHeader","CardBody","Media","Badge","Row","Popover","PopoverBody","PopoverHeader","Container","ListGroupItem","ListGroup","useForm","Controller","Select","WithContext","ReactTags","Dropzone","axios","LoadingBar","KeyCodes","comma","enter","delimiters","PageThreeHelper","previouslySavedSoftwareData","userData","history","listingTimespanGeneratedRef","dropzoneVideoDemoRef","dropzoneScreenshotsRef","dropzoneRef","mounted","selectors","setSelectorsState","validateClass","setValidateClass","reviewerPopoverStatus","setPopoverReviewerStatus","tags","setTagsState","suggestions","setSuggestionsState","suggestionsPreselected","activeTab","setActiveTab","activeTabUploadState","setActiveTabUploads","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","progress","setProgress","thumbnailImage","setThumbnailImageState","videoDemoFile","setVideoFileDemoState","screenshotUploadImages","setScreenshotUploadStatus","changeOptions","setChangeOptions","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","gatheredValues","handleDrag","handleDelete","renderPreviewOfFile","imageChangeAndConversion","renderThumbnailImage","renderVideoDemoPreview","RenderGallerySlideshowUploadedScreenshots","RenderOptionsRadioSelectsAuctionType","data","setData","demoURL","handleInputChange","e","name","value","target","prevState","onSubmit","preventDefault","hashtags","length","console","log","showMessages","type","message","onError","listingTimelineSelectClose","timespan","listingTimespan","Object","keys","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","file","files","handleFileUploadAnyType","uploadType","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","original","REACT_APP_ASSET_LINK","link","thumbnail","success","catch","err","renderCustomButtonDropzone","meta","marginTop","runSubmit","warning","onSubmitHelper","allFiles","forEach","index","remove","changePageUploadTabs","page","custom","current","textDecorationLine","required","minLength","maxLength","onBlur","CalculateWhetherURLIsLegit","setTimeout","field","selectedOption","shouldValidate","blur","listingTimespanOptions","paddingTop","tagInput","tagInputField","selected","tag","activeSuggestion","suggestion","currPos","newPos","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","REACT_APP_APPLICATION_NAME","require","commentToReviewer","width","mapStateToProps","state","auth","softwareListingSale","softwareListingSaleInfo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport helpers from \"./helpers/mainFunctions.js\";\nimport { Col, Button, Form, Label, Input, NavItem, NavLink, TabContent, TabPane, Nav, Card, CardHeader, CardBody, Media, Badge, Row, Popover, PopoverBody, PopoverHeader, Container, ListGroupItem, ListGroup } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from 'axios';\nimport LoadingBar from 'react-top-loading-bar';\n\n\nconst KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n};\n  \nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst PageThreeHelper = ({ saveSoftwareListingInfo, previouslySavedSoftwareData, userData }) => {\n    // create redirect ability\n    const history = useHistory();\n    // create Refs...\n    const listingTimespanGeneratedRef = useRef(null);\n    const dropzoneVideoDemoRef = useRef(null);\n    const dropzoneScreenshotsRef = useRef(null);\n    const dropzoneRef = useRef(null);\n    const mounted = useRef();\n    // state creation...\n    const [ selectors, setSelectorsState ] = useState(null);\n    const [validateClass , setValidateClass] = useState(false);\n    const [ reviewerPopoverStatus, setPopoverReviewerStatus ] = useState(false);\n    const [ tags, setTagsState ] = useState([]);\n    const [ suggestions, setSuggestionsState ] = useState(helpers.suggestionsPreselected);\n    const [ activeTab, setActiveTab ] = useState('1');\n    const [ activeTabUploadState, setActiveTabUploads ] = useState('1');\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ progress, setProgress ] = useState(0);\n    const [ thumbnailImage, setThumbnailImageState ] = useState(null);\n    const [ videoDemoFile, setVideoFileDemoState ] = useState(null);\n    const [ screenshotUploadImages, setScreenshotUploadStatus ] = useState([]);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n     \n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    // get form-redux values\n    const gatheredValues = getValues();\n\n    // imported helpers from mainFunctions.js file (deconstructed)\n    const { handleDrag, handleDelete, renderPreviewOfFile, imageChangeAndConversion, renderThumbnailImage, renderVideoDemoPreview, RenderGallerySlideshowUploadedScreenshots, RenderOptionsRadioSelectsAuctionType } = helpers;\n\n    // react state initialization goes here...\n    const [ data, setData ] = useState({\n        demoURL: \"\"\n    });\n    // const [validateClass , setValidateClass] = useState(false);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        clearErrors(name);\n    \n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n    \n        return value;\n    };\n    const onSubmit = (data, e) => {\n        // prevent reload\n        e.preventDefault();\n\n        if ((typeof gatheredValues.hashtags !== \"undefined\") && (gatheredValues.hashtags.length >= 5)) {\n            console.log(\"hashtags have been completed...\");\n            // run final logic\n            if (data !== '') {\n                // everything is properly filled out\n                console.log(\"success! :) - : \", data);\n            } else {\n                errors.showMessages();\n            }\n        } else {\n            setError(\"hashtags\", {\n                type: \"manual\",\n                message: \"You MUST enter a MINIMUM of 5 (five) hashtags\",\n            });\n        }\n    };\n    const onError = (errors, e) => {\n        console.log(\"error submitting...!\", errors);\n    };\n    const listingTimelineSelectClose = (data) => {\n\n        const timespan = gatheredValues.listingTimespan;\n\n        if ((typeof timespan !== \"undefined\") && (Object.keys(timespan).length > 0)) {\n            clearErrors(\"listingTimespan\");\n        };\n    }\n\n    console.log(\"getValues(listingTimespan)\", getValues());\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type={\"file\"}\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(imageChangeAndConversion(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleFileUploadAnyType = (onSubmit, uploadType) => {\n        // upload file to aws S3\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                switch (uploadType) {\n                    case \"previewDisplayImage\":\n                        setThumbnailImageState(file);\n                        break;\n                    case \"videoDemoPreview\":\n                        setVideoFileDemoState(file);\n                        break;\n                    case \"screenshotsUpload\":\n                        setScreenshotUploadStatus([...screenshotUploadImages, {\n                            original: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n                            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n                        }]);\n                        break;\n                    default:\n                        break;\n                };\n\n                NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n\n                setMetaFileData(null);\n                setFileReadyStatus(false);\n                setCurrentUploadFileStatus(null);\n\n                onSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderCustomButtonDropzone = (data, e, uploadType) => {\n\n        const { meta } = data.files[0];\n\n        switch (uploadType) {\n            case \"previewImageMainDisplayUpload\":\n                if (currentFileSelectedUpload === null) {\n                    return null;\n                } else {\n                    if (fileReady === true) {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                    e.preventDefault();\n                                    // file meta data for next action\n                                    setMetaFileData(meta);\n                                    // set file status as ready or prepared.\n                                    setFileReadyStatus(false);\n            \n                                    const runSubmit = data.onSubmit;\n            \n                                    handleFileUploadAnyType(runSubmit, \"previewDisplayImage\");\n                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload Preview/Main-display Image!</Button>\n                            </Fragment>\n                        );\n                    } else {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                                    NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                                }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload Preview/Main-display Image!</Button>\n                            </Fragment>\n                        );\n                    }\n                }\n                break;\n            case \"videoDemoUpload\":\n                if (currentFileSelectedUpload === null) {\n                    return null;\n                } else {\n                    if (fileReady === true) {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                    e.preventDefault();\n                                    // file meta data for next action\n                                    setMetaFileData(meta);\n                                    // set file status as ready or prepared.\n                                    setFileReadyStatus(false);\n            \n                                    const runSubmit = data.onSubmit;\n            \n                                    handleFileUploadAnyType(runSubmit, \"videoDemoPreview\");\n                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload Video Preview!</Button>\n                            </Fragment>\n                        );\n                    } else {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                                    NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                                }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload Video Preview!</Button>\n                            </Fragment>\n                        );\n                    }\n                }\n                break;\n            case \"screenshotsUpload\":\n                if (currentFileSelectedUpload === null) {\n                    return null;\n                } else {\n                    if (fileReady === true) {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                    e.preventDefault();\n                                    // file meta data for next action\n                                    setMetaFileData(meta);\n                                    // set file status as ready or prepared.\n                                    setFileReadyStatus(false);\n            \n                                    const runSubmit = data.onSubmit;\n            \n                                    handleFileUploadAnyType(runSubmit, \"screenshotsUpload\");\n                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload Preview/Snapshot Images!</Button>\n                            </Fragment>\n                        );\n                    } else {\n                        return (\n                            <Fragment>\n                                <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                                    NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                                }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload Preview/Snapshot Images!</Button>\n                            </Fragment>\n                        );\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file, index) => {\n            file.remove();\n\n            if ((allFiles.length - 1) === index) {\n                // setFileReadyStatus(true);\n                setCurrentUploadFileStatus(null);\n            }\n        })\n    }\n    const changePageUploadTabs = (page) => {\n        setChangeOptions(null);\n\n        setActiveTabUploads(page);\n    }\n\n    useEffect(() => {\n        console.log(\"updated or ran.\");\n\n        const custom = RenderOptionsRadioSelectsAuctionType();\n\n        if (!mounted.current) {\n            // do componentDidMount logic\n            mounted.current = true;\n\n            console.log(\"component mounted.\");\n\n            setSelectorsState(custom);\n        } else {\n            // do componentDidUpdate logic\n            console.log(\"component did update!!\");\n        }\n\n        console.log(\"custom\", custom);\n    })\n    return (\n        <div>\n            <LoadingBar\n                color='#51bb25'\n                height={4.25}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Container fluid={true}>\n                <Form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit, onError)}>\n                    <Row>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Label>Demo URL (<strong style={{ color: \"red\", textDecorationLine: \"underline\" }}>optional</strong> - if you want to display working code at an external URL)</Label>\n                            <input {...register(\"demoURL\", { required: false, minLength: {\n                                value: 15,\n                                message: \"You must enter AT Least 15 characters\"\n                            }, maxLength: {\n                                value: 75,\n                                message: \"You may ONLY enter 75 characters or less\"\n                            }, onBlur: (e) => {\n                                // check if valid url in helper file.\n                                return helpers.CalculateWhetherURLIsLegit(e.target.value);\n                            }})} className=\"form-control\" name=\"demoURL\" type=\"text\" placeholder=\"Listing title\" onChange={handleInputChange} value={data.demoURL} />\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                        <Col className=\"input-surrounding-col\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Label>Select how long you would like your listing to run for (length of <em style={{ color: \"blue\" }}>both</em> \"buy-it-now\" & \"actions\")</Label>\n                            <Controller\n                                control={control}\n                                name=\"listingTimespan\"\n                                {...register(\"listingTimespan\", { required: {\n                                    value: true,\n                                    message: \"You must select a value before proceeding\"\n                                }, onBlur: (e) => {\n\n                                    console.log(\"onBlur...!\", e);\n\n                                    const value = e.target.value;\n\n                                    setTimeout(() => {\n                                        // clear error after proper selection\n                                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                                            clearErrors(\"listingTimespan\");\n                                        } else {\n                                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                                            setError(\"listingTimespan\", {\n                                                type: \"manual\",\n                                                message: \"You haven't selected a 'timespan' & a selection is required before proceeding\",\n                                            });\n                                        }\n                                    }, 50);\n                                }})}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        ref={listingTimespanGeneratedRef}\n                                        autoBlur={true}\n                                        defaultValue={null}\n                                        onMenuClose={listingTimelineSelectClose}\n                                        value={gatheredValues.listingTimespan}\n                                        onChange={(selectedOption) => {\n                                            // run conditionals\n                                            if (typeof gatheredValues.listingTimespan === \"undefined\") {\n                                                setValue('listingTimespan', selectedOption, { shouldValidate: false });\n                                            } else {\n                                                clearErrors(\"listingTimespan\");\n                                            }\n\n                                            listingTimespanGeneratedRef.current.blur();\n                                        }}\n                                        options={helpers.listingTimespanOptions}\n                                    />\n                                )}\n                            />\n                            {errors.listingTimespan ? <span className=\"span-tooltip\">{errors.listingTimespan.message}</span> : null}\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                    </Row>\n                    <Row style={{ paddingTop: \"25px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Label>Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - <strong style={{ color: \"blue\" }}>5(MIN) - 15(MAX) Tags</strong></Label>\n                            <ListGroup>\n                            <Controller\n                                control={control}\n                                name=\"hashtags\"\n                                {...register(\"hashtags\", { required: {\n                                    value: true,\n                                    message: \"You MUST enter AT least 5 (five) tags up to a maximum of 15 (fifteen) tags\"\n                                }})}\n                                render={({ field }) => (\n                                    <ReactTags \n                                        {...field}\n                                        tags={gatheredValues.hashtags}\n                                        name={\"hashtags\"}\n                                        suggestions={suggestions}\n                                        classNames={{\n                                            tags: 'hashtagsTagsClass',\n                                            tagInput: 'hashtagsTagInputClass',\n                                            tagInputField: 'hashtagsTagInputFieldClass',\n                                            selected: 'hashtagsSelectedClass',\n                                            tag: 'hashtagsTagClass badge badge-primary',\n                                            remove: 'hashtagsRemoveClass',\n                                            suggestions: 'hashtagsSuggestionsClass',\n                                            activeSuggestion: 'hashtagsActiveSuggestionClass'\n                                        }}\n                                        handleDelete={(index) => {\n                                            setValue('hashtags', handleDelete(index, gatheredValues.hashtags), { shouldValidate: true });\n                                        }}\n                                        renderSuggestion={(suggestion) => {\n                                            // return list item(s)\n                                            return (\n                                                <ListGroupItem className=\"custom-suggestion-groupitem\" key={suggestion.index} onClick={() => {\n                                                    // run conditional checks\n                                                    if (typeof gatheredValues.hashtags !== \"undefined\") {\n                                                        if (gatheredValues.hashtags.length < 15) {\n                                                            if (gatheredValues.hashtags.length > 0) {\n                                                                setValue('hashtags', [...gatheredValues.hashtags, suggestion], { shouldValidate: true });\n                                                            } else {\n                                                                setValue('hashtags', [suggestion], { shouldValidate: true });\n                                                            }\n                                                        } else {\n                                                            NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4250);\n                                                        }\n                                                    } else {\n                                                        setValue('hashtags', [suggestion], { shouldValidate: true });\n                                                    }\n                                                }}>{suggestion.text}</ListGroupItem>\n                                            );\n                                        }}\n                                        readOnly={false}\n                                        placeholder={\"Enter a tag (these are how people search & find your listing)\"}\n                                        maxLength={15}\n                                        handleAddition={(tag) => {\n                                            if (typeof gatheredValues.hashtags !== \"undefined\") {\n                                                if (gatheredValues.hashtags.length < 15) {\n                                                    if (gatheredValues.hashtags.length > 0) {\n                                                        setValue('hashtags', [...gatheredValues.hashtags, tag], { shouldValidate: true });\n                                                    } else {\n                                                        setValue('hashtags', [tag], { shouldValidate: true });\n                                                    }\n                                                } else {\n                                                    NotificationManager.warning('You have entered TOO many hashtags & we cannot add your current tag until some are removed.', \"Too many hashtags!\", 4500);\n                                                }\n                                            } else {\n                                                setValue('hashtags', [tag], { shouldValidate: true });\n                                            }\n                                        }}\n                                        handleDrag={(tag, currPos, newPos) => {\n                                            setValue('hashtags', handleDrag(tag, currPos, newPos, gatheredValues.hashtags), { shouldValidate: true });\n                                        }}\n                                        delimiters={delimiters} \n                                    />\n                                    \n                                )}\n                            />\n                            </ListGroup>\n                            {errors.hashtags ? <span className=\"span-tooltip\">{errors.hashtags.message}</span> : null}\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                    </Row>\n                    {selectors}\n                    <Row id=\"upload-row-custom\" style={{ marginTop: \"45px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"card-absolute\">\n                                <CardHeader className=\"bg-primary outsider-header-card-custom-upload\">\n                                    <h5 className=\"subheader-tabbed-card\">Upload/Manage various uploads via this tabbed form</h5>\n                                </CardHeader>\n                                <CardBody className=\"tabbed-card custom-tabbed-card-form\">\n                                    <Nav  className=\"nav-pills nav-secondary\">\n                                        <NavItem>\n                                            <NavLink className={activeTabUploadState === '1' ? 'active' : ''} onClick={() => changePageUploadTabs(\"1\")}>\n                                                <i className=\"icofont icofont-ui-home\"></i>Thumbnail/Display Image\n                                            </NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink className={activeTabUploadState === '2' ? 'active' : ''} onClick={() => changePageUploadTabs(\"2\")}>\n                                                <i className=\"icofont icofont-man-in-glasses\"></i>Video Demo Preview (Optional)\n                                            </NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink className={activeTabUploadState === '3' ? 'active' : ''} onClick={() => changePageUploadTabs(\"3\")}>\n                                                <i className=\"icofont icofont-contacts\"></i>Screenshots/Demonstration Images\n                                            </NavLink>\n                                        </NavItem>\n                                    </Nav>\n                                    <TabContent activeTab={activeTabUploadState}>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"1\">\n                                            <Card className=\"redesign-custom-tab-card-upload-content\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h3>Upload a thumbnail/display image (this will be the first image user's see - on homepage list view for ex.)</h3>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    <Label style={{ marginBottom: \"15px\" }}>You can preview your \"Thumbnail\" below after successfully uploading an image that will be displayed via our \"listing homepage view\" when user's are searching for various software code to purchase (main page - general display area)</Label>\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneRef}\n                                                            PreviewComponent={(data) => {\n                                                                return renderPreviewOfFile(data, filePathData, fileReady);\n                                                            }}\n                                                            maxFiles={1}\n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            autoUpload={true}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={CustomInputHelper}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, \"previewImageMainDisplayUpload\")}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            accept={\"image/*\"}\n                                                            multiple={false}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 275 },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                    </div>\n                                                    {fileReady === true ? <Fragment>\n                                                        <hr className=\"secondary-hr\" />\n                                                        <div className=\"centered-both-ways\">\n                                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                                setMetaFileData(null);\n                                                                setFileReadyStatus(false);\n                                                                setCurrentUploadFileStatus(null);\n\n                                                                changeOptions.remove();\n                                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                        </div>\n                                                    </Fragment> : null}\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"2\">\n                                            <Card className=\"redesign-custom-tab-card-upload-content\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h3>Upload a video demonstration/demo breifly giving an overview of the functionality of your code/software that is being sold (this is <strong style={{ color: \"blue\", textDecorationLine: \"underline\" }}>optional</strong> however it greatly boosts sales & sale liklihood)</h3>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    <Label style={{ marginBottom: \"15px\" }}>You can preview your \"Video Demo\" below after successfully uploading an <strong>accepted</strong> video that will be displayed when people visit your listing (after interacting/clicking your listing). This video should accurately depict what is included when purchasing your software/code.</Label>\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneVideoDemoRef}\n                                                            PreviewComponent={(data) => {\n                                                                return renderPreviewOfFile(data, filePathData, fileReady);\n                                                            }}\n                                                            maxFiles={1}\n                                                            autoUpload={true}\n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={CustomInputHelper}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, \"videoDemoUpload\")}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            accept={\"video/*\"}\n                                                            multiple={false}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 275 },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                    </div>\n                                                    {fileReady === true ? <Fragment>\n                                                        <hr className=\"secondary-hr\" />\n                                                        <div className=\"centered-both-ways\">\n                                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                                setMetaFileData(null);\n                                                                setFileReadyStatus(false);\n                                                                setCurrentUploadFileStatus(null);\n\n                                                                changeOptions.remove();\n                                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                        </div>\n                                                    </Fragment> : null}\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"3\">\n                                            <Card className=\"redesign-custom-tab-card-upload-content\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h3>Upload any <strong style={{ color: \"blue\", textDecorationLine: \"underline\" }}>accurate</strong> images/screenshots depicting what will be bought when a user decides to purchase your listing's contents - you may upload up-to 10 supporting screenshots/images describing what is being sold.</h3>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    <Label style={{ marginBottom: \"15px\" }}>You can preview your \"Demonstration/Demo Screenshots\" below after successfully uploading an images. These should accurately depict and give user's on {process.env.REACT_APP_APPLICATION_NAME}'s platform a good/exceptional idea of what they will be purchasing in this listing.</Label>\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneScreenshotsRef}\n                                                            PreviewComponent={(data) => {\n                                                                return renderPreviewOfFile(data, filePathData, fileReady);\n                                                            }}\n                                                            maxFiles={1}\n                                                            autoUpload={true} \n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={CustomInputHelper}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, \"screenshotsUpload\")}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            accept={\"image/*\"}\n                                                            multiple={false}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 275 },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                    </div>\n                                                    {fileReady === true ? <Fragment>\n                                                        <hr className=\"secondary-hr\" />\n                                                        <div className=\"centered-both-ways\">\n                                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                                setMetaFileData(null);\n                                                                setFileReadyStatus(false);\n                                                                setCurrentUploadFileStatus(null);\n\n                                                                changeOptions.remove();\n                                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                        </div>\n                                                    </Fragment> : null}\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                    </TabContent>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <div className=\"mobile-adjustment-upload-related\">\n                        <hr style={{ marginBottom: \"25px\" }} />\n                    </div>\n                    <Row id=\"upload-row-custom\">\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"card-absolute\">\n                                <CardHeader className=\"bg-primary\">\n                                    <h5 className=\"subheader-tabbed-card\">Please upload a \"Thumbnail\" image</h5>\n                                </CardHeader>\n                                <CardBody className=\"tabbed-card custom-tabbed-card-form\">\n                                    <Nav  className=\"nav-pills nav-secondary\">\n                                        <NavItem>\n                                            <NavLink className={activeTab === '1' ? 'active' : ''} onClick={() => setActiveTab('1')}>\n                                                <i className=\"icofont icofont-ui-home\"></i>Uploaded Thumbnail Content Preview\n                                            </NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink className={activeTab === '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n                                                <i className=\"icofont icofont-man-in-glasses\"></i>Video Demo Preview (Optional)\n                                            </NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink className={activeTab === '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\n                                                <i className=\"icofont icofont-contacts\"></i>Screenshots/Demonstration Images\n                                            </NavLink>\n                                        </NavItem>\n                                    </Nav>\n                                    <TabContent activeTab={activeTab}>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"1\">\n                                            <Card className=\"redesign-custom-tab-card\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h3>Manage/View your uploaded content below - Select & manage what you want to upload above!</h3>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    <div className=\"centered-both-ways\">\n                                                        {renderThumbnailImage(thumbnailImage)}\n                                                    </div>\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"2\">\n                                            <Card className=\"redesign-custom-tab-card\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h5>Manage/View your uploaded content below - Select & manage what you want to upload above!</h5>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    <div className=\"centered-both-ways\">\n                                                        {renderVideoDemoPreview(videoDemoFile)}\n                                                    </div>\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                        <TabPane className=\"tabpane-custom-maxed\" tabId=\"3\">\n                                            <Card className=\"redesign-custom-tab-card\">\n                                                <CardHeader className=\"b-l-primary border-3 add-custom-card-border-tabbed\">\n                                                    <h5>Manage/View your uploaded content below - Select & manage what you want to upload above!</h5>\n                                                </CardHeader>\n                                                <CardBody id=\"cardbody-dropzone-one\">\n                                                    {RenderGallerySlideshowUploadedScreenshots(screenshotUploadImages)}\n                                                </CardBody>\n                                            </Card>\n                                        </TabPane>\n                                    </TabContent>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row style={{ marginTop: \"45px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Label>Leave a comment for \"{process.env.REACT_APP_APPLICATION_NAME}\" <strong onClick={() => {\n                                        setPopoverReviewerStatus(true);\n                                    }} id={\"PopoverReviewersInfo\"} style={{ color: \"red\", textDecorationLine: \"underline\" }}>reviewers</strong></Label>\n                                    <Popover\n                                        className=\"make-popover-interactive\"\n                                        placement=\"bottom\" isOpen={reviewerPopoverStatus} target=\"PopoverReviewersInfo\" toggle={() => {\n                                            setPopoverReviewerStatus(!reviewerPopoverStatus);\n                                        }}\n                                    >\n                                        <PopoverHeader>What is a \"Reviewer\"? <div className=\"popover-cancel-container\" onClick={() => {\n                                            setPopoverReviewerStatus(false);\n                                        }}><img src={require(\"../../../../../../../assets/icons/close-64.png\")} className=\"small-close-popover-icon\" /></div></PopoverHeader>\n                                        <PopoverBody><h6 style={{ color: \"blue\", textDecorationLine: \"underline\" }}>What is a reviewer you may ask?</h6><hr />Reviewers are employee's of {process.env.REACT_APP_APPLICATION_NAME}'s platform that personally review each submission of an \"item-for-sale\" before posting it publically for safety reasons. This typically takes anywhere from 1-3 days but you will be notified upon the completion of a final decision.\n                                        </PopoverBody>\n                                    </Popover>\n                                    <textarea rows={8} {...register(\"commentToReviewer\", { required: {\n                                        value: true,\n                                        message: \"You MUST enter AT least 50 characters with a maximum of 500 characters\"\n                                    }, minLength: {\n                                        value: 50,\n                                        message: \"You must enter AT Least 50 characters\"\n                                    }, maxLength: {\n                                        value: 500,\n                                        message: \"You may ONLY enter 500 characters or less\"\n                                    }, onBlur: (e) => {\n                                        // check whether valid on click-off/blur\n                                        console.log(\"blurred.\");\n                                    }})} className=\"form-control\" name=\"commentToReviewer\" type=\"textarea\" placeholder=\"Leave a comment for our reviewers\" onChange={handleInputChange} value={data.commentToReviewer} />\n                                    {errors.commentToReviewer ? <span className=\"span-tooltip\">{errors.commentToReviewer.message}</span> : null}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <hr />\n                    <Row style={{ marginTop: \"45px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Button color=\"secondary\" style={{ width: \"100%\" }} type=\"submit\" onClick={() => {\n\n                            }}>~ Submit form details and proceed to next page ~</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nexport default connect(mapStateToProps, { saveSoftwareListingInfo })(PageThreeHelper);\n"]},"metadata":{},"sourceType":"module"}