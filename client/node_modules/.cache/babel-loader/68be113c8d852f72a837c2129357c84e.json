{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js\";\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { Modal } from 'react-responsive-modal';\nimport FileViewer from 'react-file-viewer';\n\nconst PageTwoMainHelper = _ref => {\n  let {\n    userData,\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData\n  } = _ref;\n  // refs & such\n  const dropzoneRef = useRef(null); // start of state logic...\n\n  const [progress, setProgress] = useState(0);\n  const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null); // const [ disableDropzone, changeStatusDisableDropzoneState ] = useState(false);\n\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [popoverOpen, setPopoverState] = useState(false);\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(imageChangeAndConversion(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }));\n  };\n\n  const handleSubmit = runSubmit => {\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n    if (!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") || previouslySavedSoftwareData.uploadedPublicFiles.length <= 10) {\n      const data = new FormData();\n      data.append(\"file\", currentFileSelectedUpload);\n      data.append(\"meta\", fileMetaData);\n      const config = {\n        onUploadProgress: progressEvent => {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n          console.log(res.data);\n          const {\n            file\n          } = res.data;\n          saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n            uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n          });\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n          setMetaFileData(null);\n          setFileReadyStatus(false);\n          setCurrentUploadFileStatus(null);\n          runSubmit();\n        } else {\n          console.log(\"Err\", res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      // here!\n      NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n    }\n  };\n\n  useEffect(() => {\n    // probably end up putting something here?\n    console.log(\"re-rendered.\");\n  }, []);\n\n  const renderColor = i => {\n    switch (i) {\n      case 1:\n        return \"txt-success\";\n        break;\n\n      case 2:\n        return \"txt-info\";\n        break;\n\n      case 3:\n        return \"txt-danger\";\n        break;\n\n      case 4:\n        return \"txt-warning\";\n        break;\n\n      case 5:\n        return \"txt-dark\";\n        break;\n\n      case 6:\n        return \"txt-primary\";\n        break;\n\n      case 7:\n        return \"txt-secondary\";\n        break;\n\n      case 8:\n        return \"txt-pink\";\n        break;\n\n      case 9:\n        return \"txt-grey\";\n        break;\n\n      case 10:\n        return \"txt-success\";\n        break;\n\n      default:\n        return \"txt-warning\";\n        break;\n    }\n  };\n\n  const formatBytes = function (bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n\n  const renderConditionalUponFileUploads = () => {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"file-manager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, \"If you'd like to view your previously uploaded files (uploaded yet NOT public \", /*#__PURE__*/React.createElement(\"em\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 114\n      }\n    }, \"yet\"), \") can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 313\n      }\n    }, \"\\\"View All/Other Uploaded File's\\\"\"), \" button to view all of your uploaded content.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, \"Uploaded File(s) & Content\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, \"These are your \\\"Completed & already uploaded\\\" files \", /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 85\n      }\n    }, \"however\"), \" they will only be permanently saved upon completion and posting of this listing as a whole.\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        id: \"file-box-customized-software\",\n        className: \"file-box\",\n        key: indexxxx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `fa fa-file-text-o ${renderColor(indexxxx)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 71\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-ellipsis-v f-14 ellips\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 135\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 49\n        }\n      }, file.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 49\n        }\n      }, formatBytes(file.size)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 49\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 53\n        }\n      }, \"Uploaded at\", \" : \"), file.date)));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }), previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => {\n        setSelectedFile({ ...previouslySavedSoftwareData.uploadedPublicFiles[0],\n          selectedFileIndex: 0\n        });\n        setTimeout(() => {\n          setFileModalOpenStatus(true);\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 91\n      }\n    }, \"View All/Other Uploaded File's\") : null)))));\n  };\n\n  const onError = e => {\n    console.log(e, 'error in file-viewer');\n  };\n\n  const calculateFileType = type => {\n    switch (type) {\n      case \"video/mp4\":\n        return \"mp4\";\n        break;\n\n      case \"image/png\":\n        return \"png\";\n        break;\n\n      case \"image/jpeg\":\n        return \"jpeg\";\n        break;\n\n      case \"image/gif\":\n        return \"gif\";\n        break;\n\n      case \"image/bmp\":\n        return \"bmp\";\n        break;\n\n      case \"application/pdf\":\n        return \"pdf\";\n        break;\n\n      case \"text/csv\":\n        return \"csv\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n        return \"xlsx\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n        return \"docx\";\n        break;\n\n      case \"video/webm\":\n        return \"webm\";\n        break;\n\n      case \"audio/mpeg\":\n        return \"mp3\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const renderCustomButtonDropzone = (data, e) => {\n    console.log(\"rendered! : data... : \", data, e);\n    const {\n      meta\n    } = data.files[0];\n    console.log(\"meta : \", meta);\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmit(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: onError,\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const imageChangeAndConversion = file => {\n    return URL.createObjectURL(file);\n  };\n\n  const onSubmitHelper = (files, allFiles) => {\n    console.log(\"ON SUBMIT HELPER RAN...!\");\n    allFiles.forEach(file => {\n      file.remove();\n    });\n  };\n\n  const getFilesFromEvent = events => {\n    console.log(\"getFilesFromEvent : \", events);\n  };\n\n  const deleteCurrentlySelectedFile = file => {\n    const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n      if (file.id !== item.id) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n      uploadedPublicFiles: removedFileArray\n    }); // close popover\n\n    setPopoverState(false); // clear active selected file\n\n    setSelectedFile(null);\n  };\n\n  console.log(\"dropzoneRef ref! : \", dropzoneRef);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 4.25,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }), selectedFile !== null ? /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'customFileModalOverlay',\n      modal: 'customFileModal'\n    },\n    open: fileModalOpen,\n    onOverlayClick: () => {\n      console.log(\"onOverlayClicked clicked!\");\n    },\n    onClose: () => {\n      setFileModalOpenStatus(false);\n    },\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    id: \"file-manager-override-scroll\",\n    className: \"file-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-tall-scroller-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 45\n    }\n  }, previouslySavedSoftwareData.uploadedPublicFiles.map((file, indexxxx) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      id: `file-box-customized-software-fullw`,\n      className: `file-box ${selectedFile.selectedFileIndex === indexxxx ? \"active-pane-file\" : \"\"}`,\n      key: indexxxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `fa fa-file-text-o ${renderColor(indexxxx)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 87\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      id: \"Popover1\",\n      onClick: () => {\n        setPopoverState(true);\n      },\n      className: \"fa fa-ellipsis-v f-14 ellips apply-special-hover-effect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 151\n      }\n    }), /*#__PURE__*/React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: popoverOpen,\n      target: \"Popover1\",\n      toggle: () => {\n        setPopoverState(!popoverOpen);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 65\n      }\n    }, \"Want to delete this file? \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popover-cancel-container\",\n      onClick: () => {\n        setPopoverState(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 106\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../../../../../../assets/icons/close-64.png\"),\n      className: \"small-close-popover-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 68\n      }\n    }))), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 65\n      }\n    }, \"Would you like to \", /*#__PURE__*/React.createElement(\"em\", {\n      style: {\n        color: \"blue\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 96\n      }\n    }, \"permanently delete\"), \" this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 385\n      }\n    }, \"cannot\"), \" be undone.\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: \"7.5px\",\n        width: \"100%\"\n      },\n      onClick: () => {\n        deleteCurrentlySelectedFile(file);\n      },\n      className: \"btn-air-secondary\",\n      color: \"secondary\",\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 65\n      }\n    }, \"Delete file!\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 65\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 65\n      }\n    }, formatBytes(file.size)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 65\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 69\n      }\n    }, \"Uploaded at\", \" : \"), file.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => {\n        setSelectedFile({ ...file,\n          selectedFileIndex: indexxxx\n        });\n      },\n      className: \"btn-air-secondary\",\n      color: \"secondary\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 65\n      }\n    }, \"View File\")));\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    lg: \"8\",\n    xl: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"file-viewer-cardbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"height-100-wmaxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FileViewer, {\n    fileType: calculateFileType(selectedFile.type),\n    filePath: `${process.env.REACT_APP_ASSET_LINK}/${selectedFile.link}`,\n    onError: onError,\n    key: selectedFile.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 41\n    }\n  })))))))) : null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }, \"Upload related files & attachments\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 37\n    }\n  }, \"Select a single supporting file or multiple (Up to 10 files \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 104\n    }\n  }, \"total\"), \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtext-under-label-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 79\n    }\n  }, \"NOTE\"), \": These files will be transfered or \\\"handed over\\\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 343\n    }\n  }, \"downloading\"), \" and viewing.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: getFilesFromEvent,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 53\n        }\n      }, renderCustomButtonDropzone(data, e));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 325\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }))))))), _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveSoftwareListingInfo\n})(PageTwoMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js"],"names":["React","useState","useEffect","useRef","Fragment","Container","Row","Col","Card","CardHeader","CardBody","Form","Label","Button","Popover","PopoverBody","PopoverHeader","Dropzone","axios","connect","NotificationManager","LoadingBar","saveSoftwareListingInfo","_","Modal","FileViewer","PageTwoMainHelper","userData","previouslySavedSoftwareData","dropzoneRef","progress","setProgress","fileModalOpen","setFileModalOpenStatus","selectedFile","setSelectedFile","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","popoverOpen","setPopoverState","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","imageChangeAndConversion","handleSubmit","runSubmit","console","log","has","uploadedPublicFiles","length","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","catch","err","error","renderColor","i","formatBytes","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","renderConditionalUponFileUploads","slice","map","indexxxx","name","size","date","width","selectedFileIndex","setTimeout","onError","calculateFileType","type","renderCustomButtonDropzone","meta","marginTop","preventDefault","onSubmit","warning","renderPreviewOfFile","fileWithMeta","id","URL","createObjectURL","onSubmitHelper","allFiles","forEach","remove","getFilesFromEvent","events","deleteCurrentlySelectedFile","removedFileArray","filter","item","overlay","modal","require","textDecorationLine","REACT_APP_ASSET_LINK","link","dropzone","height","dropzoneActive","borderColor","mapStateToProps","state","auth","softwareListingSale","softwareListingSaleInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap'\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { Modal } from 'react-responsive-modal';\nimport FileViewer from 'react-file-viewer';\n\nconst PageTwoMainHelper = ({ userData, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n    // refs & such\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ progress, setProgress ] = useState(0); \n    const [ fileModalOpen, setFileModalOpenStatus ] = useState(false);\n    const [ selectedFile, setSelectedFile ] = useState(null);\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    // const [ disableDropzone, changeStatusDisableDropzoneState ] = useState(false);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ popoverOpen, setPopoverState ] = useState(false);\n\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n      \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                    <input\n                        style={{ display: 'none' }}\n                        type=\"file\"\n                        accept={accept}\n                        multiple={false}\n                        className={\"custom-dropzone-input-actual-input\"}\n                        onChange={e => {\n                                const file = e.target.files[0];\n                                // set current file path to convert to readable URL later\n                                setCurrentFilePathData(imageChangeAndConversion(file));\n                                // set status update for current file\n                                setCurrentUploadFileStatus(file);\n                                // mark file as READY \n                                setFileReadyStatus(true);\n                                // update \"Dropzone\" component state (NOT this react component state).\n                                onFiles([file])\n                        }}\n                    />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => { \n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        if ((!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\")) || (previouslySavedSoftwareData.uploadedPublicFiles.length <= 10)) {\n            const data = new FormData();\n    \n            data.append(\"file\", currentFileSelectedUpload);\n            data.append(\"meta\", fileMetaData);\n\n            const config = {\n                onUploadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded file!\") {\n                    console.log(res.data);\n\n                    const { file } = res.data;\n\n                    saveSoftwareListingInfo({\n                        ...previouslySavedSoftwareData,\n                        uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n                    })\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                    setMetaFileData(null);\n                    setFileReadyStatus(false);\n                    setCurrentUploadFileStatus(null);\n\n                    runSubmit();\n                } else {\n                    console.log(\"Err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        } else {\n            // here!\n            NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n        }\n    };\n    useEffect(() => {\n        // probably end up putting something here?\n        console.log(\"re-rendered.\");\n    }, [])\n    const renderColor = (i) => {\n        switch (i) {\n            case 1:\n                return \"txt-success\";\n                break;\n            case 2:\n                return \"txt-info\";\n                break;\n            case 3:\n                return \"txt-danger\";\n                break;\n            case 4:\n                return \"txt-warning\";\n                break;\n            case 5:\n                return \"txt-dark\";\n                break;\n            case 6:\n                return \"txt-primary\";\n                break;\n            case 7:\n                return \"txt-secondary\";\n                break;\n            case 8:\n                return \"txt-pink\";\n                break;\n            case 9:\n                return \"txt-grey\";\n                break;\n            case 10:\n                return \"txt-success\";\n                break;\n            default:\n                return \"txt-warning\";\n                break;\n        }\n    }\n    const formatBytes = (bytes, decimals = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n    const renderConditionalUponFileUploads = () => {\n        return (\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <div className=\"file-content\">\n                    <Card>\n                        <CardBody className=\"file-manager\">\n                            <Label>If you'd like to view your previously uploaded files (uploaded yet NOT public <em style={{ color: \"red\" }}>yet</em>) can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the <strong style={{ color: \"blue\" }}>\"View All/Other Uploaded File's\"</strong> button to view all of your uploaded content.</Label>\n                            \n                            <h4 className=\"mb-3\">Uploaded File(s) & Content</h4>\n                            <h6>These are your \"Completed & already uploaded\" files <em>however</em> they will only be permanently saved upon completion and posting of this listing as a whole.</h6>\n                            <ul className=\"files\">\n                                {previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n                                    return (\n                                        <li id=\"file-box-customized-software\" className=\"file-box\" key={indexxxx}>\n                                            <div className=\"file-top\"><i className={`fa fa-file-text-o ${renderColor(indexxxx)}`}></i><i className=\"fa fa-ellipsis-v f-14 ellips\"></i></div>\n                                            <div className=\"file-bottom\">\n                                                <h6>{file.name} </h6>\n                                                <p className=\"mb-1\">{formatBytes(file.size)}</p>\n                                                <p> <b>{\"Uploaded at\"} : </b>{file.date}</p>\n                                            </div>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                            <hr />\n                            {previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? <Button color=\"secondary\" style={{ width: \"100%\" }} onClick={() => {\n\n                                setSelectedFile({\n                                    ...previouslySavedSoftwareData.uploadedPublicFiles[0],\n                                    selectedFileIndex: 0\n                                });\n\n                                setTimeout(() => {\n                                    setFileModalOpenStatus(true);\n                                }, 500)\n                            }}>View All/Other Uploaded File's</Button> : null}\n                        </CardBody>\n                    </Card>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n    const onError = (e) => {\n        console.log(e, 'error in file-viewer');\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        console.log(\"rendered! : data... : \", data, e);\n\n        const { meta } = data.files[0];\n\n        console.log(\"meta : \", meta);\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n                            \n                            const runSubmit = data.onSubmit;\n    \n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);  \n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }   \n        }\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={onError}\n                        key={file.id}\n                    />\n                </div>\n            );  \n        } else {\n            return null;\n        }\n    }\n    const imageChangeAndConversion = (file) => {\n        return URL.createObjectURL(file);\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        console.log(\"ON SUBMIT HELPER RAN...!\");\n\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    const getFilesFromEvent = (events) => {\n        console.log(\"getFilesFromEvent : \", events);\n    }\n    const deleteCurrentlySelectedFile = (file) => {\n\n        const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n            if (file.id !== item.id) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        saveSoftwareListingInfo({\n            ...previouslySavedSoftwareData,\n            uploadedPublicFiles: removedFileArray\n        });\n        // close popover\n        setPopoverState(false);\n        // clear active selected file\n        setSelectedFile(null);\n    }\n    console.log(\"dropzoneRef ref! : \", dropzoneRef);\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={4.25}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            {selectedFile !== null ? <Modal classNames={{\n                overlay: 'customFileModalOverlay',\n                modal: 'customFileModal',\n            }} open={fileModalOpen} onOverlayClick={() => {\n                console.log(\"onOverlayClicked clicked!\");\n            }} onClose={() => {\n                setFileModalOpenStatus(false);\n            }} center>\n                <Container fluid={true}>\n                    <Row>\n                        <Col md=\"4\" lg=\"4\" xl=\"4\">\n                            <div className=\"file-content\">\n                                <Card>\n                                    <CardBody id=\"file-manager-override-scroll\" className=\"file-manager\">\n                                        <div className=\"left-tall-scroller-overflow\">\n                                            <ul className=\"files\">\n                                                {previouslySavedSoftwareData.uploadedPublicFiles.map((file, indexxxx) => {\n                                                    return (\n                                                        <li id={`file-box-customized-software-fullw`} className={`file-box ${selectedFile.selectedFileIndex === indexxxx ? \"active-pane-file\" : \"\"}`} key={indexxxx}>\n                                                            <div className=\"file-top\"><i className={`fa fa-file-text-o ${renderColor(indexxxx)}`}></i><i id=\"Popover1\" onClick={() => {\n                                                                setPopoverState(true);\n                                                            }} className=\"fa fa-ellipsis-v f-14 ellips apply-special-hover-effect\"></i>\n                                                            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={() => {\n                                                                setPopoverState(!popoverOpen);\n                                                            }}>\n                                                                <PopoverHeader>Want to delete this file? <div className=\"popover-cancel-container\" onClick={() => {\n                                                                    setPopoverState(false);\n                                                                }}><img src={require(\"../../../../../../../assets/icons/close-64.png\")} className=\"small-close-popover-icon\" /></div></PopoverHeader>\n                                                                <PopoverBody>Would you like to <em style={{ color: \"blue\", textDecorationLine: \"underline\" }}>permanently delete</em> this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action <strong style={{ color: \"red\" }}>cannot</strong> be undone.\n                                                                <hr />\n                                                                <Button style={{ marginTop: \"7.5px\", width: \"100%\" }} onClick={() => {\n                                                                    deleteCurrentlySelectedFile(file);\n                                                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Delete file!</Button>\n                                                                </PopoverBody>\n                                                            </Popover>\n                                                            </div>\n                                                            <div className=\"file-bottom\">\n                                                                <h6>{file.name}</h6>\n                                                                <p className=\"mb-1\">{formatBytes(file.size)}</p>\n                                                                <p> <b>{\"Uploaded at\"} : </b>{file.date}</p>\n                                                            </div>\n                                                            <div className=\"center-button-file\">\n                                                                <Button style={{ width: \"100%\" }} onClick={() => {\n                                                                    setSelectedFile({\n                                                                        ...file,\n                                                                        selectedFileIndex: indexxxx\n                                                                    });\n                                                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"sm\">View File</Button>\n                                                            </div>\n                                                        </li>\n                                                    );\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col md=\"8\" lg=\"8\" xl=\"8\">\n                            <Card>\n                                <CardBody className=\"file-viewer-cardbody\">\n                                    <div className=\"height-100-wmaxed\">\n                                        <FileViewer\n                                            fileType={calculateFileType(selectedFile.type)}\n                                            filePath={`${process.env.REACT_APP_ASSET_LINK}/${selectedFile.link}`}\n                                            onError={onError}\n                                            key={selectedFile.id}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Modal> : null}\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Upload related files & attachments</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <Label>Select a single supporting file or multiple (Up to 10 files <strong>total</strong>)</Label>\n                                    <p className=\"subtext-under-label-upload\"><strong style={{ color: \"blue\" }}>NOTE</strong>: These files will be transfered or \"handed over\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be <strong>downloading</strong> and viewing.</p>\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            ref={dropzoneRef}\n                                            PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                            maxFiles={1}\n                                            autoUpload={true}\n                                            submitButtonDisabled={false}\n                                            InputComponent={CustomInputHelper}\n                                            getFilesFromEvent={getFilesFromEvent}\n                                            onSubmit={onSubmitHelper}\n                                            SubmitButtonComponent={(data, e) => {\n                                                return (\n                                                    <div className=\"absolutely-position-submit-btn\">\n                                                        {renderCustomButtonDropzone(data, e)}\n                                                    </div>\n                                                );\n                                            }}\n                                            multiple={false}\n                                            canCancel={false}\n                                            styles={{\n                                                dropzone: { height: 325 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                {_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null}\n            </Container>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nexport default connect(mapStateToProps, { saveSoftwareListingInfo })(PageTwoMainHelper);"]},"metadata":{},"sourceType":"module"}