{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, FormGroup, Input, Button, Label } from \"reactstrap\";\nimport axios from 'axios';\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\n\nconst PaymentFullPaneManageAndPay = _ref => {\n  let {\n    currentApplication,\n    paymentPaneFull,\n    setFullPaymentPaneOpen,\n    userData\n  } = _ref;\n  const [capabilities, setCapabilities] = useState([]);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        employerID: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered payment capabilities!\") {\n        console.log(res.data);\n        const {\n          capabilities\n        } = res.data;\n        const arr = [];\n\n        for (let index = 0; index < capabilities.data.length; index++) {\n          const el = capabilities.data[index];\n\n          if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n            arr.push(el);\n          }\n        }\n\n        console.log(\"arr\", arr);\n        setCapabilities(arr);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"Critical errror...:\", err);\n    });\n  }, []);\n  console.log(\"capabilities\", capabilities);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    draggable: false,\n    isOpen: paymentPaneFull,\n    onClose: () => setFullPaymentPaneOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setFullPaymentPaneOpen(false),\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"Exit/Close This Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"breadcrumb-full-payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    id: \"breadcrumb-full-payment\",\n    parent: \"Make FULL Payment\",\n    title: currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-pane-full-payment\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 49\n    }\n  }, \"Make a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 60\n    }\n  }, \"complete payment/deposit\"), \" for \", currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Name/Data...\", \" before they can proceed with the required work on this contract..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"capabilities-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 65\n    }\n  }, \"Capabilities related to payment method's\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 65\n    }\n  }, typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 85\n      }\n    }, \"Type:\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 85\n      }\n    }, element.id)));\n  }) : null)))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 61\n    }\n  }))))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {},\n    className: \"btn-square-info\",\n    outline: true,\n    color: \"info-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 49\n    }\n  }, \"Submit Payment & Process Deposit (double-confirm action)\"))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(PaymentFullPaneManageAndPay);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Container","Row","Col","Card","CardBody","CardFooter","CardHeader","ListGroup","ListGroupItem","FormGroup","Input","Button","Label","axios","Sheet","connect","PaymentFullPaneManageAndPay","currentApplication","paymentPaneFull","setFullPaymentPaneOpen","userData","capabilities","setCapabilities","configuration","params","employerID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","arr","index","length","el","id","push","catch","err","margin","width","applicantName","map","element","idx","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, FormGroup, Input, Button, Label } from \"reactstrap\"\nimport axios from 'axios'\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\n\nconst PaymentFullPaneManageAndPay = ({ currentApplication, paymentPaneFull, setFullPaymentPaneOpen, userData }) => {\n\n    const [ capabilities, setCapabilities ] = useState([]);\n\n    useEffect(() => {\n        const configuration = {\n            params: { \n                employerID: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered payment capabilities!\") {\n                console.log(res.data);\n\n                const { capabilities } = res.data;\n\n                const arr = [];\n\n                for (let index = 0; index < capabilities.data.length; index++) {\n                    const el = capabilities.data[index];\n                    if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n                        arr.push(el);\n                    }\n                }\n                console.log(\"arr\", arr);\n\n                setCapabilities(arr);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n        })\n    }, [])\n    console.log(\"capabilities\", capabilities);\n    return (\n        <Fragment>\n            <Sheet draggable={false} isOpen={paymentPaneFull} onClose={() => setFullPaymentPaneOpen(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => setFullPaymentPaneOpen(false)} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <div id={\"breadcrumb-full-payment\"}>\n                            <Breadcrumb id={\"breadcrumb-full-payment\"} parent={\"Make FULL Payment\"} title={currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\"} />\n                            <Container className='container-pane-full-payment' fluid={true}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='card-payment-entirely'>\n                                            <CardHeader>\n                                                <h2>Make a <strong>complete payment/deposit</strong> for {currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Name/Data...\"} before they can proceed with the required work on this contract..</h2>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Card className='card-payment-entirely-halved'>\n                                                            <CardHeader>\n                                                                <h3 className='capabilities-header'>Capabilities related to payment method's</h3>\n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                <ListGroup className=\"list-group-flush\">\n                                                                    {typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n                                                                        return (\n                                                                            <ListGroupItem key={idx}>\n                                                                                <Row>\n                                                                                    <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                                                        Type:\n                                                                                    </Col>\n                                                                                    <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                                                        {element.id}\n                                                                                    </Col>\n                                                                                </Row>\n                                                                            </ListGroupItem>\n                                                                        );\n                                                                    }) : null}\n                                                                </ListGroup>\n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Card className='card-payment-entirely-halved'>\n                                                            <CardHeader>\n                                                                \n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                \n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button onClick={() => {}} className={\"btn-square-info\"} outline color={\"info-2x\"} style={{ width: \"100%\" }}>Submit Payment & Process Deposit (double-confirm action)</Button>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(PaymentFullPaneManageAndPay);"]},"metadata":{},"sourceType":"module"}