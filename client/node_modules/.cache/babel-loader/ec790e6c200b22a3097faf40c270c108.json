{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/helpers/createPostHelpers.js\";\nimport React from \"react\";\n\nconst calculateFileType = type => {\n  switch (type) {\n    case \"video/mp4\":\n      return \"mp4\";\n      break;\n\n    case \"image/png\":\n      return \"png\";\n      break;\n\n    case \"image/jpeg\":\n      return \"jpeg\";\n      break;\n\n    case \"image/jpg\":\n      return \"jpg\";\n      break;\n\n    case \"image/gif\":\n      return \"gif\";\n      break;\n\n    case \"image/bmp\":\n      return \"bmp\";\n      break;\n\n    case \"application/pdf\":\n      return \"pdf\";\n      break;\n\n    case \"text/csv\":\n      return \"csv\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n      return \"xlsx\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n      return \"docx\";\n      break;\n\n    case \"video/webm\":\n      return \"webm\";\n      break;\n\n    case \"audio/mpeg\":\n      return \"mp3\";\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst onSubmitHelper = (files, allFiles) => {\n  allFiles.forEach(file => {\n    file.remove();\n  });\n};\n\nconst CustomInputHelper = _ref => {\n  let {\n    accept,\n    onFiles,\n    setCurrentFilePathData,\n    setCurrentUploadFileStatus,\n    setFileReadyStatus\n  } = _ref;\n  const text = \"Drop a file OR select to browse local data\";\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-input-dropzone-copy\",\n    style: {\n      backgroundColor: '#007bff',\n      color: '#fff',\n      cursor: 'pointer',\n      padding: 15,\n      borderRadius: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, text, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: accept,\n    multiple: false,\n    className: \"custom-dropzone-input-actual-input\",\n    onChange: e => {\n      const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n      setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n      setCurrentUploadFileStatus(file); // mark file as READY \n\n      setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n      onFiles([file]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default {\n  calculateFileType,\n  onSubmitHelper,\n  CustomInputHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/wallData/postNewData/helpers/createPostHelpers.js"],"names":["React","calculateFileType","type","onSubmitHelper","files","allFiles","forEach","file","remove","CustomInputHelper","accept","onFiles","setCurrentFilePathData","setCurrentUploadFileStatus","setFileReadyStatus","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","URL","createObjectURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAChC,UAAQA,IAAR;AACI,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,iBAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,UAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,mEAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,yEAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,KAAP;AACA;;AACJ;AACI;AAtCR;AAwCH,CAzCD;;AA0CA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCA,EAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAD,IAAU;AACvBA,IAAAA,IAAI,CAACC,MAAL;AACH,GAFD;AAGH,CAJD;;AAKA,MAAMC,iBAAiB,GAAG,QAAiG;AAAA,MAAhG;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,sBAAnB;AAA2CC,IAAAA,0BAA3C;AAAuEC,IAAAA;AAAvE,GAAgG;AAEvH,QAAMC,IAAI,GAAG,4CAAb;AAEA,sBACI;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE,MAArC;AAA6CC,MAAAA,MAAM,EAAE,SAArD;AAAgEC,MAAAA,OAAO,EAAE,EAAzE;AAA6EC,MAAAA,YAAY,EAAE;AAA3F,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IADL,eAEI;AACI,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KADX;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,MAAM,EAAEX,MAHZ;AAII,IAAA,QAAQ,EAAE,KAJd;AAKI,IAAA,SAAS,EAAE,oCALf;AAMI,IAAA,QAAQ,EAAEY,CAAC,IAAI;AACX,YAAMf,IAAI,GAAGe,CAAC,CAACC,MAAF,CAASnB,KAAT,CAAe,CAAf,CAAb,CADW,CAEX;;AACAQ,MAAAA,sBAAsB,CAACY,GAAG,CAACC,eAAJ,CAAoBlB,IAApB,CAAD,CAAtB,CAHW,CAIX;;AACAM,MAAAA,0BAA0B,CAACN,IAAD,CAA1B,CALW,CAMX;;AACAO,MAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAPW,CAQX;;AACAH,MAAAA,OAAO,CAAC,CAACJ,IAAD,CAAD,CAAP;AACH,KAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAuBH,CA3BD;;AA4BA,eAAe;AACXN,EAAAA,iBADW;AAEXE,EAAAA,cAFW;AAGXM,EAAAA;AAHW,CAAf","sourcesContent":["import React from \"react\";\n\n\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach((file) => {\n        file.remove();\n    })\n}\nconst CustomInputHelper = ({ accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus }) => {\n\n    const text = \"Drop a file OR select to browse local data\";\n\n    return (\n        <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n            {text}\n            <input\n                style={{ display: 'none' }}\n                type=\"file\"\n                accept={accept}\n                multiple={false}\n                className={\"custom-dropzone-input-actual-input\"}\n                onChange={e => {\n                    const file = e.target.files[0];\n                    // set current file path to convert to readable URL later\n                    setCurrentFilePathData(URL.createObjectURL(file));\n                    // set status update for current file\n                    setCurrentUploadFileStatus(file);\n                    // mark file as READY \n                    setFileReadyStatus(true);\n                    // update \"Dropzone\" component state (NOT this react component state).\n                    onFiles([file])\n                }}\n            />\n        </label>\n    );\n}\nexport default {\n    calculateFileType,\n    onSubmitHelper,\n    CustomInputHelper\n};"]},"metadata":{},"sourceType":"module"}