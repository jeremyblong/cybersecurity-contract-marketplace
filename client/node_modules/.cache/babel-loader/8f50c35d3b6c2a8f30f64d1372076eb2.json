{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { Modal } from 'react-responsive-modal';\nimport { NotificationManager } from \"react-notifications\";\nimport Slider from \"react-slick\";\nimport { Container, Col, Card, Row, CardBody, CardHeader, ListGroupItem, ListGroup } from \"reactstrap\";\nimport moment from \"moment\";\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst renderPictureOrVideoLast = (file, index, onCloseModal, setSelectedModalIndex, galleryRef) => {\n  if (file !== null && _.has(file, \"link\")) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          // set current index for modal\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true); // go to appropriate/selected slide...\n\n          setTimeout(() => {\n            galleryRef.current.slickGoTo(index);\n          }, 375);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        controls: true,\n        muted: false,\n        width: \"100%\",\n        className: \"img-fluid\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          // set current index for modal\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true); // go to appropriate/selected slide...\n\n          setTimeout(() => {\n            galleryRef.current.slickGoTo(index);\n          }, 375);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid\",\n        alt: \"post1\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }))));\n    }\n  } else {\n    // image logic - DEFAULT.\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => {\n        // set current index for modal\n        setSelectedModalIndex(index); // open modal and display\n\n        onCloseModal(true); // go to appropriate/selected slide...\n\n        setTimeout(() => {\n          galleryRef.current.slickGoTo(index);\n        }, 375);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"latest-post profile-pic-video-sidebar-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      alt: \"post1\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nconst renderModalImageOrVideo = file => {\n  if (file !== null && _.has(file, \"link\")) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        controls: true,\n        playing: true,\n        loop: true,\n        muted: false,\n        width: \"100%\",\n        className: \"hacker-gallery-modal-pic\",\n        wrapper: \"div\",\n        url: file.src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: file.src,\n        className: \"hacker-gallery-modal-pic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }));\n    }\n  } else {\n    // image logic - DEFAULT.\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      className: \"hacker-gallery-modal-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nconst RenderGalleryModalHackerProfileHelper = _ref => {\n  let {\n    onCloseModal,\n    user,\n    isOpen,\n    galleryRef\n  } = _ref;\n  const [picturesArr, setPicturesArr] = useState([]);\n  useEffect(async () => {\n    if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n      const captionArray = []; // pictures exist - run setup logic\n\n      const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n        console.log(\"el\", el);\n\n        if (idx + 1 === row.length) {\n          // Last one.\n          let result = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type,\n            caption: `You're viewing the ${el.name} file...`,\n            autoplay: false,\n            showControls: true,\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            link: el.link,\n            className: \"caption-thumbnail-custom-hacker-profile\",\n            date: el.systemDate\n          }; // return constructed obj for lightbox\n\n          return result;\n        } else {\n          // Not last one.\n          let resultNotLast = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type,\n            caption: `You're viewing the ${el.name} file...`,\n            autoplay: false,\n            showControls: true,\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            link: el.link,\n            className: \"caption-thumbnail-custom-hacker-profile\",\n            date: el.systemDate\n          }; // return constructed obj for lightbox\n\n          return resultNotLast;\n        }\n      }); // wait for .mapped to finish then set the local state.\n\n      if (newlyStructuredProfilePicsVids) {\n        setPicturesArr(newlyStructuredProfilePicsVids);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'hackerProfileLightboxDisplayOverlay',\n      modal: 'hackerProfileLightboxDisplayModal'\n    },\n    open: isOpen,\n    onClose: onCloseModal,\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"modal-container-hacker-profile-maxed\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"spacing-col-profile-hacker\",\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({\n    ref: galleryRef,\n    className: \"profile-pictures-slider-pane\"\n  }, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }), typeof picturesArr !== \"undefined\" && picturesArr.length > 0 ? picturesArr.map((file, idxxx) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: idxxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      md: \"12\",\n      className: \"xl-100 box-col-12 outter-most-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"height-equal full-height-profile-images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calender-widget full-height-widget-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      id: \"full-height-row-hacker-profile-imgs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"min-height-col-inner-profile\",\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"min-cal-img-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 69\n      }\n    }, renderModalImageOrVideo(file))), /*#__PURE__*/React.createElement(Col, {\n      className: \"min-height-col-inner-profile\",\n      sm: \"12\",\n      md: \"8\",\n      lg: \"8\",\n      xl: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"add-shadow-profile-picture-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"b-l-primary border-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 77\n      }\n    }, \"Previous Profile Picture/Video Information\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 96\n      }\n    }, \"Viewing:\"), \" \", file.caption), /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 96\n      }\n    }, \"File Type:\"), \" \", file.type), /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 96\n      }\n    }, \"Uploaded:\"), \" \", moment(file.date).fromNow())))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        marginTop: \"17.5px\"\n      },\n      className: \"add-shadow-profile-picture-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"b-l-primary border-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 77\n      }\n    }, \"Previous Profile Picture/Video Information\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 77\n      }\n    }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\", \"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\", \"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\", \"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\", \"unknown printer took a galley of type and scrambled.\")))))))));\n  }) : null)))))));\n};\n\nexport default {\n  renderPictureOrVideoLast,\n  RenderGalleryModalHackerProfileHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js"],"names":["React","Fragment","useState","useEffect","ReactDOM","ReactPlayer","_","Modal","NotificationManager","Slider","Container","Col","Card","Row","CardBody","CardHeader","ListGroupItem","ListGroup","moment","settings","dots","infinite","speed","slidesToShow","slidesToScroll","renderPictureOrVideoLast","file","index","onCloseModal","setSelectedModalIndex","galleryRef","has","type","includes","setTimeout","current","slickGoTo","process","env","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","renderModalImageOrVideo","src","RenderGalleryModalHackerProfileHelper","user","isOpen","picturesArr","setPicturesArr","profilePicsVideos","length","captionArray","newlyStructuredProfilePicsVids","map","el","idx","row","console","log","result","caption","name","autoplay","showControls","thumbnail","className","date","systemDate","resultNotLast","overlay","modal","idxxx","fromNow","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { Modal } from 'react-responsive-modal';\nimport { NotificationManager } from \"react-notifications\";\nimport Slider from \"react-slick\";\nimport { Container, Col, Card, Row, CardBody, CardHeader, ListGroupItem, ListGroup } from \"reactstrap\";\nimport moment from \"moment\";\n\nconst settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n};\n\nconst renderPictureOrVideoLast = (file, index, onCloseModal, setSelectedModalIndex, galleryRef) => {\n    if (file !== null && _.has(file, \"link\")) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        // set current index for modal\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                        // go to appropriate/selected slide...\n                        setTimeout(() => {\n                            galleryRef.current.slickGoTo(index);\n                        }, 375)\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <ReactPlayer playing={true} loop={true} controls={true} muted={false} width={\"100%\"} className={\"img-fluid\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        // set current index for modal\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                        // go to appropriate/selected slide...\n                        setTimeout(() => {\n                            galleryRef.current.slickGoTo(index);\n                        }, 375)\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <img className=\"img-fluid\" alt=\"post1\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        }  \n    } else {\n        // image logic - DEFAULT.\n        return (\n            <Fragment>\n                <li onClick={() => {\n                    // set current index for modal\n                    setSelectedModalIndex(index);\n                    // open modal and display\n                    onCloseModal(true);\n                    // go to appropriate/selected slide...\n                    setTimeout(() => {\n                        galleryRef.current.slickGoTo(index);\n                    }, 375)\n                }}>\n                    <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                        <img className=\"img-fluid\" alt=\"post1\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} />\n                    </div>\n                </li>\n            </Fragment>\n        );\n    } \n}\nconst renderModalImageOrVideo = (file) => {\n    if (file !== null && _.has(file, \"link\")) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <ReactPlayer controls={true} playing={true} loop={true} muted={false} width={\"100%\"} className={\"hacker-gallery-modal-pic\"} wrapper={\"div\"} url={file.src} />\n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <img src={file.src} className={\"hacker-gallery-modal-pic\"} />\n                </Fragment>\n            );\n        }  \n    } else {\n        // image logic - DEFAULT.\n        return (\n            <Fragment>\n                <img src={process.env.REACT_APP_PLACEHOLDER_IMAGE} className={\"hacker-gallery-modal-pic\"} />\n            </Fragment>\n        );\n    } \n}\nconst RenderGalleryModalHackerProfileHelper = ({ onCloseModal, user, isOpen, galleryRef }) => {\n\n    const [ picturesArr, setPicturesArr ] = useState([]);\n\n    useEffect(async () => {\n\n        if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n            const captionArray = [];\n            // pictures exist - run setup logic\n            const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n                console.log(\"el\", el);\n                if (idx + 1 === row.length) {\n                    // Last one.\n                    let result = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type,\n                        caption: `You're viewing the ${el.name} file...`,\n                        autoplay: false,\n                        showControls: true,\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        link: el.link,\n                        className: \"caption-thumbnail-custom-hacker-profile\",\n                        date: el.systemDate\n                    };\n                    // return constructed obj for lightbox\n                    return result;\n                } else {\n                    // Not last one.\n                    let resultNotLast = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type,\n                        caption: `You're viewing the ${el.name} file...`,\n                        autoplay: false,\n                        showControls: true,\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        link: el.link,\n                        className: \"caption-thumbnail-custom-hacker-profile\",\n                        date: el.systemDate\n                    }\n                    // return constructed obj for lightbox\n                    return resultNotLast;\n                }\n            });\n            // wait for .mapped to finish then set the local state.\n            if (newlyStructuredProfilePicsVids) {\n                setPicturesArr(newlyStructuredProfilePicsVids);\n            }\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            <Modal classNames={{\n                overlay: 'hackerProfileLightboxDisplayOverlay',\n                modal: 'hackerProfileLightboxDisplayModal',\n            }} open={isOpen} onClose={onCloseModal} center>\n                <Container className={\"modal-container-hacker-profile-maxed\"} fluid={true}>\n                    <Row>\n                        <div className={\"centered-both-ways\"}>\n                            <Col className={\"spacing-col-profile-hacker\"} sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Slider ref={galleryRef} className={\"profile-pictures-slider-pane\"} {...settings}>\n                                    {typeof picturesArr !== \"undefined\" && picturesArr.length > 0 ? picturesArr.map((file, idxxx) => {\n                                        return (\n                                            <Fragment key={idxxx}>\n                                                <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\" className=\"xl-100 box-col-12 outter-most-container\">\n                                                    <Card className=\"height-equal full-height-profile-images\">\n                                                        <div className=\"calender-widget full-height-widget-profile\">\n                                                            <Row id={\"full-height-row-hacker-profile-imgs\"}>\n                                                                <Col className={\"min-height-col-inner-profile\"} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <div className=\"min-cal-img-height\">\n                                                                        {renderModalImageOrVideo(file)}\n                                                                    </div>\n                                                                </Col>\n                                                                <Col className={\"min-height-col-inner-profile\"} sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\">\n                                                                    <Card className={\"add-shadow-profile-picture-card\"}>\n                                                                        <CardHeader className=\"b-l-primary border-3\">\n                                                                            <h5>Previous Profile Picture/Video Information</h5>\n                                                                        </CardHeader>\n                                                                        <CardBody>\n                                                                            <ListGroup className=\"list-group-flush\">\n                                                                                <ListGroupItem><strong>Viewing:</strong> {file.caption}</ListGroupItem>\n                                                                                <ListGroupItem><strong>File Type:</strong> {file.type}</ListGroupItem>\n                                                                                <ListGroupItem><strong>Uploaded:</strong> {moment(file.date).fromNow()}</ListGroupItem>\n                                                                            </ListGroup>\n                                                                        </CardBody>\n                                                                    </Card>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <Card style={{ marginTop: \"17.5px\" }} className={\"add-shadow-profile-picture-card\"}>\n                                                                        <CardHeader className=\"b-l-primary border-3\">\n                                                                            <h5>Previous Profile Picture/Video Information</h5>\n                                                                        </CardHeader>\n                                                                        <CardBody>\n                                                                            <p>\n                                                                                {\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\"}\n                                                                                {\"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\"}\n                                                                                {\"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\"}\n                                                                                {\"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\"}\n                                                                                {\"unknown printer took a galley of type and scrambled.\"}\n                                                                            </p>\n                                                                        </CardBody>\n                                                                    </Card>\n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                    </Card>\n                                                </Col>\n                                            </Fragment>\n                                        );\n                                    }) : null}\n                                </Slider>\n                            </Col>\n                        </div>\n                    </Row>\n                </Container>\n            </Modal>\n        </Fragment>\n    );\n}\nexport default {\n    renderPictureOrVideoLast,\n    RenderGalleryModalHackerProfileHelper\n};"]},"metadata":{},"sourceType":"module"}