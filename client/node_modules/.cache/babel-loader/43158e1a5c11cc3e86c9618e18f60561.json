{"ast":null,"code":"import _regeneratorRuntime from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js\";\n\nimport React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form, InputGroupAddon, InputGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport { NotificationManager } from 'react-notifications';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport _ from \"lodash\";\nimport Switch from \"react-switch\"; // ~ helper function rendered in main component (bottom of this component) ~\n\nvar RenderConditionalBasedUponSellingType = function RenderConditionalBasedUponSellingType(_ref) {\n  var clearAllBodyScrollLocks = _ref.clearAllBodyScrollLocks,\n      handleDynamicFormReset = _ref.handleDynamicFormReset,\n      quantityAvailabilityOptions = _ref.quantityAvailabilityOptions,\n      acceptCouponsDiscountsOptions = _ref.acceptCouponsDiscountsOptions,\n      reset = _ref.reset,\n      type = _ref.type,\n      setValue = _ref.setValue,\n      getValues = _ref.getValues,\n      errors = _ref.errors,\n      setError = _ref.setError,\n      register = _ref.register,\n      control = _ref.control,\n      clearErrors = _ref.clearErrors,\n      biddingIncrementIntervalOptions = _ref.biddingIncrementIntervalOptions,\n      handleSubmit = _ref.handleSubmit,\n      shiftCoreStyles = _ref.shiftCoreStyles,\n      setModalOpenStatus = _ref.setModalOpenStatus,\n      saveSoftwareListingInfo = _ref.saveSoftwareListingInfo,\n      previouslySavedSoftwareData = _ref.previouslySavedSoftwareData;\n  // ref's below...\n  var biddingIncrementIntervalGeneratedRef = useRef(null);\n  var quantityAvailableForSaleGeneratedRef = useRef(null);\n  var discountCodeAcceptanceGeneratedRef = useRef(null); // imported helper functions below...\n\n  var startBidCheck = helpers().startBidCheck;\n  var reservePrice = helpers().reservePrice;\n  var biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n  var quantityAvailability = helpers().quantityAvailability;\n  var acceptCouponsDiscounts = helpers().acceptCouponsDiscounts;\n  var whatsIncludedInfoListing = helpers().whatsIncludedInfoListing;\n  var buyItNowHelper = helpers().buyItNowHelper;\n  var automaticAcceptBestOffer = helpers().automaticAcceptBestOffer;\n  var minimumRequiredOffer = helpers().minimumRequiredOffer; // gather redux-hook-form values (basically a \"state\" replacement).\n\n  var currentValues = getValues();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      buyitnowChecked = _useState2[0],\n      setBuyitnowState = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      auctionChecked = _useState4[0],\n      setAuctionCheckedState = _useState4[1];\n\n  var _useState5 = useState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      switchText = _useState6[0],\n      setSwitchTextState = _useState6[1];\n\n  var _useState7 = useState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      switchTextAuctionBuyitnow = _useState8[0],\n      setSwitchTextAuctionBuyitnowState = _useState8[1]; // console.log(\"startBidCheck : \", startBidCheck);\n\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value; // clearErrors(name);\n\n    setValue(name, value, {\n      shouldValidate: true\n    });\n    return value;\n  };\n\n  var handleTimespanSelectChange = function handleTimespanSelectChange(selectedOption) {\n    // run conditionals\n    setValue('biddingIncrementInterval', selectedOption, {\n      shouldValidate: false\n    });\n    biddingIncrementIntervalGeneratedRef.current.blur();\n  };\n\n  var handleQuantityAvailabilityChange = function handleQuantityAvailabilityChange(selectedOption) {\n    // run conditionals\n    setValue('quantityAvailableForSale', selectedOption, {\n      shouldValidate: false\n    });\n    quantityAvailableForSaleGeneratedRef.current.blur();\n  };\n\n  var handleAcceptCouponsDiscountsChange = function handleAcceptCouponsDiscountsChange(selectedOption) {\n    // run conditionals\n    setValue('discountCodeAcceptance', selectedOption, {\n      shouldValidate: false\n    });\n    discountCodeAcceptanceGeneratedRef.current.blur();\n  };\n\n  var menuClosedSelectInput = function menuClosedSelectInput() {\n    if (currentValues.biddingIncrementInterval) {// setSelectOneErrorStatus(true);\n    }\n  };\n\n  var onSubmit = function onSubmit(data, e, selectedType) {\n    console.log(\"DATA@!\", data, currentValues);\n    e.preventDefault();\n\n    if (data !== '') {\n      var _reservePrice = data.reservePrice,\n          startBid = data.startBid;\n\n      switch (selectedType) {\n        case \"auction-ONLY\":\n          var omittedKeysAuctionOnly = _.omit(data, [\"reservePrice\", \"startBid\"]);\n\n          var newDataObj = {\n            auctionPriceRelatedData: _objectSpread(_objectSpread({}, omittedKeysAuctionOnly), {}, {\n              reservePrice: Number(Math.round(Number(_reservePrice))),\n              startBid: Number(Math.round(Number(startBid))),\n              auctionSelectedType: selectedType\n            })\n          };\n\n          var mergedPreviousNewState = _objectSpread(_objectSpread({}, previouslySavedSoftwareData), newDataObj);\n\n          saveSoftwareListingInfo(mergedPreviousNewState);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          handleDynamicFormReset(\"auction-ONLY\");\n          break;\n\n        case \"auction-AND-buy-it-now\":\n          var omittedKeysAuctionAndBuyitnow = _.omit(data, [\"reservePrice\", \"startBid\", \"buyItNowPrice\"]);\n\n          var newDataObjAuctionAndBuyitnow = {\n            auctionPriceRelatedData: _objectSpread(_objectSpread({}, omittedKeysAuctionAndBuyitnow), {}, {\n              reservePrice: Number(Math.round(Number(_reservePrice))),\n              startBid: Number(Math.round(Number(startBid))),\n              buyItNowData: auctionChecked === true ? {\n                active: true,\n                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice)))\n              } : {\n                active: false,\n                buyItNowPrice: undefined\n              },\n              auctionSelectedType: selectedType\n            })\n          };\n\n          var mergedPreviousNewStateAuctionAndBuyitnow = _objectSpread(_objectSpread({}, previouslySavedSoftwareData), newDataObjAuctionAndBuyitnow);\n\n          saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          handleDynamicFormReset(\"auction-AND-buy-it-now\");\n          break;\n\n        case \"buy-it-now-ONLY\":\n          var omittedKeysBuyitnowOnlyConcattenated = _.omit(data, [\"buyItNowPrice\"]);\n\n          var newDataObjBuyitnowOnly = {\n            auctionPriceRelatedData: _objectSpread(_objectSpread({}, omittedKeysBuyitnowOnlyConcattenated), {}, {\n              buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n              auctionSelectedType: selectedType\n            })\n          };\n\n          var mergedPreviousNewStateBuyitnowOnly = _objectSpread(_objectSpread({}, previouslySavedSoftwareData), newDataObjBuyitnowOnly);\n\n          saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOnly);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          handleDynamicFormReset(\"buy-it-now-ONLY\");\n          break;\n\n        case \"buy-it-now-OR-best-offer\":\n          var omittedKeysBuyitnowOrBestOffer = _.omit(data, [\"buyItNowPrice\", \"minimumRequiredOfferValue\", \"automaticBestOfferAccept\"]);\n\n          var newDataObjBuyitnowOrBestOffer = {\n            auctionPriceRelatedData: _objectSpread(_objectSpread({}, omittedKeysBuyitnowOrBestOffer), {}, {\n              buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n              offerFeatureData: buyitnowChecked === true ? {\n                minimumRequiredOfferValue: Number(Math.round(Number(data.minimumRequiredOfferValue))),\n                automaticBestOfferAccept: Number(Math.round(Number(data.automaticBestOfferAccept))),\n                active: true\n              } : {\n                active: false,\n                automaticBestOfferAccept: undefined,\n                minimumRequiredOfferValue: undefined\n              },\n              auctionSelectedType: selectedType\n            })\n          };\n\n          var mergedPreviousNewStateBuyitnowOrBestOffer = _objectSpread(_objectSpread({}, previouslySavedSoftwareData), newDataObjBuyitnowOrBestOffer);\n\n          saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOrBestOffer);\n          shiftCoreStyles(false);\n          setModalOpenStatus(false);\n          handleDynamicFormReset(\"buy-it-now-OR-best-offer\");\n          break;\n\n        default:\n          break;\n      }\n\n      clearAllBodyScrollLocks();\n      NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\", \"Successfully updated listing information!\", 4500);\n    } else {\n      console.log(\"onSubmit failure :(\");\n      errors.showMessages();\n    }\n  };\n\n  var onError = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(errors, e, innerRun) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"error submitting...!\", errors, e, innerRun);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onError(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  console.log(\"currentValues : \", currentValues);\n\n  var handleSwitchValueChange = function handleSwitchValueChange(value) {\n    if (value === true) {\n      var option = {\n        label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\",\n        value: \"1\",\n        numericalAmount: 1,\n        min: 1,\n        max: 1\n      };\n      setSwitchTextState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\"); // check if quanitity value already selected\n\n      if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n        // update switch state\n        setBuyitnowState(value);\n      } else {\n        // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n        setValue('quantityAvailableForSale', option, {\n          shouldValidate: false\n        }); // quantity value NOT already selected - do nothing but update switch state\n\n        setBuyitnowState(value);\n      }\n    } else {\n      setSwitchTextState(\"MULTIPLE quantities are selected (ALLOWING MULTIPLE SALES) and available so you can sell multiples of whatever software you're selling (Can be sold an unlimited amount of times - basically 1 per purchase per user). You've SELECTED to DISABLE the 'BEST-OFFER' setting.\"); // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n\n      reset({\n        automaticBestOfferAccept: \"\",\n        minimumRequiredOfferValue: \"\"\n      }); // update switch state\n\n      setBuyitnowState(value);\n    }\n  };\n\n  var handleSwitchValueChangeAuctionBuyitnow = function handleSwitchValueChangeAuctionBuyitnow(value) {\n    if (value === true) {\n      var option = {\n        label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\",\n        value: \"1\",\n        numericalAmount: 1,\n        min: 1,\n        max: 1\n      }; // setSwitchTextAuctionBuyitnowState\n\n      setSwitchTextAuctionBuyitnowState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\"); // check if quanitity value already selected\n\n      if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n        // update switch state\n        setAuctionCheckedState(value);\n      } else {\n        // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n        setValue('quantityAvailableForSale', option, {\n          shouldValidate: false\n        }); // quantity value NOT already selected - do nothing but update switch state\n\n        setAuctionCheckedState(value);\n      }\n    } else {\n      setSwitchTextAuctionBuyitnowState(\"'AUCTION-ONLY' is enabled/selected currently and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION-ONLY' is now SELECTED!\"); // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n\n      reset({\n        buyItNowPrice: \"\"\n      }); // update switch state\n\n      setAuctionCheckedState(value);\n    }\n  };\n\n  var renderMainContentPassedConditional = function renderMainContentPassedConditional(selectedType) {\n    switch (selectedType) {\n      case \"auction-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }\n        }, \"This is a \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: {\n            color: \"blue\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 43\n          }\n        }, \"SINGLE ITEM AUCTION\"), \" listing which means only \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: {\n            color: \"blue\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 131\n          }\n        }, \"ONE\"), \" person will be able to purchase what you're selling\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }\n        }, \"Only one person will be able to purchase this listing - if you'd like to either sell multiple copies of your \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: {\n            textDecorationLine: \"underline\",\n            color: \"red\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 141\n          }\n        }, \"software/code (or related)\"), \" then you should check out the other listing pricing options such as \\\"auction AND buy-it-now\\\", \\\"buy-it-now ONLY\\\" or \\\"Buy-it-now\\\" OR \\\"best-offer ONLY\\\" which may include options that're more applicable to your personal preferences...\"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit(function (data, e) {\n            return onSubmit(data, e, selectedType);\n          }, function (errors, e) {\n            return onError(errors, e, true);\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 45\n          }\n        }, startBidCheck.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, startBidCheck.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: startBidCheck.type,\n          name: startBidCheck.name,\n          placeholder: startBidCheck.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.startBid,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 49\n          }\n        }))), errors.startBid ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 64\n          }\n        }, errors.startBid.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 45\n          }\n        }, reservePrice.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, reservePrice.check(setError, register, currentValues), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: reservePrice.type,\n          name: reservePrice.name,\n          placeholder: reservePrice.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.reservePrice,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 49\n          }\n        }))), errors.reservePrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 68\n          }\n        }, errors.reservePrice.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: function render(_ref3) {\n            var field = _ref3.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: function onChange(selectedOption) {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: function onClick() {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"auction-AND-buy-it-now\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit(function (data, e) {\n            return onSubmit(data, e, selectedType);\n          }, function (errors, e) {\n            return onError(errors, e, true);\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 45\n          }\n        }, startBidCheck.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, startBidCheck.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: startBidCheck.type,\n          name: startBidCheck.name,\n          placeholder: startBidCheck.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.startBid,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 49\n          }\n        }))), errors.startBid ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 64\n          }\n        }, errors.startBid.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 45\n          }\n        }, reservePrice.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, reservePrice.check(setError, register, currentValues), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: reservePrice.type,\n          name: reservePrice.name,\n          placeholder: reservePrice.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.reservePrice,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 49\n          }\n        }))), errors.reservePrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 68\n          }\n        }, errors.reservePrice.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: function render(_ref4) {\n            var field = _ref4.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: function onChange(selectedOption) {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 33\n          }\n        }, auctionChecked === true ? /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 64\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 45\n          }\n        }, buyItNowHelper.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, buyItNowHelper.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: buyItNowHelper.type,\n          name: buyItNowHelper.name,\n          placeholder: buyItNowHelper.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.buyItNowPrice,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 49\n          }\n        }))), errors.buyItNowPrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 69\n          }\n        }, errors.buyItNowPrice.message) : null)) : null, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 45\n          }\n        }, \"Would you like to have this listing as an \\\"AUCTION-ONLY\\\" listing OR a an \\\"AUCTION W/BUY-IT-NOW\\\" listing? (***auction W/BUY-IT-NOW allows for both bids/offers as well as a 'Buy-it-now' option IF ONLY ONE item is being sold)\"), /*#__PURE__*/React.createElement(Row, {\n          className: \"selector-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"2\",\n          md: \"2\",\n          lg: \"2\",\n          xl: \"2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          width: 72.5,\n          boxShadow: \"0px 0px 15px 4.5px #6A6A6A\",\n          offColor: \"#888\",\n          className: \"buyitnow-switch-class\",\n          onColor: \"#51bb25\",\n          onChange: handleSwitchValueChangeAuctionBuyitnow,\n          checked: auctionChecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          sm: \"10\",\n          md: \"10\",\n          lg: \"10\",\n          xl: \"10\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"switch-text-custom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 53\n          }\n        }, switchTextAuctionBuyitnow)))))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 45\n          }\n        }, quantityAvailability.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: quantityAvailability.name\n        }, quantityAvailability.check(setError, register, clearErrors), {\n          render: function render(_ref5) {\n            var field = _ref5.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: quantityAvailableForSaleGeneratedRef,\n              autoBlur: true,\n              placeholder: quantityAvailability.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.quantityAvailableForSale,\n              onChange: function onChange(selectedOption) {\n                return handleQuantityAvailabilityChange(selectedOption);\n              },\n              options: buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 45\n          }\n        })), errors.quantityAvailableForSale ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 80\n          }\n        }, errors.quantityAvailableForSale.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 45\n          }\n        }, acceptCouponsDiscounts.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: acceptCouponsDiscounts.name\n        }, acceptCouponsDiscounts.check(setError, register, clearErrors), {\n          render: function render(_ref6) {\n            var field = _ref6.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: discountCodeAcceptanceGeneratedRef,\n              autoBlur: true,\n              placeholder: acceptCouponsDiscounts.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.discountCodeAcceptance,\n              onChange: function onChange(selectedOption) {\n                return handleAcceptCouponsDiscountsChange(selectedOption);\n              },\n              options: acceptCouponsDiscountsOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 45\n          }\n        })), errors.discountCodeAcceptance ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 78\n          }\n        }, errors.discountCodeAcceptance.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: function onClick() {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"buy-it-now-OR-best-offer\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit(function (data, e) {\n            return onSubmit(data, e, selectedType);\n          }, function (errors, e) {\n            return onError(errors, e, true);\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 29\n          }\n        }, buyitnowChecked === true ? /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 45\n          }\n        }, automaticAcceptBestOffer.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, automaticAcceptBestOffer.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: automaticAcceptBestOffer.type,\n          name: automaticAcceptBestOffer.name,\n          placeholder: automaticAcceptBestOffer.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.automaticBestOfferAccept,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 49\n          }\n        }))), errors.automaticBestOfferAccept ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 80\n          }\n        }, errors.automaticBestOfferAccept.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 45\n          }\n        }, minimumRequiredOffer.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, minimumRequiredOffer.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: minimumRequiredOffer.type,\n          name: minimumRequiredOffer.name,\n          placeholder: minimumRequiredOffer.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.minimumRequiredOfferValue,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 49\n          }\n        }))), errors.minimumRequiredOfferValue ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 81\n          }\n        }, errors.minimumRequiredOfferValue.message) : null))) : null, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 45\n          }\n        }, buyItNowHelper.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 124\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, buyItNowHelper.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: buyItNowHelper.type,\n          name: buyItNowHelper.name,\n          placeholder: buyItNowHelper.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.buyItNowPrice,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 49\n          }\n        }))), errors.buyItNowPrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 69\n          }\n        }, errors.buyItNowPrice.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 45\n          }\n        }, \"Would you like to offer \\\"buy-it-now\\\" AND \\\"best-offer\\\" options? Select to ALLOW buy it now (will limit quanitity for sale to 1-ONE) or disallow to allow multiple sales\"), /*#__PURE__*/React.createElement(Row, {\n          className: \"selector-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"2\",\n          md: \"2\",\n          lg: \"2\",\n          xl: \"2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          width: 72.5,\n          boxShadow: \"0px 0px 15px 4.5px #6A6A6A\",\n          offColor: \"#888\",\n          className: \"buyitnow-switch-class\",\n          onColor: \"#51bb25\",\n          onChange: handleSwitchValueChange,\n          checked: buyitnowChecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          sm: \"10\",\n          md: \"10\",\n          lg: \"10\",\n          xl: \"10\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"switch-text-custom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 53\n          }\n        }, switchText)))))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 45\n          }\n        }, quantityAvailability.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: quantityAvailability.name\n        }, quantityAvailability.check(setError, register, clearErrors), {\n          render: function render(_ref7) {\n            var field = _ref7.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: quantityAvailableForSaleGeneratedRef,\n              autoBlur: true,\n              placeholder: quantityAvailability.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.quantityAvailableForSale,\n              onChange: function onChange(selectedOption) {\n                return handleQuantityAvailabilityChange(selectedOption);\n              },\n              options: buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 45\n          }\n        })), errors.quantityAvailableForSale ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 80\n          }\n        }, errors.quantityAvailableForSale.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 45\n          }\n        }, acceptCouponsDiscounts.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: acceptCouponsDiscounts.name\n        }, acceptCouponsDiscounts.check(setError, register, clearErrors), {\n          render: function render(_ref8) {\n            var field = _ref8.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: discountCodeAcceptanceGeneratedRef,\n              autoBlur: true,\n              placeholder: acceptCouponsDiscounts.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.discountCodeAcceptance,\n              onChange: function onChange(selectedOption) {\n                return handleAcceptCouponsDiscountsChange(selectedOption);\n              },\n              options: acceptCouponsDiscountsOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 45\n          }\n        })), errors.discountCodeAcceptance ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 78\n          }\n        }, errors.discountCodeAcceptance.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: function onClick() {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      case \"buy-it-now-ONLY\":\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          className: \"theme-form\",\n          onSubmit: handleSubmit(function (data, e) {\n            return onSubmit(data, e, selectedType);\n          }, function (errors, e) {\n            return onError(errors, e, true);\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 45\n          }\n        }, biddingIncrementIntervalHelper.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: biddingIncrementIntervalHelper.name\n        }, biddingIncrementIntervalHelper.check(setError, register, clearErrors), {\n          render: function render(_ref9) {\n            var field = _ref9.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: biddingIncrementIntervalGeneratedRef,\n              autoBlur: true,\n              placeholder: biddingIncrementIntervalHelper.placeholder,\n              defaultValue: null,\n              onMenuClose: menuClosedSelectInput,\n              value: currentValues.biddingIncrementInterval,\n              onChange: function onChange(selectedOption) {\n                return handleTimespanSelectChange(selectedOption);\n              },\n              options: biddingIncrementIntervalOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 45\n          }\n        })), errors.biddingIncrementInterval ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 80\n          }\n        }, errors.biddingIncrementInterval.message) : null))), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 41\n          }\n        }, buyItNowHelper.label), /*#__PURE__*/React.createElement(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n          className: \"custom-dollarsign-addon\",\n          addonType: \"prepend\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(InputGroupText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 120\n          }\n        }, \"$ (USD)\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, buyItNowHelper.check(setError, register), {\n          pattern: \"[0-9]*\",\n          className: \"form-control\",\n          type: buyItNowHelper.type,\n          name: buyItNowHelper.name,\n          placeholder: buyItNowHelper.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.buyItNowPrice,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 45\n          }\n        }))), errors.buyItNowPrice ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 65\n          }\n        }, errors.buyItNowPrice.message) : null)), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 45\n          }\n        }, quantityAvailability.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: quantityAvailability.name\n        }, quantityAvailability.check(setError, register, clearErrors), {\n          render: function render(_ref10) {\n            var field = _ref10.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: quantityAvailableForSaleGeneratedRef,\n              autoBlur: true,\n              placeholder: quantityAvailability.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.quantityAvailableForSale,\n              onChange: function onChange(selectedOption) {\n                return handleQuantityAvailabilityChange(selectedOption);\n              },\n              options: quantityAvailabilityOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 45\n          }\n        })), errors.quantityAvailableForSale ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 80\n          }\n        }, errors.quantityAvailableForSale.message) : null)), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"6\",\n          xl: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 45\n          }\n        }, acceptCouponsDiscounts.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n          control: control,\n          name: acceptCouponsDiscounts.name\n        }, acceptCouponsDiscounts.check(setError, register, clearErrors), {\n          render: function render(_ref11) {\n            var field = _ref11.field;\n            return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n              ref: discountCodeAcceptanceGeneratedRef,\n              autoBlur: true,\n              placeholder: acceptCouponsDiscounts.placeholder,\n              defaultValue: null,\n              onMenuClose: null,\n              value: currentValues.discountCodeAcceptance,\n              onChange: function onChange(selectedOption) {\n                return handleAcceptCouponsDiscountsChange(selectedOption);\n              },\n              options: acceptCouponsDiscountsOptions,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 53\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 45\n          }\n        })), errors.discountCodeAcceptance ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 78\n          }\n        }, errors.discountCodeAcceptance.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 45\n          }\n        }, whatsIncludedInfoListing.label), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n          rows: 10\n        }, whatsIncludedInfoListing.check(setError, register), {\n          className: \"form-control\",\n          type: whatsIncludedInfoListing.type,\n          name: whatsIncludedInfoListing.name,\n          placeholder: whatsIncludedInfoListing.placeholder,\n          onChange: function onChange(e) {\n            return handleInputChange(e);\n          },\n          value: currentValues.whatsIncluded,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 45\n          }\n        })), errors.whatsIncluded ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"span-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 69\n          }\n        }, errors.whatsIncluded.message) : null))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          md: \"12\",\n          lg: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            width: \"100%\"\n          },\n          color: \"success\",\n          onClick: function onClick() {// ~ run form submission (redux-hook-form) ~\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 37\n          }\n        }, \"Submit responses, close modal & return to primary form\"))))));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return renderMainContentPassedConditional(type);\n};\n\nvar SlideUpPaneAuctionPurchaseSelectionData = function SlideUpPaneAuctionPurchaseSelectionData(_ref12) {\n  var clearAllBodyScrollLocks = _ref12.clearAllBodyScrollLocks,\n      typeOfListing = _ref12.typeOfListing,\n      setIsTourOpenStatus = _ref12.setIsTourOpenStatus,\n      selected = _ref12.selected,\n      shiftCoreStyles = _ref12.shiftCoreStyles,\n      previouslySavedSoftwareData = _ref12.previouslySavedSoftwareData,\n      saveSoftwareListingInfo = _ref12.saveSoftwareListingInfo,\n      onSubmit = _ref12.onSubmit,\n      onErrorMainForm = _ref12.onErrorMainForm,\n      scrollToTourWrapper = _ref12.scrollToTourWrapper;\n\n  var _useForm = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      getValues = _useForm.getValues,\n      setValue = _useForm.setValue,\n      setError = _useForm.setError,\n      clearErrors = _useForm.clearErrors,\n      errors = _useForm.formState.errors;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isOpen = _useState10[0],\n      setModalOpenStatus = _useState10[1];\n\n  var handleDynamicFormReset = function handleDynamicFormReset(selectedType) {\n    switch (selectedType) {\n      case \"buy-it-now-ONLY\":\n        reset({\n          biddingIncrementInterval: undefined,\n          reservePrice: undefined,\n          startBid: undefined,\n          whatsIncluded: undefined,\n          buyItNowPrice: undefined,\n          quantityAvailableForSale: undefined,\n          discountCodeAcceptance: undefined\n        });\n        break;\n\n      case \"auction-AND-buy-it-now\":\n        reset({\n          biddingIncrementInterval: undefined,\n          reservePrice: undefined,\n          startBid: undefined,\n          whatsIncluded: undefined,\n          buyItNowPrice: undefined,\n          discountCodeAcceptance: undefined,\n          quantityAvailableForSale: undefined\n        });\n        break;\n\n      case \"auction-ONLY\":\n        reset({\n          biddingIncrementInterval: undefined,\n          reservePrice: undefined,\n          startBid: undefined,\n          whatsIncluded: undefined\n        });\n        break;\n\n      case \"buy-it-now-OR-best-offer\":\n        reset({\n          automaticBestOfferAccept: undefined,\n          discountCodeAcceptance: undefined,\n          buyItNowPrice: undefined,\n          minimumRequiredOfferValue: undefined,\n          quantityAvailableForSale: undefined,\n          whatsIncluded: undefined\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var startBidCheck = helpers().startBidCheck;\n  var handleFinalSubmissionInputs = functions.handleFinalSubmissionInputs,\n      biddingIncrementIntervalOptions = functions.biddingIncrementIntervalOptions,\n      quantityAvailabilityOptions = functions.quantityAvailabilityOptions,\n      acceptCouponsDiscountsOptions = functions.acceptCouponsDiscountsOptions;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"27.5px\",\n      paddingBottom: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      // DISABLE clicking background\n      shiftCoreStyles(true); // set modal sheet pane OPEN/true\n\n      setModalOpenStatus(true); // scroll to target and LOCK SCREEN until closed.\n\n      scrollToTourWrapper.current.scrollIntoView(); // alter slightly to account for top-NAV\n\n      setTimeout(function () {\n        window.scrollBy(0, -135);\n      }, 750); // lock after appropriate position change\n\n      setTimeout(function () {\n        var select = document.querySelector(\".enact-nonclick\");\n        disableBodyScroll(select);\n      }, 1000);\n    },\n    outline: true,\n    className: \"btn-pill btn-air-success stretched-purchase-options-btn\",\n    color: \"success\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 17\n    }\n  }, \"Select & modify listing pricing and purchase options\")), /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: function onClose() {\n      return setModalOpenStatus(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      // run submission logic\n      handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles, setIsTourOpenStatus, clearErrors, handleDynamicFormReset, typeOfListing, clearAllBodyScrollLocks);\n    },\n    className: \"btn-square stretch-and-space-btn-left\",\n    active: true,\n    color: \"primary\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 33\n    }\n  }, \"Close/Exit Pane & Go Back To Listing Selection Area\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      // allow background clicking again\n      shiftCoreStyles(false); // close modal\n\n      setModalOpenStatus(false); // clear errors\n\n      clearErrors();\n      clearAllBodyScrollLocks();\n      handleDynamicFormReset(typeOfListing);\n    },\n    className: \"btn-square stretch-and-space-btn-right\",\n    active: true,\n    color: \"secondary\",\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 33\n    }\n  }, \"Cancel/Close\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-normal-backer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: \"Auction purchase options/settings\",\n    title: \"Select your preferred auction type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-main-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RenderConditionalBasedUponSellingType, {\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    handleDynamicFormReset: handleDynamicFormReset,\n    quantityAvailabilityOptions: quantityAvailabilityOptions,\n    acceptCouponsDiscountsOptions: acceptCouponsDiscountsOptions,\n    reset: reset,\n    type: selected,\n    setValue: setValue,\n    getValues: getValues,\n    errors: errors,\n    setError: setError,\n    register: register,\n    control: control,\n    clearErrors: clearErrors,\n    biddingIncrementIntervalOptions: biddingIncrementIntervalOptions,\n    handleSubmit: handleSubmit,\n    shiftCoreStyles: shiftCoreStyles,\n    setModalOpenStatus: setModalOpenStatus,\n    onSubmit: onSubmit,\n    onErrorMainForm: onErrorMainForm,\n    saveSoftwareListingInfo: saveSoftwareListingInfo,\n    previouslySavedSoftwareData: previouslySavedSoftwareData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 45\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    style: {\n      zIndex: \"-100\"\n    },\n    id: \"custom-backdrop-noclick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // return desired selected redux-state\n  return {\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nvar ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, {\n  shiftCoreStyles: shiftCoreStyles,\n  saveSoftwareListingInfo: saveSoftwareListingInfo\n})(SlideUpPaneAuctionPurchaseSelectionData); // export helper functions\n\nexport default {\n  ConnectedSlideUpPaneAuctionPurchase: ConnectedSlideUpPaneAuctionPurchase,\n  RenderConditionalBasedUponSellingType: RenderConditionalBasedUponSellingType\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/pane.js"],"names":["React","Fragment","useState","useRef","Sheet","Button","Container","Col","Row","Card","FormGroup","Label","CardBody","Form","InputGroupAddon","InputGroup","InputGroupText","Breadcrumb","helpers","functions","useForm","Controller","connect","shiftCoreStyles","Select","saveSoftwareListingInfo","NotificationManager","disableBodyScroll","enableBodyScroll","_","Switch","RenderConditionalBasedUponSellingType","clearAllBodyScrollLocks","handleDynamicFormReset","quantityAvailabilityOptions","acceptCouponsDiscountsOptions","reset","type","setValue","getValues","errors","setError","register","control","clearErrors","biddingIncrementIntervalOptions","handleSubmit","setModalOpenStatus","previouslySavedSoftwareData","biddingIncrementIntervalGeneratedRef","quantityAvailableForSaleGeneratedRef","discountCodeAcceptanceGeneratedRef","startBidCheck","reservePrice","biddingIncrementIntervalHelper","quantityAvailability","acceptCouponsDiscounts","whatsIncludedInfoListing","buyItNowHelper","automaticAcceptBestOffer","minimumRequiredOffer","currentValues","buyitnowChecked","setBuyitnowState","auctionChecked","setAuctionCheckedState","switchText","setSwitchTextState","switchTextAuctionBuyitnow","setSwitchTextAuctionBuyitnowState","handleInputChange","e","target","name","value","shouldValidate","handleTimespanSelectChange","selectedOption","current","blur","handleQuantityAvailabilityChange","handleAcceptCouponsDiscountsChange","menuClosedSelectInput","biddingIncrementInterval","onSubmit","data","selectedType","console","log","preventDefault","startBid","omittedKeysAuctionOnly","omit","newDataObj","auctionPriceRelatedData","Number","Math","round","auctionSelectedType","mergedPreviousNewState","omittedKeysAuctionAndBuyitnow","newDataObjAuctionAndBuyitnow","buyItNowData","active","buyItNowPrice","undefined","mergedPreviousNewStateAuctionAndBuyitnow","omittedKeysBuyitnowOnlyConcattenated","newDataObjBuyitnowOnly","mergedPreviousNewStateBuyitnowOnly","omittedKeysBuyitnowOrBestOffer","newDataObjBuyitnowOrBestOffer","offerFeatureData","minimumRequiredOfferValue","automaticBestOfferAccept","mergedPreviousNewStateBuyitnowOrBestOffer","success","showMessages","onError","innerRun","handleSwitchValueChange","option","label","numericalAmount","min","max","quantityAvailableForSale","Object","keys","length","handleSwitchValueChangeAuctionBuyitnow","renderMainContentPassedConditional","color","textDecorationLine","check","placeholder","message","field","whatsIncluded","width","discountCodeAcceptance","SlideUpPaneAuctionPurchaseSelectionData","typeOfListing","setIsTourOpenStatus","selected","onErrorMainForm","scrollToTourWrapper","mode","reValidateMode","formState","isOpen","handleFinalSubmissionInputs","paddingTop","paddingBottom","scrollIntoView","setTimeout","window","scrollBy","select","document","querySelector","zIndex","mapStateToProps","state","softwareListingSale","softwareListingSaleInfo","ConnectedSlideUpPaneAuctionPurchase"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Col, Row, Card, FormGroup, Label, CardBody, Form, InputGroupAddon, InputGroup, InputGroupText } from \"reactstrap\";\nimport \"./styles.css\";\nimport Breadcrumb from \"../../../../../../../../../layout/breadcrumb\";\nimport helpers from \"./helpers/reactHookFormRelated.js\";\nimport functions from \"./helpers/helperFunctions.js\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport Select from 'react-select';\nimport { saveSoftwareListingInfo } from \"../../../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport { NotificationManager } from 'react-notifications';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport _ from \"lodash\";\nimport Switch from \"react-switch\";\n\n// ~ helper function rendered in main component (bottom of this component) ~\nconst RenderConditionalBasedUponSellingType = ({ clearAllBodyScrollLocks, handleDynamicFormReset, quantityAvailabilityOptions, acceptCouponsDiscountsOptions, reset, type, setValue, getValues, errors, setError, register, control, clearErrors, biddingIncrementIntervalOptions, handleSubmit, shiftCoreStyles, setModalOpenStatus, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n    // ref's below...\n    const biddingIncrementIntervalGeneratedRef = useRef(null);\n    const quantityAvailableForSaleGeneratedRef = useRef(null);\n    const discountCodeAcceptanceGeneratedRef = useRef(null);\n    // imported helper functions below...\n    const startBidCheck = helpers().startBidCheck;\n    const reservePrice = helpers().reservePrice;\n    const biddingIncrementIntervalHelper = helpers().biddingIncrementIntervalHelper;\n    const quantityAvailability = helpers().quantityAvailability;\n    const acceptCouponsDiscounts = helpers().acceptCouponsDiscounts;\n    const whatsIncludedInfoListing = helpers().whatsIncludedInfoListing;\n    const buyItNowHelper = helpers().buyItNowHelper;\n    const automaticAcceptBestOffer = helpers().automaticAcceptBestOffer;\n    const minimumRequiredOffer = helpers().minimumRequiredOffer;\n    // gather redux-hook-form values (basically a \"state\" replacement).\n    const currentValues = getValues();\n\n    const [ buyitnowChecked, setBuyitnowState ] = useState(true);\n    const [ auctionChecked, setAuctionCheckedState ] = useState(true);\n    const [ switchText, setSwitchTextState ] = useState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");\n    const [ switchTextAuctionBuyitnow, setSwitchTextAuctionBuyitnowState ] = useState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");\n\n    // console.log(\"startBidCheck : \", startBidCheck);\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        // clearErrors(name);\n\n        setValue(name, value, { shouldValidate: true })\n    \n        return value;\n    };\n    const handleTimespanSelectChange = (selectedOption) => {\n        // run conditionals\n        setValue('biddingIncrementInterval', selectedOption, { shouldValidate: false });\n\n        biddingIncrementIntervalGeneratedRef.current.blur();\n    }\n    const handleQuantityAvailabilityChange = (selectedOption) => {\n        // run conditionals\n        setValue('quantityAvailableForSale', selectedOption, { shouldValidate: false });\n\n        quantityAvailableForSaleGeneratedRef.current.blur();\n    }\n    const handleAcceptCouponsDiscountsChange = (selectedOption) => {\n        // run conditionals\n        setValue('discountCodeAcceptance', selectedOption, { shouldValidate: false });\n\n        discountCodeAcceptanceGeneratedRef.current.blur();\n    }\n\n    const menuClosedSelectInput = () => {\n        if (currentValues.biddingIncrementInterval) {\n            // setSelectOneErrorStatus(true);\n        } \n    }\n    const onSubmit = (data, e, selectedType) => {\n\n        console.log(\"DATA@!\", data, currentValues);\n\n        e.preventDefault();\n\n        if (data !== '') {\n\n            const { reservePrice, startBid } = data;\n\n            switch (selectedType) {\n                case \"auction-ONLY\":\n                        const omittedKeysAuctionOnly = _.omit(data, [\"reservePrice\", \"startBid\"]);\n\n                        const newDataObj = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionOnly,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewState = {...previouslySavedSoftwareData, ...newDataObj};\n\n                        saveSoftwareListingInfo(mergedPreviousNewState);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"auction-ONLY\");\n                    break;\n                case \"auction-AND-buy-it-now\":\n                        const omittedKeysAuctionAndBuyitnow = _.omit(data, [\"reservePrice\", \"startBid\", \"buyItNowPrice\"]);\n\n                        const newDataObjAuctionAndBuyitnow = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysAuctionAndBuyitnow,\n                                reservePrice: Number(Math.round(Number(reservePrice))), \n                                startBid: Number(Math.round(Number(startBid))),\n                                buyItNowData: auctionChecked === true ? {\n                                    active: true,\n                                    buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice)))\n                                } : {\n                                    active: false,\n                                    buyItNowPrice: undefined\n                                },\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewStateAuctionAndBuyitnow = {...previouslySavedSoftwareData, ...newDataObjAuctionAndBuyitnow};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateAuctionAndBuyitnow);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"auction-AND-buy-it-now\");\n                    break;\n                case \"buy-it-now-ONLY\":\n                        const omittedKeysBuyitnowOnlyConcattenated = _.omit(data, [\"buyItNowPrice\"]);\n\n                        const newDataObjBuyitnowOnly = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysBuyitnowOnlyConcattenated,\n                                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n                                auctionSelectedType: selectedType\n                            }\n                        }\n\n                        const mergedPreviousNewStateBuyitnowOnly = {...previouslySavedSoftwareData, ...newDataObjBuyitnowOnly};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOnly);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"buy-it-now-ONLY\");\n                    break;\n                case \"buy-it-now-OR-best-offer\":\n                        const omittedKeysBuyitnowOrBestOffer = _.omit(data, [\"buyItNowPrice\", \"minimumRequiredOfferValue\", \"automaticBestOfferAccept\"]);\n\n                        const newDataObjBuyitnowOrBestOffer = {\n                            auctionPriceRelatedData: {\n                                ...omittedKeysBuyitnowOrBestOffer,\n                                buyItNowPrice: Number(Math.round(Number(data.buyItNowPrice))),\n                                offerFeatureData: buyitnowChecked === true ? {\n                                    minimumRequiredOfferValue: Number(Math.round(Number(data.minimumRequiredOfferValue))),\n                                    automaticBestOfferAccept: Number(Math.round(Number(data.automaticBestOfferAccept))),\n                                    active: true\n                                } : {\n                                    active: false,\n                                    automaticBestOfferAccept: undefined,\n                                    minimumRequiredOfferValue: undefined\n                                },\n                                auctionSelectedType: selectedType\n                            }\n                        };\n\n                        const mergedPreviousNewStateBuyitnowOrBestOffer = {...previouslySavedSoftwareData, ...newDataObjBuyitnowOrBestOffer};\n\n                        saveSoftwareListingInfo(mergedPreviousNewStateBuyitnowOrBestOffer);\n\n                        shiftCoreStyles(false);\n                        setModalOpenStatus(false);\n\n                        handleDynamicFormReset(\"buy-it-now-OR-best-offer\");\n                    break;\n                default:\n                    break;\n            }\n\n            clearAllBodyScrollLocks();\n\n            NotificationManager.success(\"We've successfully added your new data (from the slide up pane - listing auction/buy-it-now/best-offer information) to your prepared listing which will be uploaded upon completion!\", \"Successfully updated listing information!\", 4500);\n        } else {\n            console.log(\"onSubmit failure :(\");\n\n            errors.showMessages();\n        }\n    };\n    const onError = async (errors, e, innerRun) => {\n        console.log(\"error submitting...!\", errors, e, innerRun);\n    };\n\n    console.log(\"currentValues : \", currentValues);\n\n    const handleSwitchValueChange = (value) => {\n        if (value === true) {\n            const option = { label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\", value: \"1\", numericalAmount: 1, min: 1, max: 1 };\n\n            setSwitchTextState(\"'AUCTION & BUY-IT-NOW' (gives user's both options) is enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BUY-IT-NOW' is now SELECTED!\");\n            // check if quanitity value already selected\n            if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n                // update switch state\n                setBuyitnowState(value);\n            } else {\n                // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n                setValue('quantityAvailableForSale', option, { shouldValidate: false });\n                // quantity value NOT already selected - do nothing but update switch state\n                setBuyitnowState(value);\n            }\n        } else {\n            setSwitchTextState(\"MULTIPLE quantities are selected (ALLOWING MULTIPLE SALES) and available so you can sell multiples of whatever software you're selling (Can be sold an unlimited amount of times - basically 1 per purchase per user). You've SELECTED to DISABLE the 'BEST-OFFER' setting.\");\n            // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n            reset({ automaticBestOfferAccept: \"\", minimumRequiredOfferValue: \"\" });\n            // update switch state\n            setBuyitnowState(value);\n        }\n    }\n    const handleSwitchValueChangeAuctionBuyitnow = (value) => {\n        if (value === true) {\n            const option = { label: \"1 Quantity Available (Can be sold an unlimited amount of times - basically 1 per purchase per user)\", value: \"1\", numericalAmount: 1, min: 1, max: 1 };\n            // setSwitchTextAuctionBuyitnowState\n            setSwitchTextAuctionBuyitnowState(\"'AUCTION & BIDDING' both are enabled/selected currently/by-default and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION & BIDDING' both are now SELECTED!\");\n            // check if quanitity value already selected\n            if (currentValues.quantityAvailableForSale && Object.keys(currentValues.quantityAvailableForSale).length > 0) {\n                // update switch state\n                setAuctionCheckedState(value);\n            } else {\n                // update react-hook-form state with default \"Buy-it-now\" option as \"option\" from above\n                setValue('quantityAvailableForSale', option, { shouldValidate: false });\n                // quantity value NOT already selected - do nothing but update switch state\n                setAuctionCheckedState(value);\n            }\n        } else {\n            setSwitchTextAuctionBuyitnowState(\"'AUCTION-ONLY' is enabled/selected currently and you're only allowed to sell ONE (1) quantity of what you're selling (1 Quantity Available TOTAL - this will create competition between submitted offers to submit the highest offer to win this listing). Your selection of 'AUCTION-ONLY' is now SELECTED!\");\n            // clear non-used redux-hook-form value (since its not being used anymore temporarily)\n            reset({ buyItNowPrice: \"\" });\n            // update switch state\n            setAuctionCheckedState(value);\n        }\n    }\n    const renderMainContentPassedConditional = (selectedType) => {\n        switch (selectedType) {\n            case \"auction-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <h5>This is a <strong style={{ color: \"blue\" }}>SINGLE ITEM AUCTION</strong> listing which means only <strong style={{ color: \"blue\" }}>ONE</strong> person will be able to purchase what you're selling</h5>\n                            <p>Only one person will be able to purchase this listing - if you'd like to either sell multiple copies of your <strong style={{ textDecorationLine: \"underline\", color: \"red\" }}>software/code (or related)</strong> then you should check out the other listing pricing options such as \"auction AND buy-it-now\", \"buy-it-now ONLY\" or \"Buy-it-now\" OR \"best-offer ONLY\" which may include options that're more applicable to your personal preferences...</p>\n                            <hr />\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"auction-AND-buy-it-now\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{startBidCheck.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...startBidCheck.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={startBidCheck.type} name={startBidCheck.name} placeholder={startBidCheck.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.startBid} />\n                                            </InputGroup>\n                                            {errors.startBid ? <span className=\"span-tooltip\">{errors.startBid.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{reservePrice.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...reservePrice.check(setError, register, currentValues)} pattern=\"[0-9]*\" className=\"form-control\" type={reservePrice.type} name={reservePrice.name} placeholder={reservePrice.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.reservePrice} />\n                                            </InputGroup>\n                                            {errors.reservePrice ? <span className=\"span-tooltip\">{errors.reservePrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    {auctionChecked === true ? <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{buyItNowHelper.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.buyItNowPrice} />\n                                            </InputGroup>\n                                            {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col> : null}\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>Would you like to have this listing as an \"AUCTION-ONLY\" listing OR a an \"AUCTION W/BUY-IT-NOW\" listing? (***auction W/BUY-IT-NOW allows for both bids/offers as well as a 'Buy-it-now' option IF ONLY ONE item is being sold)</Label>\n                                            <Row className=\"selector-container\">\n                                                <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                                    <Switch width={72.5} boxShadow={\"0px 0px 15px 4.5px #6A6A6A\"} offColor={\"#888\"} className={\"buyitnow-switch-class\"} onColor={\"#51bb25\"} onChange={handleSwitchValueChangeAuctionBuyitnow} checked={auctionChecked} />\n                                                </Col>\n                                                <Col sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\">\n                                                    <p className=\"switch-text-custom\">{switchTextAuctionBuyitnow}</p> \n                                                </Col>\n                                            </Row>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                {buyitnowChecked === true ? <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{automaticAcceptBestOffer.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...automaticAcceptBestOffer.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={automaticAcceptBestOffer.type} name={automaticAcceptBestOffer.name} placeholder={automaticAcceptBestOffer.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.automaticBestOfferAccept} />\n                                            </InputGroup>\n                                            {errors.automaticBestOfferAccept ? <span className=\"span-tooltip\">{errors.automaticBestOfferAccept.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{minimumRequiredOffer.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...minimumRequiredOffer.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={minimumRequiredOffer.type} name={minimumRequiredOffer.name} placeholder={minimumRequiredOffer.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.minimumRequiredOfferValue} />\n                                            </InputGroup>\n                                            {errors.minimumRequiredOfferValue ? <span className=\"span-tooltip\">{errors.minimumRequiredOfferValue.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row> : null}\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{buyItNowHelper.label}</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                                <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                    return handleInputChange(e);\n                                                }} value={currentValues.buyItNowPrice} />\n                                            </InputGroup>\n                                            {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>Would you like to offer \"buy-it-now\" AND \"best-offer\" options? Select to ALLOW buy it now (will limit quanitity for sale to 1-ONE) or disallow to allow multiple sales</Label>\n                                            <Row className=\"selector-container\">\n                                                <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                                    <Switch width={72.5} boxShadow={\"0px 0px 15px 4.5px #6A6A6A\"} offColor={\"#888\"} className={\"buyitnow-switch-class\"} onColor={\"#51bb25\"} onChange={handleSwitchValueChange} checked={buyitnowChecked} />\n                                                </Col>\n                                                <Col sm=\"10\" md=\"10\" lg=\"10\" xl=\"10\">\n                                                    <p className=\"switch-text-custom\">{switchText}</p> \n                                                </Col>\n                                            </Row>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={buyitnowChecked === true ? [quantityAvailabilityOptions[0]] : quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            case \"buy-it-now-ONLY\":\n                return (\n                    <Fragment>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit((data, e) => {\n                                return onSubmit(data, e, selectedType);\n                            }, (errors, e) => {\n                                return onError(errors, e, true);\n                            })}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{biddingIncrementIntervalHelper.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={biddingIncrementIntervalHelper.name}\n                                                {...biddingIncrementIntervalHelper.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={biddingIncrementIntervalGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={biddingIncrementIntervalHelper.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={menuClosedSelectInput}\n                                                        value={currentValues.biddingIncrementInterval}\n                                                        onChange={(selectedOption) => {\n                                                            return handleTimespanSelectChange(selectedOption);\n                                                        }}\n                                                        options={biddingIncrementIntervalOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.biddingIncrementInterval ? <span className=\"span-tooltip\">{errors.biddingIncrementInterval.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup>\n                                        <Label>{buyItNowHelper.label}</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon className={\"custom-dollarsign-addon\"} addonType=\"prepend\"><InputGroupText>{\"$ (USD)\"}</InputGroupText></InputGroupAddon>\n                                            <input {...buyItNowHelper.check(setError, register)} pattern=\"[0-9]*\" className=\"form-control\" type={buyItNowHelper.type} name={buyItNowHelper.name} placeholder={buyItNowHelper.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.buyItNowPrice} />\n                                        </InputGroup>\n                                        {errors.buyItNowPrice ? <span className=\"span-tooltip\">{errors.buyItNowPrice.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{quantityAvailability.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={quantityAvailability.name}\n                                                {...quantityAvailability.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={quantityAvailableForSaleGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={quantityAvailability.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.quantityAvailableForSale}\n                                                        onChange={(selectedOption) => {\n                                                            return handleQuantityAvailabilityChange(selectedOption);\n                                                        }}\n                                                        options={quantityAvailabilityOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.quantityAvailableForSale ? <span className=\"span-tooltip\">{errors.quantityAvailableForSale.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <FormGroup>\n                                            <Label>{acceptCouponsDiscounts.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={acceptCouponsDiscounts.name}\n                                                {...acceptCouponsDiscounts.check(setError, register, clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={discountCodeAcceptanceGeneratedRef}\n                                                        autoBlur={true}\n                                                        placeholder={acceptCouponsDiscounts.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={null}\n                                                        value={currentValues.discountCodeAcceptance}\n                                                        onChange={(selectedOption) => {\n                                                            return handleAcceptCouponsDiscountsChange(selectedOption);\n                                                        }}\n                                                        options={acceptCouponsDiscountsOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.discountCodeAcceptance ? <span className=\"span-tooltip\">{errors.discountCodeAcceptance.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup>\n                                            <Label>{whatsIncludedInfoListing.label}</Label>\n                                            <textarea rows={10} {...whatsIncludedInfoListing.check(setError, register)} className=\"form-control\" type={whatsIncludedInfoListing.type} name={whatsIncludedInfoListing.name} placeholder={whatsIncludedInfoListing.placeholder} onChange={(e) => {\n                                                return handleInputChange(e);\n                                            }} value={currentValues.whatsIncluded} />\n                                            {errors.whatsIncluded ? <span className=\"span-tooltip\">{errors.whatsIncluded.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button type=\"submit\" style={{ width: \"100%\" }} color=\"success\" onClick={() => {\n                                        // ~ run form submission (redux-hook-form) ~\n                                    }}>Submit responses, close modal & return to primary form</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </CardBody>\n                    </Fragment>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n\n    return renderMainContentPassedConditional(type);\n};\n\n\nconst SlideUpPaneAuctionPurchaseSelectionData = ({ clearAllBodyScrollLocks, typeOfListing, setIsTourOpenStatus, selected, shiftCoreStyles, previouslySavedSoftwareData, saveSoftwareListingInfo, onSubmit, onErrorMainForm, scrollToTourWrapper }) => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const [ isOpen, setModalOpenStatus ] = useState(false);\n\n    const handleDynamicFormReset = (selectedType) => {\n        switch (selectedType) {\n            case \"buy-it-now-ONLY\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined, buyItNowPrice: undefined, quantityAvailableForSale: undefined, discountCodeAcceptance: undefined });\n                break;\n            case \"auction-AND-buy-it-now\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined, buyItNowPrice: undefined, discountCodeAcceptance: undefined, quantityAvailableForSale: undefined });\n                break;\n            case \"auction-ONLY\":\n                reset({ biddingIncrementInterval: undefined, reservePrice: undefined, startBid: undefined, whatsIncluded: undefined });\n                break;\n            case \"buy-it-now-OR-best-offer\":\n                reset({ automaticBestOfferAccept: undefined, discountCodeAcceptance: undefined, buyItNowPrice: undefined, minimumRequiredOfferValue: undefined, quantityAvailableForSale: undefined, whatsIncluded: undefined })\n                break;\n            default:\n                break;\n        }\n    }\n\n    const startBidCheck = helpers().startBidCheck;\n\n    const { handleFinalSubmissionInputs, biddingIncrementIntervalOptions, quantityAvailabilityOptions, acceptCouponsDiscountsOptions } = functions;\n\n    return (\n        <div id=\"sheet-container\">\n            <div style={{ paddingTop: \"27.5px\", paddingBottom: \"12.5px\" }} className=\"centered-both-ways\">\n                <Button onClick={() => {\n                    // DISABLE clicking background\n                    shiftCoreStyles(true);\n                    // set modal sheet pane OPEN/true\n                    setModalOpenStatus(true);\n                    // scroll to target and LOCK SCREEN until closed.\n                    scrollToTourWrapper.current.scrollIntoView();\n                    // alter slightly to account for top-NAV\n                    setTimeout(() => {\n                        window.scrollBy(0, -135);\n                    }, 750);\n                    // lock after appropriate position change\n                    setTimeout(() => {\n\n                        const select = document.querySelector(\".enact-nonclick\");\n                        \n                        disableBodyScroll(select);\n                    }, 1000)\n                }} outline className=\"btn-pill btn-air-success stretched-purchase-options-btn\" color=\"success\" size=\"lg\">Select & modify listing pricing and purchase options</Button>\n            </div>\n            <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setModalOpenStatus(false)}>\n                <Sheet.Container className=\"sheetcontainer\">\n                    <Sheet.Header className=\"sheetheader\">\n                        <Row>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // run submission logic\n                                    handleFinalSubmissionInputs(setModalOpenStatus, shiftCoreStyles, setIsTourOpenStatus, clearErrors, handleDynamicFormReset, typeOfListing, clearAllBodyScrollLocks);\n                                }} className=\"btn-square stretch-and-space-btn-left\" active color=\"primary\" size=\"md\">Close/Exit Pane & Go Back To Listing Selection Area</Button>\n                            </Col>\n                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                <Button onClick={() => {\n                                    // allow background clicking again\n                                    shiftCoreStyles(false);\n                                    // close modal\n                                    setModalOpenStatus(false);\n                                    // clear errors\n                                    clearErrors();\n                                    \n                                    clearAllBodyScrollLocks();\n\n                                    handleDynamicFormReset(typeOfListing);\n                                }} className=\"btn-square stretch-and-space-btn-right\" active color=\"secondary\" size=\"md\">Cancel/Close</Button>\n                            </Col>\n                        </Row>\n                    </Sheet.Header>\n                    <Sheet.Content> \n                        <div className=\"add-normal-backer\">\n                            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent=\"Auction purchase options/settings\" title=\"Select your preferred auction type\"/>\n                            <Container fluid={true}>\n                                <Card className=\"card-main-container\">\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            {/* render sub component with SWITCH logic */}\n                                            <RenderConditionalBasedUponSellingType clearAllBodyScrollLocks={clearAllBodyScrollLocks} handleDynamicFormReset={handleDynamicFormReset} quantityAvailabilityOptions={quantityAvailabilityOptions} acceptCouponsDiscountsOptions={acceptCouponsDiscountsOptions} reset={reset} type={selected} setValue={setValue} getValues={getValues} errors={errors} setError={setError} register={register} control={control} clearErrors={clearErrors} biddingIncrementIntervalOptions={biddingIncrementIntervalOptions} handleSubmit={handleSubmit} shiftCoreStyles={shiftCoreStyles} setModalOpenStatus={setModalOpenStatus} onSubmit={onSubmit} onErrorMainForm={onErrorMainForm} saveSoftwareListingInfo={saveSoftwareListingInfo} previouslySavedSoftwareData={previouslySavedSoftwareData} />\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                </Sheet.Container>\n\n                <Sheet.Backdrop style={{ zIndex: \"-100\" }} id=\"custom-backdrop-noclick\" />\n            </Sheet>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    // return desired selected redux-state\n    return {\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nconst ConnectedSlideUpPaneAuctionPurchase = connect(mapStateToProps, { shiftCoreStyles, saveSoftwareListingInfo })(SlideUpPaneAuctionPurchaseSelectionData);\n// export helper functions\nexport default {\n    ConnectedSlideUpPaneAuctionPurchase,\n    RenderConditionalBasedUponSellingType\n};"]},"metadata":{},"sourceType":"module"}