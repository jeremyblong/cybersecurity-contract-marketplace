{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/createNewBlogPost.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, Textarea, CardBody, Input, Label, Form, FormGroup, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { useForm } from 'react-hook-form';\nimport helpers from \"./helpers/reduxFormHelpers.js\";\nconst titleChecker = helpers().titleChecker;\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13]\n};\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst CreateNewBlogPostHelper = props => {\n  // redux-form-hook values initialization\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues();\n  const [inputState, setInputState] = useState({\n    title: \"\",\n    subtitle: \"\",\n    body: \"\",\n    hashtags: []\n  });\n  console.log(\"inputState\", inputState);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e;\n    setInputState(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const autofocusNoSpellcheckerOptions = useMemo(() => {\n    return {\n      autofocus: false,\n      spellChecker: false\n    };\n  }, []);\n\n  const handleDelete = i => {\n    setInputState(prevState => {\n      return { ...prevState,\n        hashtags: prevState.hashtags.filter((tag, index) => index !== i)\n      };\n    });\n  };\n\n  const handleAddition = tag => {\n    setInputState(prevState => {\n      return { ...prevState,\n        hashtags: [...prevState.hashtags, tag]\n      };\n    });\n  };\n\n  const handleDrag = (tag, currPos, newPos) => {\n    const tags = [...inputState.hashtags];\n    const newTags = tags.slice();\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n    setInputState(prevState => {\n      return { ...prevState,\n        hashtags: newTags\n      };\n    });\n  };\n\n  const handleSubmission = () => {\n    const {\n      title,\n      subtitle,\n      body,\n      hashtags\n    } = inputState;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Previously Received Review(s)\",\n    title: \"Previously Received Review's From Contracted Work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"Create a new blog post and share your knowledge with the user's of our platform! This is an \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#7366ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 129\n    }\n  }, \"excellent\"), \" way to promote your account and/or knowledge showing you know what you're doing. Share your thoughts & knowledge today!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }, \"Blog Title (Main display title) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 82\n    }\n  }, \"You must enter between 35 - 125 characters before posting..\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 82\n    }\n  }, \"Blog Title\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, titleChecker.check(register, setTyping), {\n    className: \"form-control\",\n    value: currentValues.description,\n    onChange: e => {\n      const value = e.target.value;\n      return titleChecker.onChange(value, setValue);\n    },\n    name: titleChecker.name,\n    type: titleChecker.type,\n    placeholder: titleChecker.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, \"Blog Sub-Title (Main display sub-title) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 90\n    }\n  }, \"You must enter between 35 - 125 characters before posting..\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 82\n    }\n  }, \"Blog Title\")), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    onChange: e => handleInputChange(e),\n    name: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter your 'blog sub-title'...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }, \"Blog Hashtags (tags to be searched with - these will help people find your blog(s)) ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 134\n    }\n  }, \"You must enter between 5 - 15 'hashtags' before posting..\")), /*#__PURE__*/React.createElement(ReactTags, {\n    autofocus: false,\n    tags: inputState.hashtags,\n    classNames: {\n      tags: 'tagsClass',\n      tagInput: 'tagInputClass',\n      tagInputField: 'form-control',\n      selected: 'selectedClass',\n      tag: 'badge badge-primary custom-tag-streaming',\n      remove: 'removeClass',\n      suggestions: 'suggestionsClass',\n      activeSuggestion: 'activeSuggestionClass'\n    },\n    placeholder: \"(OPTIONAL) Add hashtags to your comment...\",\n    maxLength: 10 // suggestions={suggestions}\n    ,\n    handleDelete: handleDelete,\n    handleAddition: handleAddition,\n    handleDrag: handleDrag,\n    delimiters: delimiters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, \"Blog Main Content ~ \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 68\n    }\n  }, \"You must enter between 500 - 3500 characters before posting..\")), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"post-content-custom\",\n    placeholder: `## Summary:\n                                                [Add summary of the vulnerability]\n\n                                                ## Steps to Reproduce:\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\n\n                                                1. [add step]\n                                                2. [add step]\n                                                3. [add step]\n\n                                                ## Impact\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\n                                                How does the issue affect the business or the user? \n                                                What can the attacker get through the issue? \n                                                Can the issue be escalated further? If so, how?\n\n                                                ## Mitigation\n                                                [Please give a brief description of how the bug could be fixed.]\n\n\n                                                ## Supporting Material/References:\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\n\n                                                * [attachment / reference]\n                                            `,\n    onChange: value => setInputState(prevState => {\n      return { ...prevState,\n        body: value\n      };\n    }),\n    value: inputState.body,\n    options: autofocusNoSpellcheckerOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewBlogPostHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/createNewBlogPost.js"],"names":["React","useState","useEffect","useMemo","Container","Row","Col","Card","CardHeader","Textarea","CardBody","Input","Label","Form","FormGroup","InputGroup","InputGroupAddon","InputGroupText","Breadcrumb","connect","SimpleMDE","WithContext","ReactTags","useForm","helpers","titleChecker","KeyCodes","comma","enter","delimiters","CreateNewBlogPostHelper","props","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","inputState","setInputState","title","subtitle","body","hashtags","console","log","handleInputChange","e","name","value","prevState","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","tags","newTags","slice","splice","handleSubmission","textDecorationLine","color","check","setTyping","description","target","onChange","type","placeholder","tagInput","tagInputField","selected","remove","suggestions","activeSuggestion","mapStateToProps","state","userData","auth","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, Textarea, CardBody, Input, Label, Form, FormGroup, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { useForm } from 'react-hook-form';\nimport helpers from \"./helpers/reduxFormHelpers.js\";\n\n\nconst titleChecker = helpers().titleChecker;\n\nconst KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n};\n  \nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst CreateNewBlogPostHelper = (props) => {\n\n    // redux-form-hook values initialization\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n\n    const [ inputState, setInputState ] = useState({\n        title: \"\",\n        subtitle: \"\",\n        body: \"\",\n        hashtags: []\n    });\n\n    console.log(\"inputState\", inputState);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e;\n\n        setInputState(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        })\n    }\n\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        }\n    }, []);\n\n    const handleDelete = (i) => {\n\n        setInputState(prevState => {\n            return {\n                ...prevState,\n                hashtags: prevState.hashtags.filter((tag, index) => index !== i)\n            }\n        })\n    };\n\n    const handleAddition = (tag) => {\n\n        setInputState(prevState => {\n            return {\n                ...prevState,\n                hashtags: [...prevState.hashtags, tag]\n            }\n        })\n    };\n\n    const handleDrag = (tag, currPos, newPos) => {\n        const tags = [...inputState.hashtags];\n        const newTags = tags.slice();\n\n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n\n        setInputState(prevState => {\n            return {\n                ...prevState,\n                hashtags: newTags\n            }\n        })\n    };\n\n    const handleSubmission = () => {\n        const { title, subtitle, body, hashtags } = inputState;\n\n        \n    }\n\n    return (\n        <div>\n            <Breadcrumb parent=\"Previously Received Review(s)\" title=\"Previously Received Review's From Contracted Work\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className='shadow'>\n                            <CardHeader className='b-l-primary b-r-primary'>\n                                <h3>Create a new blog post and share your knowledge with the user's of our platform! This is an <em style={{ textDecorationLine: \"underline\", color: \"#7366ff\" }}>excellent</em> way to promote your account and/or knowledge showing you know what you're doing. Share your thoughts & knowledge today!</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <FormGroup className=\" m-form__group\">\n                                        <Label>Blog Title (Main display title) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 35 - 125 characters before posting..</em></Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Blog Title\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...titleChecker.check(register, setTyping)} className=\"form-control\" value={currentValues.description} onChange={(e) => {\n\n                                                const value = e.target.value;\n\n                                                return titleChecker.onChange(value, setValue);\n                                            }} name={titleChecker.name} type={titleChecker.type} placeholder={titleChecker.placeholder} />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <FormGroup className=\" m-form__group\">\n                                        <Label>Blog Sub-Title (Main display sub-title) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 35 - 125 characters before posting..</em></Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Blog Title\"}</InputGroupText></InputGroupAddon>\n                                            <Input className=\"form-control\" onChange={(e) => handleInputChange(e)} name={\"subtitle\"} type=\"text\" placeholder={\"Enter your 'blog sub-title'...\"} />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <FormGroup className=\" m-form__group\">\n                                        <Label>Blog Hashtags (tags to be searched with - these will help people find your blog(s)) ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 5 - 15 'hashtags' before posting..</em></Label>\n                                        <ReactTags \n                                            autofocus={false}\n                                            tags={inputState.hashtags}\n                                            classNames={{\n                                                tags: 'tagsClass',\n                                                tagInput: 'tagInputClass',\n                                                tagInputField: 'form-control',\n                                                selected: 'selectedClass',\n                                                tag: 'badge badge-primary custom-tag-streaming',\n                                                remove: 'removeClass',\n                                                suggestions: 'suggestionsClass',\n                                                activeSuggestion: 'activeSuggestionClass'\n                                            }}\n                                            placeholder={\"(OPTIONAL) Add hashtags to your comment...\"}\n                                            maxLength={10}\n                                            // suggestions={suggestions}\n                                            handleDelete={handleDelete}\n                                            handleAddition={handleAddition}\n                                            handleDrag={handleDrag}\n                                            delimiters={delimiters} \n                                        />\n                                    </FormGroup>\n                                    <FormGroup className=\" m-form__group\">\n                                        <Label>Blog Main Content ~ <em style={{ color: \"red\", textDecorationLine: \"underline\" }}>You must enter between 500 - 3500 characters before posting..</em></Label>\n                                        <SimpleMDE\n                                            id=\"post-content-custom\"\n                                            placeholder={`## Summary:\n                                                [Add summary of the vulnerability]\n\n                                                ## Steps to Reproduce:\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\n\n                                                1. [add step]\n                                                2. [add step]\n                                                3. [add step]\n\n                                                ## Impact\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\n                                                How does the issue affect the business or the user? \n                                                What can the attacker get through the issue? \n                                                Can the issue be escalated further? If so, how?\n\n                                                ## Mitigation\n                                                [Please give a brief description of how the bug could be fixed.]\n\n\n                                                ## Supporting Material/References:\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\n\n                                                * [attachment / reference]\n                                            `}\n                                            onChange={(value) => setInputState(prevState => {\n                                                return {\n                                                    ...prevState,\n                                                    body: value\n                                                }\n                                            })}\n                                            value={inputState.body}\n                                            options={autofocusNoSpellcheckerOptions}\n                                        />\n                                    </FormGroup>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CreateNewBlogPostHelper);"]},"metadata":{},"sourceType":"module"}