{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/miscFunctions.js\";\nimport React, { Fragment } from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport { Edit, Video, Image, Activity } from 'react-feather';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup } from 'reactstrap';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport \"../styles.css\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst TimelineHelper = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner shadow-lg add-padding-card-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center main-header-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Hiring & Application Process/Timeline\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"View the steps of a \\\"listing process\\\" and \", /*#__PURE__*/React.createElement(Link, {\n    className: \"linky\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 83\n    }\n  }, \"how-it-works\"), \" to understand the process in a more \\\"in-depth\\\" manner. This will show the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 210\n    }\n  }, \"general\"), \" overall process however we recommend checking out the how-it-works link above if you need more information!\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"cardbody-greyish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VerticalTimeline, {\n    className: \"custom-vertical-timeline-process\",\n    layout: \"2-columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"1) Application Phase (Accepting New Canidates)\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }, \" ~ Apply To Listing/Employer Post ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 41\n    }\n  }, \"This phase is the 'application' part of the process where 'hackers' will apply to the listing - this is simply the application phase ONLY.\")))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"2) Interview Phase (Actively interviewing & selecting candidates)\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, \" ~ Interview Phase (Interviewing & selecting potential candidates) ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, \"This phase is the 'interview/vetting' phase where the employer will interview and select candidates based on numerous considerations/factors. In your interviews, remember to be professional and honest/transparent as this will increase your odd's at getting picked. This is NOT a decision phase.\")))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"3) Interview Completion & Hiring Phase (Selected hacker's will be choosen to attempt to hack)\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }, \" ~ Candidate selection & hiring process/selection ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 41\n    }\n  }, \"This phase is the 'Candidate Selection & Hiring Point' where people (hacker's) will be selected to do the job at hand and all other's that're not selected will be removed from this ticket & notified. At this point, selected hacker's MUST commit/follow-through with any job related duties assigned from this point forward!\")))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"4) Hacking/hack's 'Activation Timeline' (Timeline/time allotted for hacker's to attempt to breach physical/digital security measures)\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, \" ~ Hacking/hack's 'Activation Timeline' - Time allotted for desired phyiscal/digital asset's hacks start NOW and run until noted in listing ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  }, \"This phase is the 'Hacking Fun - AKA Activation Timeline' where hacker's are finally allowed to test/hack various digital and physical assets (Timeline/time allotted for hacker's to attempt to breach physical/digital security measures). Hacker's during this time period are allowed to infiltrate various systems - THIS is one of THE most important points in time as ANY RESULTS YEILDED DURING THIS PERIOD WILL RESULT IN FINANCIAL PAY/GAINS (IF APPLICABLE - read rules & regulations in FAQ)\")))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"5) Hack/Hack's 'Review Period' where employer's will asses any damage/evidence of successful infiltration's of said systems. This period of time is allotted for employer's to asses whether a hack warrants actual financial compensation.\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, \" ~ Hack/Hack's 'Review Period' where employer's will asses any damage/evidence of successful infiltration's of said systems ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }, `This phase is the 'Review Period' where employer's will review any documentation/documented-reports, write-up's, security flaw reviews and much more. This period is strictly for employer's to asses what hack's warrent rewards (financial compensation in ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} tokens) and for how much said reward should be (contingent upon abidment of rules & regulations and code's of conduct - as well as the severity of such hack's)`)))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"6) HACKER WINNER's will be ANNOUNCED AFTER the employer successfully reviews and determines which hack's were successful\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, \" ~ HACKER WINNER's will be ANNOUNCED AFTER the employer successfully reviews and determines which hack's were successful ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, `This phase is the 'BID/WAGER WINNER ANNOUNCEMENT' and occurs shortly thereafter the previous rounds conclusion of results regarding which hack/hack's were successful and which one's weren't or didn't meet community standards or abided by our 'rules-and-regulations'. Successful bids/wagers will NOT be paid out just yet, however they will be paid in the following step/action. Successful HACKER's WILL BE COMPENSATED however AT THIS STAGE and any unsuccessful hacker's will be noted and ranked appropriately on various leaderboards and statistic boards.`)))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"7) Financial rewards are dispursed to winner of wager/bets regarding this listing's winner's.\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, \" ~ Financial rewards in \", process.env.REACT_APP_CRYPTO_TOKEN_NAME, \" will be paid to any bidding winner's ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, `This phase is the 'Bid Payout's' occur and any successful bets will be compensated accordingly. This is the END of any/all bidding for this listing specifically and the auctionhouse will close at this point regarding this specific listing's wager's & bets.`)))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"8) ANY related data and/or statistics related to this listing will be updated immediately and winner's/loser's will be announced PUBLICALLY.\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }, \" ~ ANY related data and/or statistics related to this listing will be updated immediately and winner's/loser's will be announced PUBLICALLY. ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, `This phase is the 'PUBLIC ANNOUNCEMENTS OF WINNERS/LOSERS' announcements and will occur at the step represented in this timeline. This is purely just a leaderboard/statistic update step and nothing notable will occur at this point.`)))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    textClassName: \"customized-text-classname-timeline\",\n    className: \"vertical-timeline-element--work custom-vertical-timeline-element\",\n    animate: true,\n    date: \"9) CONCLUSSION of said listing and 'Close-Out'.\",\n    icon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timeline-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, \" ~ CONCLUSSION of said listing and 'Close-Out'. This listing at this point will be concluded and will be removed from public interactions ~ \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 41\n    }\n  }, `This phase is the 'CONCLUSSION OF LISTING' which is essentially the point in which all previous actions have been completed and dispursed (including but not limited to payouts/rewards to both hacker's and better's) in which this listing will now be publically removed and archived for research or debate if needed down the road. Thanks for your participation and good luck on future listing!`))))))));\n};\n\nconst SheetPaneSubmittingDataHelper = _ref => {\n  let {\n    ready,\n    currentUserData,\n    shiftCoreStyles,\n    alreadyAdded,\n    clearAllBodyScrollLocks,\n    userData,\n    sheetIsOpen,\n    setSheetOpenState,\n    renderSentence\n  } = _ref;\n  // deconstruct redux-state items..\n  console.log(\"currentUserData\", currentUserData);\n\n  const renderSentenceParagraph = (dbName, customText, property) => {\n    // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n    if (ready === true && currentUserData !== null) {\n      // ready to display\n      if (currentUserData.hasOwnProperty(dbName)) {\n        // \"aboutMe\", \"About Me Section/Data\", userData.aboutMe\n        // return proper/desired \"right\" filled out data\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"#dc3545\"\n          },\n          className: \"mb-1 listitem-sub-text-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 24\n          }\n        }, \"Your \\\"About Me\\\" information is \", property);\n      } else {\n        // throw error warning user\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom override-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 24\n          }\n        }, \"You have NOT filled out this required field of \", /*#__PURE__*/React.createElement(\"em\", {\n          style: {\n            textDecorationLine: \"underline\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 131\n          }\n        }, customText), \", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile/settings/edit\",\n          className: \"linky\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 299\n          }\n        }, \"your profile settings page\"), \" and edit the appropriate sections, then come back and try again!\");\n      }\n    } else {\n      // return loading \"data\"\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1 listitem-sub-text-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 20\n        }\n      }, \"Still loading your data/content...!\");\n    }\n  };\n\n  const renderRibbonSuccessUnacceptable = value => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, !currentUserData.hasOwnProperty(value) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon ribbon-clip-bottom-right ribbon-custom-accept-or-deny ribbon-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 59\n      }\n    }, \"In-Active/Un-Acceptable\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon ribbon-clip-bottom-right ribbon-custom-accept-or-deny ribbon-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 183\n      }\n    }, \"Active/Acceptable\"));\n  }; // render and return if conditions met\n\n\n  const renderItemsListCustom = chunk => {\n    // render left (FIRST) chunk\n    if (chunk === \"first-chunk\") {\n      if (ready === true && typeof currentUserData !== \"undefined\" && currentUserData !== null) {\n        // deconstruct fetched user data values\n        const {\n          username,\n          firstName,\n          lastName,\n          registrationDate,\n          completedJobs\n        } = currentUserData; // return boolean data values\n\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ListGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"username\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 94\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }\n        }), renderSentence(\"username\", \"Username\", username), renderRibbonSuccessUnacceptable(\"username\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"firstName\" || \"lastName\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }\n        }, \"First Name & Last Name (Together)\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 119\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }\n        }), renderSentence(\"firstName\" || \"lastName\", \"Full Name\", `${firstName} ${lastName}`), renderRibbonSuccessUnacceptable(\"firstName\" || \"lastName\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"completedJobs\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }\n        }, \"Completed Job Count\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 105\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }\n        }), renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs), renderRibbonSuccessUnacceptable(\"completedJobs\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"registrationDate\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }\n        }, \"Created Account (from ago...)\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 115\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }\n        }), renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow()), renderRibbonSuccessUnacceptable(\"registrationDate\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"aboutMe\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }\n        }, \"'About Me' Section/Data\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 109\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }\n        }), renderSentenceParagraph(\"aboutMe\", \"About Me Section/Data\", userData.aboutMe), renderRibbonSuccessUnacceptable(\"aboutMe\"))));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n          baseColor: \"#c9c9c9\",\n          highlightColor: \"#444\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Skeleton, {\n          count: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 33\n          }\n        }))));\n      }\n    } else {\n      // render right (SECOND) chunk\n      if (ready === true && typeof currentUserData !== \"undefined\" && currentUserData !== null) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ListGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"username\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }\n        }, \"Standard/Typical Job Title\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 112\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }\n        }), renderSentence(\"title\", \"Title\", currentUserData.title), renderRibbonSuccessUnacceptable(\"title\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"reviews\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }\n        }, \"Number(#) Of Current Reviews\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 114\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }\n        }), renderSentence(\"reviews\", \"Review Count\", currentUserData.reviews.length), renderRibbonSuccessUnacceptable(\"reviews\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"fullyVerified\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }\n        }, \"Is Your Account Verified (Fully)?\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 119\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }\n        }), renderSentence(\"fullyVerified\", \"Fully-Verified Account\", currentUserData.fullyVerified === true ? \"Verified\" : \"NOT-Verified\"), renderRibbonSuccessUnacceptable(\"fullyVerified\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"points\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }\n        }, \"Amount Of Earned XP (Experience Pts.) Points\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 130\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }\n        }), renderSentence(\"points\", \"Experience Points (XP Points)\", currentUserData.points), renderRibbonSuccessUnacceptable(\"points\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          className: !currentUserData.hasOwnProperty(\"yearsOfExperience\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mb-1 listitem-header-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }\n        }, \"Years Of Experience (Working/Employed/Freelancing)\"), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 136\n          }\n        }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }\n        }), renderSentence(\"yearsOfExperience\", \"Year's Of Working Experience\", currentUserData.yearsOfExperience.label), renderRibbonSuccessUnacceptable(\"yearsOfExperience\"))));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n          baseColor: \"#c9c9c9\",\n          highlightColor: \"#444\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Skeleton, {\n          count: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }\n        }))));\n      }\n    }\n  }; // return sheet data (pane slide up);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: sheetIsOpen,\n    onClose: () => setSheetOpenState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"custom-sm-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      // allow background clicking again\n      shiftCoreStyles(false); // close modal\n\n      setSheetOpenState(false); // clear body locks ALL\n\n      clearAllBodyScrollLocks();\n    },\n    className: \"btn-square danger stretch-and-space-btn-left\",\n    outline: true,\n    color: \"danger\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 134\n    }\n  }, \"Close/Exit\"), \" Pane & Go Back To Listing\"))))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-normal-backer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: `Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`,\n    title: \"Review job requirements & details + apply to position/listing!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"25px\",\n      paddingBottom: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized-three\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 53\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted (Including Previous Listed Items)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 49\n    }\n  }, renderItemsListCustom(\"first-chunk\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 53\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted (Including Previous Listed Items)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 53\n    }\n  }, renderItemsListCustom(\"second-chunk\")))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default {\n  TimelineHelper,\n  SheetPaneSubmittingDataHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/miscFunctions.js"],"names":["React","Fragment","VerticalTimeline","VerticalTimelineElement","Edit","Video","Image","Activity","Link","moment","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ListGroup","Breadcrumb","Skeleton","SkeletonTheme","TimelineHelper","process","env","REACT_APP_CRYPTO_TOKEN_NAME","SheetPaneSubmittingDataHelper","ready","currentUserData","shiftCoreStyles","alreadyAdded","clearAllBodyScrollLocks","userData","sheetIsOpen","setSheetOpenState","renderSentence","console","log","renderSentenceParagraph","dbName","customText","property","hasOwnProperty","color","textDecorationLine","renderRibbonSuccessUnacceptable","value","renderItemsListCustom","chunk","username","firstName","lastName","registrationDate","completedJobs","fromNow","aboutMe","title","reviews","length","fullyVerified","points","yearsOfExperience","label","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport { Edit, Video, Image, Activity } from 'react-feather';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup } from 'reactstrap';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport \"../styles.css\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nconst TimelineHelper = () => {\n    return (\n        <Fragment>\n            <Card className=\"custom-card-inner shadow-lg add-padding-card-bottom\">\n                <CardHeader className={\"b-l-primary\"}>\n                    <h1 className={\"text-center main-header-customized\"}>Hiring & Application Process/Timeline</h1>\n                    <hr />\n                    <p className=\"lead\">View the steps of a \"listing process\" and <Link className=\"linky\" to={\"/\"}>how-it-works</Link> to understand the process in a more \"in-depth\" manner. This will show the <strong>general</strong> overall process however we recommend checking out the how-it-works link above if you need more information!</p>\n                </CardHeader>\n                <CardBody className={\"cardbody-greyish\"}>\n                    <VerticalTimeline className={\"custom-vertical-timeline-process\"} layout=\"2-columns\">\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"1) Application Phase (Accepting New Canidates)\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Apply To Listing/Employer Post ~ </h5>\n                                        <hr />\n                                        <p>{\"This phase is the 'application' part of the process where 'hackers' will apply to the listing - this is simply the application phase ONLY.\"}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"2) Interview Phase (Actively interviewing & selecting candidates)\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Interview Phase (Interviewing & selecting potential candidates) ~ </h5>\n                                        <hr />\n                                        <p>{\"This phase is the 'interview/vetting' phase where the employer will interview and select candidates based on numerous considerations/factors. In your interviews, remember to be professional and honest/transparent as this will increase your odd's at getting picked. This is NOT a decision phase.\"}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"3) Interview Completion & Hiring Phase (Selected hacker's will be choosen to attempt to hack)\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Candidate selection & hiring process/selection ~ </h5>\n                                        <hr />\n                                        <p>{\"This phase is the 'Candidate Selection & Hiring Point' where people (hacker's) will be selected to do the job at hand and all other's that're not selected will be removed from this ticket & notified. At this point, selected hacker's MUST commit/follow-through with any job related duties assigned from this point forward!\"}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"4) Hacking/hack's 'Activation Timeline' (Timeline/time allotted for hacker's to attempt to breach physical/digital security measures)\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Hacking/hack's 'Activation Timeline' - Time allotted for desired phyiscal/digital asset's hacks start NOW and run until noted in listing ~ </h5>\n                                        <hr />\n                                        <p>{\"This phase is the 'Hacking Fun - AKA Activation Timeline' where hacker's are finally allowed to test/hack various digital and physical assets (Timeline/time allotted for hacker's to attempt to breach physical/digital security measures). Hacker's during this time period are allowed to infiltrate various systems - THIS is one of THE most important points in time as ANY RESULTS YEILDED DURING THIS PERIOD WILL RESULT IN FINANCIAL PAY/GAINS (IF APPLICABLE - read rules & regulations in FAQ)\"}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"5) Hack/Hack's 'Review Period' where employer's will asses any damage/evidence of successful infiltration's of said systems. This period of time is allotted for employer's to asses whether a hack warrants actual financial compensation.\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Hack/Hack's 'Review Period' where employer's will asses any damage/evidence of successful infiltration's of said systems ~ </h5>\n                                        <hr />\n                                        <p>{`This phase is the 'Review Period' where employer's will review any documentation/documented-reports, write-up's, security flaw reviews and much more. This period is strictly for employer's to asses what hack's warrent rewards (financial compensation in ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} tokens) and for how much said reward should be (contingent upon abidment of rules & regulations and code's of conduct - as well as the severity of such hack's)`}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"6) HACKER WINNER's will be ANNOUNCED AFTER the employer successfully reviews and determines which hack's were successful\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ HACKER WINNER's will be ANNOUNCED AFTER the employer successfully reviews and determines which hack's were successful ~ </h5>\n                                        <hr />\n                                        <p>{`This phase is the 'BID/WAGER WINNER ANNOUNCEMENT' and occurs shortly thereafter the previous rounds conclusion of results regarding which hack/hack's were successful and which one's weren't or didn't meet community standards or abided by our 'rules-and-regulations'. Successful bids/wagers will NOT be paid out just yet, however they will be paid in the following step/action. Successful HACKER's WILL BE COMPENSATED however AT THIS STAGE and any unsuccessful hacker's will be noted and ranked appropriately on various leaderboards and statistic boards.`}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"7) Financial rewards are dispursed to winner of wager/bets regarding this listing's winner's.\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ Financial rewards in {process.env.REACT_APP_CRYPTO_TOKEN_NAME} will be paid to any bidding winner's ~ </h5>\n                                        <hr />\n                                        <p>{`This phase is the 'Bid Payout's' occur and any successful bets will be compensated accordingly. This is the END of any/all bidding for this listing specifically and the auctionhouse will close at this point regarding this specific listing's wager's & bets.`}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"8) ANY related data and/or statistics related to this listing will be updated immediately and winner's/loser's will be announced PUBLICALLY.\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ ANY related data and/or statistics related to this listing will be updated immediately and winner's/loser's will be announced PUBLICALLY. ~ </h5>\n                                        <hr />\n                                        <p>{`This phase is the 'PUBLIC ANNOUNCEMENTS OF WINNERS/LOSERS' announcements and will occur at the step represented in this timeline. This is purely just a leaderboard/statistic update step and nothing notable will occur at this point.`}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            textClassName={\"customized-text-classname-timeline\"}\n                            className=\"vertical-timeline-element--work custom-vertical-timeline-element\"\n                            animate={true}\n                            date=\"9) CONCLUSSION of said listing and 'Close-Out'.\"\n                            icon={<Edit />}>\n                                <Card className=\"custom-card-inner custom-card-timeline-item\">\n                                    <CardBody>\n                                        <h5 className=\"timeline-item-header\"> ~ CONCLUSSION of said listing and 'Close-Out'. This listing at this point will be concluded and will be removed from public interactions ~ </h5>\n                                        <hr />\n                                        <p>{`This phase is the 'CONCLUSSION OF LISTING' which is essentially the point in which all previous actions have been completed and dispursed (including but not limited to payouts/rewards to both hacker's and better's) in which this listing will now be publically removed and archived for research or debate if needed down the road. Thanks for your participation and good luck on future listing!`}</p>\n                                    </CardBody>\n                                </Card>\n                        </VerticalTimelineElement>\n                    </VerticalTimeline>\n                </CardBody>\n            </Card>\n        </Fragment>\n    );\n};\n\nconst SheetPaneSubmittingDataHelper = ({ ready, currentUserData, shiftCoreStyles, alreadyAdded, clearAllBodyScrollLocks, userData, sheetIsOpen, setSheetOpenState, renderSentence }) => {\n    // deconstruct redux-state items..\n\n    console.log(\"currentUserData\", currentUserData);\n\n    const renderSentenceParagraph = (dbName, customText, property) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(dbName)) { // \"aboutMe\", \"About Me Section/Data\", userData.aboutMe\n                // return proper/desired \"right\" filled out data\n                return <p style={{ color: \"#dc3545\" }} className={\"mb-1 listitem-sub-text-custom\"}>Your \"About Me\" information is {property}</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom override-red\"}>You have NOT filled out this required field of <em style={{ textDecorationLine: \"underline\" }}>{customText}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    const renderRibbonSuccessUnacceptable = (value) => {\n        return (\n            <Fragment>\n                {!currentUserData.hasOwnProperty(value) ? <div className=\"ribbon ribbon-clip-bottom-right ribbon-custom-accept-or-deny ribbon-danger\">In-Active/Un-Acceptable</div> : <div className=\"ribbon ribbon-clip-bottom-right ribbon-custom-accept-or-deny ribbon-success\">Active/Acceptable</div>}\n            </Fragment>\n        );\n    }\n    // render and return if conditions met\n    const renderItemsListCustom = (chunk) => {\n        // render left (FIRST) chunk\n        if (chunk === \"first-chunk\") {\n            if (ready === true && typeof currentUserData !== \"undefined\" && currentUserData !== null) {\n                // deconstruct fetched user data values\n                const { username, firstName, lastName, registrationDate, completedJobs } = currentUserData;\n                // return boolean data values\n                return (\n                    <Fragment>\n                        <ListGroup>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"username\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"username\", \"Username\", username)}\n                                {renderRibbonSuccessUnacceptable(\"username\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"firstName\" || \"lastName\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"firstName\" || \"lastName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                {renderRibbonSuccessUnacceptable(\"firstName\" || \"lastName\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"completedJobs\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                {renderRibbonSuccessUnacceptable(\"completedJobs\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"registrationDate\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                {renderRibbonSuccessUnacceptable(\"registrationDate\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"aboutMe\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"'About Me' Section/Data\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentenceParagraph(\"aboutMe\", \"About Me Section/Data\", userData.aboutMe)}\n                                {renderRibbonSuccessUnacceptable(\"aboutMe\")}\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                            <p>\n                                <Skeleton count={30} />\n                            </p>\n                        </SkeletonTheme>\n                    </Fragment>\n                );\n            }\n        } else {    \n            // render right (SECOND) chunk\n            if (ready === true && typeof currentUserData !== \"undefined\" && currentUserData !== null) {\n                return (\n                    <Fragment>\n                        <ListGroup>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"username\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Standard/Typical Job Title\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"title\", \"Title\", currentUserData.title)}\n                                {renderRibbonSuccessUnacceptable(\"title\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"reviews\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Number(#) Of Current Reviews\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"reviews\", \"Review Count\", currentUserData.reviews.length)}\n                                {renderRibbonSuccessUnacceptable(\"reviews\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"fullyVerified\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Is Your Account Verified (Fully)?\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"fullyVerified\", \"Fully-Verified Account\", currentUserData.fullyVerified === true ? \"Verified\" : \"NOT-Verified\")}\n                                {renderRibbonSuccessUnacceptable(\"fullyVerified\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"points\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Amount Of Earned XP (Experience Pts.) Points\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"points\", \"Experience Points (XP Points)\", currentUserData.points)}\n                                {renderRibbonSuccessUnacceptable(\"points\")}\n                            </ListGroupItem>\n                            <ListGroupItem className={!currentUserData.hasOwnProperty(\"yearsOfExperience\") ? \"list-group-item-action flex-column align-items-start active-custom-selector\" : \"list-group-item-action flex-column align-items-start\"}>\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1 listitem-header-custom\">{\"Years Of Experience (Working/Employed/Freelancing)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                </div>\n                                <hr />\n                                {renderSentence(\"yearsOfExperience\", \"Year's Of Working Experience\", currentUserData.yearsOfExperience.label)}\n                                {renderRibbonSuccessUnacceptable(\"yearsOfExperience\")}\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                            <p>\n                                <Skeleton count={30} />\n                            </p>\n                        </SkeletonTheme>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    // return sheet data (pane slide up);\n    return (\n        <div id=\"sheet-container\">\n            <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={sheetIsOpen} onClose={() => setSheetOpenState(false)}>\n                <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row className=\"custom-sm-margin\">\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <div>\n                                        <Button onClick={() => {\n                                            // allow background clicking again\n                                            shiftCoreStyles(false);\n                                            // close modal\n                                            setSheetOpenState(false);\n                                            // clear body locks ALL\n                                            clearAllBodyScrollLocks();\n                                        }} className=\"btn-square danger stretch-and-space-btn-left\" outline color=\"danger\" size=\"lg\"><strong>Close/Exit</strong> Pane & Go Back To Listing</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <div className=\"add-normal-backer\">\n                                <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n                                <Container fluid={true}>\n                                    <Row style={{ paddingTop: \"25px\", paddingBottom: \"50px\" }}>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Card className=\"custom-card-inner custom-card-inner-customized-three\">\n                                                <CardHeader className=\"b-l-info\">\n                                                    <h5>Type Of Data That'll Be Automatically Submitted (Including Previous Listed Items)</h5>\n                                                </CardHeader>\n                                                <CardBody>\n                                                    {renderItemsListCustom(\"first-chunk\")}\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Card className=\"custom-card-inner custom-card-inner-customized-two\">\n                                                <CardHeader className=\"b-l-info\">\n                                                    <h5>Type Of Data That'll Be Automatically Submitted (Including Previous Listed Items)</h5>\n                                                </CardHeader>\n                                                <CardBody>\n                                                    <ListGroup>\n                                                        {renderItemsListCustom(\"second-chunk\")}                \n                                                    </ListGroup>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </div>\n                        </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </div>\n    );\n}\n\nexport default {\n    TimelineHelper,\n    SheetPaneSubmittingDataHelper\n};"]},"metadata":{},"sourceType":"module"}