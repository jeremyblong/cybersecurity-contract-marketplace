{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, Progress, ListGroupItem, Container } from 'reactstrap';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport ReactDragListView from \"react-drag-listview\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport SheetHelperPaneUploadCourseContent from \"./helpers/paneSheet.js\";\nimport { shiftCoreStyles } from \"../../../../../../../../redux/actions/universal/index.js\";\nimport { Modal } from 'react-responsive-modal';\nimport { confirmAlert } from 'react-confirm-alert';\nimport ModalMoreInformationGuiadanceHelper from \"./helpers/moreInformationModal.js\";\nconst {\n  handleDeletionConfirmationOpen\n} = helpers;\nconst steps = [{\n  selector: '#navigate-to-redirect',\n  content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`\n}];\n\nconst CreateNewCoursePageTwo = _ref => {\n  let {\n    setProgress,\n    updateCourseInformationData,\n    courseData,\n    shiftCoreStyles,\n    coursesArray,\n    overallProgress\n  } = _ref;\n  const scrollToTourWrapper = useRef(null); // state initialization\n\n  const [subtitle, setSubTitleValue] = useState(\"\");\n  const [stepOpen, setStepOpenState] = useState(false);\n  const [modalOpen, setModalState] = useState(false);\n  const [courseContent, setCourseContentList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedCourseContent, setCourseContentState] = useState(null);\n  const [isOpenModal, setIsOpenModalState] = useState(false);\n  console.log(\"courseData\", courseData);\n\n  const disableBodyAndScroll = target => {\n    disableBodyScroll(target);\n  }; // enable body!\n\n\n  const enableBody = target => clearAllBodyScrollLocks();\n\n  const handleTourActivate = () => {\n    console.log(\"handleTourActivate ran...\");\n    scrollToTourWrapper.current.scrollIntoView(); // alter slightly according to scroll behavior\n\n    setTimeout(() => {\n      window.scrollBy(0, -175);\n    }, 300); // #navigate-to-redirect\n\n    setTimeout(() => {\n      setStepOpenState(true);\n    }, 750);\n  };\n\n  const handleSubAddition = () => {\n    console.log(\"handleSubAddition ran...\");\n\n    if (typeof coursesArray !== \"undefined\" && coursesArray.length > 0) {\n      console.log(\"already exists...!\");\n      const createdDate = new Date();\n      const addNew = {\n        id: uuid(),\n        dateTimeAdded: createdDate,\n        video: null,\n        sectionTitle: subtitle,\n        formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n      };\n      updateCourseInformationData({ ...courseData,\n        pageTwoData: {\n          courseContentSections: [...coursesArray, addNew]\n        }\n      });\n      setSubTitleValue(\"\");\n    } else {\n      console.log(\"doesnt exist...\");\n      const createdDate = new Date();\n      const newState = [{\n        id: uuid(),\n        dateTimeAdded: createdDate,\n        video: null,\n        sectionTitle: subtitle,\n        formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n      }];\n      updateCourseInformationData({ ...courseData,\n        pageTwoData: {\n          courseContentSections: newState\n        }\n      });\n      setSubTitleValue(\"\");\n    }\n  };\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      const data = [...courseData];\n      const item = data.splice(fromIndex, 1)[0];\n      data.splice(toIndex, 0, item);\n      console.log(data);\n      updateCourseInformationData(data);\n    },\n\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n\n  const showConfirmAlert = selected => {\n    confirmAlert({\n      title: \"You're about to delete this section/chunk\",\n      message: \"Are you SURE you'd like to delete this section/chunk from your course material & content? If so, please proceed by clicking 'Yes, Delete!' to delete this item from your course content!\",\n      buttons: [{\n        label: 'Yes, Delete!',\n        onClick: () => {\n          // Delete\n          const filtered = courseData.filter((section, index) => {\n            if (section.id !== selected.id) {\n              return true;\n            }\n          });\n          updateCourseInformationData(filtered);\n        }\n      }, {\n        label: 'No, Cancel',\n        onClick: () => {// do nothing\n        }\n      }]\n    });\n  };\n\n  const handleSubmission = () => {\n    console.log(\"handleSubmission ran...!\");\n\n    if (courseData.makingEdits === true) {\n      updateCourseInformationData({ ...courseData,\n        currentPage: 4\n      });\n    } else {\n      updateCourseInformationData({ ...courseData,\n        currentPage: 3\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tour, {\n    steps: steps,\n    isOpen: stepOpen,\n    onAfterOpen: disableBodyAndScroll,\n    onBeforeClose: enableBody,\n    onRequestClose: () => {\n      setStepOpenState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'course-content-overlay-modal',\n      modal: 'course-content-modal'\n    },\n    open: isOpenModal,\n    onClose: () => setIsOpenModalState(false),\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalMoreInformationGuiadanceHelper, {\n    setIsOpenModalState: setIsOpenModalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SheetHelperPaneUploadCourseContent, {\n    setCourseContentState: setCourseContentState,\n    selectedCourseContent: selectedCourseContent,\n    disableBodyScroll: disableBodyScroll,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    setProgress: setProgress,\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-horizontally-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-above-bar-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, overallProgress, \"% Complete\")), /*#__PURE__*/React.createElement(Progress, {\n    className: \"course-creation-progress-bar\",\n    animated: true,\n    color: \"info\",\n    value: overallProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollToTourWrapper,\n    id: \"navigate-to-redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"p-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio radio-info mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"radio66\",\n    type: \"radio\",\n    name: \"radio66\",\n    checked: modalOpen === true ? true : false,\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"radio66\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-0 mega-title-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 57\n    }\n  }, \"Confused on how to upload 'Course-Content'?\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info pull-right digits make-digits-larger-courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 138\n    }\n  }, \"Need Clarification/Help on how to upload new content?\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 57\n    }\n  }, \"Are you unsure of 'what' or 'how' to upload course content & most of all organize the data in a manner that makes sense? We will guide you through the process but you can find a very detailed overview/guide by clicking the button just below this text...Click it to find out more!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"50%\"\n    },\n    onClick: () => setIsOpenModalState(true),\n    className: \"btn-square-dark\",\n    color: \"dark\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 61\n    }\n  }, \"Get help, guidance OR clarification on uploading course's!\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customized-course-lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 57\n    }\n  }, \"Basically, you will need to select the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 134\n    }\n  }, \"core\"), \" details for your new course (which you've already done on page 1) and secondly (now) you will need to upload \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 265\n    }\n  }, \"ONE (1) VIDEO\"), \" per each added item in the list you generate/create below with the input/form & button to submit them. Simply, enter a \\\"part\\\" name and upload a video for that cooresponding part!\"))))), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"custom-ordered-list-courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, \"Enter a name/title for your new segment (segment being a chunk or small portion of your overall course/content)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, \"Submit the title and it will automatically be added to the existing list (the course will be saved exactly as uploaded regarding the order)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 45\n    }\n  }, \"Upload a video to the cooresponding HIGHLIGHTED region and this new video will be attached to the highlighted segment (will replace any existing video/content if already exists)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 45\n    }\n  }, \"That's it! Proceed with your other course content...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute-positioned-button-clear-redux\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"absolute-redux-clear-button\",\n    onClick: () => handleDeletionConfirmationOpen(),\n    className: \"btn-square-danger\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 45\n    }\n  }, \"Clear ENTIRE Already Filled Course Data\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 45\n    }\n  }, \"Add a \\\"Sub-Section Course Content\\\" section with this form. If you're confused as to what this means, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\"\n    },\n    id: \"hover-a-uploading\",\n    onClick: () => handleTourActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 153\n    }\n  }, \"click this\"), \" to retreieve more details on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 295\n    }\n  }, \"how to create sellable content/courses\")), /*#__PURE__*/React.createElement(InputGroup, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 86\n    }\n  }, \"Add Course Section\")), /*#__PURE__*/React.createElement(Input, {\n    value: subtitle,\n    onChange: e => setSubTitleValue(e.target.value),\n    className: \"form-control min-height-input-courses\",\n    name: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter a course sub-section title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handleSubAddition(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 86\n    }\n  }, \"Add New Section\")))))), /*#__PURE__*/React.createElement(ReactDragListView, Object.assign({}, dragProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, coursesArray.map((item, index) => {\n    console.log(\"itenm!\", item);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"left-chunk-course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => showConfirmAlert(item),\n      src: require(\"../../../../../../../../assets/icons/delete.png\"),\n      className: \"view-more-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => {\n        setCourseContentState(item); // DISABLE clicking background\n\n        shiftCoreStyles(true); // set modal sheet pane OPEN/true\n\n        setIsOpen(true); // lock after appropriate position change\n\n        setTimeout(() => {\n          // LOCK page\n          const select = document.querySelector(\".enact-nonclick\");\n          disableBodyScroll(select);\n        }, 500);\n      },\n      src: require(\"../../../../../../../../assets/icons/view.png\"),\n      className: \"view-more-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"custom-strong-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 61\n      }\n    }, item.sectionTitle), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"badge badge-secondary counter digits make-digits-larger-course-draggable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 57\n      }\n    }, \"Use me to drag this item\")));\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmission,\n    className: \"btn-square-secondary\",\n    color: \"secondary-2x\",\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 33\n    }\n  }, \"Submit & Continue W/Form Process\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    coursesArray: _.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\") ? state.courseData.courseData.pageTwoData.courseContentSections : [],\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : {}\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCourseInformationData,\n  shiftCoreStyles\n})(CreateNewCoursePageTwo);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js"],"names":["React","Fragment","useRef","useState","connect","helpers","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Media","InputGroup","InputGroupAddon","InputGroupText","Progress","ListGroupItem","Container","Tour","disableBodyScroll","clearAllBodyScrollLocks","updateCourseInformationData","_","ReactDragListView","uuid","moment","SheetHelperPaneUploadCourseContent","shiftCoreStyles","Modal","confirmAlert","ModalMoreInformationGuiadanceHelper","handleDeletionConfirmationOpen","steps","selector","content","CreateNewCoursePageTwo","setProgress","courseData","coursesArray","overallProgress","scrollToTourWrapper","subtitle","setSubTitleValue","stepOpen","setStepOpenState","modalOpen","setModalState","courseContent","setCourseContentList","isOpen","setIsOpen","selectedCourseContent","setCourseContentState","isOpenModal","setIsOpenModalState","console","log","disableBodyAndScroll","target","enableBody","handleTourActivate","current","scrollIntoView","setTimeout","window","scrollBy","handleSubAddition","length","createdDate","Date","addNew","id","dateTimeAdded","video","sectionTitle","formattedDate","format","pageTwoData","courseContentSections","newState","dragProps","onDragEnd","fromIndex","toIndex","data","item","splice","nodeSelector","handleSelector","showConfirmAlert","selected","title","message","buttons","label","onClick","filtered","filter","section","index","handleSubmission","makingEdits","currentPage","overlay","modal","width","paddingTop","color","e","value","map","require","select","document","querySelector","mapStateToProps","state","userData","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, Progress, ListGroupItem, Container } from 'reactstrap';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport ReactDragListView from \"react-drag-listview\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport SheetHelperPaneUploadCourseContent from \"./helpers/paneSheet.js\";\nimport { shiftCoreStyles } from \"../../../../../../../../redux/actions/universal/index.js\";\nimport { Modal } from 'react-responsive-modal';\nimport { confirmAlert } from 'react-confirm-alert';\nimport ModalMoreInformationGuiadanceHelper from \"./helpers/moreInformationModal.js\";\n\nconst { \n    handleDeletionConfirmationOpen\n} = helpers;\n\n\nconst steps = [\n    {\n      selector: '#navigate-to-redirect',\n      content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`,\n    }\n]\n\nconst CreateNewCoursePageTwo = ({ setProgress, updateCourseInformationData, courseData, shiftCoreStyles, coursesArray, overallProgress }) => {\n    const scrollToTourWrapper = useRef(null);\n    // state initialization\n    const [ subtitle, setSubTitleValue ] = useState(\"\");\n    const [ stepOpen, setStepOpenState ] = useState(false);\n    const [ modalOpen, setModalState ] = useState(false);\n    const [ courseContent, setCourseContentList ] = useState([]); \n    const [ isOpen, setIsOpen ] = useState(false);\n    const [ selectedCourseContent, setCourseContentState ] = useState(null);\n    const [ isOpenModal, setIsOpenModalState ] = useState(false);\n\n    console.log(\"courseData\", courseData);\n\n    const disableBodyAndScroll = target => {\n        disableBodyScroll(target);        \n    };\n    // enable body!\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const handleTourActivate = () => {\n        console.log(\"handleTourActivate ran...\");\n\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly according to scroll behavior\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 300);\n        // #navigate-to-redirect\n        setTimeout(() => {\n            setStepOpenState(true);\n        }, 750)\n    }\n    const handleSubAddition = () => {\n        console.log(\"handleSubAddition ran...\");\n\n        if (typeof coursesArray !== \"undefined\" && coursesArray.length > 0) {\n            console.log(\"already exists...!\");\n            \n            const createdDate = new Date();\n\n            const addNew = {\n                id: uuid(),\n                dateTimeAdded: createdDate,\n                video: null,\n                sectionTitle: subtitle,\n                formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n            };\n            updateCourseInformationData({\n                ...courseData,\n                pageTwoData: {\n                    courseContentSections: [...coursesArray, addNew]\n                }\n            });\n            setSubTitleValue(\"\");\n        } else {\n            console.log(\"doesnt exist...\");\n\n            const createdDate = new Date();\n\n            const newState = [{\n                id: uuid(),\n                dateTimeAdded: createdDate,\n                video: null,\n                sectionTitle: subtitle,\n                formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n            }];\n            updateCourseInformationData({\n                ...courseData,\n                pageTwoData: {\n                    courseContentSections: newState\n                }\n            });\n\n            setSubTitleValue(\"\");\n        }\n    }\n    const dragProps = {\n        onDragEnd(fromIndex, toIndex) {\n            const data = [...courseData];\n            const item = data.splice(fromIndex, 1)[0];\n            data.splice(toIndex, 0, item);\n            console.log(data);\n            updateCourseInformationData(data)\n        },\n        nodeSelector: 'li',\n        handleSelector: 'a'\n    };\n    const showConfirmAlert = (selected) => {\n        confirmAlert({\n            title: \"You're about to delete this section/chunk\",\n            message: \"Are you SURE you'd like to delete this section/chunk from your course material & content? If so, please proceed by clicking 'Yes, Delete!' to delete this item from your course content!\",\n            buttons: [\n              {\n                label: 'Yes, Delete!',\n                onClick: () => {\n                    // Delete\n                    const filtered = courseData.filter((section, index) => {\n                        if (section.id !== selected.id) {\n                            return true;\n                        }\n                    });\n                    updateCourseInformationData(filtered);\n                }\n              },\n              {\n                label: 'No, Cancel',\n                onClick: () => {\n                    // do nothing\n                }\n              }\n            ]\n        });\n    }\n    const handleSubmission = () => {\n        console.log(\"handleSubmission ran...!\");\n\n        if (courseData.makingEdits === true) {\n            updateCourseInformationData({\n                ...courseData,\n                currentPage: 4\n            })\n        } else {\n            updateCourseInformationData({\n                ...courseData,\n                currentPage: 3\n            })   \n        }\n    }\n    return (\n        <Fragment>\n            <Tour\n                steps={steps}\n                isOpen={stepOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={() => {\n                    setStepOpenState(false);\n                }} \n            />\n            <Modal classNames={{\n                overlay: 'course-content-overlay-modal',\n                modal: 'course-content-modal',\n            }} open={isOpenModal} onClose={() => setIsOpenModalState(false)} center>\n                <ModalMoreInformationGuiadanceHelper setIsOpenModalState={setIsOpenModalState} />\n            </Modal>\n            <SheetHelperPaneUploadCourseContent setCourseContentState={setCourseContentState} selectedCourseContent={selectedCourseContent} disableBodyScroll={disableBodyScroll} clearAllBodyScrollLocks={clearAllBodyScrollLocks} setProgress={setProgress} isOpen={isOpen} setIsOpen={setIsOpen} />\n\n                <div className={\"centered-horizontally-course\"}>\n                    <div className={\"position-above-bar-percentage\"}>\n                        <h1>{overallProgress}% Complete</h1>\n                    </div>\n                    <Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} />\n                </div>\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <div ref={scrollToTourWrapper} id={\"navigate-to-redirect\"}>\n                                                <Media className=\"p-20\">\n                                                    <div className=\"radio radio-info mr-3\">\n                                                        <Input id=\"radio66\" type=\"radio\" name=\"radio66\" checked={modalOpen === true ? true : false} value={null} />\n                                                        <Label for={\"radio66\"}></Label>\n                                                    </div>\n                                                    <Media body>\n                                                        <h6 className=\"mt-0 mega-title-badge\">Confused on how to upload 'Course-Content'?<span className=\"badge badge-info pull-right digits make-digits-larger-courses\">{\"Need Clarification/Help on how to upload new content?\"}</span></h6>\n                                                        <p>{\"Are you unsure of 'what' or 'how' to upload course content & most of all organize the data in a manner that makes sense? We will guide you through the process but you can find a very detailed overview/guide by clicking the button just below this text...Click it to find out more!\"}</p>\n                                                        <hr />\n                                                        <div className={\"centered-both-ways\"}>\n                                                            <Button outline style={{ width: \"50%\" }} onClick={() => setIsOpenModalState(true)} className=\"btn-square-dark\" color=\"dark\" size=\"md\">Get help, guidance OR clarification on uploading course's!</Button>\n                                                        </div>\n                                                        <p className=\"customized-course-lead\">Basically, you will need to select the <strong>core</strong> details for your new course (which you've already done on page 1) and secondly (now) you will need to upload <strong>ONE (1) VIDEO</strong> per each added item in the list you generate/create below with the input/form & button to submit them. Simply, enter a \"part\" name and upload a video for that cooresponding part!</p>\n                                                    </Media>\n                                                </Media>\n                                            </div>\n                                        </Row>\n                                        <ol className={\"custom-ordered-list-courses\"}>\n                                            <li>Enter a name/title for your new segment (segment being a chunk or small portion of your overall course/content)</li>\n                                            <li>Submit the title and it will automatically be added to the existing list (the course will be saved exactly as uploaded regarding the order)</li>\n                                            <li>Upload a video to the cooresponding HIGHLIGHTED region and this new video will be attached to the highlighted segment (will replace any existing video/content if already exists)</li>\n                                            <li>That's it! Proceed with your other course content...</li>\n                                        </ol>\n                                        <div className={\"absolute-positioned-button-clear-redux\"}>\n                                            <Button id={\"absolute-redux-clear-button\"} onClick={() => handleDeletionConfirmationOpen()} className=\"btn-square-danger\" color=\"danger\" size=\"md\">Clear ENTIRE Already Filled Course Data</Button>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardBody>\n                                <Row style={{ paddingTop: \"12.5px\" }}>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <FormGroup className=\"m-form__group\">\n                                            <Label>Add a \"Sub-Section Course Content\" section with this form. If you're confused as to what this means, <strong style={{ color: \"red\" }} id=\"hover-a-uploading\" onClick={() => handleTourActivate()}>click this</strong> to retreieve more details on <strong>how to create sellable content/courses</strong></Label>\n                                            <InputGroup style={{ width: \"100%\" }}>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Add Course Section\"}</InputGroupText></InputGroupAddon>\n                                                <Input value={subtitle} onChange={(e) => setSubTitleValue(e.target.value)} className=\"form-control min-height-input-courses\" name={\"subtitle\"} type=\"text\" placeholder={\"Enter a course sub-section title...\"} />\n                                                <InputGroupAddon addonType=\"prepend\"><Button style={{ width: \"100%\" }} onClick={() => handleSubAddition()} className=\"btn-square-info\" color=\"info\" size=\"md\">Add New Section</Button></InputGroupAddon>\n                                            </InputGroup>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <ReactDragListView {...dragProps}>\n                                    <ul>\n                                        {coursesArray.map((item, index) => {\n                                            console.log(\"itenm!\", item);\n                                            return (\n                                                <Fragment key={index}>\n                                                    <ListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                                                        <div id=\"left-chunk-course\">\n                                                            <img onClick={() => showConfirmAlert(item)} src={require(\"../../../../../../../../assets/icons/delete.png\")} className={\"view-more-icon\"} />\n                                                            <img onClick={() => {\n                                                                setCourseContentState(item);\n                                                                // DISABLE clicking background\n                                                                shiftCoreStyles(true);\n                                                                // set modal sheet pane OPEN/true\n                                                                setIsOpen(true);\n                                                                // lock after appropriate position change\n                                                                setTimeout(() => {\n                                                                    // LOCK page\n                                                                    const select = document.querySelector(\".enact-nonclick\");\n\n                                                                    disableBodyScroll(select);\n                                                                }, 500)\n                                                            }} src={require(\"../../../../../../../../assets/icons/view.png\")} className={\"view-more-icon\"} />\n                                                        </div>\n                                                            <p className={\"custom-strong-list-item\"}>{item.sectionTitle}</p>\n                                                        <a className=\"badge badge-secondary counter digits make-digits-larger-course-draggable\">{\"Use me to drag this item\"}</a>\n                                                    </ListGroupItem>\n                                                </Fragment>\n                                            );\n                                        })}\n                                    </ul>\n                                </ReactDragListView>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card>\n                            <CardBody>\n                                <Button onClick={handleSubmission} className={\"btn-square-secondary\"} color={\"secondary-2x\"} outline style={{ width: \"100%\" }}>Submit & Continue W/Form Process</Button>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        coursesArray: (_.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\")) ? state.courseData.courseData.pageTwoData.courseContentSections : [],\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : {}\n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData, shiftCoreStyles })(CreateNewCoursePageTwo);"]},"metadata":{},"sourceType":"module"}