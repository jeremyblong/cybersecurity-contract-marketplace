{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\";\nimport axios from 'axios';\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\n\nconst PaymentFullPaneManageAndPay = _ref => {\n  let {\n    setModalOpenToDo,\n    setCurrentlyDue,\n    currentApplication,\n    paymentPaneFull,\n    setFullPaymentPaneOpen,\n    userData\n  } = _ref;\n  const [capabilities, setCapabilities] = useState([]);\n  const [popover, setPopover] = useState({\n    capability0: false,\n    capability1: false,\n    capability2: false\n  });\n  useEffect(() => {\n    const configuration = {\n      params: {\n        employerID: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered payment capabilities!\") {\n        console.log(res.data);\n        const {\n          capabilities\n        } = res.data;\n        const arr = [];\n\n        for (let index = 0; index < capabilities.data.length; index++) {\n          const el = capabilities.data[index];\n\n          if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n            arr.push(el);\n          }\n        }\n\n        console.log(\"arr\", arr);\n        setCapabilities(arr);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"Critical errror...:\", err);\n    });\n  }, []);\n\n  const calculateType = type => {\n    switch (type) {\n      case \"card_payments\":\n        return \"Card Payment's\";\n        break;\n\n      case \"link_payments\":\n        return \"Link Payment's\";\n        break;\n\n      case \"us_bank_account_ach_payments\":\n        return \"US Bank Account ACH Payment's\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleActivation = (element, idx) => {\n    const {\n      id,\n      status\n    } = element;\n\n    if (status === \"active\") {\n      NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n    } else {\n      const configuration = {\n        params: {\n          employerID: userData.uniqueId,\n          elementID: id\n        }\n      };\n      axios.get(`${process.env.REACT_APP_BASE_URL}/modify/employer/capabilities/payments`, configuration).then(res => {\n        if (res.data.message === \"Successfully modified payment capabilities!\") {\n          console.log(res.data);\n          const {\n            capability,\n            elementID\n          } = res.data;\n          setCapabilities(prevState => {\n            return prevState.forEach((item, idx) => {\n              if (item.id === elementID) {\n                return capability;\n              } else {\n                return item;\n              }\n            });\n          });\n          setPopover(prevState => {\n            return { ...prevState,\n              [`capability${idx}`]: false\n            };\n          });\n          NotificationManager.success(`Successfully modified the desired capabilities & updated stripe information! You're capability ${elementID} is now ACTIVE!`, `Changed ${elementID} and is now ACTIVE!`, 4750);\n        } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n          const {\n            currentlyDue\n          } = res.data;\n          setCurrentlyDue(currentlyDue);\n          setFullPaymentPaneOpen(false);\n          setTimeout(() => {\n            setModalOpenToDo(true);\n          }, 625);\n        } else {\n          console.log(\"Err\", res.data);\n          NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n        }\n      }).catch(err => {\n        console.log(\"Critical errror...:\", err);\n        NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n      });\n    }\n  };\n\n  console.log(\"capabilities\", capabilities);\n  console.log(\"popover\", popover);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    draggable: false,\n    isOpen: paymentPaneFull,\n    onClose: () => setFullPaymentPaneOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setPopover(() => {\n        return {\n          capability0: false,\n          capability1: false,\n          capability2: false\n        };\n      });\n      setFullPaymentPaneOpen(false);\n    },\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Exit/Close This Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"breadcrumb-full-payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    id: \"breadcrumb-full-payment\",\n    parent: \"Make FULL Payment\",\n    title: currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-pane-full-payment\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }\n  }, \"Make a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 60\n    }\n  }, \"complete payment/deposit\"), \" for \", currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Name/Data...\", \" before they can proceed with the required work on this contract..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"capabilities-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 65\n    }\n  }, \"Capabilities related to payment method's\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 65\n    }\n  }, typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 89\n      }\n    }, \"Payment Type:\")), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#f73164\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 89\n      }\n    }, calculateType(element.id))), /*#__PURE__*/React.createElement(Col, {\n      className: \"target-me\",\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-row-capability\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#7366ff\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 93\n      }\n    }, element.status), /*#__PURE__*/React.createElement(\"img\", {\n      id: `capability${idx}`,\n      onClick: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: true\n          };\n        });\n      },\n      src: require(\"../../../../../../../../../assets/gifs/add.gif\"),\n      className: \"gif-add-capability\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 93\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onMouseLeave: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: false\n          };\n        });\n      },\n      className: \"zindex-pop-me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      className: \"elevate-popover\",\n      placement: \"bottom\",\n      isOpen: popover[`capability${idx}`],\n      target: `capability${idx}`,\n      toggle: () => {\n        setPopover(prevState => {\n          return { ...prevState,\n            [`capability${idx}`]: !popover[`capability${idx}`]\n          };\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 101\n      }\n    }, \"Update/Activate Capability\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 101\n      }\n    }, \"Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 101\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleActivation(element, idx),\n      className: \"btn-square-success\",\n      outline: true,\n      color: \"success-2x\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 101\n      }\n    }, \"Activate!\"))))))));\n  }) : null)))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 61\n    }\n  }))))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {},\n    className: \"btn-square-info\",\n    outline: true,\n    color: \"info-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 49\n    }\n  }, \"Submit Payment & Process Deposit (double-confirm action)\"))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(PaymentFullPaneManageAndPay);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/paymentFullPane/index.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Container","Row","Col","Card","CardBody","CardFooter","CardHeader","ListGroup","ListGroupItem","Popover","PopoverHeader","PopoverBody","Button","axios","Sheet","connect","NotificationManager","PaymentFullPaneManageAndPay","setModalOpenToDo","setCurrentlyDue","currentApplication","paymentPaneFull","setFullPaymentPaneOpen","userData","capabilities","setCapabilities","popover","setPopover","capability0","capability1","capability2","configuration","params","employerID","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","arr","index","length","el","id","push","catch","err","calculateType","type","handleActivation","element","idx","status","info","elementID","capability","prevState","forEach","item","success","currentlyDue","setTimeout","error","margin","width","applicantName","map","color","textDecorationLine","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\"\nimport axios from 'axios'\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\n\nconst PaymentFullPaneManageAndPay = ({ setModalOpenToDo, setCurrentlyDue, currentApplication, paymentPaneFull, setFullPaymentPaneOpen, userData }) => {\n\n    const [ capabilities, setCapabilities ] = useState([]);\n    const [ popover, setPopover ] = useState({\n        capability0: false,\n        capability1: false,\n        capability2: false\n    })\n\n    useEffect(() => {\n        const configuration = {\n            params: { \n                employerID: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/list/employer/capabilities/payments`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered payment capabilities!\") {\n                console.log(res.data);\n\n                const { capabilities } = res.data;\n\n                const arr = [];\n\n                for (let index = 0; index < capabilities.data.length; index++) {\n                    const el = capabilities.data[index];\n                    if (el.id === \"card_payments\" || el.id === \"us_bank_account_ach_payments\" || el.id === \"link_payments\") {\n                        arr.push(el);\n                    }\n                }\n                console.log(\"arr\", arr);\n\n                setCapabilities(arr);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n        })\n    }, [])\n\n    const calculateType = (type) => {\n        switch (type) {\n            case \"card_payments\":\n                return \"Card Payment's\"\n                break;\n            case \"link_payments\":\n                return \"Link Payment's\";\n                break;\n            case \"us_bank_account_ach_payments\":\n                return \"US Bank Account ACH Payment's\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleActivation = (element, idx) => {\n\n        const { id, status } = element; \n\n        if (status === \"active\") {\n            NotificationManager.info(\"You've ALREADY activated this option/capability & it is currently set as 'active'. Please try this action again with a 'innactive' or 'unrequested' status types..\", \"Already activated this payment method!\", 4750);\n        } else {\n            const configuration = {\n                params: { \n                    employerID: userData.uniqueId,\n                    elementID: id\n                }\n            }\n            axios.get(`${process.env.REACT_APP_BASE_URL}/modify/employer/capabilities/payments`, configuration).then((res) => {\n                if (res.data.message === \"Successfully modified payment capabilities!\") {\n                    console.log(res.data);\n\n                    const { capability, elementID } = res.data;\n\n                    setCapabilities(prevState => {\n                        return prevState.forEach((item, idx) => {\n                            if (item.id === elementID) {\n                                return capability;\n                            } else {\n                                return item;\n                            }\n                        })\n                    });\n                    \n                    setPopover(prevState => {\n                        return {\n                            ...prevState,\n                            [`capability${idx}`]: false\n                        }\n                    })\n\n                    NotificationManager.success(`Successfully modified the desired capabilities & updated stripe information! You're capability ${elementID} is now ACTIVE!`, `Changed ${elementID} and is now ACTIVE!`, 4750);\n                } else if (res.data.message === \"You must enable further 'onboarding settings' before activating this setting..\") {\n\n                    const { currentlyDue } = res.data;\n\n                    setCurrentlyDue(currentlyDue);\n\n                    setFullPaymentPaneOpen(false);\n\n                    setTimeout(() => {\n                        setModalOpenToDo(true);\n                    },  625);\n                } else {\n                    console.log(\"Err\", res.data);\n\n                    NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n                }\n            }).catch((err) => {\n                console.log(\"Critical errror...:\", err);\n\n                NotificationManager.error(\"An unknown error has occurred while attempting to update the desired information and/or capability, Please try this action again and contact support if the problem persists!\", \"Unknown error has occurred!\", 4750);\n            })\n        }\n    }\n\n    console.log(\"capabilities\", capabilities);\n\n    console.log(\"popover\", popover);\n\n    return (\n        <Fragment>\n            <Sheet draggable={false} isOpen={paymentPaneFull} onClose={() => setFullPaymentPaneOpen(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => {\n                                setPopover(() => {\n                                    return {\n                                        capability0: false,\n                                        capability1: false,\n                                        capability2: false\n                                    }\n                                })\n                                setFullPaymentPaneOpen(false)\n                            }} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <div id={\"breadcrumb-full-payment\"}>\n                            <Breadcrumb id={\"breadcrumb-full-payment\"} parent={\"Make FULL Payment\"} title={currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\"} />\n                            <Container className='container-pane-full-payment' fluid={true}>\n                                <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='card-payment-entirely'>\n                                            <CardHeader>\n                                                <h2>Make a <strong>complete payment/deposit</strong> for {currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Name/Data...\"} before they can proceed with the required work on this contract..</h2>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Card className='card-payment-entirely-halved'>\n                                                            <CardHeader>\n                                                                <h3 className='capabilities-header'>Capabilities related to payment method's</h3>\n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                <ListGroup className=\"list-group-flush\">\n                                                                    {typeof capabilities !== \"undefined\" && capabilities.length > 0 ? capabilities.map((element, idx) => {\n                                                                        return (\n                                                                            <ListGroupItem key={idx}>\n                                                                                <Row>\n                                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                                        <strong>Payment Type:</strong>\n                                                                                    </Col>\n                                                                                    <Col sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                                        <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateType(element.id)}</strong>\n                                                                                    </Col>\n                                                                                    <Col className='target-me' sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                                        <div className={\"create-row-capability\"}>\n                                                                                            <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{element.status}</strong>\n                                                                                            <img id={`capability${idx}`} onClick={() => {\n                                                                                                setPopover(prevState => {\n                                                                                                    return {\n                                                                                                        ...prevState,\n                                                                                                        [`capability${idx}`]: true\n                                                                                                    }\n                                                                                                })\n                                                                                            }} src={require(\"../../../../../../../../../assets/gifs/add.gif\")} className={\"gif-add-capability\"} />\n                                                                                            <div onMouseLeave={() => {\n                                                                                                setPopover(prevState => {\n                                                                                                    return {\n                                                                                                        ...prevState,\n                                                                                                        [`capability${idx}`]: false\n                                                                                                    }\n                                                                                                })\n                                                                                            }} className='zindex-pop-me'>\n                                                                                                <Popover className={\"elevate-popover\"} placement=\"bottom\" isOpen={popover[`capability${idx}`]} target={`capability${idx}`} toggle={() => {\n                                                                                                    setPopover(prevState => {\n                                                                                                        return {\n                                                                                                            ...prevState,\n                                                                                                            [`capability${idx}`]: !popover[`capability${idx}`]\n                                                                                                        }\n                                                                                                    })\n                                                                                                }}>\n                                                                                                    <PopoverHeader>Update/Activate Capability</PopoverHeader>\n                                                                                                    <PopoverBody>Would you like to update and 'activate' this capability? You MUST have previously completed the 'onboarding-flow'.\n                                                                                                    <hr />\n                                                                                                    <Button onClick={() => handleActivation(element, idx)} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }}>Activate!</Button>\n                                                                                                    </PopoverBody>\n                                                                                                </Popover>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </Col>\n                                                                                </Row>\n                                                                            </ListGroupItem>\n                                                                        );\n                                                                    }) : null}\n                                                                </ListGroup>\n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Card className='card-payment-entirely-halved'>\n                                                            <CardHeader>\n                                                                \n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                \n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button onClick={() => {}} className={\"btn-square-info\"} outline color={\"info-2x\"} style={{ width: \"100%\" }}>Submit Payment & Process Deposit (double-confirm action)</Button>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(PaymentFullPaneManageAndPay);"]},"metadata":{},"sourceType":"module"}