{"ast":null,"code":"import React,{Fragment,useState,useEffect,useRef,useCallback}from'react';import\"./styles.css\";import{Container,Row,Col,Card,CardBody,CardHeader,CardFooter,Button}from\"reactstrap\";import Breadcrumb from'../../../../layout/breadcrumb';import{connect as reduxConnect}from\"react-redux\";import{useParams}from'react-router-dom';import*as Video from'twilio-video';import axios from\"axios\";import Participant from\"./participant/participant.js\";import{connect as twilioConnect}from\"twilio-video\";import uuid from\"react-uuid\";import{NotificationManager}from'react-notifications';const CreateVideoChatEmployerHelper=_ref=>{let{userData}=_ref;const{id}=useParams();const[user,setUser]=useState(null);const[videocall,setVideoCallData]=useState(null);const[videoTracks,setVideoTracks]=useState([]);const[audioTracks,setAudioTracks]=useState([]);const[room,setRoom]=useState(null);const[participants,setParticipants]=useState([]);// Create refs for the HTML elements to attach audio and video to in the DOM\n// For now, set them to null\nconst videoRef=useRef(null);const audioRef=useRef(null);const joinRoomVideoChat=async()=>{try{// const generatedRoomID = uuid();\nconst response=await axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/generate/twilio/access/token\"),{params:{uniqueId:userData.uniqueId,accountType:userData.accountType,generatedRoomID:videocall.roomName}});if(response){console.log(\"response\",response);const{data}=response;const room=await twilioConnect(data.token,{name:videocall.roomName,audio:true,video:true});console.log(\"roo\",room);const participantConnected=participant=>{setParticipants(prevParticipants=>[...prevParticipants,participant]);};const participantDisconnected=participant=>{setParticipants(prevParticipants=>prevParticipants.filter(p=>p!==participant));};setRoom(room);room.on('participantConnected',participantConnected);room.on('participantDisconnected',participantDisconnected);room.participants.forEach(participantConnected);setRoom(room);// if (room) {\n//     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n// }\n}}catch(err){console.log(err);if(err){NotificationManager.info(\"We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \\\"Try again.\",\"Unable to access video/audio devices!\",4750);}}};const handleLogout=useCallback(()=>{setRoom(prevRoom=>{if(prevRoom){prevRoom.localParticipant.tracks.forEach(trackPub=>{trackPub.track.stop();});prevRoom.disconnect();}return null;});},[]);console.log(\"room\",room);useEffect(()=>{const configuration={params:{id:userData.uniqueId,accountType:userData.accountType}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/general/user/data\"),configuration).then(res=>{if(res.data.message===\"Gathered user!\"){console.log(res.data);const{user}=res.data;setUser(user);}else{console.log(\"err gathering user..:\",res.data);}}).catch(err=>{console.log(err);});},[]);console.log(\"videocall\",videocall);useEffect(()=>{const videoTrack=videoTracks[0];if(videoRef&&videoRef.current){if(videoTrack){videoTrack.attach(videoRef.current);return()=>{videoTrack.detach();};}}},[videoTracks]);useEffect(()=>{const audioTrack=audioTracks[0];if(audioRef&&audioRef.current){if(audioTrack){audioTrack.attach(audioRef.current);return()=>{audioTrack.detach();};}}},[audioTracks]);useEffect(()=>{const configuration={params:{id:userData.uniqueId,accountType:userData.accountType,videocallID:id}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/video/chat/info\"),configuration).then(res=>{if(res.data.message===\"Gathered info!\"){console.log(res.data);const{videoCall}=res.data;setVideoCallData(videoCall);}else{console.log(\"err gathering user..:\",res.data);}}).catch(err=>{console.log(err);});},[]);const remoteParticipants=participants.map(participant=>/*#__PURE__*/React.createElement(Participant,{key:participant.sid,participant:participant}));return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Invite Hacker(s) To Video Interview With You!\",title:\"Find, Select & Invite Anyone On Our Platform..\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",xl:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-secondary b-r-secondary\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"upload-video-header\"},\"Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"We \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\"}},\"HIGHLY SUGGEST\"),\" video interviewing \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\"}},\"any\"),\" potential candiates for a contracted gig and/or hacking job, \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\"}},\"ESPECIALLY\"),\" if testing \",/*#__PURE__*/React.createElement(\"strong\",null,\"physical infrastructure\"),\" and other related on-site security.\")),/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-success b-r-success\"},/*#__PURE__*/React.createElement(Row,null,room!==null?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Participant,{key:room.localParticipant.sid,participant:room.localParticipant}))):null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"remote-participants\"},remoteParticipants)))),/*#__PURE__*/React.createElement(CardFooter,{className:\"b-l-secondary b-r-secondary\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-success\",outline:true,color:\"success-2x\",style:{width:\"100%\"},onClick:joinRoomVideoChat},\"Initialize Room\")),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-danger\",outline:true,color:\"danger-2x\",style:{width:\"100%\"},onClick:handleLogout},\"Exit/Close Video Call\")))))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default reduxConnect(mapStateToProps,{})(CreateVideoChatEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/createVideoInterview/createVideoChat.js"],"names":["React","Fragment","useState","useEffect","useRef","useCallback","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Button","Breadcrumb","connect","reduxConnect","useParams","Video","axios","Participant","twilioConnect","uuid","NotificationManager","CreateVideoChatEmployerHelper","userData","id","user","setUser","videocall","setVideoCallData","videoTracks","setVideoTracks","audioTracks","setAudioTracks","room","setRoom","participants","setParticipants","videoRef","audioRef","joinRoomVideoChat","response","get","process","env","REACT_APP_BASE_URL","params","uniqueId","accountType","generatedRoomID","roomName","console","log","data","token","name","audio","video","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","err","info","handleLogout","prevRoom","localParticipant","tracks","trackPub","track","stop","disconnect","configuration","then","res","message","catch","videoTrack","current","attach","detach","audioTrack","videocallID","videoCall","remoteParticipants","map","sid","color","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, useCallback } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\n\n\nconst CreateVideoChatEmployerHelper = ({ userData }) => {\n\n    const { id } = useParams();\n\n    const [ user, setUser ] = useState(null);\n    const [ videocall, setVideoCallData ] = useState(null);\n    const [ videoTracks, setVideoTracks ] = useState([]);\n    const [ audioTracks, setAudioTracks ] = useState([]);\n    const [ room, setRoom ] = useState(null);\n    const [ participants, setParticipants ] = useState([]);\n  \n    // Create refs for the HTML elements to attach audio and video to in the DOM\n    // For now, set them to null\n    const videoRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const joinRoomVideoChat = async () => {\n        try {\n\n            // const generatedRoomID = uuid();\n\n            const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType,\n                    generatedRoomID: videocall.roomName\n                }\n            });\n            if (response) {\n                console.log(\"response\", response);\n\n                const { data } = response;\n\n                const room = await twilioConnect(data.token, {\n                    name: videocall.roomName,\n                    audio: true,\n                    video: true\n                });\n\n                console.log(\"roo\", room);\n\n                const participantConnected = participant => {\n                    setParticipants(prevParticipants => [...prevParticipants, participant]);\n                };\n                const participantDisconnected = participant => {\n                    setParticipants(prevParticipants =>\n                        prevParticipants.filter(p => p !== participant)\n                    );\n                };\n\n                setRoom(room);\n\n                room.on('participantConnected', participantConnected);\n                room.on('participantDisconnected', participantDisconnected);\n                room.participants.forEach(participantConnected);\n\n                setRoom(room);\n                // if (room) {\n                //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n                // }\n            }\n        } catch(err) {\n            console.log(err);\n\n            if (err) {\n                NotificationManager.info(`We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \"Try again.`, \"Unable to access video/audio devices!\", 4750);\n            }\n        }\n    }\n\n    const handleLogout = useCallback(() => {\n        setRoom((prevRoom) => {\n          if (prevRoom) {\n            prevRoom.localParticipant.tracks.forEach((trackPub) => {\n              trackPub.track.stop();\n            });\n            prevRoom.disconnect();\n          }\n          return null;\n        });\n    }, []);\n\n    console.log(\"room\", room);\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUser(user);\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    console.log(\"videocall\", videocall);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoRef && videoRef.current) {\n            if (videoTrack) {\n                videoTrack.attach(videoRef.current);\n                return () => {\n                    videoTrack.detach();\n                };\n            }\n        }\n    }, [ videoTracks ]);\n    \n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioRef && audioRef.current) {\n            if (audioTrack) {\n                audioTrack.attach(audioRef.current);\n                return () => {\n                    audioTrack.detach();\n                };\n            }\n        }\n    }, [ audioTracks ]);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType,\n                videocallID: id\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/video/chat/info`, configuration).then((res) => {\n            if (res.data.message === \"Gathered info!\") {\n                console.log(res.data);\n\n                const { videoCall } = res.data;\n\n                setVideoCallData(videoCall);\n\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const remoteParticipants = participants.map((participant) => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n    \n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Invite Hacker(s) To Video Interview With You!\" title=\"Find, Select & Invite Anyone On Our Platform..\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)</h2>\n                                <p className=\"lead\">We <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGEST</strong> video interviewing <strong style={{ color: \"#f73164\" }}>any</strong> potential candiates for a contracted gig and/or hacking job, <strong style={{ color: \"#f73164\" }}>ESPECIALLY</strong> if testing <strong>physical infrastructure</strong> and other related on-site security.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-success b-r-success'>\n                                <Row>\n                                    {room !== null ? <Fragment>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Participant\n                                                key={room.localParticipant.sid}\n                                                participant={room.localParticipant}\n                                            />\n                                        </Col>\n                                    </Fragment> : null}\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"remote-participants\">{remoteParticipants}</div>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={joinRoomVideoChat}>Initialize Room</Button>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }} onClick={handleLogout}>Exit/Close Video Call</Button>\n                                    </Col>\n                                </Row>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);"]},"metadata":{},"sourceType":"module"}