{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostEmployerListing/boostListingPosted.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup } from \"reactstrap\";\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nconst monthOptions = [{\n  value: '01',\n  label: '01'\n}, {\n  value: '02',\n  label: '02'\n}, {\n  value: '03',\n  label: '03'\n}, {\n  value: '04',\n  label: '04'\n}, {\n  value: '05',\n  label: '05'\n}, {\n  value: '06',\n  label: '06'\n}, {\n  value: '07',\n  label: '07'\n}, {\n  value: '08',\n  label: '08'\n}, {\n  value: '09',\n  label: '09'\n}, {\n  value: '10',\n  label: '10'\n}, {\n  value: '11',\n  label: '11'\n}, {\n  value: '12',\n  label: '12'\n}];\nconst yearOptions = [{\n  label: \"2022\",\n  value: \"22\"\n}, {\n  label: \"2023\",\n  value: \"23\"\n}, {\n  label: \"2024\",\n  value: \"24\"\n}, {\n  label: \"2025\",\n  value: \"25\"\n}, {\n  label: \"2026\",\n  value: \"26\"\n}, {\n  label: \"2027\",\n  value: \"27\"\n}, {\n  label: \"2028\",\n  value: \"28\"\n}, {\n  label: \"2029\",\n  value: \"29\"\n}, {\n  label: \"2030\",\n  value: \"30\"\n}, {\n  label: \"2031\",\n  value: \"31\"\n}, {\n  label: \"2032\",\n  value: \"32\"\n}, {\n  label: \"2033\",\n  value: \"33\"\n}, {\n  label: \"2034\",\n  value: \"34\"\n}, {\n  label: \"2035\",\n  value: \"35\"\n}];\n\nconst BoostAlreadyPostedEmployerListingPaneHelper = _ref => {\n  let {\n    userData,\n    listingBoostSelected,\n    employerListingPromotePane,\n    setSheetOpenEmployerListingPromote\n  } = _ref;\n  const [listings, setListingData] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [fullySelected, setFullySelected] = useState(null);\n  const [cardPaymentSelected, setSelectedCardPayment] = useState(null);\n  const [previousCards, setPreviousCardsData] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [cardData, setCardData] = useState({\n    focus: \"\",\n    cvc: \"\",\n    name: \"\",\n    number: \"\",\n    expiry: \"\"\n  });\n  useEffect(() => {\n    const config = {\n      params: {\n        id: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        console.log(res.data);\n        const {\n          cards\n        } = res.data;\n        const convertedPaymentsArr = [];\n\n        for (let index = 0; index < cards.data.length; index++) {\n          const method = cards.data[index];\n          const {\n            last4\n          } = method.card;\n          convertedPaymentsArr.push({\n            label: `**** **** **** ${last4}`,\n            value: method\n          });\n        }\n\n        setPreviousCardsData(convertedPaymentsArr);\n        setReady(true);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n    });\n  }, []);\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, configuration).then(res => {\n      if (res.data.message === \"Gathered related listings to choose from!\") {\n        console.log(res.data);\n        const {\n          listings\n        } = res.data;\n        setListingData(listings);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const calculateBoostCost = tier => {\n    switch (tier) {\n      case \"tier-1\":\n        return \"$10.00 (plus applicable taxes)\";\n        break;\n\n      case \"tier-2\":\n        return \"$30.00 (plus applicable taxes)\";\n        break;\n\n      case \"tier-3\":\n        return \"50.00 (plus applicable taxes)\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculateTier = tier => {\n    switch (tier) {\n      case \"tier-1\":\n        return \"Tier One (1)\";\n        break;\n\n      case \"tier-2\":\n        return \"Tier Two (2)\";\n        break;\n\n      case \"tier-3\":\n        return \"Tier Three (3)\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculateFirstImage = listing => {\n    console.log(\"uploadedFiles\", listing.uploadedFiles);\n    const files = listing.uploadedFiles;\n\n    for (let index = 0; index < files.length; index++) {\n      const file = files[index];\n\n      if (file.type.includes(\"image\")) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n          className: \"last-displayed rounded-circle mr-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }));\n        break;\n      } else if (file.type.includes(\"video\")) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          playing: true,\n          loop: true,\n          muted: true,\n          width: \"100%\",\n          className: \"last-displayed rounded-circle mr-1\",\n          wrapper: \"div\",\n          url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }));\n        break;\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"number\") {\n      if (value.length !== 0) {\n        let filtered = value.replace(/\\D/, '');\n        setCardData(prevState => {\n          return { ...prevState,\n            number: filtered\n          };\n        });\n        setSelectedCardPayment(null);\n      } else {\n        setCardData(prevState => {\n          return { ...prevState,\n            number: \"\"\n          };\n        });\n        setSelectedCardPayment(null);\n      }\n    } else if (name === \"cvc\") {\n      if (value.length !== 0) {\n        let filtered = value.replace(/\\D/, '');\n        setCardData(prevState => {\n          return { ...prevState,\n            cvc: filtered\n          };\n        });\n        setSelectedCardPayment(null);\n      } else {\n        setCardData(prevState => {\n          return { ...prevState,\n            cvc: \"\"\n          };\n        });\n        setSelectedCardPayment(null);\n      }\n    } else {\n      setCardData(prevState => {\n        return { ...prevState,\n          [name]: value\n        };\n      });\n      setSelectedCardPayment(null);\n    }\n  };\n\n  const handleInputFocus = e => {\n    setCardData(prevState => {\n      return { ...prevState,\n        focus: e.target.name\n      };\n    });\n  };\n\n  const handleSelectBlur = (type, full, monthOrYear) => {\n    if (type === \"selectedMonth\") {\n      setTimeout(() => {\n        setCardData(prevState => {\n          return { ...prevState,\n            expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n          };\n        });\n      }, 500);\n    } else if (type === \"selectedYear\") {\n      setTimeout(() => {\n        setCardData(prevState => {\n          return { ...prevState,\n            expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n          };\n        });\n      }, 500);\n    }\n  };\n\n  const handleCardSelectionChange = value => {\n    console.log(\"handleCardSelectionChange ran/running..:\", value);\n    setSelectedCardPayment(value);\n    setCardData(prevState => {\n      return { ...prevState,\n        cvc: \"\",\n        expiry: \"\",\n        focus: \"\",\n        name: \"\",\n        number: \"\"\n      };\n    });\n  };\n\n  const handleSubmission = () => {\n    console.log(\"handle handleSubmission submission!\");\n    const configuration = {\n      employerId: userData.uniqueId,\n      fullListing: fullySelected,\n      listingID: fullySelected.uniqueId,\n      listingTierSelected: listingBoostSelected,\n      card: cardData,\n      manuallyEntered: cardPaymentSelected !== null ? false : true,\n      cardPaymentSelected\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/listing/period/time`, configuration).then(res => {\n      if (res.data.message === \"Successfully boosted your selected listing!\") {\n        console.log(res.data);\n        const {\n          listing,\n          cost\n        } = res.data;\n        setSheetOpenEmployerListingPromote(false);\n        setSelected(null);\n        setFullySelected(null);\n        setSelectedCardPayment(null);\n        setSelectedMonth(null);\n        setSelectedYear(null);\n        setCardData({\n          focus: \"\",\n          cvc: \"\",\n          name: \"\",\n          number: \"\",\n          expiry: \"\"\n        });\n        NotificationManager.success(`We've successfully boosted your listing with the company name of '${listing.publicCompanyName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted listing & it is NOW LIVE!`, \"Successfully charged desired card and listing is NOW PROMOTED!\", 5000);\n      } else {\n        console.log(\"Err\", res.data);\n        setSheetOpenEmployerListingPromote(false);\n        setSelected(null);\n        setFullySelected(null);\n        setSelectedCardPayment(null);\n        setSelectedMonth(null);\n        setSelectedYear(null);\n        setCardData({\n          focus: \"\",\n          cvc: \"\",\n          name: \"\",\n          number: \"\",\n          expiry: \"\"\n        });\n        NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      setSheetOpenEmployerListingPromote(false);\n      setSelected(null);\n      setFullySelected(null);\n      setSelectedCardPayment(null);\n      setSelectedMonth(null);\n      setSelectedYear(null);\n      setCardData({\n        focus: \"\",\n        cvc: \"\",\n        name: \"\",\n        number: \"\",\n        expiry: \"\"\n      });\n      NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n    });\n  };\n\n  const calculateDisabled = () => {\n    const {\n      name,\n      number,\n      expiry,\n      cvc\n    } = cardData;\n\n    if (fullySelected !== null && (typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5 || cardPaymentSelected !== null)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    disableDrag: true,\n    isOpen: employerListingPromotePane,\n    onClose: () => setSheetOpenEmployerListingPromote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin-medium-button-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    color: \"danger-2x\",\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => setSheetOpenEmployerListingPromote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, \"Close/Exit Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bordered-shadowed-card-deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"header-deposit-card-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 41\n    }\n  }, \"You've selected \", listingBoostSelected, \" which means you have selected the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 156\n    }\n  }, calculateTier(listingBoostSelected)), \" boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#51bb25\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 363\n    }\n  }, calculateBoostCost(listingBoostSelected))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 41\n    }\n  }, \"Please select the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 79\n    }\n  }, \"previously posted employer listing\"), \" you'd like to promote and select your payment method (if applicable - you may need to add a payment method). We will display your previously posted \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 308\n    }\n  }, \"ACTIVE\"), \" contracts to allow you to choose from..\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"row-infinite-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroller-custom-horizontally-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 45\n    }\n  }, typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, index) => {\n    const views = listing.totalViews;\n    const progress = Math.round(views / 1000);\n    return /*#__PURE__*/React.createElement(Col, {\n      key: index,\n      sm: \"12\",\n      md: \"4\",\n      lg: \"4\",\n      xl: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        setSelected(listing.uniqueId);\n        setFullySelected(listing);\n      },\n      className: selected === listing.uniqueId ? \"project-box project-boxed-shadowized-selected\" : \"project-box project-boxed-shadowized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `badge badge-primary`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 65\n      }\n    }, \"Min Lvl. To Apply: \", listing.requiredRankToApply.label), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 65\n      }\n    }, listing.publicCompanyName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 65\n      }\n    }, calculateFirstImage(listing), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"posted-by-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 69\n      }\n    }, \"Posted \", moment(listing.systemDate).fromNow())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align-proper-loc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"hash-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 69\n      }\n    }, \"Related Hashtag's\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 126\n      }\n    }), typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, idx) => {\n      return /*#__PURE__*/React.createElement(Badge, {\n        key: idx,\n        color: \"primary\",\n        className: \"slim-border-badge\",\n        style: {\n          color: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 77\n        }\n      }, tag.text);\n    }) : null), /*#__PURE__*/React.createElement(ReactMarkdown, {\n      className: \"listing-desc-selectable\",\n      children: listing.listingDescription,\n      remarkPlugins: [remarkGfm],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 81\n      }\n    }, \"Total Applicants: \")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      className: 'text-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 69\n      }\n    }, listing.applicantIDArray.length), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 69\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 82\n      }\n    }, \"Likes: \")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      className: 'text-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 69\n      }\n    }, listing.likes), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 69\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 82\n      }\n    }, \"Dislikes: \")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      className: 'text-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 69\n      }\n    }, listing.dislikes)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-30 rounded-circle min-rounded\",\n      src: require(\"../../../../../../../assets/images/placeholder.png\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-30 rounded-circle min-rounded\",\n      src: require(\"../../../../../../../assets/images/placeholder.png\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-30 rounded-circle min-rounded\",\n      src: require(\"../../../../../../../assets/images/placeholder.png\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"d-inline-block ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"f-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 73\n      }\n    }, `+${listing.viewedBy.length - 3 > 0 ? listing.viewedBy.length : 0} More`)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-status mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 73\n      }\n    }, progress, \"% \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-body text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 112\n      }\n    }, \"Time Till Est. Completion Date\"))), progress === \"100\" ? /*#__PURE__*/React.createElement(Progress, {\n      className: \"sm-progress-bar\",\n      color: \"success\",\n      value: progress,\n      style: {\n        height: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 73\n      }\n    }) : /*#__PURE__*/React.createElement(Progress, {\n      className: \"sm-progress-bar\",\n      striped: true,\n      color: \"primary\",\n      value: progress,\n      style: {\n        height: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-status mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-square-info\",\n      color: \"info-2x\",\n      outline: true,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 69\n      }\n    }, \"Promote This Listing!\"))));\n  }) : null)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary bordered-shadowed-card-deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    className: \"header-deposit-card-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 41\n    }\n  }, \"Please select the payment method you'd like to use for this transaction..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 41\n    }\n  }, \"Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 45\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-primary b-r-primary project-boxed-shadowized-min-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4-two-col-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 65\n    }\n  }, \"Enter your \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 110\n    }\n  }, \"card details\"), \" in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 65\n    }\n  }, \"Add your payment details in the live form collection unit below. This will not only use \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 173\n    }\n  }, \"THIS CARD AS A PAYMENT METHOD\"), \" but will also save this card information to your account for a later date and/or future purchases down the road..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 73\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.number,\n    name: \"number\",\n    className: \"form-control\",\n    maxLength: 19,\n    size: 19,\n    type: \"number\",\n    placeholder: \"Debit/Credit Card Number\",\n    \"aria-label\": \"Debit/Credit Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 77\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 73\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.name,\n    name: \"name\",\n    maxLength: \"35\",\n    size: \"35\",\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    \"aria-label\": \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 73\n    }\n  }, \"Expiration\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: selectedMonth,\n    onChange: value => {\n      setSelectedMonth(value);\n      setSelectedCardPayment(null);\n    },\n    onBlur: () => {\n      handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n    },\n    className: \"stretch\",\n    placeholder: \"MONTH\",\n    options: monthOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 77\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    value: selectedYear,\n    onChange: value => {\n      setSelectedYear(value);\n      setSelectedCardPayment(null);\n    },\n    onBlur: () => {\n      handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n    },\n    className: \"stretch-two\",\n    placeholder: \"YEAR\",\n    options: yearOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 73\n    }\n  }, \"CVC\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.cvc,\n    name: \"cvc\",\n    className: \"form-control\",\n    maxLength: \"4\",\n    size: \"4\",\n    type: \"number\",\n    placeholder: \"CVC\",\n    \"aria-label\": \"CVC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 77\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    cvc: cardData.cvc,\n    expiry: cardData.expiry,\n    focused: cardData.focus,\n    name: cardData.name,\n    number: cardData.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 69\n    }\n  })))))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#d4d4d4\",\n    highlightColor: \"#8f8f8f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    containerClassName: \"stretch-bars\",\n    count: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 61\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 45\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-primary b-r-primary project-boxed-shadowized-min-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4-two-col-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 61\n    }\n  }, \"Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 61\n    }\n  }, \"Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 61\n    }\n  }, \"Select An Existing Registered Card (Previously registered on a different date/time)\"), /*#__PURE__*/React.createElement(Select, {\n    value: cardPaymentSelected,\n    onChange: handleCardSelectionChange,\n    options: previousCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 61\n    }\n  })))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#d4d4d4\",\n    highlightColor: \"#8f8f8f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    containerClassName: \"stretch-bars\",\n    count: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 61\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"37.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: calculateDisabled(),\n    outline: calculateDisabled() ? true : false,\n    className: \"btn-square-success\",\n    onClick: handleSubmission,\n    style: {\n      width: \"100%\"\n    },\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 45\n    }\n  }, \"Submit & Purchase Boost/Promotion!\"))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default BoostAlreadyPostedEmployerListingPaneHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostEmployerListing/boostListingPosted.js"],"names":["React","useState","useEffect","Fragment","Sheet","Button","Container","Row","Col","Card","CardHeader","CardBody","Progress","Badge","Label","Input","InputGroup","FormGroup","axios","ReactMarkdown","remarkGfm","ReactPlayer","moment","NotificationManager","Cards","Select","Skeleton","SkeletonTheme","monthOptions","value","label","yearOptions","BoostAlreadyPostedEmployerListingPaneHelper","userData","listingBoostSelected","employerListingPromotePane","setSheetOpenEmployerListingPromote","listings","setListingData","selected","setSelected","fullySelected","setFullySelected","cardPaymentSelected","setSelectedCardPayment","previousCards","setPreviousCardsData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","ready","setReady","cardData","setCardData","focus","cvc","name","number","expiry","config","params","id","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","cards","convertedPaymentsArr","index","length","method","last4","card","push","warning","catch","err","configuration","calculateBoostCost","tier","calculateTier","calculateFirstImage","listing","uploadedFiles","files","file","type","includes","REACT_APP_ASSET_LINK","link","handleInputChange","e","target","filtered","replace","prevState","handleInputFocus","handleSelectBlur","full","monthOrYear","setTimeout","handleCardSelectionChange","handleSubmission","employerId","fullListing","listingID","listingTierSelected","manuallyEntered","post","cost","success","publicCompanyName","error","calculateDisabled","width","marginTop","color","textDecorationLine","map","views","totalViews","progress","Math","round","requiredRankToApply","systemDate","fromNow","hashtags","tag","idx","text","listingDescription","applicantIDArray","likes","dislikes","require","viewedBy","height","paddingBottom","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4CC,UAA5C,EAAwDC,QAAxD,EAAkEC,QAAlE,EAA4EC,KAA5E,EAAmFC,KAAnF,EAA0FC,KAA1F,EAAiGC,UAAjG,EAA6GC,SAA7G,QAA+H,YAA/H;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADmB,EAEnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFmB,EAGnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHmB,EAInB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJmB,EAKnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CALmB,EAMnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CANmB,EAOnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAPmB,EAQnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CARmB,EASnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CATmB,EAUnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAVmB,EAWnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAXmB,EAYnB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAZmB,CAArB;AAcA,MAAMC,WAAW,GAAG,CAChB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CADgB,EAEhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAFgB,EAGhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAHgB,EAIhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAJgB,EAKhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CALgB,EAMhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CANgB,EAOhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAPgB,EAQhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CARgB,EAShB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CATgB,EAUhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAVgB,EAWhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAXgB,EAYhB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAZgB,EAahB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAbgB,EAchB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBD,EAAAA,KAAK,EAAE;AAAxB,CAdgB,CAApB;;AAiBA,MAAMG,2CAA2C,GAAG,QAAwG;AAAA,MAAvG;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,oBAAZ;AAAkCC,IAAAA,0BAAlC;AAA8DC,IAAAA;AAA9D,GAAuG;AAExJ,QAAM,CAAEC,QAAF,EAAYC,cAAZ,IAA+BrC,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAEsC,QAAF,EAAYC,WAAZ,IAA4BvC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAEwC,aAAF,EAAiBC,gBAAjB,IAAsCzC,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAE0C,mBAAF,EAAuBC,sBAAvB,IAAkD3C,QAAQ,CAAC,IAAD,CAAhE;AACA,QAAM,CAAE4C,aAAF,EAAiBC,oBAAjB,IAA0C7C,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAE8C,aAAF,EAAiBC,gBAAjB,IAAsC/C,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAEgD,YAAF,EAAgBC,eAAhB,IAAoCjD,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAEkD,KAAF,EAASC,QAAT,IAAsBnD,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAEoD,QAAF,EAAYC,WAAZ,IAA4BrD,QAAQ,CAAC;AACvCsD,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,GAAG,EAAE,EAFkC;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,MAAM,EAAE,EAJ+B;AAKvCC,IAAAA,MAAM,EAAE;AAL+B,GAAD,CAA1C;AAQAzD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0D,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AACJC,QAAAA,EAAE,EAAE7B,QAAQ,CAAC8B;AADT;AADG,KAAf;AAKA7C,IAAAA,KAAK,CAAC8C,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,6CAA5C,EAA0FP,MAA1F,EAAkGQ,IAAlG,CAAwGC,GAAD,IAAS;AAC5G,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,kCAAzB,EAA6D;AAEzDC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB;AAEA,cAAM;AAAEI,UAAAA;AAAF,YAAYL,GAAG,CAACC,IAAtB;AAEA,cAAMK,oBAAoB,GAAG,EAA7B;;AAEA,aAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACJ,IAAN,CAAWO,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;AACpD,gBAAME,MAAM,GAAGJ,KAAK,CAACJ,IAAN,CAAWM,KAAX,CAAf;AAEA,gBAAM;AAAEG,YAAAA;AAAF,cAAYD,MAAM,CAACE,IAAzB;AAEAL,UAAAA,oBAAoB,CAACM,IAArB,CAA0B;AAAEnD,YAAAA,KAAK,EAAG,kBAAiBiD,KAAM,EAAjC;AAAoClD,YAAAA,KAAK,EAAEiD;AAA3C,WAA1B;AACH;;AAEDhC,QAAAA,oBAAoB,CAAC6B,oBAAD,CAApB;AAEAvB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AAEH,OApBD,MAoBO;AACHoB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACC,IAAvB;AAEA/C,QAAAA,mBAAmB,CAAC2D,OAApB,CAA4B,+HAA5B,EAA6J,mCAA7J,EAAkM,IAAlM;AACH;AACJ,KA1BD,EA0BGC,KA1BH,CA0BUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AAEA7D,MAAAA,mBAAmB,CAAC2D,OAApB,CAA4B,+HAA5B,EAA6J,mCAA7J,EAAkM,IAAlM;AACH,KA9BD;AA+BH,GArCQ,EAqCN,EArCM,CAAT;AAuCAhF,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMmF,aAAa,GAAG;AAClBxB,MAAAA,MAAM,EAAE;AACJC,QAAAA,EAAE,EAAE7B,QAAQ,CAAC8B;AADT;AADU,KAAtB;AAKA7C,IAAAA,KAAK,CAAC8C,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,mDAA5C,EAAgGkB,aAAhG,EAA+GjB,IAA/G,CAAqHC,GAAD,IAAS;AACzH,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,2CAAzB,EAAsE;AAClEC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB;AAEA,cAAM;AAAEjC,UAAAA;AAAF,YAAegC,GAAG,CAACC,IAAzB;AAEAhC,QAAAA,cAAc,CAACD,QAAD,CAAd;AACH,OAND,MAMO;AACHmC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACC,IAAvB;AACH;AACJ,KAVD,EAUGa,KAVH,CAUUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACH,KAZD;AAaH,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACjC,YAAQA,IAAR;AACI,WAAK,QAAL;AACI,eAAO,gCAAP;AACA;;AACJ,WAAK,QAAL;AACI,eAAO,gCAAP;AACA;;AACJ,WAAK,QAAL;AACI,eAAO,+BAAP;AACA;;AACJ;AACI;AAXR;AAaH,GAdD;;AAeA,QAAMC,aAAa,GAAID,IAAD,IAAU;AAC5B,YAAQA,IAAR;AACI,WAAK,QAAL;AACI,eAAO,cAAP;AACA;;AACJ,WAAK,QAAL;AACI,eAAO,cAAP;AACA;;AACJ,WAAK,QAAL;AACI,eAAO,gBAAP;AACA;;AACJ;AACI;AAXR;AAaH,GAdD;;AAeA,QAAME,mBAAmB,GAAIC,OAAD,IAAa;AACrClB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BiB,OAAO,CAACC,aAArC;AAEA,UAAMC,KAAK,GAAGF,OAAO,CAACC,aAAtB;;AAEA,SAAK,IAAIf,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGgB,KAAK,CAACf,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AAC/C,YAAMiB,IAAI,GAAGD,KAAK,CAAChB,KAAD,CAAlB;;AACA,UAAIiB,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC7B,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,GAAG,EAAG,GAAE9B,OAAO,CAACC,GAAR,CAAY8B,oBAAqB,IAAGH,IAAI,CAACI,IAAK,EAA3D;AAA8D,UAAA,SAAS,EAAE,oCAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKA;AACH,OAPD,MAOO,IAAIJ,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AACpC,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,IAAtB;AAA4B,UAAA,IAAI,EAAE,IAAlC;AAAwC,UAAA,KAAK,EAAE,IAA/C;AAAqD,UAAA,KAAK,EAAE,MAA5D;AAAoE,UAAA,SAAS,EAAE,oCAA/E;AAAqH,UAAA,OAAO,EAAE,KAA9H;AAAqI,UAAA,GAAG,EAAG,GAAE9B,OAAO,CAACC,GAAR,CAAY8B,oBAAqB,IAAGH,IAAI,CAACI,IAAK,EAA3L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKA;AACH;AACJ;AACJ,GAvBD;;AAwBA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAE1C,MAAAA,IAAF;AAAQ5B,MAAAA;AAAR,QAAkBsE,CAAC,CAACC,MAA1B;;AAEA,QAAI3C,IAAI,KAAK,QAAb,EAAuB;AACnB,UAAI5B,KAAK,CAACgD,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAIwB,QAAQ,GAAGxE,KAAK,CAACyE,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAf;AAEAhD,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH7C,YAAAA,MAAM,EAAE2C;AAFL,WAAP;AAIH,SALU,CAAX;AAMAzD,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,OAVD,MAUO;AAEHU,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH7C,YAAAA,MAAM,EAAE;AAFL,WAAP;AAIH,SALU,CAAX;AAMAd,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;AACJ,KArBD,MAqBO,IAAIa,IAAI,KAAK,KAAb,EAAoB;AACvB,UAAI5B,KAAK,CAACgD,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAIwB,QAAQ,GAAGxE,KAAK,CAACyE,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAf;AAEAhD,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH/C,YAAAA,GAAG,EAAE6C;AAFF,WAAP;AAIH,SALU,CAAX;AAMAzD,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,OAVD,MAUO;AAEHU,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH/C,YAAAA,GAAG,EAAE;AAFF,WAAP;AAIH,SALU,CAAX;AAMAZ,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;AACJ,KArBM,MAqBA;AAEHU,MAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,eAAO,EACH,GAAGA,SADA;AAEH,WAAC9C,IAAD,GAAQ5B;AAFL,SAAP;AAIH,OALU,CAAX;AAMAe,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;AACJ,GAvDD;;AAwDA,QAAM4D,gBAAgB,GAAIL,CAAD,IAAO;AAC5B7C,IAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,aAAO,EACH,GAAGA,SADA;AAEHhD,QAAAA,KAAK,EAAE4C,CAAC,CAACC,MAAF,CAAS3C;AAFb,OAAP;AAIH,KALU,CAAX;AAMH,GAPD;;AAQA,QAAMgD,gBAAgB,GAAG,CAACX,IAAD,EAAOY,IAAP,EAAaC,WAAb,KAA6B;AAClD,QAAIb,IAAI,KAAK,eAAb,EAA8B;AAE1Bc,MAAAA,UAAU,CAAC,MAAM;AACbtD,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH5C,YAAAA,MAAM,EAAG,GAAEgD,WAAY,IAAG1D,YAAY,KAAK,IAAjB,GAAwBA,YAAY,CAACpB,KAArC,GAA6C,IAAK;AAFzE,WAAP;AAIH,SALU,CAAX;AAMH,OAPS,EAOP,GAPO,CAAV;AAQH,KAVD,MAUO,IAAIiE,IAAI,KAAK,cAAb,EAA6B;AAEhCc,MAAAA,UAAU,CAAC,MAAM;AACbtD,QAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,iBAAO,EACH,GAAGA,SADA;AAEH5C,YAAAA,MAAM,EAAG,GAAEZ,aAAa,KAAK,IAAlB,GAAyBA,aAAa,CAAClB,KAAvC,GAA+C,IAAK,IAAG8E,WAAY;AAF3E,WAAP;AAIH,SALU,CAAX;AAMH,OAPS,EAOP,GAPO,CAAV;AAQH;AACJ,GAtBD;;AAuBA,QAAME,yBAAyB,GAAIhF,KAAD,IAAW;AACzC2C,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwD5C,KAAxD;AAEAe,IAAAA,sBAAsB,CAACf,KAAD,CAAtB;AACAyB,IAAAA,WAAW,CAACiD,SAAS,IAAI;AACrB,aAAO,EACH,GAAGA,SADA;AAEH/C,QAAAA,GAAG,EAAE,EAFF;AAGHG,QAAAA,MAAM,EAAE,EAHL;AAIHJ,QAAAA,KAAK,EAAE,EAJJ;AAKHE,QAAAA,IAAI,EAAE,EALH;AAMHC,QAAAA,MAAM,EAAE;AANL,OAAP;AAQH,KATU,CAAX;AAUH,GAdD;;AAeA,QAAMoD,gBAAgB,GAAG,MAAM;AAC3BtC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAEA,UAAMY,aAAa,GAAG;AAClB0B,MAAAA,UAAU,EAAE9E,QAAQ,CAAC8B,QADH;AAElBiD,MAAAA,WAAW,EAAEvE,aAFK;AAGlBwE,MAAAA,SAAS,EAAExE,aAAa,CAACsB,QAHP;AAIlBmD,MAAAA,mBAAmB,EAAEhF,oBAJH;AAKlB8C,MAAAA,IAAI,EAAE3B,QALY;AAMlB8D,MAAAA,eAAe,EAAExE,mBAAmB,KAAK,IAAxB,GAA+B,KAA/B,GAAuC,IANtC;AAOlBA,MAAAA;AAPkB,KAAtB;AASAzB,IAAAA,KAAK,CAACkG,IAAN,CAAY,GAAEnD,OAAO,CAACC,GAAR,CAAYC,kBAAmB,qCAA7C,EAAmFkB,aAAnF,EAAkGjB,IAAlG,CAAwGC,GAAD,IAAS;AAC5G,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,6CAAzB,EAAwE;AACpEC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB;AAEA,cAAM;AAAEoB,UAAAA,OAAF;AAAW2B,UAAAA;AAAX,YAAoBhD,GAAG,CAACC,IAA9B;AAEAlC,QAAAA,kCAAkC,CAAC,KAAD,CAAlC;AAEAI,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEAE,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAI,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,QAAAA,WAAW,CAAC;AACRC,UAAAA,KAAK,EAAE,EADC;AAERC,UAAAA,GAAG,EAAE,EAFG;AAGRC,UAAAA,IAAI,EAAE,EAHE;AAIRC,UAAAA,MAAM,EAAE,EAJA;AAKRC,UAAAA,MAAM,EAAE;AALA,SAAD,CAAX;AAQApC,QAAAA,mBAAmB,CAAC+F,OAApB,CAA6B,qEAAoE5B,OAAO,CAAC6B,iBAAkB,sBAAqBF,IAAI,GAAG,GAAI,oEAA3J,EAAgO,gEAAhO,EAAkS,IAAlS;AAEH,OAvBD,MAuBO;AACH7C,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACC,IAAvB;AAEAlC,QAAAA,kCAAkC,CAAC,KAAD,CAAlC;AAEAI,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEAE,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAI,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,QAAAA,WAAW,CAAC;AACRC,UAAAA,KAAK,EAAE,EADC;AAERC,UAAAA,GAAG,EAAE,EAFG;AAGRC,UAAAA,IAAI,EAAE,EAHE;AAIRC,UAAAA,MAAM,EAAE,EAJA;AAKRC,UAAAA,MAAM,EAAE;AALA,SAAD,CAAX;AAQApC,QAAAA,mBAAmB,CAACiG,KAApB,CAA0B,+LAA1B,EAA2N,+BAA3N,EAA4P,IAA5P;AACH;AACJ,KA7CD,EA6CGrC,KA7CH,CA6CUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AAEAhD,MAAAA,kCAAkC,CAAC,KAAD,CAAlC;AAEAI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEAE,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAI,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,MAAAA,WAAW,CAAC;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,GAAG,EAAE,EAFG;AAGRC,QAAAA,IAAI,EAAE,EAHE;AAIRC,QAAAA,MAAM,EAAE,EAJA;AAKRC,QAAAA,MAAM,EAAE;AALA,OAAD,CAAX;AASApC,MAAAA,mBAAmB,CAACiG,KAApB,CAA0B,+LAA1B,EAA2N,+BAA3N,EAA4P,IAA5P;AACH,KAlED;AAmEH,GA/ED;;AAgFA,QAAMC,iBAAiB,GAAG,MAAM;AAE5B,UAAO;AAAEhE,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,MAAhB;AAAwBH,MAAAA;AAAxB,QAAgCH,QAAvC;;AAEA,QAAKZ,aAAa,KAAK,IAAnB,KAA8B,OAAOiB,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACmB,MAAP,IAAiB,EAAlD,IAAwD,OAAOrB,GAAP,KAAe,WAAvE,IAAsFA,GAAG,CAACqB,MAAJ,IAAc,CAApG,IAAyG,OAAOpB,IAAP,KAAgB,WAAzH,IAAwIA,IAAI,CAACoB,MAAL,IAAe,CAAvJ,IAA4J,OAAOlB,MAAP,KAAkB,WAA9K,IAA6LA,MAAM,CAACkB,MAAP,KAAkB,CAAhN,IAAuNlC,mBAAmB,KAAK,IAA5Q,CAAJ,EAAwR;AACpR,aAAO,KAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ,GATD;;AAUA6B,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBpB,QAAxB,EAAkCN,aAAlC,EAAiDE,YAAjD;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,IAApB;AAA0B,IAAA,MAAM,EAAEd,0BAAlC;AAA8D,IAAA,OAAO,EAAE,MAAMC,kCAAkC,CAAC,KAAD,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,mBAAnB;AAAwC,IAAA,KAAK,EAAE,WAA/C;AAA4D,IAAA,OAAO,MAAnE;AAAoE,IAAA,KAAK,EAAE;AAAEsF,MAAAA,KAAK,EAAE;AAAT,KAA3E;AAA8F,IAAA,OAAO,EAAE,MAAMtF,kCAAkC,CAAC,KAAD,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CADA,eAMA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEuF,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA2DzF,oBAA3D,sDAAmH;AAAQ,IAAA,KAAK,EAAE;AAAE0F,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,kBAAkB,EAAE;AAAxC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuErC,aAAa,CAACtD,oBAAD,CAApF,CAAnH,8GAAkU;AAAQ,IAAA,KAAK,EAAE;AAAE0F,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,kBAAkB,EAAE;AAAxC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuEvC,kBAAkB,CAACpD,oBAAD,CAAzF,CAAlU,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAsC;AAAQ,IAAA,KAAK,EAAE;AAAE0F,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAtC,wKAA2Q;AAAQ,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3Q,6CAFJ,CADJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,OAAOvF,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACwC,MAAT,GAAkB,CAArD,GAAyDxC,QAAQ,CAACyF,GAAT,CAAa,CAACpC,OAAD,EAAUd,KAAV,KAAoB;AACvF,UAAMmD,KAAK,GAAGrC,OAAO,CAACsC,UAAtB;AACA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,IAAnB,CAAjB;AACA,wBACI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEnD,KAAV;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAyB,MAAA,EAAE,EAAC,GAA5B;AAAgC,MAAA,EAAE,EAAC,GAAnC;AAAuC,MAAA,EAAE,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,OAAO,EAAE,MAAM;AAChBpC,QAAAA,WAAW,CAACkD,OAAO,CAAC3B,QAAT,CAAX;AACArB,QAAAA,gBAAgB,CAACgD,OAAD,CAAhB;AACH,OAHD;AAGG,MAAA,SAAS,EAAEnD,QAAQ,KAAKmD,OAAO,CAAC3B,QAArB,GAAgC,+CAAhC,GAAkF,sCAHhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAM,MAAA,SAAS,EAAG,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4D2B,OAAO,CAAC0C,mBAAR,CAA4BtG,KAAxF,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK4D,OAAO,CAAC6B,iBAAb,CALJ,eAMI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK9B,mBAAmB,CAACC,OAAD,CAFxB,eAGI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCpE,MAAM,CAACoE,OAAO,CAAC2C,UAAT,CAAN,CAA2BC,OAA3B,EAAtC,CAHJ,CANJ,eAWI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7D,EAEK,OAAO5C,OAAO,CAAC6C,QAAf,KAA4B,WAA5B,IAA2C7C,OAAO,CAAC6C,QAAR,CAAiB1D,MAAjB,GAA0B,CAArE,GAAyEa,OAAO,CAAC6C,QAAR,CAAiBT,GAAjB,CAAqB,CAACU,GAAD,EAAMC,GAAN,KAAc;AACzG,0BACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,GAAZ;AAAiB,QAAA,KAAK,EAAE,SAAxB;AAAmC,QAAA,SAAS,EAAE,mBAA9C;AAAmE,QAAA,KAAK,EAAE;AAAEb,UAAAA,KAAK,EAAE;AAAT,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8FY,GAAG,CAACE,IAAlG,CADJ;AAGH,KAJyE,CAAzE,GAII,IANT,CAXJ,eAmBI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,yBAAzB;AAAmD,MAAA,QAAQ,EAAEhD,OAAO,CAACiD,kBAArE;AAAyF,MAAA,aAAa,EAAE,CAACvH,SAAD,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,eAoBI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAZ,CADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAE,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCsE,OAAO,CAACkD,gBAAR,CAAyB/D,MAAjE,CAFJ,eAGI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,CAHJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAE,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCa,OAAO,CAACmD,KAAhD,CAJJ,eAKI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAb,CALJ,eAMI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAE,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCnD,OAAO,CAACoD,QAAhD,CANJ,CApBJ,eA4BI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAmD,MAAA,GAAG,EAAEC,OAAO,CAAC,oDAAD,CAA/D;AAAuH,MAAA,GAAG,EAAC,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADJ,eAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAmD,MAAA,GAAG,EAAEA,OAAO,CAAC,oDAAD,CAA/D;AAAuH,MAAA,GAAG,EAAC,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAmD,MAAA,GAAG,EAAEA,OAAO,CAAC,oDAAD,CAA/D;AAAuH,MAAA,GAAG,EAAC,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAHJ,eAII;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,IAAGrD,OAAO,CAACsD,QAAR,CAAiBnE,MAAjB,GAA0B,CAA1B,GAA8B,CAA9B,GAAkCa,OAAO,CAACsD,QAAR,CAAiBnE,MAAnD,GAA4D,CAAE,OAAvF,CADA,CAJJ,CADJ,CA5BJ,eAsCI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIoD,QAAJ,OADJ,eAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAvC,CAFJ,CADJ,EAKKA,QAAQ,KAAK,KAAb,gBACG,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,iBAApB;AAAsC,MAAA,KAAK,EAAC,SAA5C;AAAsD,MAAA,KAAK,EAAEA,QAA7D;AAAuE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAGG,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,iBAApB;AAAsC,MAAA,OAAO,MAA7C;AAA8C,MAAA,KAAK,EAAC,SAApD;AAA8D,MAAA,KAAK,EAAEhB,QAArE;AAA+E,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CAtCJ,eAkDI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAoD,MAAA,OAAO,MAA3D;AAA4D,MAAA,KAAK,EAAE;AAAEvB,QAAAA,KAAK,EAAE;AAAT,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CAlDJ,CADJ,CADJ;AA0DH,GA7DyD,CAAzD,GA6DI,IA9DT,CADJ,CADJ,CALJ,CADJ,CADJ,CADJ,eA+EI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,wDAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,kBAAkB,EAAE;AAAtB,KAAX;AAAgD,IAAA,SAAS,EAAC,2BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kSAHJ,CADJ,eAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1E,KAAK,KAAK,IAAV,gBAAiB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACd,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,6DAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA7C,+GADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAA4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA5G,uHAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEqD,gBAAhB;AAAkC,IAAA,QAAQ,EAAEN,iBAA5C;AAA+D,IAAA,KAAK,EAAE7C,QAAQ,CAACK,MAA/E;AAAuF,IAAA,IAAI,EAAC,QAA5F;AAAqG,IAAA,SAAS,EAAC,cAA/G;AAA8H,IAAA,SAAS,EAAE,EAAzI;AAA6I,IAAA,IAAI,EAAE,EAAnJ;AAAuJ,IAAA,IAAI,EAAC,QAA5J;AAAqK,IAAA,WAAW,EAAC,0BAAjL;AAA4M,kBAAW,0BAAvN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,CADJ,CAPJ,eAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE8C,gBAAhB;AAAkC,IAAA,QAAQ,EAAEN,iBAA5C;AAA+D,IAAA,KAAK,EAAE7C,QAAQ,CAACI,IAA/E;AAAqF,IAAA,IAAI,EAAC,MAA1F;AAAiG,IAAA,SAAS,EAAC,IAA3G;AAAgH,IAAA,IAAI,EAAC,IAArH;AAA0H,IAAA,SAAS,EAAC,cAApI;AAAmJ,IAAA,IAAI,EAAC,MAAxJ;AAA+J,IAAA,WAAW,EAAC,WAA3K;AAAuL,kBAAW,WAAlM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,CADJ,eASI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEV,aADX;AAEI,IAAA,QAAQ,EAAGlB,KAAD,IAAW;AACjBmB,MAAAA,gBAAgB,CAACnB,KAAD,CAAhB;AACAe,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,KALL;AAMI,IAAA,MAAM,EAAE,MAAM;AACV6D,MAAAA,gBAAgB,CAAC,eAAD,EAAkB1D,aAAlB,EAAiCA,aAAa,CAAClB,KAA/C,CAAhB;AACH,KARL;AASI,IAAA,SAAS,EAAC,SATd;AAUI,IAAA,WAAW,EAAE,OAVjB;AAWI,IAAA,OAAO,EAAED,YAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAcI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEqB,YADX;AAEI,IAAA,QAAQ,EAAGpB,KAAD,IAAW;AACjBqB,MAAAA,eAAe,CAACrB,KAAD,CAAf;AACAe,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,KALL;AAMI,IAAA,MAAM,EAAE,MAAM;AACV6D,MAAAA,gBAAgB,CAAC,cAAD,EAAiBxD,YAAjB,EAA+BA,YAAY,CAACpB,KAA5C,CAAhB;AACH,KARL;AASI,IAAA,SAAS,EAAC,aATd;AAUI,IAAA,WAAW,EAAE,MAVjB;AAWI,IAAA,OAAO,EAAEE,WAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAFJ,CADJ,CATJ,eA0CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEyE,gBAAhB;AAAkC,IAAA,QAAQ,EAAEN,iBAA5C;AAA+D,IAAA,KAAK,EAAE7C,QAAQ,CAACG,GAA/E;AAAoF,IAAA,IAAI,EAAC,KAAzF;AAA+F,IAAA,SAAS,EAAC,cAAzG;AAAwH,IAAA,SAAS,EAAC,GAAlI;AAAsI,IAAA,IAAI,EAAC,GAA3I;AAA+I,IAAA,IAAI,EAAC,QAApJ;AAA6J,IAAA,WAAW,EAAC,KAAzK;AAA+K,kBAAW,KAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,CA1CJ,CAjBJ,eAoEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEH,QAAQ,CAACG,GADlB;AAEI,IAAA,MAAM,EAAEH,QAAQ,CAACM,MAFrB;AAGI,IAAA,OAAO,EAAEN,QAAQ,CAACE,KAHtB;AAII,IAAA,IAAI,EAAEF,QAAQ,CAACI,IAJnB;AAKI,IAAA,MAAM,EAAEJ,QAAQ,CAACK,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CApEJ,CADJ,CADc,CAAjB,gBAmFS,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAmC,IAAA,cAAc,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,kBAAkB,EAAE,cAA9B;AAA8C,IAAA,KAAK,EAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADM,CApFd,CADJ,eA6FI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,KAAK,IAAV,gBAAiB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACd,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,6DAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kIADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAOI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAE+F,MAAAA,aAAa,EAAE;AAAjB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FADJ,eAEI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEvG,mBADX;AAEI,IAAA,QAAQ,EAAEkE,yBAFd;AAGI,IAAA,OAAO,EAAEhE,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,CADc,CAAjB,gBAiBS,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAmC,IAAA,cAAc,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,kBAAkB,EAAE,cAA9B;AAA8C,IAAA,KAAK,EAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADM,CAlBd,CA7FJ,CADJ,eAyHI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEsG,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE1B,iBAAiB,EAAnC;AAAuC,IAAA,OAAO,EAAEA,iBAAiB,KAAK,IAAL,GAAY,KAA7E;AAAoF,IAAA,SAAS,EAAC,oBAA9F;AAAmH,IAAA,OAAO,EAAEX,gBAA5H;AAA8I,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAArJ;AAAwK,IAAA,KAAK,EAAE,SAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CAzHJ,CANJ,CADJ,CADJ,CA/EJ,CADJ,CANA,CADJ,eAkOI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlOJ,CADJ,CADJ;AAwOH,CA9iBD;;AAgjBA,eAAe1F,2CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup }  from \"reactstrap\";\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst monthOptions = [\n  { value: '01', label: '01' },\n  { value: '02', label: '02' },\n  { value: '03', label: '03' },\n  { value: '04', label: '04' },\n  { value: '05', label: '05' },\n  { value: '06', label: '06' },\n  { value: '07', label: '07' },\n  { value: '08', label: '08' },\n  { value: '09', label: '09' },\n  { value: '10', label: '10' },\n  { value: '11', label: '11' },\n  { value: '12', label: '12' },\n];\nconst yearOptions = [\n    { label: \"2022\", value: \"22\" },\n    { label: \"2023\", value: \"23\" },\n    { label: \"2024\", value: \"24\" },\n    { label: \"2025\", value: \"25\" },\n    { label: \"2026\", value: \"26\" },\n    { label: \"2027\", value: \"27\" },\n    { label: \"2028\", value: \"28\" },\n    { label: \"2029\", value: \"29\" },\n    { label: \"2030\", value: \"30\" },\n    { label: \"2031\", value: \"31\" },\n    { label: \"2032\", value: \"32\" },\n    { label: \"2033\", value: \"33\" },\n    { label: \"2034\", value: \"34\" },\n    { label: \"2035\", value: \"35\" }\n];\n\nconst BoostAlreadyPostedEmployerListingPaneHelper = ({ userData, listingBoostSelected, employerListingPromotePane, setSheetOpenEmployerListingPromote }) => {\n\n    const [ listings, setListingData ] = useState([]);\n    const [ selected, setSelected ] = useState(null);\n    const [ fullySelected, setFullySelected ] = useState(null);\n    const [ cardPaymentSelected, setSelectedCardPayment ] = useState(null);\n    const [ previousCards, setPreviousCardsData ] = useState([]);\n    const [ selectedMonth, setSelectedMonth ] = useState(null);\n    const [ selectedYear, setSelectedYear ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ cardData, setCardData ] = useState({\n        focus: \"\",\n        cvc: \"\",\n        name: \"\",\n        number: \"\",\n        expiry: \"\"\n    })\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                const convertedPaymentsArr = [];\n\n                for (let index = 0; index < cards.data.length; index++) {\n                    const method = cards.data[index];\n\n                    const { last4 } = method.card;\n                    \n                    convertedPaymentsArr.push({ label: `**** **** **** ${last4}`, value: method })\n                }\n\n                setPreviousCardsData(convertedPaymentsArr);\n\n                setReady(true);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n        })\n    }, [])\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/fetch/related/employer/listings/employer/account`, configuration).then((res) => {\n            if (res.data.message === \"Gathered related listings to choose from!\") {\n                console.log(res.data);\n\n                const { listings } = res.data;\n\n                setListingData(listings);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const calculateBoostCost = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"$10.00 (plus applicable taxes)\";\n                break;\n            case \"tier-2\":\n                return \"$30.00 (plus applicable taxes)\";\n                break;\n            case \"tier-3\":\n                return \"50.00 (plus applicable taxes)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateTier = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"Tier One (1)\";\n                break;\n            case \"tier-2\":\n                return \"Tier Two (2)\";\n                break;\n            case \"tier-3\":\n                return \"Tier Three (3)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateFirstImage = (listing) => {\n        console.log(\"uploadedFiles\", listing.uploadedFiles);\n\n        const files = listing.uploadedFiles;\n\n        for (let index = 0; index < files.length; index++) {\n            const file = files[index];\n            if (file.type.includes(\"image\")) {\n                return (\n                    <Fragment>\n                        <img src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} className={\"last-displayed rounded-circle mr-1\"} />\n                    </Fragment>\n                );\n                break;\n            } else if (file.type.includes(\"video\")) {\n                return (\n                    <Fragment>\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"last-displayed rounded-circle mr-1\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Fragment>\n                );\n                break;\n            }\n        }\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === \"number\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else if (name === \"cvc\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else {\n\n            setCardData(prevState => {\n                return {\n                    ...prevState,\n                    [name]: value\n                }\n            });\n            setSelectedCardPayment(null);\n        }\n    }\n    const handleInputFocus = (e) => {\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                focus: e.target.name\n            }\n        });\n    }\n    const handleSelectBlur = (type, full, monthOrYear) => {\n        if (type === \"selectedMonth\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n                    }\n                });\n            }, 500)\n        } else if (type === \"selectedYear\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n                    }\n                });\n            }, 500)\n        }\n    }\n    const handleCardSelectionChange = (value) => {\n        console.log(\"handleCardSelectionChange ran/running..:\", value);\n\n        setSelectedCardPayment(value);\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                cvc: \"\",\n                expiry: \"\",\n                focus: \"\",\n                name: \"\",\n                number: \"\"\n            }\n        });\n    }\n    const handleSubmission = () => {\n        console.log(\"handle handleSubmission submission!\");\n        \n        const configuration = {\n            employerId: userData.uniqueId,\n            fullListing: fullySelected,\n            listingID: fullySelected.uniqueId,\n            listingTierSelected: listingBoostSelected,\n            card: cardData,\n            manuallyEntered: cardPaymentSelected !== null ? false : true,\n            cardPaymentSelected\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/listing/period/time`, configuration).then((res) => {\n            if (res.data.message === \"Successfully boosted your selected listing!\") {\n                console.log(res.data);\n\n                const { listing, cost } = res.data;\n\n                setSheetOpenEmployerListingPromote(false);\n\n                setSelected(null);\n                setFullySelected(null);\n\n                setSelectedCardPayment(null);\n                setSelectedMonth(null);\n                setSelectedYear(null);\n                setCardData({\n                    focus: \"\",\n                    cvc: \"\",\n                    name: \"\",\n                    number: \"\",\n                    expiry: \"\"\n                });\n\n                NotificationManager.success(`We've successfully boosted your listing with the company name of '${listing.publicCompanyName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted listing & it is NOW LIVE!`, \"Successfully charged desired card and listing is NOW PROMOTED!\", 5000);\n\n            } else {\n                console.log(\"Err\", res.data);\n\n                setSheetOpenEmployerListingPromote(false);\n\n                setSelected(null);\n                setFullySelected(null);\n\n                setSelectedCardPayment(null);\n                setSelectedMonth(null);\n                setSelectedYear(null);\n                setCardData({\n                    focus: \"\",\n                    cvc: \"\",\n                    name: \"\",\n                    number: \"\",\n                    expiry: \"\"\n                });\n\n                NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            setSheetOpenEmployerListingPromote(false);\n\n            setSelected(null);\n            setFullySelected(null);\n\n            setSelectedCardPayment(null);\n            setSelectedMonth(null);\n            setSelectedYear(null);\n            setCardData({\n                focus: \"\",\n                cvc: \"\",\n                name: \"\",\n                number: \"\",\n                expiry: \"\"\n            });\n\n\n            NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n        })\n    }\n    const calculateDisabled = () => {\n\n        const  { name, number, expiry, cvc } = cardData;\n\n        if ((fullySelected !== null) && ((typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5) || (cardPaymentSelected !== null))) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n    return (\n        <div>\n            <Sheet disableDrag={true} isOpen={employerListingPromotePane} onClose={() => setSheetOpenEmployerListingPromote(false)}>\n                <Sheet.Container>\n                <Sheet.Header>\n                    <div className='margin-medium-button-pane'>\n                        <Button className={\"btn-square-danger\"} color={\"danger-2x\"} outline style={{ width: \"100%\" }} onClick={() => setSheetOpenEmployerListingPromote(false)}>Close/Exit Pane</Button>\n                    </div>\n                </Sheet.Header>\n                <Sheet.Content>\n                    <Container fluid={true}>\n                        <Row style={{ marginTop: \"25px\" }}>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card className='bordered-shadowed-card-deposit'>\n                                    <CardHeader className={\"b-l-info b-r-info\"}>\n                                        <h2 className='header-deposit-card-funds'>You've selected {listingBoostSelected} which means you have selected the <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{calculateTier(listingBoostSelected)}</strong> boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>{calculateBoostCost(listingBoostSelected)}</strong></h2>\n                                        <p className='lead'>Please select the <strong style={{ color: \"#7366ff\" }}>previously posted employer listing</strong> you'd like to promote and select your payment method (if applicable - you may need to add a payment method). We will display your previously posted <strong style={{ color: \"#7366ff\" }}>ACTIVE</strong> contracts to allow you to choose from..</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row className='row-infinite-pane'>\n                                            <div className='scroller-custom-horizontally-pane'>\n                                                {typeof listings !== \"undefined\" && listings.length > 0 ? listings.map((listing, index) => {\n                                                    const views = listing.totalViews;\n                                                    const progress = Math.round(views / 1000);\n                                                    return (\n                                                        <Col key={index} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                            <div onClick={() => {\n                                                                setSelected(listing.uniqueId);\n                                                                setFullySelected(listing);\n                                                            }} className={selected === listing.uniqueId ? \"project-box project-boxed-shadowized-selected\" : \"project-box project-boxed-shadowized\"}>\n                                                                <span className={`badge badge-primary`}>Min Lvl. To Apply: {listing.requiredRankToApply.label}</span>\n                                                                <h6>{listing.publicCompanyName}</h6>\n                                                                <div className=\"media\">\n                                                                    {/* {<img className=\"img-20 mr-1 rounded-circle\" src={calculateFirstImage(listing)} alt=\"\" />} */}\n                                                                    {calculateFirstImage(listing)}\n                                                                    <p className='posted-by-date'>Posted {moment(listing.systemDate).fromNow()}</p>\n                                                                </div>\n                                                                <div className='align-proper-loc'>\n                                                                    <Label className={\"hash-label\"}>Related Hashtag's</Label><br />\n                                                                    {typeof listing.hashtags !== \"undefined\" && listing.hashtags.length > 0 ? listing.hashtags.map((tag, idx) => {\n                                                                        return (\n                                                                            <Badge key={idx} color={\"primary\"} className={\"slim-border-badge\"} style={{ color: \"#fff\" }}>{tag.text}</Badge>\n                                                                        );\n                                                                    }) : null}\n                                                                </div>\n                                                                <ReactMarkdown className='listing-desc-selectable' children={listing.listingDescription} remarkPlugins={[remarkGfm]} />\n                                                                <Row className=\"details\">\n                                                                    <Col xs=\"6\"><span>Total Applicants: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.applicantIDArray.length}</Col>\n                                                                    <Col xs=\"6\"> <span>Likes: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.likes}</Col>\n                                                                    <Col xs=\"6\"> <span>Dislikes: </span></Col>\n                                                                    <Col xs=\"6\" className={'text-primary'}>{listing.dislikes}</Col>\n                                                                </Row>\n                                                                <div className=\"customers\">\n                                                                    <ul>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block\"><img className=\"img-30 rounded-circle min-rounded\" src={require(\"../../../../../../../assets/images/placeholder.png\")} alt=\"\" /></li>\n                                                                        <li className=\"d-inline-block ml-2\">\n                                                                        <p className=\"f-12\">{`+${listing.viewedBy.length - 3 > 0 ? listing.viewedBy.length : 0} More`}</p>\n                                                                        </li>\n                                                                    </ul>\n                                                                </div>\n                                                                <div className=\"project-status mt-4\">\n                                                                    <div className=\"media mb-0\">\n                                                                        <p>{progress}% </p>\n                                                                        <div className=\"media-body text-right\"><span>Time Till Est. Completion Date</span></div>\n                                                                    </div>\n                                                                    {progress === \"100\" ?\n                                                                        <Progress className=\"sm-progress-bar\" color=\"success\" value={progress} style={{ height: \"5px\" }} />\n                                                                        :\n                                                                        <Progress className=\"sm-progress-bar\" striped color=\"primary\" value={progress} style={{ height: \"5px\" }} />\n                                                                    }\n                                                                    \n                                                                </div>\n                                                                <div className=\"project-status mt-4\">\n                                                                    <Button className='btn-square-info' color='info-2x' outline style={{ width: \"100%\" }}>Promote This Listing!</Button>\n                                                                </div>\n                                                            </div>\n                                                        </Col>\n                                                    );\n                                                }) : null}\n                                            </div>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card>\n                                    <CardHeader className='b-l-primary b-r-primary bordered-shadowed-card-deposit'>\n                                        <h2 style={{ textDecorationLine: \"underline\" }} className='header-deposit-card-funds'>Please select the payment method you'd like to use for this transaction..</h2>\n                                        <hr />\n                                        <p className='lead'>Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                            <Row>\n                                                                <h4 className='h4-two-col-header'>Enter your <strong>card details</strong> in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).</h4>\n                                                                <hr />\n                                                                <p className='lead'>Add your payment details in the live form collection unit below. This will not only use <strong>THIS CARD AS A PAYMENT METHOD</strong> but will also save this card information to your account for a later date and/or future purchases down the road..</p>\n                                                                <hr />\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <FormGroup>\n                                                                        <Label>Card Number</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.number} name=\"number\" className=\"form-control\" maxLength={19} size={19} type=\"number\" placeholder=\"Debit/Credit Card Number\" aria-label=\"Debit/Credit Card Number\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Full Name</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.name} name=\"name\" maxLength=\"35\" size=\"35\" className=\"form-control\" type=\"text\" placeholder=\"Full Name\" aria-label=\"Full Name\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Expiration</Label>\n                                                                        <InputGroup>\n                                                                            <Select\n                                                                                value={selectedMonth}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedMonth(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n                                                                                }}\n                                                                                className=\"stretch\"\n                                                                                placeholder={\"MONTH\"}\n                                                                                options={monthOptions}\n                                                                            />\n                                                                            <Select\n                                                                                value={selectedYear}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedYear(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n                                                                                }}\n                                                                                className=\"stretch-two\"\n                                                                                placeholder={\"YEAR\"}\n                                                                                options={yearOptions}\n                                                                            />\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>CVC</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.cvc} name=\"cvc\" className=\"form-control\" maxLength=\"4\" size=\"4\" type=\"number\" placeholder=\"CVC\" aria-label=\"CVC\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <Cards\n                                                                        cvc={cardData.cvc}\n                                                                        expiry={cardData.expiry}\n                                                                        focused={cardData.focus}\n                                                                        name={cardData.name}\n                                                                        number={cardData.number}\n                                                                    />\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Row>\n                                                            <h4 className='h4-two-col-header'>Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.</h4>\n                                                            <hr />\n                                                            <p className='lead'>Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!</p>\n                                                            <hr />\n                                                        </Row>\n                                                        <Row style={{ paddingBottom: \"10px\" }}>\n                                                            <Label>Select An Existing Registered Card (Previously registered on a different date/time)</Label>\n                                                            <Select\n                                                                value={cardPaymentSelected}\n                                                                onChange={handleCardSelectionChange}\n                                                                options={previousCards}\n                                                            />\n                                                        </Row>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginBottom: \"37.5px\" }}>\n                                            <Button disabled={calculateDisabled()} outline={calculateDisabled() ? true : false} className='btn-square-success' onClick={handleSubmission} style={{ width: \"100%\" }} color={\"success\"}>Submit & Purchase Boost/Promotion!</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Sheet.Content>\n                </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </div>\n    );\n}\n\nexport default BoostAlreadyPostedEmployerListingPaneHelper;"]},"metadata":{},"sourceType":"module"}