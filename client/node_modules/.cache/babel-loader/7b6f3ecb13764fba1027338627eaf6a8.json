{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/recurring/recurringPaymentPane.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { confirmAlert } from 'react-confirm-alert';\nimport moment from \"moment\";\nimport Slider from 'rc-slider';\nimport { DateRangePicker } from 'react-date-range';\n\nconst RecurringPaymentPaneHelper = _ref => {\n  let {\n    incrementalPayentsPane,\n    setIncrementalPaymentsOpen,\n    userData,\n    setCurrentApplication,\n    listing,\n    currentlyDue,\n    setCurrentlyDue,\n    currentApplication\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [activeCard, setActiveCard] = useState(null);\n  const [percentageToBePaid, setPercentageToBePaid] = useState(50);\n  const [cost, setCost] = useState(0);\n  const [dateInterval, setDateInterval] = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]);\n  const [marks, setMarks] = useState({\n    0: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"0%\"\n    },\n    10: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"10%\"\n    },\n    20: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"20%\"\n    },\n    30: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"30%\"\n    },\n    40: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"40%\"\n    },\n    50: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"50%\"\n    },\n    60: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"60%\"\n    },\n    70: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"70%\"\n    },\n    80: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"80%\"\n    },\n    90: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"90%\"\n    },\n    100: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"100%\"\n    }\n  });\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, configuration).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        console.log(res.data);\n        const {\n          cards\n        } = res.data;\n        setCards(cards.data);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(\"Critical errror...:\", err);\n    });\n  }, []);\n\n  const handlePaymentInitialization = () => {\n    confirmAlert({\n      title: `Are you SURE you'd like to make a 'RECURRING-PAYMENT' of ${cost.toFixed(2)}?`,\n      message: `This is NOT completely permanent, IF the contracted hacker does NOT complete the required work or is incompetent, you have the ABILITY to RETRIEVE your un-used funds at a later point. Confirmed transfers/payments will ALSO need to be confirmed by you prior to any money being transferred throughout accounts.`,\n      buttons: [{\n        label: 'Yes, Initialize Recurring Payment!',\n        onClick: () => {\n          console.log(\"yes notify and run logic!\");\n\n          if (activeCard !== null) {\n            const config = {\n              userID: userData.uniqueId,\n              depositAmount: Number(cost),\n              hackerID: currentApplication.applicantId,\n              activeCard,\n              publicCompanyName: listing.publicCompanyName,\n              jobID: currentApplication.id\n            };\n            axios.post(`${process.env.REACT_APP_BASE_URL}/initialize/recurring/payment/contract/start`, config).then(res => {\n              if (res.data.message === \"Successfully deposited funds and notified hacker!\") {\n                console.log(res.data);\n                const {\n                  employer\n                } = res.data;\n                setIncrementalPaymentsOpen(false);\n                setActiveCard(null);\n                setPercentageToBePaid(50);\n                const findIndexJobUpdated = employer.activeHiredHackers.findIndex(x => x.id === currentApplication.id);\n                setCurrentApplication(employer.activeHiredHackers[findIndexJobUpdated]);\n                NotificationManager.success(`We've successfully deposited the funds into ${process.env.REACT_APP_APPLICATION_NAME} & your contracted hacker is now READY to go and should start working immediately (within 1 business day)! Congrats on your new hire!`, \"Succesfully processed request & notified hacker!\", 4750);\n              } else {\n                console.log(\"Err\", res.data);\n                setIncrementalPaymentsOpen(false);\n                setActiveCard(null);\n                setPercentageToBePaid(50);\n                NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n              }\n            }).catch(err => {\n              console.log(\"Critical err\", err);\n              setIncrementalPaymentsOpen(false);\n              setActiveCard(null);\n              setPercentageToBePaid(50);\n              NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n            });\n          } else {\n            setIncrementalPaymentsOpen(false);\n            setActiveCard(null);\n            setPercentageToBePaid(50);\n            NotificationManager.warning(\"You MUST select a 'payment card' to take the desired funds from, We will bill/draw funds from this account so check your balance prior to running this command to avoid errors!\", \"Please select a 'payment card' before continuing!\", 4750);\n          }\n        }\n      }, {\n        label: 'No, Cancel/Exit.',\n        onClick: () => {\n          console.log(\"canelled/don't run logic\");\n        }\n      }]\n    });\n  };\n\n  const handleSliderValueChange = percentage => {\n    console.log(\"handleSliderValueChange percentage\", percentage);\n    setPercentageToBePaid(percentage);\n  };\n\n  const onAfterChange = percentage => {\n    console.log(\"onAfterChange percentage\", percentage);\n    const totalCost = Math.round(Number(currentApplication.amountOfMoneyUponCompletion));\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    setCost(converted);\n  };\n\n  const calculateCurrentSelectedCost = percentage => {\n    const totalCost = Math.round(Number(currentApplication.amountOfMoneyUponCompletion));\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    return `$${converted.toFixed(2)} currently selected to be paid on a recurring basis`;\n  };\n\n  const handleSelectionDateChange = selection => {\n    const newDatesArray = [];\n    console.log(\"Selection choosen...\", selection);\n    const startDate = new Date(selection.selection.startDate);\n    console.log(\"startDate\", startDate); // setDateInterval\n\n    const now = new Date().toISOString().split('T')[0];\n    const daysOfYear = [];\n    const thirtyDaysNow = new Date().setDate(new Date().getDate() + 30);\n    console.log(\"thirtyDaysNow\", thirtyDaysNow); // for (let d = now; d <= thirtyDaysNow; d.setDate(d.getDate() + 1)) {\n    //     daysOfYear.push(new Date(d));\n    // }\n    // for (let index = 0; index < applicantData.selectedTestDates.length; index++) {\n    //     const applicationDate = applicantData.selectedTestDates[index];\n    //     newDatesArray.push({\n    //         startDate: new Date(applicationDate.startDate),\n    //         endDate: new Date(applicationDate.endDate),\n    //         key: \"selection\"\n    //     });\n    //     // end of array - exit and set READY\n    //     if ((applicantData.selectedTestDates.length - 1) === index) {\n    //         setDates(newDatesArray);\n    //         setDatesReadyStatus(true);\n    //     }\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    className: \"my-sheet-container-price-wrapper\",\n    draggable: false,\n    isOpen: incrementalPayentsPane,\n    onClose: () => setIncrementalPaymentsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"my-sheet-container-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"12.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIncrementalPaymentsOpen(false),\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"Exit/Close This Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"breadcrumb-full-payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    id: \"breadcrumb-full-payment\",\n    parent: \"Make FULL Payment\",\n    title: currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-pane-full-payment\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, currentApplication !== null ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 64\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-payment-entirely-halved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"make-full-payment-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 49\n    }\n  }, \"Set-up 'recurring' payments or payment's that'll automatically be made with your 'primary' card on a recurring/frequent basis..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 49\n    }\n  }, \"This is essentially an 'escrow' type service with \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 119\n    }\n  }, \"stripe\"), \" that deposit's funds PRIOR to a hacker starting a contract to assure both \", process.env.REACT_APP_APPLICATION_NAME, \" AND the hacker themselves that once the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 334\n    }\n  }, \"contract is successfully completed\"), \", the funds will be released.. With this specific payment method you will charged the agreed amount on a \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 552\n    }\n  }, \"'recurring basis'\"), \" which means if you choose a saturday to make a $74.99 payment, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 712\n    }\n  }, \"every\"), \" saturday this payment will be automatically made \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 846\n    }\n  }, \"UNTIL CANCELLED\"), \" or the peak/full payment is achieved\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 61\n    }\n  }, \"Please select a recurring payment value until the value of \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 124\n    }\n  }, \"$\", Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2), \" (USD-$)\"), \" is completely paid off finalizing the balance between you and \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 342\n    }\n  }, currentApplication.applicantName), \".\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-slider-adjustment-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 65\n    }\n  }, \"Please drag the marker to the appropriate position marking 'how much' you'd like to pay on this overall payment..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: percentageToBePaid,\n    startPoint: 0,\n    onAfterChange: onAfterChange,\n    onChange: handleSliderValueChange,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"current-selected-cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 69\n    }\n  }, calculateCurrentSelectedCost(percentageToBePaid))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: dateInterval,\n    onChange: selection => handleSelectionDateChange(selection),\n    shownDate: new Date(),\n    className: \"custom-date-range-picker\",\n    showMonthAndYearPickers: false,\n    staticRanges: [],\n    direction: \"horizontal\",\n    showMonthArrow: true,\n    months: 2,\n    showDateDisplay: false,\n    inputRanges: [],\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 65\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"22.5px\",\n      marginBottom: \"22.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 57\n    }\n  }, \"Select a card that you wish to make this payment with..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 57\n    }\n  }), typeof cards !== \"undefined\" && cards.length > 0 ? cards.slice(0, 3).map((payment, idx) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: () => setActiveCard(payment),\n      className: activeCard !== null && activeCard.id === payment.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start active active-picked\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 77\n      }\n    }, \"ID: \", payment.id.slice(0, 7), \"...\"), /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: \"#f73164\"\n      },\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 134\n      }\n    }, \"Added/Created: \", moment(payment.created * 1000).fromNow())), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      style: {\n        color: \"#51bb25\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 73\n      }\n    }, `**** **** **** ${payment.card.last4}`), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 73\n      }\n    }, `Exp. ${payment.card.exp_month}/${payment.card.exp_year}`, \" \", /*#__PURE__*/React.createElement(\"small\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 163\n      }\n    }, \"Card Type: \", payment.card.brand))));\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 62\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 61\n    }\n  }, \"You don't have any availiable cards on file..\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"27.5px\"\n    },\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../../../../../../../assets/images/credit-cards.jpg\"),\n    className: \"credit-cards-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 65\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      handlePaymentInitialization();\n    },\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\",\n      marginTop: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 49\n    }\n  }, \"Make Payment (will need to double confirm)\")), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 49\n    }\n  }, \"If you're confused or would like more information on \", /*#__PURE__*/React.createElement(Link, {\n    className: \"payment-linky\",\n    to: \"/frequently/asked/questions/main/employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 106\n    }\n  }, \"escrow services\"), \", you can find a plethorea of information between the \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"https://en.wikipedia.org/wiki/Escrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 265\n    }\n  }, \"wiki page\"), \" or by clicking \", /*#__PURE__*/React.createElement(Link, {\n    className: \"payment-linky\",\n    to: \"/frequently/asked/questions/main/employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 359\n    }\n  }, \"here\"), \" to see exactly how \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 473\n    }\n  }, \"WE\"), \" implement escrow type services!\"))))) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 45,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 41\n    }\n  })))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(RecurringPaymentPaneHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/jobManagement/employers/manageHiredHackers/paymentRelated/mainSelection/sheetHelpers/recurring/recurringPaymentPane.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Container","Row","Col","Card","CardBody","CardFooter","CardHeader","ListGroup","ListGroupItem","Popover","PopoverHeader","PopoverBody","Button","axios","Link","Sheet","connect","NotificationManager","Skeleton","SkeletonTheme","confirmAlert","moment","Slider","DateRangePicker","RecurringPaymentPaneHelper","incrementalPayentsPane","setIncrementalPaymentsOpen","userData","setCurrentApplication","listing","currentlyDue","setCurrentlyDue","currentApplication","cards","setCards","activeCard","setActiveCard","percentageToBePaid","setPercentageToBePaid","cost","setCost","dateInterval","setDateInterval","startDate","Date","endDate","key","marks","setMarks","style","color","label","configuration","params","id","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","catch","err","handlePaymentInitialization","title","toFixed","buttons","onClick","config","userID","depositAmount","Number","hackerID","applicantId","publicCompanyName","jobID","post","employer","findIndexJobUpdated","activeHiredHackers","findIndex","x","success","REACT_APP_APPLICATION_NAME","error","warning","handleSliderValueChange","percentage","onAfterChange","totalCost","Math","round","amountOfMoneyUponCompletion","perc","parseFloat","converted","calculateCurrentSelectedCost","handleSelectionDateChange","selection","newDatesArray","now","toISOString","split","daysOfYear","thirtyDaysNow","setDate","getDate","margin","width","applicantName","textDecorationLine","marginTop","marginBottom","length","slice","map","payment","idx","created","fromNow","fontWeight","card","last4","exp_month","exp_year","brand","padding","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardBody, CardFooter, CardHeader, ListGroup, ListGroupItem, Popover, PopoverHeader, PopoverBody, Button } from \"reactstrap\"\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Sheet from 'react-modal-sheet';\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { confirmAlert } from 'react-confirm-alert';\nimport moment from \"moment\";\nimport Slider from 'rc-slider';\nimport { DateRangePicker } from 'react-date-range';\n\nconst RecurringPaymentPaneHelper = ({ incrementalPayentsPane, setIncrementalPaymentsOpen, userData, setCurrentApplication, listing, currentlyDue, setCurrentlyDue, currentApplication }) => {\n\n    const [ cards, setCards ] = useState([]);\n    const [ activeCard, setActiveCard ] = useState(null);\n    const [ percentageToBePaid, setPercentageToBePaid ] = useState(50);\n    const [ cost, setCost ] = useState(0);\n    const [ dateInterval, setDateInterval ] = useState([{\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection'\n    }]);\n    const [ marks, setMarks ] = useState({\n        0: { style: { color: \"blue\" }, label: \"0%\" },\n        10: { style: { color: \"blue\" }, label: \"10%\" },\n        20: { style: { color: \"blue\" }, label: \"20%\" },\n        30: { style: { color: \"blue\" }, label: \"30%\" },\n        40: { style: { color: \"blue\" }, label: \"40%\" },\n        50: { style: { color: \"blue\" }, label: \"50%\" },\n        60: { style: { color: \"blue\" }, label: \"60%\" },\n        70: { style: { color: \"blue\" }, label: \"70%\" },\n        80: { style: { color: \"blue\" }, label: \"80%\" },\n        90: { style: { color: \"blue\" }, label: \"90%\" },\n        100: { style: { color: \"blue\" }, label: \"100%\" }\n    });\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, configuration).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                setCards(cards.data);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n        })\n    }, []);\n\n    const handlePaymentInitialization = () => {\n        confirmAlert({\n            title: `Are you SURE you'd like to make a 'RECURRING-PAYMENT' of ${cost.toFixed(2)}?`,\n            message: `This is NOT completely permanent, IF the contracted hacker does NOT complete the required work or is incompetent, you have the ABILITY to RETRIEVE your un-used funds at a later point. Confirmed transfers/payments will ALSO need to be confirmed by you prior to any money being transferred throughout accounts.`,\n            buttons: [\n              {\n                label: 'Yes, Initialize Recurring Payment!',\n                onClick: () => {\n                    console.log(\"yes notify and run logic!\");\n\n                    if (activeCard !== null) {\n                        const config = {\n                            userID: userData.uniqueId,\n                            depositAmount: Number(cost),\n                            hackerID: currentApplication.applicantId,\n                            activeCard,\n                            publicCompanyName: listing.publicCompanyName,\n                            jobID: currentApplication.id\n                        };\n                \n                        axios.post(`${process.env.REACT_APP_BASE_URL}/initialize/recurring/payment/contract/start`, config).then((res) => {\n                            if (res.data.message === \"Successfully deposited funds and notified hacker!\") {\n                                console.log(res.data);\n\n                                const { employer } = res.data;\n    \n                                setIncrementalPaymentsOpen(false);\n                                setActiveCard(null);\n                                setPercentageToBePaid(50);\n\n                                const findIndexJobUpdated = employer.activeHiredHackers.findIndex((x) => x.id === currentApplication.id);\n                                \n                                setCurrentApplication(employer.activeHiredHackers[findIndexJobUpdated]);\n    \n                                NotificationManager.success(`We've successfully deposited the funds into ${process.env.REACT_APP_APPLICATION_NAME} & your contracted hacker is now READY to go and should start working immediately (within 1 business day)! Congrats on your new hire!`, \"Succesfully processed request & notified hacker!\", 4750);\n                            } else {\n                                console.log(\"Err\", res.data);\n\n                                setIncrementalPaymentsOpen(false);\n                                setActiveCard(null);\n                                setPercentageToBePaid(50);\n    \n                                NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n                            }\n                        }).catch((err) => {\n                            console.log(\"Critical err\", err);\n                            \n                            setIncrementalPaymentsOpen(false);\n                            setActiveCard(null);\n                            setPercentageToBePaid(50);\n    \n                            NotificationManager.error(\"An error occurred while attempting to make changes, update the hacker hiree and process overall related logic - if this problem persists, please contact support or try this action again!\", \"An error occurred while attempting to notifiy related hacker!\", 4750);\n                        })\n                    } else {\n                        setIncrementalPaymentsOpen(false);\n                        setActiveCard(null);\n                        setPercentageToBePaid(50);\n\n                        NotificationManager.warning(\"You MUST select a 'payment card' to take the desired funds from, We will bill/draw funds from this account so check your balance prior to running this command to avoid errors!\", \"Please select a 'payment card' before continuing!\", 4750);\n                    }\n                }\n              },\n              {\n                label: 'No, Cancel/Exit.',\n                onClick: () => {\n                    console.log(\"canelled/don't run logic\");\n                }\n              }\n            ]\n        });\n    }\n    const handleSliderValueChange = (percentage) => {\n        console.log(\"handleSliderValueChange percentage\", percentage);\n\n        setPercentageToBePaid(percentage);\n    }\n    const onAfterChange = (percentage) => {\n        console.log(\"onAfterChange percentage\", percentage);\n\n        const totalCost = Math.round(Number(currentApplication.amountOfMoneyUponCompletion));\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        setCost(converted);\n    }\n    const calculateCurrentSelectedCost = (percentage) => {\n        const totalCost = Math.round(Number(currentApplication.amountOfMoneyUponCompletion));\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        return `$${converted.toFixed(2)} currently selected to be paid on a recurring basis`;\n    }\n    const handleSelectionDateChange = (selection) => {\n        const newDatesArray = [];\n\n\n        console.log(\"Selection choosen...\", selection);\n\n        const startDate = new Date(selection.selection.startDate);\n\n        console.log(\"startDate\", startDate);\n\n        // setDateInterval\n\n        const now = new Date().toISOString().split('T')[0];\n\n        const daysOfYear = [];\n        const thirtyDaysNow = new Date().setDate(new Date().getDate() + 30);\n\n        console.log(\"thirtyDaysNow\", thirtyDaysNow);\n\n        // for (let d = now; d <= thirtyDaysNow; d.setDate(d.getDate() + 1)) {\n        //     daysOfYear.push(new Date(d));\n        // }\n\n        // for (let index = 0; index < applicantData.selectedTestDates.length; index++) {\n        //     const applicationDate = applicantData.selectedTestDates[index];\n        //     newDatesArray.push({\n        //         startDate: new Date(applicationDate.startDate),\n        //         endDate: new Date(applicationDate.endDate),\n        //         key: \"selection\"\n        //     });\n        //     // end of array - exit and set READY\n        //     if ((applicantData.selectedTestDates.length - 1) === index) {\n        //         setDates(newDatesArray);\n        //         setDatesReadyStatus(true);\n        //     }\n        // }\n    }\n    return (\n        <Fragment>\n            <Sheet className={\"my-sheet-container-price-wrapper\"} draggable={false} isOpen={incrementalPayentsPane} onClose={() => setIncrementalPaymentsOpen(false)}>\n                <Sheet.Container className={\"my-sheet-container-price\"}>\n                    <Sheet.Header>\n                        <div style={{ margin: \"12.5px\" }} className=\"centered-both-ways\">\n                            <Button onClick={() => setIncrementalPaymentsOpen(false)} className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }}>Exit/Close This Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                    <Sheet.Content>\n                        <div id={\"breadcrumb-full-payment\"}>\n                            <Breadcrumb id={\"breadcrumb-full-payment\"} parent={\"Make FULL Payment\"} title={currentApplication !== null ? `Make a full deposit/payment to this contractor (${currentApplication.applicantName})` : \"Loading Data...\"} />\n                            <Container className='container-pane-full-payment' fluid={true}>\n                                {currentApplication !== null ? <Row>\n                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                        <Card className='card-payment-entirely-halved'>\n                                            <CardHeader>\n                                                <h3 className='make-full-payment-header'>Set-up 'recurring' payments or payment's that'll automatically be made with your 'primary' card on a recurring/frequent basis..</h3>\n                                                <hr />\n                                                <p className='lead'>This is essentially an 'escrow' type service with <em style={{ textDecorationLine: \"underline\" }}>stripe</em> that deposit's funds PRIOR to a hacker starting a contract to assure both {process.env.REACT_APP_APPLICATION_NAME} AND the hacker themselves that once the <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>contract is successfully completed</strong>, the funds will be released.. With this specific payment method you will charged the agreed amount on a <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>'recurring basis'</strong> which means if you choose a saturday to make a $74.99 payment, <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>every</strong> saturday this payment will be automatically made <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>UNTIL CANCELLED</strong> or the peak/full payment is achieved</p>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <div className='centered-both-ways'>\n                                                        <Col className='dotted-border-col' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                            <h3>Please select a recurring payment value until the value of <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>${Number(currentApplication.amountOfMoneyUponCompletion).toFixed(2)} (USD-$)</strong> is completely paid off finalizing the balance between you and <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>{currentApplication.applicantName}</strong>.</h3>\n                                                            <hr />\n                                                            <div className='center-slider-adjustment-bar'>\n                                                                <p className='lead'>Please drag the marker to the appropriate position marking 'how much' you'd like to pay on this overall payment..</p>\n                                                                <hr />\n                                                                <Slider value={percentageToBePaid} startPoint={0} onAfterChange={onAfterChange} onChange={handleSliderValueChange} marks={marks} />\n                                                                <div className='centered-both-ways'>\n                                                                    <h3 className='current-selected-cost'>{calculateCurrentSelectedCost(percentageToBePaid)}</h3>\n                                                                </div>\n                                                            </div>\n                                                        </Col>\n                                                        <Col className='dotted-border-col' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                            <div className='centered-both-ways'>\n                                                                <DateRangePicker \n                                                                    ranges={dateInterval}\n                                                                    onChange={(selection) => handleSelectionDateChange(selection)}\n                                                                    shownDate={new Date()}\n                                                                    className={\"custom-date-range-picker\"}\n                                                                    showMonthAndYearPickers={false}\n                                                                    staticRanges={[]}\n                                                                    direction={\"horizontal\"}\n                                                                    showMonthArrow={true}\n                                                                    months={2}\n                                                                    showDateDisplay={false}\n                                                                    inputRanges={[]}\n                                                                    rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                                                />\n                                                            </div>\n                                                        </Col>\n                                                    </div>\n                                                </Row>\n                                                <Row style={{ marginTop: \"22.5px\", marginBottom: \"22.5px\" }}>\n                                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                        <h3>Select a card that you wish to make this payment with..</h3>\n                                                        <hr />\n                                                        {typeof cards !== \"undefined\" && cards.length > 0 ? cards.slice(0, 3).map((payment, idx) => {\n                                                            return (\n                                                                <Fragment key={idx}>\n                                                                    <ListGroupItem onClick={() => setActiveCard(payment)} className={activeCard !== null && activeCard.id === payment.id ? \"list-group-item-action listitem-pricing-card flex-column align-items-start active active-picked\" : \"list-group-item-action listitem-pricing-card flex-column align-items-start\"}>\n                                                                        <div className=\"d-flex w-100 justify-content-between\">\n                                                                            <h5 className=\"mb-1\">ID: {payment.id.slice(0, 7)}...</h5><small style={{ color: \"#f73164\" }} className=\"text-secondary\">Added/Created: {moment(payment.created * 1000).fromNow()}</small>\n                                                                        </div>\n                                                                        <p className=\"mb-1\" style={{ color: \"#51bb25\", fontWeight: \"bold\" }}>{`**** **** **** ${payment.card.last4}`}</p>\n                                                                        <small className=\"text-muted\">{`Exp. ${payment.card.exp_month}/${payment.card.exp_year}`} <small className=\"float-right\">Card Type: {payment.card.brand}</small></small>\n                                                                    </ListGroupItem>\n                                                                </Fragment>\n                                                            );\n                                                        }) : <Fragment>\n                                                            <h3 style={{ color: \"blue\", textDecorationLine: \"underline\" }}>You don't have any availiable cards on file..</h3>\n                                                            <div style={{ padding: \"27.5px\" }} className=\"centered-both-ways\">\n                                                                <img src={require(\"../../../../../../../../../assets/images/credit-cards.jpg\")} className={\"credit-cards-placeholder\"} />\n                                                            </div>\n                                                        </Fragment>}\n                                                    </Col>\n                                                </Row>\n                                                <Button onClick={() => {\n                                                    handlePaymentInitialization();\n                                                }} className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\", marginTop: \"17.5px\" }}>Make Payment (will need to double confirm)</Button>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <h3>If you're confused or would like more information on <Link className={\"payment-linky\"} to={\"/frequently/asked/questions/main/employer\"}>escrow services</Link>, you can find a plethorea of information between the <a target=\"_blank\" href={\"https://en.wikipedia.org/wiki/Escrow\"}>wiki page</a> or by clicking <Link className={\"payment-linky\"} to={\"/frequently/asked/questions/main/employer\"}>here</Link> to see exactly how <strong style={{ textDecorationLine: \"underline\" }}>WE</strong> implement escrow type services!</h3>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Row> : <Row>\n                                <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                    <p>\n                                        <Skeleton count={45} />\n                                    </p>\n                                </SkeletonTheme>\n                                </Row>}\n                            </Container>\n                        </div>\n                    </Sheet.Content>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(RecurringPaymentPaneHelper);"]},"metadata":{},"sourceType":"module"}