{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nconst {\n  TimelineHelper,\n  SheetPaneSubmittingDataHelper,\n  HelperRadioButtons,\n  renderMountedLogic,\n  handleDeletionLink,\n  handleLinkAddition\n} = helpers;\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\n\nconst ApplyAsHackerEmployerListingHelper = _ref => {\n  let {\n    userData,\n    shiftCoreStyles,\n    location\n  } = _ref;\n  // get URL ID from string\n  const {\n    id\n  } = useParams(); // initialize state items...\n\n  const [alreadyAdded, setAlreadyAddedState] = useState(null);\n  const [disabledDays, setDisabledDaysState] = useState([]);\n  const [physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState] = useState([]);\n  const [sheetIsOpen, setSheetOpenState] = useState(false);\n  const [currentUserData, setCurrentUserData] = useState(null);\n  const [ready, setReadyGlobal] = useState(false);\n  const [listingReady, setListingReady] = useState(false);\n  const [listingData, setListingData] = useState(null);\n  const [dateRanges, setDateRanges] = useState(null);\n  const [datesReady, setDatesReady] = useState(false);\n  const [selectedLinks, setSelectedLinks] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n  const gatheredValues = getValues();\n\n  const handleDateSelection = ranges => {\n    // setDateRanges(ranges);\n    console.log(\"ranges\", ranges);\n  }; // deconstruct redux-state items...\n\n\n  const {\n    username,\n    firstName,\n    lastName,\n    registrationDate,\n    completedJobs\n  } = userData; // component mounted.\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const globalConfig = {\n      config: {\n        params: {\n          uniqueId: userData.uniqueId\n        }\n      },\n      configuration: {\n        params: {\n          listingId: id\n        }\n      }\n    };\n    renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady); // gather core anonymous user information\n\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setCurrentUserData(user);\n        setReadyGlobal(true);\n      } else {\n        console.log('err', res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // render custom sentence instead of DRY repeating\n\n  const renderSentence = (actual, type, val) => {\n    // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n    if (ready === true && currentUserData !== null) {\n      // ready to display\n      if (currentUserData.hasOwnProperty(actual)) {\n        // return proper/desired \"right\" filled out data\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }\n        }, \"Your \", type, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: currentUserData.hasOwnProperty(actual) ? {\n            color: \"#dc3545\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          } : {\n            color: \"#a927f9\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 90\n          }\n        }, val), \" will be submitted to the employer...\");\n      } else {\n        // throw error warning user\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom override-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 24\n          }\n        }, \"You have NOT filled out the required field of \", /*#__PURE__*/React.createElement(\"em\", {\n          style: {\n            textDecorationLine: \"underline\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 137\n          }\n        }, type), \", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile/settings/edit\",\n          className: \"linky\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 299\n          }\n        }, \"your profile settings page\"), \" and edit the appropriate sections, then come back and try again!\");\n      }\n    } else {\n      // return loading \"data\"\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1 listitem-sub-text-custom-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      }, \"Still loading your data/content...!\");\n    }\n  }; // view more fields in PANE\n\n\n  const viewRemainderOfIncludedFields = alreadyIncludedArray => {\n    console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray); // already shown items *(HIGHLIGHT)*\n\n    setAlreadyAddedState(alreadyIncludedArray); // shift \"lock\" styles to prevent scrolling and clicking\n\n    shiftCoreStyles(true); // open modal - change modal state to OPEN\n\n    setSheetOpenState(true); // set delay to allow load\n\n    setTimeout(() => {\n      // select outter body classname to pause/freeze\n      const target = document.querySelector(\".enact-nonclick\"); // DISABLE body scroll entirely\n\n      disableBodyScroll(target);\n    }, 500);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(name, value, {\n      shouldValidate: true\n    });\n  };\n\n  console.log(\"gatheredValues\", gatheredValues);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SheetPaneSubmittingDataHelper, {\n    ready: ready,\n    shiftCoreStyles: shiftCoreStyles,\n    alreadyAdded: alreadyAdded,\n    currentUserData: currentUserData,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    userData: userData,\n    sheetIsOpen: sheetIsOpen,\n    setSheetOpenState: setSheetOpenState,\n    renderSentence: renderSentence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: `Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`,\n    title: \"Review job requirements & details + apply to position/listing!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-default\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"customized-row-apply\",\n    style: {\n      paddingTop: \"25px \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner customized-top-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"Type of hack (physical location or digital asset)\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, \"This is the \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 80\n    }\n  }, \"TYPE\"), \" of hack this \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 107\n    }\n  }, \"specific listing\"), \" requires from its participants. These selected options have absolutely \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 204\n    }\n  }, \"NO LIENENCY\"), \" and any disregard to platform rules will result in \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 284\n    }\n  }, \"IMMEDIATE PERMENANT BANNING\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(HelperRadioButtons, {\n    listingReady: listingReady,\n    listingData: listingData,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, \"Cover Letter (CV)\"), /*#__PURE__*/React.createElement(Input, {\n    value: gatheredValues.coverLetterText,\n    placeholder: \"Enter your cover letter information (or upload in attachments)...\",\n    onChange: handleInputChange,\n    name: \"coverLetterText\",\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }), errors.coverLetterText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 71\n    }\n  }, errors.coverLetterText.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, \"Account Type (Digital/Physical-hack type)\"), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select your desired hack type (of enabled options)\",\n    value: null,\n    onChange: selectedOption => {},\n    options: physicalOrDigitalHackOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }, \"What is your approach to this 'hack'?\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter your 'approach' to how you expect to successfully hack this company... (don't give out your attack methods - just give a general idea - can be very broad - up to you)\",\n    onChange: handleInputChange,\n    name: \"hackApproach\",\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 45\n    }\n  }, \"Message To Employer (Direct to employer)\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter your 'custom' message to the employer...\",\n    onChange: handleInputChange,\n    name: \"messageToEmployer\",\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, \"SUBMIT APPLICATION INFORMATION\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, \"This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 102\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }), renderSentence(\"username\", \"Username\", username)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }, \"First Name & Last Name (Together)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 127\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  }), renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, \"Completed Job Count\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 113\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }), renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, \"Created Account (from ago...)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 123\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }), renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    onClick: () => {\n      // View ALL included fields...\n      viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n    },\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, \"View all included fields (including above mentioned)\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }, \"REQUIRED\"), \" data to be completed/filled-out\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }, \"Reference a link (blog, website, etc... made by \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 120\n    }\n  }, \"you\"), \")\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 82\n    }\n  }, \"http(s)://\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\"), {\n    onChange: handleInputChange,\n    className: \"form-control\",\n    type: \"text\",\n    name: \"referenceLink\",\n    placeholder: \"Enter a link to your work (website, blog, etc...)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 45\n    }\n  })), !errors.referenceLink ? /*#__PURE__*/React.createElement(InputGroupAddon, {\n    onClick: () => {\n      handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink);\n    },\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 70\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 67\n    }\n  }, \"Submit\")) : null), errors.referenceLink ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 65\n    }\n  }, errors.referenceLink.message) : null), selectedLinks.map((link, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: e => {\n        e.preventDefault();\n      },\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa-sitemap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 80\n      }\n    }), link.link, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        // handle deletion\n        handleDeletionLink(link, setSelectedLinks);\n      },\n      id: \"float-trash-right\",\n      className: \"icon-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 123\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, \"Available dates to select (Physical 'Hack'ing Dates)\"), datesReady === true ? /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: dateRanges,\n    onChange: handleDateSelection // onPreviewChange={(value1, value2) => {\n    //     console.log(value1, value2);\n    // }}\n    ,\n    minDate: new Date() // go back MAX 2 WEEKS and start from there\n    // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n    ,\n    disabledDates: disabledDays,\n    scroll: {\n      enabled: true\n    },\n    direction: \"horizontal\" // showMonthAndYearPickers={true}\n    ,\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 60\n    }\n  }) : null))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimelineHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles\n})(withRouter(ApplyAsHackerEmployerListingHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ListGroup","FormGroup","Label","Input","InputGroupAddon","Form","InputGroup","InputGroupText","helpers","connect","moment","shiftCoreStyles","disableBodyScroll","clearAllBodyScrollLocks","axios","_","Link","withRouter","useParams","Select","DateRangePicker","useForm","Controller","MainHooksCustomHelpers","TimelineHelper","SheetPaneSubmittingDataHelper","HelperRadioButtons","renderMountedLogic","handleDeletionLink","handleLinkAddition","urlEnteredLinkData","ApplyAsHackerEmployerListingHelper","userData","location","id","alreadyAdded","setAlreadyAddedState","disabledDays","setDisabledDaysState","physicalOrDigitalHackOptions","setPhysicalOrDigitalHackOptionsState","sheetIsOpen","setSheetOpenState","currentUserData","setCurrentUserData","ready","setReadyGlobal","listingReady","setListingReady","listingData","setListingData","dateRanges","setDateRanges","datesReady","setDatesReady","selectedLinks","setSelectedLinks","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","gatheredValues","handleDateSelection","ranges","console","log","username","firstName","lastName","registrationDate","completedJobs","window","scrollTo","globalConfig","config","params","uniqueId","configuration","listingId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","user","catch","err","renderSentence","actual","type","val","hasOwnProperty","color","fontSize","fontWeight","textDecorationLine","viewRemainderOfIncludedFields","alreadyIncludedArray","setTimeout","target","document","querySelector","handleInputChange","e","name","value","shouldValidate","REACT_APP_CRYPTO_TOKEN_NAME","paddingTop","coverLetterText","selectedOption","width","fromNow","marginTop","check","referenceLink","map","link","index","preventDefault","Date","enabled","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\n\n\nconst { TimelineHelper, SheetPaneSubmittingDataHelper, HelperRadioButtons, renderMountedLogic, handleDeletionLink, handleLinkAddition } = helpers;\n\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\n\n\nconst ApplyAsHackerEmployerListingHelper = ({ userData, shiftCoreStyles, location }) => {\n\n    // get URL ID from string\n    const { id } = useParams();\n    // initialize state items...\n    const [ alreadyAdded, setAlreadyAddedState ] = useState(null);\n    const [ disabledDays, setDisabledDaysState ] = useState([]);\n    const [ physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState ] = useState([]);\n    const [ sheetIsOpen, setSheetOpenState ] = useState(false);\n    const [ currentUserData, setCurrentUserData ] = useState(null);\n    const [ ready, setReadyGlobal ] = useState(false);\n    const [ listingReady, setListingReady ] = useState(false);\n    const [ listingData, setListingData ] = useState(null);\n    const [ dateRanges, setDateRanges ] = useState(null);\n    const [ datesReady, setDatesReady ] = useState(false);\n    const [ selectedLinks, setSelectedLinks ] = useState([]);\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n    \n    const gatheredValues = getValues();\n\n    const handleDateSelection = (ranges) => {\n        // setDateRanges(ranges);\n        console.log(\"ranges\", ranges);\n    }\n    // deconstruct redux-state items...\n    const { username, firstName, lastName, registrationDate, completedJobs } = userData;\n\n    // component mounted.\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        const globalConfig = {\n            config: {\n                params: {\n                    uniqueId: userData.uniqueId\n                }\n            },\n            configuration: {\n                params: {\n                    listingId: id\n                }\n            }\n        }\n        renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady);\n        // gather core anonymous user information\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setCurrentUserData(user);\n                setReadyGlobal(true);\n            } else {\n                console.log('err', res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // render custom sentence instead of DRY repeating\n    const renderSentence = (actual, type, val) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(actual)) {\n                // return proper/desired \"right\" filled out data\n                return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Your {type} <strong style={currentUserData.hasOwnProperty(actual) ? { color: \"#dc3545\", fontSize: \"1.005rem\", fontWeight: 500 } : { color: \"#a927f9\", fontSize: \"1.005rem\", fontWeight: 500 }}>{val}</strong> will be submitted to the employer...</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom-custom override-red\"}>You have NOT filled out the required field of <em style={{ textDecorationLine: \"underline\" }}>{type}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    // view more fields in PANE\n    const viewRemainderOfIncludedFields = (alreadyIncludedArray) => {\n        console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray);\n\n        // already shown items *(HIGHLIGHT)*\n        setAlreadyAddedState(alreadyIncludedArray);\n        // shift \"lock\" styles to prevent scrolling and clicking\n        shiftCoreStyles(true);\n        // open modal - change modal state to OPEN\n        setSheetOpenState(true);\n        // set delay to allow load\n        setTimeout(() => {\n            // select outter body classname to pause/freeze\n            const target = document.querySelector(\".enact-nonclick\");\n            // DISABLE body scroll entirely\n            disableBodyScroll(target);\n        },  500);\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n    console.log(\"gatheredValues\", gatheredValues);\n    return (\n        <Fragment>\n            <SheetPaneSubmittingDataHelper ready={ready} shiftCoreStyles={shiftCoreStyles} alreadyAdded={alreadyAdded} currentUserData={currentUserData} clearAllBodyScrollLocks={clearAllBodyScrollLocks} userData={userData} sheetIsOpen={sheetIsOpen} setSheetOpenState={setSheetOpenState} renderSentence={renderSentence} />\n            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n            <Container className=\"container-default\" fluid={true}>\n                <Row className=\"customized-row-apply\" style={{ paddingTop: \"25px \" }}>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className=\"custom-card-inner customized-top-card\">\n                            <CardHeader className=\"b-l-primary\">\n                                <h5>Type of hack (physical location or digital asset)</h5>\n                                <p style={{ paddingTop: \"7.5px\" }}>This is the <em>TYPE</em> of hack this <em>specific listing</em> requires from its participants. These selected options have absolutely <strong>NO LIENENCY</strong> and any disregard to platform rules will result in <strong>IMMEDIATE PERMENANT BANNING</strong></p>\n                            </CardHeader>\n                            <CardBody>\n                                <HelperRadioButtons listingReady={listingReady} listingData={listingData} id={id} />\n                                <div style={{ paddingTop: \"15px\" }} />\n                                <hr />{/*  listingVisibility */}\n                                <Row>\n                                    <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">Cover Letter (CV)</Label>\n                                            <Input value={gatheredValues.coverLetterText} placeholder={\"Enter your cover letter information (or upload in attachments)...\"} onChange={handleInputChange} name={\"coverLetterText\"} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                            {errors.coverLetterText ? <span className=\"span-tooltip\">{errors.coverLetterText.message}</span> : null}\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label>Account Type (Digital/Physical-hack type)</Label>\n                                            <Select\n                                                placeholder={\"Select your desired hack type (of enabled options)\"}\n                                                value={null}\n                                                onChange={(selectedOption) => {\n\n                                                }}\n                                                options={physicalOrDigitalHackOptions}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">What is your approach to this 'hack'?</Label>\n                                            <Input placeholder={\"Enter your 'approach' to how you expect to successfully hack this company... (don't give out your attack methods - just give a general idea - can be very broad - up to you)\"} onChange={handleInputChange} name={\"hackApproach\"} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"3\"} />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">Message To Employer (Direct to employer)</Label>\n                                            <Input placeholder={\"Enter your 'custom' message to the employer...\"} onChange={handleInputChange} name={\"messageToEmployer\"} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Button style={{ width: \"100%\" }} className=\"btn-square btn-air-info\" outline color=\"info-2x\">SUBMIT APPLICATION INFORMATION</Button>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                        <Card className=\"custom-card-inner custom-card-inner-customized\">\n                            <CardHeader className=\"b-l-info\">\n                                <h5>Type Of Data That'll Be Automatically Submitted</h5>\n                                <hr />\n                                <p>This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...</p>\n                            </CardHeader>\n                            <CardBody>\n                                <ListGroup>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"username\", \"Username\", username)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-info\"} onClick={() => {\n                                            // View ALL included fields...\n                                            viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n                                        }} outline color=\"info-2x\">View all included fields (including above mentioned)</Button>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                        <Card className=\"custom-card-inner custom-card-inner-customized\">\n                            <CardHeader className=\"b-l-info\">\n                                <h5><strong>REQUIRED</strong> data to be completed/filled-out</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>  \n                                    {/* links go here... */}\n                                    <FormGroup style={{ marginTop: \"17.5px\" }} className=\" m-form__group\">\n                                        <Label className=\"heavy-label\">Reference a link (blog, website, etc... made by <em style={{ textDecorationLine: \"underline\" }}>you</em>)</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText className=\"group-addon-custom-two\">{\"http(s)://\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\")} onChange={handleInputChange} className=\"form-control\" type=\"text\" name=\"referenceLink\" placeholder={\"Enter a link to your work (website, blog, etc...)\"} />\n                                            {!errors.referenceLink ? <InputGroupAddon onClick={() => {\n                                                handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink);\n                                            }} addonType=\"append\"><InputGroupText className=\"group-addon-custom\">{\"Submit\"}</InputGroupText></InputGroupAddon> : null}\n                                        </InputGroup>\n                                        {errors.referenceLink ? <span className=\"span-tooltip\">{errors.referenceLink.message}</span> : null}\n                                    </FormGroup>\n                                    {selectedLinks.map((link, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <ListGroupItem onClick={(e) => {\n                                                    e.preventDefault();\n                                                }} className=\"list-group-item\"><i className={\"fa-sitemap\"}></i>{link.link}<i onClick={() => {\n                                                    // handle deletion\n                                                    handleDeletionLink(link, setSelectedLinks);\n                                                }} id={\"float-trash-right\"} className=\"icon-trash\"></i></ListGroupItem>\n                                            </Fragment>\n                                        );\n                                    })}\n                                    <Label className=\"heavy-label\">Available dates to select (Physical 'Hack'ing Dates)</Label>\n                                    {datesReady === true ? <DateRangePicker\n                                        ranges={dateRanges}\n                                        onChange={handleDateSelection}\n                                        // onPreviewChange={(value1, value2) => {\n                                        //     console.log(value1, value2);\n                                        // }}\n                                        minDate={new Date()}\n                                        // go back MAX 2 WEEKS and start from there\n                                        // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n                                        disabledDates={disabledDays}\n                                        scroll={{ enabled: true }}\n                                        direction={\"horizontal\"}\n                                        // showMonthAndYearPickers={true}\n                                        rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                    /> : null}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <TimelineHelper />\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles })(withRouter(ApplyAsHackerEmployerListingHelper));\n"]},"metadata":{},"sourceType":"module"}