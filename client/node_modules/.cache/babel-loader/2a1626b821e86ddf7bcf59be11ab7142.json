{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js\";\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { Modal } from 'react-responsive-modal';\nimport FileViewer from 'react-file-viewer';\n\nconst PageTwoMainHelper = _ref => {\n  let {\n    userData,\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData\n  } = _ref;\n  // refs & such\n  const dropzoneRef = useRef(null); // start of state logic...\n\n  const [progress, setProgress] = useState(0);\n  const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedFileTwo, setSelectedFileTwo] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [popoverOpen, setPopoverState] = useState(false);\n  const [fileAtPopoverInteraction, setFileAtPopoverInteractionState] = useState(null);\n  const [popoverOne, setPopoverOneState] = useState(false);\n  const [popoverTwo, setPopoverTwoState] = useState(false);\n  const [popoverThree, setPopoverThreeState] = useState(false); // popover main logic (after clicking button - create state for each iteration/item);\n\n  const [popoverGeneralStatus, setPopoverGeneralStatus] = useState({\n    popover0: false,\n    popover1: false,\n    popover2: false,\n    popover3: false,\n    popover4: false,\n    popover5: false,\n    popover6: false,\n    popover7: false,\n    popover8: false,\n    popover9: false\n  });\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(imageChangeAndConversion(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleSubmit = runSubmit => {\n    console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n    if (!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") || previouslySavedSoftwareData.uploadedPublicFiles.length <= 10) {\n      const data = new FormData();\n      data.append(\"file\", currentFileSelectedUpload);\n      data.append(\"meta\", fileMetaData);\n      const config = {\n        onUploadProgress: progressEvent => {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n          console.log(res.data);\n          const {\n            file\n          } = res.data;\n          saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n            uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n          });\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n          setMetaFileData(null);\n          setFileReadyStatus(false);\n          setCurrentUploadFileStatus(null);\n          runSubmit();\n        } else {\n          console.log(\"Err\", res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      // here!\n      NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n    }\n  };\n\n  useEffect(() => {\n    // probably end up putting something here?\n    console.log(\"re-rendered.\");\n  }, []);\n\n  const renderColor = i => {\n    switch (i) {\n      case 1:\n        return \"txt-success\";\n        break;\n\n      case 2:\n        return \"txt-info\";\n        break;\n\n      case 3:\n        return \"txt-danger\";\n        break;\n\n      case 4:\n        return \"txt-warning\";\n        break;\n\n      case 5:\n        return \"txt-dark\";\n        break;\n\n      case 6:\n        return \"txt-primary\";\n        break;\n\n      case 7:\n        return \"txt-secondary\";\n        break;\n\n      case 8:\n        return \"txt-pink\";\n        break;\n\n      case 9:\n        return \"txt-grey\";\n        break;\n\n      case 10:\n        return \"txt-success\";\n        break;\n\n      default:\n        return \"txt-warning\";\n        break;\n    }\n  };\n\n  const formatBytes = function (bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n\n  const deleteCurrentlySelectedTwoFile = index => {\n    console.log(\"deleteCurrentlySelectedTwoFile ran!\"); // remove file from redux state array\n\n    const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n      if (selectedFileTwo.id !== item.id) {\n        return true;\n      }\n    }); // change redux state\n\n    saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n      uploadedPublicFiles: removedFileArray\n    }); // // close popover\n\n    calculatePopoverStateToChange(index, null, true); // set selected file popover state back to *default* === null\n\n    setSelectedFileTwo(null);\n  };\n\n  const calculatePopoverOpenWhich = index => {\n    switch (index) {\n      case 0:\n        return popoverOne;\n        break;\n\n      case 1:\n        return popoverTwo;\n        break;\n\n      case 2:\n        return popoverThree;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculatePopoverStateToChange = (index, bool, reverse) => {\n    if (reverse === true) {\n      switch (index) {\n        case 0:\n          setPopoverOneState(!popoverOne);\n          break;\n\n        case 1:\n          setPopoverTwoState(!popoverTwo);\n          break;\n\n        case 2:\n          setPopoverThreeState(!popoverThree);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      switch (index) {\n        case 0:\n          setPopoverOneState(bool);\n          break;\n\n        case 1:\n          setPopoverTwoState(bool);\n          break;\n\n        case 2:\n          setPopoverThreeState(bool);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const renderConditionalUponFileUploads = () => {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"file-manager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, \"If you'd like to view your previously uploaded files (uploaded yet NOT public \", /*#__PURE__*/React.createElement(\"em\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 118\n      }\n    }, \"yet\"), \") can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 317\n      }\n    }, \"\\\"View All/Other Uploaded File's\\\"\"), \" button to view all of your uploaded content.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, \"Uploaded File(s) & Content\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"These are your \\\"Completed & already uploaded\\\" files \", /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 89\n      }\n    }, \"however\"), \" they will only be permanently saved upon completion and posting of this listing as a whole.\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        id: \"file-box-customized-software\",\n        className: \"file-box\",\n        key: indexxxx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `fa fa-file-text-o ${renderColor(indexxxx)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        id: `PopoverCustom-${indexxxx}`,\n        onClick: () => {\n          setSelectedFileTwo(file);\n          calculatePopoverStateToChange(indexxxx, true, false);\n        },\n        className: `fa fa-ellipsis-v f-14 ellips apply-special-hover-effect-black-icon`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 117\n        }\n      })), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"top\",\n        isOpen: calculatePopoverOpenWhich(indexxxx),\n        target: `PopoverCustom-${indexxxx}`,\n        toggle: () => {\n          calculatePopoverStateToChange(indexxxx, null, true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 53\n        }\n      }, \"Want to delete this file? \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popover-cancel-container\",\n        onClick: () => {\n          calculatePopoverStateToChange(indexxxx, false, false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 94\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../../../assets/icons/close-64.png\"),\n        className: \"small-close-popover-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 56\n        }\n      }))), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 53\n        }\n      }, \"Would you like to \", /*#__PURE__*/React.createElement(\"em\", {\n        style: {\n          color: \"blue\",\n          textDecorationLine: \"underline\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 84\n        }\n      }, \"permanently delete\"), \" this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 373\n        }\n      }, \"cannot\"), \" be undone.\", /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginTop: \"7.5px\",\n          width: \"100%\"\n        },\n        onClick: () => {\n          deleteCurrentlySelectedTwoFile(indexxxx);\n        },\n        className: \"btn-air-secondary\",\n        color: \"secondary\",\n        size: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 57\n        }\n      }, \"Delete file!\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 53\n        }\n      }, file.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 53\n        }\n      }, formatBytes(file.size)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 53\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 57\n        }\n      }, \"Uploaded at\", \" : \"), file.date)));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }), previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => {\n        setSelectedFile({ ...previouslySavedSoftwareData.uploadedPublicFiles[0],\n          selectedFileIndex: 0\n        }); // set delay to allow load before modal opening...\n\n        setTimeout(() => {\n          setFileModalOpenStatus(true);\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 95\n      }\n    }, \"View All/Other Uploaded File's\") : null)))));\n  };\n\n  const onError = e => {\n    console.log(e, 'error in file-viewer');\n  };\n\n  const calculateFileType = type => {\n    switch (type) {\n      case \"video/mp4\":\n        return \"mp4\";\n        break;\n\n      case \"image/png\":\n        return \"png\";\n        break;\n\n      case \"image/jpeg\":\n        return \"jpeg\";\n        break;\n\n      case \"image/gif\":\n        return \"gif\";\n        break;\n\n      case \"image/bmp\":\n        return \"bmp\";\n        break;\n\n      case \"application/pdf\":\n        return \"pdf\";\n        break;\n\n      case \"text/csv\":\n        return \"csv\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n        return \"xlsx\";\n        break;\n\n      case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n        return \"docx\";\n        break;\n\n      case \"video/webm\":\n        return \"webm\";\n        break;\n\n      case \"audio/mpeg\":\n        return \"mp3\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const renderCustomButtonDropzone = (data, e) => {\n    const {\n      meta\n    } = data.files[0];\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmit(runSubmit);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: onError,\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const imageChangeAndConversion = file => {\n    return URL.createObjectURL(file);\n  };\n\n  const onSubmitHelper = (files, allFiles) => {\n    allFiles.forEach(file => {\n      file.remove();\n    });\n  };\n\n  const getFilesFromEvent = events => {// console.log(\"getFilesFromEvent : \", events);\n  };\n\n  const deleteCurrentlySelectedFile = index => {\n    const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n      if (fileAtPopoverInteraction.id !== item.id) {\n        return true;\n      }\n    });\n    saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n      uploadedPublicFiles: removedFileArray\n    }); // close popover\n\n    setDynamicPopoverStateOpen(index, null, true); // change file current focus \n\n    setFileAtPopoverInteractionState(null); // check if the current \"set to delete\" item is in focus or not (being viewed)\n\n    if (selectedFile.selectedFileIndex === index) {\n      // check if last item in array and IF SO actually bump ONE BACK instead of forward.\n      if (previouslySavedSoftwareData.uploadedPublicFiles.length - 1 === index) {\n        setSelectedFile({ ...previouslySavedSoftwareData.uploadedPublicFiles[index - 1],\n          selectedFileIndex: selectedFile.selectedFileIndex - 1\n        });\n      } else {\n        // set focus of current file to one forward as the list bumps and the item after deleted item comes into focus.\n        setSelectedFile({ ...previouslySavedSoftwareData.uploadedPublicFiles[index + 1],\n          selectedFileIndex: selectedFile.selectedFileIndex\n        });\n      }\n    }\n  };\n\n  const setDynamicPopoverStateOpen = (index, bool, reverseBool) => {\n    // reverse the state or coorlated index popover status\n    if (reverseBool === true) {\n      setPopoverGeneralStatus({ ...popoverGeneralStatus,\n        [`popover${index}`]: !`popover${index}`\n      });\n    } else {\n      // do NOT make reversal changes and do normal logic!\n      setPopoverGeneralStatus({ ...popoverGeneralStatus,\n        [`popover${index}`]: bool\n      });\n    }\n  };\n\n  const handleFinalSubmissionOfForm = () => {\n    console.log(\"handleFinalSubmissionOfForm clicked!\");\n  }; // check to make sure appropriate changes occur.\n\n\n  console.log(\"popoverGeneralStatus\", popoverGeneralStatus);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 4.25,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }), selectedFile !== null ? /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'customFileModalOverlay',\n      modal: 'customFileModal'\n    },\n    open: fileModalOpen,\n    onOverlayClick: () => {\n      console.log(\"onOverlayClicked clicked!\");\n    },\n    onClose: () => {\n      setFileModalOpenStatus(false);\n    },\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    id: \"file-manager-override-scroll\",\n    className: \"file-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-tall-scroller-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 45\n    }\n  }, previouslySavedSoftwareData.uploadedPublicFiles.map((file, indexxxx) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      id: `file-box-customized-software-fullw`,\n      className: `file-box ${selectedFile.selectedFileIndex === indexxxx ? \"active-pane-file\" : \"\"}`,\n      key: indexxxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `fa fa-file-text-o ${renderColor(indexxxx)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 87\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      id: `popover${indexxxx}`,\n      onClick: () => {\n        setFileAtPopoverInteractionState(file); // do set (hard coded) switch\n\n        setDynamicPopoverStateOpen(indexxxx, true, false);\n      },\n      className: `fa fa-ellipsis-v f-14 ellips ${selectedFile.selectedFileIndex === indexxxx ? \"apply-special-hover-effect-black-icon\" : \"apply-special-hover-effect\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 151\n      }\n    }), /*#__PURE__*/React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: popoverGeneralStatus[`popover${indexxxx}`],\n      target: `popover${indexxxx}`,\n      toggle: () => {\n        // reverse dynamic popover state!\n        setDynamicPopoverStateOpen(indexxxx, null, true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 69\n      }\n    }, \"Want to delete this file? \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popover-cancel-container\",\n      onClick: () => {\n        // do set (hard coded) switch\n        setDynamicPopoverStateOpen(indexxxx, false, false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 110\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../../../../../../assets/icons/close-64.png\"),\n      className: \"small-close-popover-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 72\n      }\n    }))), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 69\n      }\n    }, \"Would you like to \", /*#__PURE__*/React.createElement(\"em\", {\n      style: {\n        color: \"blue\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 100\n      }\n    }, \"permanently delete\"), \" this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 389\n      }\n    }, \"cannot\"), \" be undone.\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: \"7.5px\",\n        width: \"100%\"\n      },\n      onClick: () => {\n        deleteCurrentlySelectedFile(indexxxx);\n      },\n      className: \"btn-air-secondary\",\n      color: \"secondary\",\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 73\n      }\n    }, \"Delete file!\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 65\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 65\n      }\n    }, formatBytes(file.size)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 65\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 69\n      }\n    }, \"Uploaded at\", \" : \"), file.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => {\n        setSelectedFile({ ...file,\n          selectedFileIndex: indexxxx\n        });\n      },\n      className: \"btn-air-secondary\",\n      color: \"secondary\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 65\n      }\n    }, \"View File\")));\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    lg: \"8\",\n    xl: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"file-viewer-cardbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"height-100-wmaxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FileViewer, {\n    fileType: calculateFileType(selectedFile.type),\n    filePath: `${process.env.REACT_APP_ASSET_LINK}/${selectedFile.link}`,\n    onError: onError,\n    key: selectedFile.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 41\n    }\n  })))))))) : null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 33\n    }\n  }, \"Upload related files & attachments\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 37\n    }\n  }, \"Select a single supporting file or multiple (Up to 10 files \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 104\n    }\n  }, \"total\"), \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtext-under-label-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 79\n    }\n  }, \"NOTE\"), \": These files will be transfered or \\\"handed over\\\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 343\n    }\n  }, \"downloading\"), \" and viewing.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: getFilesFromEvent,\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 53\n        }\n      }, renderCustomButtonDropzone(data, e));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 325\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 41\n    }\n  }))))))), _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null, _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 140\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 33\n    }\n  }, \"Currently, you've \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 58\n    }\n  }, \"successfully\"), \" uploaded \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\",\n      fontSize: \"19.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 122\n    }\n  }, previouslySavedSoftwareData.uploadedPublicFiles.length), \" files out of your ten (10) file limit. You have \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\",\n      fontSize: \"19.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 323\n    }\n  }, 10 - previouslySavedSoftwareData.uploadedPublicFiles.length), \" available slots left to upload additional files!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => {\n      handleFinalSubmissionOfForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 33\n    }\n  }, \" ~ Submit form details and proceed to next page ~ \"))))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 37\n    }\n  }, \"Upload at least three (3) files to proceed w/this form\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 37\n    }\n  }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\", \"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\", \"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\", \"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\", \"unknown printer took a galley of type and scrambled.\"))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveSoftwareListingInfo\n})(PageTwoMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js"],"names":["React","useState","useEffect","useRef","Fragment","Container","Row","Col","Card","CardHeader","CardBody","Form","Label","Button","Popover","PopoverBody","PopoverHeader","Dropzone","axios","connect","NotificationManager","LoadingBar","saveSoftwareListingInfo","_","Modal","FileViewer","PageTwoMainHelper","userData","previouslySavedSoftwareData","dropzoneRef","progress","setProgress","fileModalOpen","setFileModalOpenStatus","selectedFile","setSelectedFile","selectedFileTwo","setSelectedFileTwo","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","popoverOpen","setPopoverState","fileAtPopoverInteraction","setFileAtPopoverInteractionState","popoverOne","setPopoverOneState","popoverTwo","setPopoverTwoState","popoverThree","setPopoverThreeState","popoverGeneralStatus","setPopoverGeneralStatus","popover0","popover1","popover2","popover3","popover4","popover5","popover6","popover7","popover8","popover9","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","imageChangeAndConversion","handleSubmit","runSubmit","console","log","has","uploadedPublicFiles","length","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","catch","err","error","renderColor","i","formatBytes","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","deleteCurrentlySelectedTwoFile","index","removedFileArray","filter","item","id","calculatePopoverStateToChange","calculatePopoverOpenWhich","bool","reverse","renderConditionalUponFileUploads","slice","map","indexxxx","require","textDecorationLine","marginTop","width","name","size","date","selectedFileIndex","setTimeout","onError","calculateFileType","type","renderCustomButtonDropzone","meta","preventDefault","onSubmit","warning","renderPreviewOfFile","fileWithMeta","URL","createObjectURL","onSubmitHelper","allFiles","forEach","remove","getFilesFromEvent","events","deleteCurrentlySelectedFile","setDynamicPopoverStateOpen","reverseBool","handleFinalSubmissionOfForm","overlay","modal","REACT_APP_ASSET_LINK","link","dropzone","height","dropzoneActive","borderColor","fontSize","mapStateToProps","state","auth","softwareListingSale","softwareListingSaleInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAO,cAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,UAApC,EAAgDC,QAAhD,EAA0DC,IAA1D,EAAgEC,KAAhE,EAAuEC,MAAvE,EAA+EC,OAA/E,EAAwFC,WAAxF,EAAqGC,aAArG,QAA0H,YAA1H;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,uBAAT,QAAwC,kGAAxC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,iBAAiB,GAAG,QAAwE;AAAA,MAAvE;AAAEC,IAAAA,QAAF;AAAYL,IAAAA,uBAAZ;AAAqCM,IAAAA;AAArC,GAAuE;AAC9F;AACA,QAAMC,WAAW,GAAG1B,MAAM,CAAC,IAAD,CAA1B,CAF8F,CAG9F;;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC+B,aAAD,EAAgBC,sBAAhB,IAA0ChC,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACqC,SAAD,EAAYC,kBAAZ,IAAkCtC,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACuC,yBAAD,EAA4BC,0BAA5B,IAA0DxC,QAAQ,CAAC,IAAD,CAAxE;AACA,QAAM,CAACyC,YAAD,EAAeC,sBAAf,IAAyC1C,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAAC2C,YAAD,EAAeC,eAAf,IAAkC5C,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAC6C,WAAD,EAAcC,eAAd,IAAiC9C,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAAE+C,wBAAF,EAA4BC,gCAA5B,IAAiEhD,QAAQ,CAAC,IAAD,CAA/E;AACA,QAAM,CAAEiD,UAAF,EAAcC,kBAAd,IAAqClD,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEmD,UAAF,EAAcC,kBAAd,IAAqCpD,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEqD,YAAF,EAAgBC,oBAAhB,IAAyCtD,QAAQ,CAAC,KAAD,CAAvD,CAhB8F,CAiB9F;;AACA,QAAM,CAAEuD,oBAAF,EAAwBC,uBAAxB,IAAoDxD,QAAQ,CAAC;AAC/DyD,IAAAA,QAAQ,EAAE,KADqD;AAE/DC,IAAAA,QAAQ,EAAE,KAFqD;AAG/DC,IAAAA,QAAQ,EAAE,KAHqD;AAI/DC,IAAAA,QAAQ,EAAE,KAJqD;AAK/DC,IAAAA,QAAQ,EAAE,KALqD;AAM/DC,IAAAA,QAAQ,EAAE,KANqD;AAO/DC,IAAAA,QAAQ,EAAE,KAPqD;AAQ/DC,IAAAA,QAAQ,EAAE,KARqD;AAS/DC,IAAAA,QAAQ,EAAE,KATqD;AAU/DC,IAAAA,QAAQ,EAAE;AAVqD,GAAD,CAAlE;;AAaA,QAAMC,iBAAiB,GAAG,SAAyB;AAAA,QAAxB;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAwB;AAE/C,UAAMC,IAAI,GAAG,4CAAb;AAEA,wBACI;AAAO,MAAA,SAAS,EAAC,4BAAjB;AAA8C,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,KAAK,EAAE,MAArC;AAA6CC,QAAAA,MAAM,EAAE,SAArD;AAAgEC,QAAAA,OAAO,EAAE,EAAzE;AAA6EC,QAAAA,YAAY,EAAE;AAA3F,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,IADL,eAEI;AACI,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE;AAAX,OADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,MAAM,EAAER,MAHZ;AAII,MAAA,QAAQ,EAAE,KAJd;AAKI,MAAA,SAAS,EAAE,oCALf;AAMI,MAAA,QAAQ,EAAES,CAAC,IAAI;AACX,cAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CADW,CAEX;;AACAtC,QAAAA,sBAAsB,CAACuC,wBAAwB,CAACH,IAAD,CAAzB,CAAtB,CAHW,CAIX;;AACAtC,QAAAA,0BAA0B,CAACsC,IAAD,CAA1B,CALW,CAMX;;AACAxC,QAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAPW,CAQX;;AACA+B,QAAAA,OAAO,CAAC,CAACS,IAAD,CAAD,CAAP;AACH,OAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAuBH,GA3BD;;AA4BA,QAAMI,YAAY,GAAIC,SAAD,IAAe;AAEhCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B9C,yBAA1B,EAAqDI,YAArD;;AAEA,QAAK,CAACrB,CAAC,CAACgE,GAAF,CAAM3D,2BAAN,EAAmC,qBAAnC,CAAF,IAAiEA,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAhD,IAA0D,EAA/H,EAAoI;AAChI,YAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBpD,yBAApB;AACAkD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBhD,YAApB;AAEA,YAAMiD,MAAM,GAAG;AACXC,QAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,cAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KAAxD,CAAvB;AAEArE,UAAAA,WAAW,CAACiE,gBAAD,CAAX;AACH,SALU;AAMXK,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AANE,OAAf;AAWAnF,MAAAA,KAAK,CAACoF,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,wCAA7C,EAAsFf,IAAtF,EAA4FG,MAA5F,EAAoGa,IAApG,CAA0GC,GAAD,IAAS;AAC9G,YAAIA,GAAG,CAACjB,IAAJ,CAASkB,OAAT,KAAqB,6BAAzB,EAAwD;AACpDvB,UAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACjB,IAAhB;AAEA,gBAAM;AAAEX,YAAAA;AAAF,cAAW4B,GAAG,CAACjB,IAArB;AAEApE,UAAAA,uBAAuB,CAAC,EACpB,GAAGM,2BADiB;AAEpB4D,YAAAA,mBAAmB,EAAEjE,CAAC,CAACgE,GAAF,CAAM3D,2BAAN,EAAmC,qBAAnC,IAA4D,CAAC,GAAGA,2BAA2B,CAAC4D,mBAAhC,EAAqDT,IAArD,CAA5D,GAAyH,CAACA,IAAD;AAF1H,WAAD,CAAvB;AAKA3D,UAAAA,mBAAmB,CAACyF,OAApB,CAA6B,uGAA7B,EAAqI,6BAArI,EAAoK,IAApK;AAEAhE,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAN,UAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,UAAAA,0BAA0B,CAAC,IAAD,CAA1B;AAEA2C,UAAAA,SAAS;AACZ,SAjBD,MAiBO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBqB,GAAG,CAACjB,IAAvB;AACH;AACJ,OArBD,EAqBGoB,KArBH,CAqBUC,GAAD,IAAS;AACd1B,QAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACH,OAvBD;AAwBH,KAzCD,MAyCO;AACH;AACA3F,MAAAA,mBAAmB,CAAC4F,KAApB,CAA2B,yIAA3B,EAAqK,mBAArK,EAA0L,IAA1L;AACH;AACJ,GAjDD;;AAkDA9G,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAmF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAM2B,WAAW,GAAIC,CAAD,IAAO;AACvB,YAAQA,CAAR;AACI,WAAK,CAAL;AACI,eAAO,aAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,YAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,aAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,aAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,eAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAO,UAAP;AACA;;AACJ,WAAK,EAAL;AACI,eAAO,aAAP;AACA;;AACJ;AACI,eAAO,aAAP;AACA;AAjCR;AAmCH,GApCD;;AAqCA,QAAMC,WAAW,GAAG,UAACC,KAAD,EAAyB;AAAA,QAAjBC,QAAiB,uEAAN,CAAM;AACzC,QAAID,KAAK,KAAK,CAAd,EAAiB,OAAO,SAAP;AACjB,UAAME,CAAC,GAAG,IAAV;AACA,UAAMC,EAAE,GAAGF,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBA,QAA9B;AACA,UAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AACA,UAAMN,CAAC,GAAGjB,IAAI,CAACwB,KAAL,CAAWxB,IAAI,CAACX,GAAL,CAAS8B,KAAT,IAAkBnB,IAAI,CAACX,GAAL,CAASgC,CAAT,CAA7B,CAAV;AACA,WAAOI,UAAU,CAAC,CAACN,KAAK,GAAGnB,IAAI,CAAC0B,GAAL,CAASL,CAAT,EAAYJ,CAAZ,CAAT,EAAyBU,OAAzB,CAAiCL,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAACN,CAAD,CAArE;AACH,GAPD;;AAQA,QAAMW,8BAA8B,GAAIC,KAAD,IAAW;AAC9CzC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAD8C,CAE9C;;AACA,UAAMyC,gBAAgB,GAAGnG,2BAA2B,CAAC4D,mBAA5B,CAAgDwC,MAAhD,CAAuD,CAACC,IAAD,EAAOf,CAAP,KAAa;AACzF,UAAI9E,eAAe,CAAC8F,EAAhB,KAAuBD,IAAI,CAACC,EAAhC,EAAoC;AAChC,eAAO,IAAP;AACH;AACJ,KAJwB,CAAzB,CAH8C,CAQ9C;;AACA5G,IAAAA,uBAAuB,CAAC,EACpB,GAAGM,2BADiB;AAEpB4D,MAAAA,mBAAmB,EAAEuC;AAFD,KAAD,CAAvB,CAT8C,CAc9C;;AACAI,IAAAA,6BAA6B,CAACL,KAAD,EAAQ,IAAR,EAAc,IAAd,CAA7B,CAf8C,CAgB9C;;AACAzF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAlBD;;AAmBA,QAAM+F,yBAAyB,GAAIN,KAAD,IAAW;AACzC,YAAQA,KAAR;AACI,WAAK,CAAL;AACI,eAAO5E,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAOE,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,eAAOE,YAAP;AACA;;AACJ;AACI;AAXR;AAaH,GAdD;;AAeA,QAAM6E,6BAA6B,GAAG,CAACL,KAAD,EAAQO,IAAR,EAAcC,OAAd,KAA0B;AAC5D,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB,cAAQR,KAAR;AACI,aAAK,CAAL;AACI3E,UAAAA,kBAAkB,CAAC,CAACD,UAAF,CAAlB;AACA;;AACJ,aAAK,CAAL;AACIG,UAAAA,kBAAkB,CAAC,CAACD,UAAF,CAAlB;AACA;;AACJ,aAAK,CAAL;AACIG,UAAAA,oBAAoB,CAAC,CAACD,YAAF,CAApB;AACA;;AACJ;AACI;AAXR;AAaH,KAdD,MAcO;AACH,cAAQwE,KAAR;AACI,aAAK,CAAL;AACI3E,UAAAA,kBAAkB,CAACkF,IAAD,CAAlB;AACA;;AACJ,aAAK,CAAL;AACIhF,UAAAA,kBAAkB,CAACgF,IAAD,CAAlB;AACA;;AACJ,aAAK,CAAL;AACI9E,UAAAA,oBAAoB,CAAC8E,IAAD,CAApB;AACA;;AACJ;AACI;AAXR;AAaH;AACJ,GA9BD;;AA+BA,QAAME,gCAAgC,GAAG,MAAM;AAC3C,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAqB,MAAA,EAAE,EAAC,IAAxB;AAA6B,MAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAAqF;AAAI,MAAA,KAAK,EAAE;AAAE9D,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArF,qLAA4R;AAAQ,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA5R,kDADJ,eAGI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxD,iGAJJ,eAKI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7C,2BAA2B,CAAC4D,mBAA5B,CAAgDgD,KAAhD,CAAsD,CAAtD,EAAyD,CAAzD,EAA4DC,GAA5D,CAAgE,CAAC1D,IAAD,EAAO2D,QAAP,KAAoB;AACjF,0BACI;AAAI,QAAA,EAAE,EAAC,8BAAP;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAA2D,QAAA,GAAG,EAAEA,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAG,qBAAoBzB,WAAW,CAACyB,QAAD,CAAW,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eACoE;AAAG,QAAA,EAAE,EAAG,iBAAgBA,QAAS,EAAjC;AAAoC,QAAA,OAAO,EAAE,MAAM;AAC/GrG,UAAAA,kBAAkB,CAAC0C,IAAD,CAAlB;AAEAoD,UAAAA,6BAA6B,CAACO,QAAD,EAAW,IAAX,EAAiB,KAAjB,CAA7B;AACH,SAJ+D;AAI7D,QAAA,SAAS,EAAG,oEAJiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpE,CADJ,eAQI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,MAAM,EAAEN,yBAAyB,CAACM,QAAD,CAA1D;AAAsE,QAAA,MAAM,EAAG,iBAAgBA,QAAS,EAAxG;AAA2G,QAAA,MAAM,EAAE,MAAM;AACrHP,UAAAA,6BAA6B,CAACO,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAA7B;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAyC;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,OAAO,EAAE,MAAM;AAC9FP,UAAAA,6BAA6B,CAACO,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAA7B;AACH,SAFwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEtC;AAAK,QAAA,GAAG,EAAEC,OAAO,CAAC,gDAAD,CAAjB;AAAqE,QAAA,SAAS,EAAC,0BAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFsC,CAAzC,CAHJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA+B;AAAI,QAAA,KAAK,EAAE;AAAElE,UAAAA,KAAK,EAAE,MAAT;AAAiBmE,UAAAA,kBAAkB,EAAE;AAArC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA/B,8NAAgU;AAAQ,QAAA,KAAK,EAAE;AAAEnE,UAAAA,KAAK,EAAE;AAAT,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhU,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEoE,UAAAA,SAAS,EAAE,OAAb;AAAsBC,UAAAA,KAAK,EAAE;AAA7B,SAAf;AAAsD,QAAA,OAAO,EAAE,MAAM;AACjEjB,UAAAA,8BAA8B,CAACa,QAAD,CAA9B;AACH,SAFD;AAEG,QAAA,SAAS,EAAC,mBAFb;AAEiC,QAAA,KAAK,EAAC,WAFvC;AAEmD,QAAA,IAAI,EAAC,IAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CANJ,CARJ,eAqBI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK3D,IAAI,CAACgE,IAAV,MADJ,eAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB5B,WAAW,CAACpC,IAAI,CAACiE,IAAN,CAAhC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,aAAJ,QAAJ,EAA8BjE,IAAI,CAACkE,IAAnC,CAHJ,CArBJ,CADJ;AA6BH,KA9BA,CADL,CALJ,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ,EAuCKrH,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAhD,GAAyD,CAAzD,gBAA6D,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAE;AAAEqD,QAAAA,KAAK,EAAE;AAAT,OAAjC;AAAoD,MAAA,OAAO,EAAE,MAAM;AAC7H3G,QAAAA,eAAe,CAAC,EACZ,GAAGP,2BAA2B,CAAC4D,mBAA5B,CAAgD,CAAhD,CADS;AAEZ0D,UAAAA,iBAAiB,EAAE;AAFP,SAAD,CAAf,CAD6H,CAK7H;;AACAC,QAAAA,UAAU,CAAC,MAAM;AACblH,UAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAT6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAA7D,GAS4C,IAhDjD,CADJ,CADJ,CADJ,CADJ,CADJ;AA4DH,GA7DD;;AA8DA,QAAMmH,OAAO,GAAItE,CAAD,IAAO;AACnBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ,EAAe,sBAAf;AACH,GAFD;;AAGA,QAAMuE,iBAAiB,GAAIC,IAAD,IAAU;AAChC,YAAQA,IAAR;AACI,WAAK,WAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,WAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,YAAL;AACI,eAAO,MAAP;AACA;;AACJ,WAAK,WAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,WAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,iBAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,UAAL;AACI,eAAO,KAAP;AACA;;AACJ,WAAK,mEAAL;AACI,eAAO,MAAP;AACA;;AACJ,WAAK,yEAAL;AACI,eAAO,MAAP;AACA;;AACJ,WAAK,YAAL;AACI,eAAO,MAAP;AACA;;AACJ,WAAK,YAAL;AACI,eAAO,KAAP;AACA;;AACJ;AACI;AAnCR;AAqCH,GAtCD;;AAuCA,QAAMC,0BAA0B,GAAG,CAAC7D,IAAD,EAAOZ,CAAP,KAAa;AAE5C,UAAM;AAAE0E,MAAAA;AAAF,QAAW9D,IAAI,CAACT,KAAL,CAAW,CAAX,CAAjB;;AAEA,QAAIzC,yBAAyB,KAAK,IAAlC,EAAwC;AACpC,aAAO,IAAP;AACH,KAFD,MAEO;AACH,UAAIF,SAAS,KAAK,IAAlB,EAAwB;AACpB,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEuG,YAAAA,SAAS,EAAE;AAAb,WAAf;AAAsC,UAAA,OAAO,EAAG/D,CAAD,IAAO;AAClDA,YAAAA,CAAC,CAAC2E,cAAF,GADkD,CAElD;;AACA5G,YAAAA,eAAe,CAAC2G,IAAD,CAAf,CAHkD,CAIlD;;AACAjH,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAEA,kBAAM6C,SAAS,GAAGM,IAAI,CAACgE,QAAvB;AAEAvE,YAAAA,YAAY,CAACC,SAAD,CAAZ;AACH,WAVD;AAUG,UAAA,SAAS,EAAC,mBAVb;AAUiC,UAAA,KAAK,EAAC,WAVvC;AAUmD,UAAA,IAAI,EAAC,IAVxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADJ;AAeH,OAhBD,MAgBO;AACH,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEyD,YAAAA,SAAS,EAAE;AAAb,WAAf;AAAsC,UAAA,OAAO,EAAE,MAAM;AACjDzH,YAAAA,mBAAmB,CAACuI,OAApB,CAA6B,uGAA7B,EAAqI,kBAArI,EAAyJ,IAAzJ;AACH,WAFD;AAEG,UAAA,SAAS,EAAC,eAFb;AAE6B,UAAA,KAAK,EAAC,OAFnC;AAE2C,UAAA,IAAI,EAAC,IAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CADJ;AAOH;AACJ;AACJ,GAjCD;;AAkCA,QAAMC,mBAAmB,GAAIlE,IAAD,IAAU;AAElC,UAAMX,IAAI,GAAGW,IAAI,CAACmE,YAAL,CAAkB9E,IAA/B,CAFkC,CAGlC;;AACA,QAAIzC,SAAS,KAAK,IAAlB,EAAwB;AACpB,0BACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAE+G,iBAAiB,CAACtE,IAAI,CAACuE,IAAN,CAD/B;AAEI,QAAA,QAAQ,EAAE5G,YAFd;AAGI,QAAA,OAAO,EAAE0G,OAHb;AAII,QAAA,GAAG,EAAErE,IAAI,CAACmD,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH,KAXD,MAWO;AACH,aAAO,IAAP;AACH;AACJ,GAlBD;;AAmBA,QAAMhD,wBAAwB,GAAIH,IAAD,IAAU;AACvC,WAAO+E,GAAG,CAACC,eAAJ,CAAoBhF,IAApB,CAAP;AACH,GAFD;;AAGA,QAAMiF,cAAc,GAAG,CAAC/E,KAAD,EAAQgF,QAAR,KAAqB;AACxCA,IAAAA,QAAQ,CAACC,OAAT,CAAkBnF,IAAD,IAAU;AACvBA,MAAAA,IAAI,CAACoF,MAAL;AACH,KAFD;AAGH,GAJD;;AAKA,QAAMC,iBAAiB,GAAIC,MAAD,IAAY,CAClC;AACH,GAFD;;AAGA,QAAMC,2BAA2B,GAAIxC,KAAD,IAAW;AAE3C,UAAMC,gBAAgB,GAAGnG,2BAA2B,CAAC4D,mBAA5B,CAAgDwC,MAAhD,CAAuD,CAACC,IAAD,EAAOf,CAAP,KAAa;AACzF,UAAIlE,wBAAwB,CAACkF,EAAzB,KAAgCD,IAAI,CAACC,EAAzC,EAA6C;AACzC,eAAO,IAAP;AACH;AACJ,KAJwB,CAAzB;AAMA5G,IAAAA,uBAAuB,CAAC,EACpB,GAAGM,2BADiB;AAEpB4D,MAAAA,mBAAmB,EAAEuC;AAFD,KAAD,CAAvB,CAR2C,CAY3C;;AACAwC,IAAAA,0BAA0B,CAACzC,KAAD,EAAQ,IAAR,EAAc,IAAd,CAA1B,CAb2C,CAc3C;;AACA7E,IAAAA,gCAAgC,CAAC,IAAD,CAAhC,CAf2C,CAgB3C;;AACA,QAAIf,YAAY,CAACgH,iBAAb,KAAmCpB,KAAvC,EAA8C;AAC1C;AACA,UAAKlG,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAhD,GAAyD,CAA1D,KAAiEqC,KAArE,EAA4E;AACxE3F,QAAAA,eAAe,CAAC,EACZ,GAAGP,2BAA2B,CAAC4D,mBAA5B,CAAgDsC,KAAK,GAAG,CAAxD,CADS;AAEZoB,UAAAA,iBAAiB,EAAEhH,YAAY,CAACgH,iBAAb,GAAiC;AAFxC,SAAD,CAAf;AAIH,OALD,MAKO;AACH;AACA/G,QAAAA,eAAe,CAAC,EACZ,GAAGP,2BAA2B,CAAC4D,mBAA5B,CAAgDsC,KAAK,GAAG,CAAxD,CADS;AAEZoB,UAAAA,iBAAiB,EAAEhH,YAAY,CAACgH;AAFpB,SAAD,CAAf;AAIH;AACJ;AACJ,GAhCD;;AAiCA,QAAMqB,0BAA0B,GAAG,CAACzC,KAAD,EAAQO,IAAR,EAAcmC,WAAd,KAA8B;AAC7D;AACA,QAAIA,WAAW,KAAK,IAApB,EAA0B;AACtB/G,MAAAA,uBAAuB,CAAC,EACpB,GAAGD,oBADiB;AAEpB,SAAE,UAASsE,KAAM,EAAjB,GAAqB,CAAE,UAASA,KAAM;AAFlB,OAAD,CAAvB;AAIH,KALD,MAKO;AACH;AACArE,MAAAA,uBAAuB,CAAC,EACpB,GAAGD,oBADiB;AAEpB,SAAE,UAASsE,KAAM,EAAjB,GAAqBO;AAFD,OAAD,CAAvB;AAIH;AACJ,GAdD;;AAeA,QAAMoC,2BAA2B,GAAG,MAAM;AACtCpF,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH,GAFD,CAvb8F,CA0b9F;;;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC9B,oBAApC;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,MAAM,EAAE,IAFZ;AAGI,IAAA,QAAQ,EAAE1B,QAHd;AAII,IAAA,gBAAgB,EAAE,MAAM;AACpBC,MAAAA,WAAW,CAAC,CAAD,CAAX;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASKG,YAAY,KAAK,IAAjB,gBAAwB,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE;AACxCwI,MAAAA,OAAO,EAAE,wBAD+B;AAExCC,MAAAA,KAAK,EAAE;AAFiC,KAAnB;AAGtB,IAAA,IAAI,EAAE3I,aAHgB;AAGD,IAAA,cAAc,EAAE,MAAM;AAC1CqD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,KALwB;AAKtB,IAAA,OAAO,EAAE,MAAM;AACdrD,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH,KAPwB;AAOtB,IAAA,MAAM,MAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQrB,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,8BAAb;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,2BAA2B,CAAC4D,mBAA5B,CAAgDiD,GAAhD,CAAoD,CAAC1D,IAAD,EAAO2D,QAAP,KAAoB;AACrE,wBACI;AAAI,MAAA,EAAE,EAAG,oCAAT;AAA8C,MAAA,SAAS,EAAG,YAAWxG,YAAY,CAACgH,iBAAb,KAAmCR,QAAnC,GAA8C,kBAA9C,GAAmE,EAAG,EAA3I;AAA8I,MAAA,GAAG,EAAEA,QAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0B;AAAG,MAAA,SAAS,EAAG,qBAAoBzB,WAAW,CAACyB,QAAD,CAAW,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,eAA0F;AAAG,MAAA,EAAE,EAAG,UAASA,QAAS,EAA1B;AAA6B,MAAA,OAAO,EAAE,MAAM;AAClIzF,QAAAA,gCAAgC,CAAC8B,IAAD,CAAhC,CADkI,CAElI;;AACAwF,QAAAA,0BAA0B,CAAC7B,QAAD,EAAW,IAAX,EAAiB,KAAjB,CAA1B;AACH,OAJyF;AAIvF,MAAA,SAAS,EAAG,gCAA+BxG,YAAY,CAACgH,iBAAb,KAAmCR,QAAnC,GAA8C,uCAA9C,GAAwF,4BAA6B,EAJzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1F,eAKI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,MAAM,EAAElF,oBAAoB,CAAE,UAASkF,QAAS,EAApB,CAAxD;AAAgF,MAAA,MAAM,EAAG,UAASA,QAAS,EAA3G;AAA8G,MAAA,MAAM,EAAE,MAAM;AACxH;AACA6B,QAAAA,0BAA0B,CAAC7B,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAA1B;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAyC;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,OAAO,EAAE,MAAM;AAC9F;AACA6B,QAAAA,0BAA0B,CAAC7B,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAA1B;AACH,OAHwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGtC;AAAK,MAAA,GAAG,EAAEC,OAAO,CAAC,gDAAD,CAAjB;AAAqE,MAAA,SAAS,EAAC,0BAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHsC,CAAzC,CAJJ,eAQI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA+B;AAAI,MAAA,KAAK,EAAE;AAAElE,QAAAA,KAAK,EAAE,MAAT;AAAiBmE,QAAAA,kBAAkB,EAAE;AAArC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA/B,8NAAgU;AAAQ,MAAA,KAAK,EAAE;AAAEnE,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhU,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEoE,QAAAA,SAAS,EAAE,OAAb;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAf;AAAsD,MAAA,OAAO,EAAE,MAAM;AACjEwB,QAAAA,2BAA2B,CAAC5B,QAAD,CAA3B;AACH,OAFD;AAEG,MAAA,SAAS,EAAC,mBAFb;AAEiC,MAAA,KAAK,EAAC,WAFvC;AAEmD,MAAA,IAAI,EAAC,IAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CARJ,CALJ,CADJ,eAsBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK3D,IAAI,CAACgE,IAAV,CADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB5B,WAAW,CAACpC,IAAI,CAACiE,IAAN,CAAhC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,aAAJ,QAAJ,EAA8BjE,IAAI,CAACkE,IAAnC,CAHJ,CAtBJ,eA2BI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAE,MAAM;AAC7C3G,QAAAA,eAAe,CAAC,EACZ,GAAG4C,IADS;AAEZmE,UAAAA,iBAAiB,EAAER;AAFP,SAAD,CAAf;AAIH,OALD;AAKG,MAAA,SAAS,EAAC,mBALb;AAKiC,MAAA,KAAK,EAAC,WALvC;AAKmD,MAAA,IAAI,EAAC,IALxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CA3BJ,CADJ;AAsCH,GAvCA,CADL,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ,eAqDI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAEW,iBAAiB,CAACnH,YAAY,CAACoH,IAAd,CAD/B;AAEI,IAAA,QAAQ,EAAG,GAAE/C,OAAO,CAACC,GAAR,CAAYoE,oBAAqB,IAAG1I,YAAY,CAAC2I,IAAK,EAFvE;AAGI,IAAA,OAAO,EAAEzB,OAHb;AAII,IAAA,GAAG,EAAElH,YAAY,CAACgG,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,CArDJ,CADJ,CARqB,CAAxB,GA8EU,IAvFf,eAwFI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnE,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0C;AAAQ,IAAA,KAAK,EAAE;AAAEzD,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1C,8OAAkT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlT,kBAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAE5C,WADT;AAEI,IAAA,gBAAgB,EAAG6D,IAAD,IAAUkE,mBAAmB,CAAClE,IAAD,CAFnD;AAGI,IAAA,QAAQ,EAAE,CAHd;AAII,IAAA,UAAU,EAAE,IAJhB;AAKI,IAAA,oBAAoB,EAAE,KAL1B;AAMI,IAAA,cAAc,EAAEtB,iBANpB;AAOI,IAAA,iBAAiB,EAAEgG,iBAPvB;AAQI,IAAA,QAAQ,EAAEJ,cARd;AASI,IAAA,qBAAqB,EAAE,CAACtE,IAAD,EAAOZ,CAAP,KAAa;AAChC,0BACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKyE,0BAA0B,CAAC7D,IAAD,EAAOZ,CAAP,CAD/B,CADJ;AAKH,KAfL;AAgBI,IAAA,QAAQ,EAAE,KAhBd;AAiBI,IAAA,SAAS,EAAE,KAjBf;AAkBI,IAAA,MAAM,EAAE;AACJgG,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADN;AAEJC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAFZ,KAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CAJJ,CADJ,CADJ,CADJ,EAyCK1J,CAAC,CAACgE,GAAF,CAAM3D,2BAAN,EAAmC,qBAAnC,KAA6DA,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAhD,GAAyD,CAAtH,GAA0H8C,gCAAgC,EAA1J,GAA+J,IAzCpK,EA0CKhH,CAAC,CAACgE,GAAF,CAAM3D,2BAAN,EAAmC,qBAAnC,KAA6DA,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAhD,GAAyD,CAAtH,gBAA0H,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACvH,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAyB;AAAQ,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAzB,6BAAyF;AAAQ,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiBmE,MAAAA,kBAAkB,EAAE,WAArC;AAAkDsC,MAAAA,QAAQ,EAAE;AAA5D,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwFtJ,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAAxI,CAAzF,oEAAkS;AAAQ,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE,MAAT;AAAiBmE,MAAAA,kBAAkB,EAAE,WAArC;AAAkDsC,MAAAA,QAAQ,EAAE;AAA5D,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyF,KAAKtJ,2BAA2B,CAAC4D,mBAA5B,CAAgDC,MAA9I,CAAlS,sDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAE;AAAEqD,MAAAA,KAAK,EAAE;AAAT,KAA/B;AAAkD,IAAA,OAAO,EAAE,MAAM;AAC7D2B,MAAAA,2BAA2B;AAC9B,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHJ,CADJ,CADJ,CADuH,CAA1H,gBAYQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,iGADL,EAEK,gGAFL,EAGK,yFAHL,EAIK,iGAJL,EAKK,sDALL,CADJ,CAJJ,CADJ,CADJ,CADK,CAtDb,CAxFJ,CADJ;AAsKH,CAlmBD;;AAmmBA,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHzJ,IAAAA,QAAQ,EAAEyJ,KAAK,CAACC,IAAN,CAAW3F,IADlB;AAEH9D,IAAAA,2BAA2B,EAAEwJ,KAAK,CAACE,mBAAN,CAA0BC;AAFpD,GAAP;AAIH,CALD;;AAMA,eAAepK,OAAO,CAACgK,eAAD,EAAkB;AAAE7J,EAAAA;AAAF,CAAlB,CAAP,CAAsDI,iBAAtD,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap'\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { Modal } from 'react-responsive-modal';\nimport FileViewer from 'react-file-viewer';\n\nconst PageTwoMainHelper = ({ userData, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n    // refs & such\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [progress, setProgress] = useState(0);\n    const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [selectedFileTwo, setSelectedFileTwo] = useState(null);\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [popoverOpen, setPopoverState] = useState(false);\n    const [ fileAtPopoverInteraction, setFileAtPopoverInteractionState ] = useState(null);\n    const [ popoverOne, setPopoverOneState ] = useState(false);\n    const [ popoverTwo, setPopoverTwoState ] = useState(false);\n    const [ popoverThree, setPopoverThreeState ] = useState(false);\n    // popover main logic (after clicking button - create state for each iteration/item);\n    const [ popoverGeneralStatus, setPopoverGeneralStatus ] = useState({\n        popover0: false,\n        popover1: false,\n        popover2: false,\n        popover3: false,\n        popover4: false,\n        popover5: false,\n        popover6: false,\n        popover7: false,\n        popover8: false,\n        popover9: false\n    })\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(imageChangeAndConversion(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => {\n\n        console.log(\"submitted!\", currentFileSelectedUpload, fileMetaData);\n\n        if ((!_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\")) || (previouslySavedSoftwareData.uploadedPublicFiles.length <= 10)) {\n            const data = new FormData();\n\n            data.append(\"file\", currentFileSelectedUpload);\n            data.append(\"meta\", fileMetaData);\n\n            const config = {\n                onUploadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded file!\") {\n                    console.log(res.data);\n\n                    const { file } = res.data;\n\n                    saveSoftwareListingInfo({\n                        ...previouslySavedSoftwareData,\n                        uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n                    })\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n\n                    setMetaFileData(null);\n                    setFileReadyStatus(false);\n                    setCurrentUploadFileStatus(null);\n\n                    runSubmit();\n                } else {\n                    console.log(\"Err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        } else {\n            // here!\n            NotificationManager.error(`You're only allowed to upload 10 (TEN) files TOTAL. If you'd like to upload different files - remove/delete a previously uploaded file.`, \"Too many uploads!\", 4500);\n        }\n    };\n    useEffect(() => {\n        // probably end up putting something here?\n        console.log(\"re-rendered.\");\n    }, [])\n    const renderColor = (i) => {\n        switch (i) {\n            case 1:\n                return \"txt-success\";\n                break;\n            case 2:\n                return \"txt-info\";\n                break;\n            case 3:\n                return \"txt-danger\";\n                break;\n            case 4:\n                return \"txt-warning\";\n                break;\n            case 5:\n                return \"txt-dark\";\n                break;\n            case 6:\n                return \"txt-primary\";\n                break;\n            case 7:\n                return \"txt-secondary\";\n                break;\n            case 8:\n                return \"txt-pink\";\n                break;\n            case 9:\n                return \"txt-grey\";\n                break;\n            case 10:\n                return \"txt-success\";\n                break;\n            default:\n                return \"txt-warning\";\n                break;\n        }\n    }\n    const formatBytes = (bytes, decimals = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n    const deleteCurrentlySelectedTwoFile = (index) => {\n        console.log(\"deleteCurrentlySelectedTwoFile ran!\");\n        // remove file from redux state array\n        const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n            if (selectedFileTwo.id !== item.id) {\n                return true;\n            }\n        });\n        // change redux state\n        saveSoftwareListingInfo({\n            ...previouslySavedSoftwareData,\n            uploadedPublicFiles: removedFileArray\n        });\n\n        // // close popover\n        calculatePopoverStateToChange(index, null, true);\n        // set selected file popover state back to *default* === null\n        setSelectedFileTwo(null);\n    }\n    const calculatePopoverOpenWhich = (index) => {\n        switch (index) {\n            case 0:\n                return popoverOne;\n                break;\n            case 1: \n                return popoverTwo;\n                break;\n            case 2:\n                return popoverThree;\n                break;\n            default:\n                break;\n        }\n    }\n    const calculatePopoverStateToChange = (index, bool, reverse) => {\n        if (reverse === true) {\n            switch (index) {\n                case 0:\n                    setPopoverOneState(!popoverOne);\n                    break;\n                case 1: \n                    setPopoverTwoState(!popoverTwo);\n                    break;\n                case 2:\n                    setPopoverThreeState(!popoverThree);\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            switch (index) {\n                case 0:\n                    setPopoverOneState(bool);\n                    break;\n                case 1: \n                    setPopoverTwoState(bool);\n                    break;\n                case 2:\n                    setPopoverThreeState(bool);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    const renderConditionalUponFileUploads = () => {\n        return (\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <div className=\"file-content\">\n                        <Card>\n                            <CardBody className=\"file-manager\">\n                                <Label>If you'd like to view your previously uploaded files (uploaded yet NOT public <em style={{ color: \"red\" }}>yet</em>) can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the <strong style={{ color: \"blue\" }}>\"View All/Other Uploaded File's\"</strong> button to view all of your uploaded content.</Label>\n\n                                <h4 className=\"mb-3\">Uploaded File(s) & Content</h4>\n                                <h6>These are your \"Completed & already uploaded\" files <em>however</em> they will only be permanently saved upon completion and posting of this listing as a whole.</h6>\n                                <ul className=\"files\">\n                                    {previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n                                        return (\n                                            <li id=\"file-box-customized-software\" className=\"file-box\" key={indexxxx}>\n                                                <div className=\"file-top\">\n                                                    <i className={`fa fa-file-text-o ${renderColor(indexxxx)}`}></i><i id={`PopoverCustom-${indexxxx}`} onClick={() => {\n                                                        setSelectedFileTwo(file);\n\n                                                        calculatePopoverStateToChange(indexxxx, true, false);\n                                                    }} className={`fa fa-ellipsis-v f-14 ellips apply-special-hover-effect-black-icon`}></i>\n                                                </div>\n                                                <Popover placement=\"top\" isOpen={calculatePopoverOpenWhich(indexxxx)} target={`PopoverCustom-${indexxxx}`} toggle={() => {\n                                                    calculatePopoverStateToChange(indexxxx, null, true);\n                                                }}>\n                                                    <PopoverHeader>Want to delete this file? <div className=\"popover-cancel-container\" onClick={() => {\n                                                        calculatePopoverStateToChange(indexxxx, false, false);\n                                                    }}><img src={require(\"../../../../../../../assets/icons/close-64.png\")} className=\"small-close-popover-icon\" /></div></PopoverHeader>\n                                                    <PopoverBody>Would you like to <em style={{ color: \"blue\", textDecorationLine: \"underline\" }}>permanently delete</em> this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action <strong style={{ color: \"red\" }}>cannot</strong> be undone.\n                                                        <hr />\n                                                        <Button style={{ marginTop: \"7.5px\", width: \"100%\" }} onClick={() => {\n                                                            deleteCurrentlySelectedTwoFile(indexxxx);\n                                                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Delete file!</Button>\n                                                    </PopoverBody>\n                                                </Popover>\n                                                <div className=\"file-bottom\">\n                                                    <h6>{file.name} </h6>\n                                                    <p className=\"mb-1\">{formatBytes(file.size)}</p>\n                                                    <p> <b>{\"Uploaded at\"} : </b>{file.date}</p>\n                                                </div>\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                                <hr />\n                                {previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? <Button color=\"secondary\" style={{ width: \"100%\" }} onClick={() => {\n                                    setSelectedFile({\n                                        ...previouslySavedSoftwareData.uploadedPublicFiles[0],\n                                        selectedFileIndex: 0\n                                    });\n                                    // set delay to allow load before modal opening...\n                                    setTimeout(() => {\n                                        setFileModalOpenStatus(true);\n                                    }, 500)\n                                }}>View All/Other Uploaded File's</Button> : null}\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n    const onError = (e) => {\n        console.log(e, 'error in file-viewer');\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={onError}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const imageChangeAndConversion = (file) => {\n        return URL.createObjectURL(file);\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    const getFilesFromEvent = (events) => {\n        // console.log(\"getFilesFromEvent : \", events);\n    }\n    const deleteCurrentlySelectedFile = (index) => {\n\n        const removedFileArray = previouslySavedSoftwareData.uploadedPublicFiles.filter((item, i) => {\n            if (fileAtPopoverInteraction.id !== item.id) {\n                return true;\n            }\n        });\n\n        saveSoftwareListingInfo({\n            ...previouslySavedSoftwareData,\n            uploadedPublicFiles: removedFileArray\n        });\n        // close popover\n        setDynamicPopoverStateOpen(index, null, true);\n        // change file current focus \n        setFileAtPopoverInteractionState(null);\n        // check if the current \"set to delete\" item is in focus or not (being viewed)\n        if (selectedFile.selectedFileIndex === index) {\n            // check if last item in array and IF SO actually bump ONE BACK instead of forward.\n            if ((previouslySavedSoftwareData.uploadedPublicFiles.length - 1) === index) {\n                setSelectedFile({\n                    ...previouslySavedSoftwareData.uploadedPublicFiles[index - 1],\n                    selectedFileIndex: selectedFile.selectedFileIndex - 1\n                });\n            } else {\n                // set focus of current file to one forward as the list bumps and the item after deleted item comes into focus.\n                setSelectedFile({\n                    ...previouslySavedSoftwareData.uploadedPublicFiles[index + 1],\n                    selectedFileIndex: selectedFile.selectedFileIndex\n                });\n            }\n        }\n    }\n    const setDynamicPopoverStateOpen = (index, bool, reverseBool) => {\n        // reverse the state or coorlated index popover status\n        if (reverseBool === true) {\n            setPopoverGeneralStatus({\n                ...popoverGeneralStatus,\n                [`popover${index}`]: !`popover${index}`\n            });\n        } else {\n            // do NOT make reversal changes and do normal logic!\n            setPopoverGeneralStatus({\n                ...popoverGeneralStatus,\n                [`popover${index}`]: bool\n            });\n        }\n    }\n    const handleFinalSubmissionOfForm = () => {\n        console.log(\"handleFinalSubmissionOfForm clicked!\");\n    }\n    // check to make sure appropriate changes occur.\n    console.log(\"popoverGeneralStatus\", popoverGeneralStatus);\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={4.25}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            {selectedFile !== null ? <Modal classNames={{\n                overlay: 'customFileModalOverlay',\n                modal: 'customFileModal',\n            }} open={fileModalOpen} onOverlayClick={() => {\n                console.log(\"onOverlayClicked clicked!\");\n            }} onClose={() => {\n                setFileModalOpenStatus(false);\n            }} center>\n                <Container fluid={true}>\n                    <Row>\n                        <Col md=\"4\" lg=\"4\" xl=\"4\">\n                            <div className=\"file-content\">\n                                <Card>\n                                    <CardBody id=\"file-manager-override-scroll\" className=\"file-manager\">\n                                        <div className=\"left-tall-scroller-overflow\">\n                                            <ul className=\"files\">\n                                                {previouslySavedSoftwareData.uploadedPublicFiles.map((file, indexxxx) => {\n                                                    return (\n                                                        <li id={`file-box-customized-software-fullw`} className={`file-box ${selectedFile.selectedFileIndex === indexxxx ? \"active-pane-file\" : \"\"}`} key={indexxxx}>\n                                                            <div className=\"file-top\"><i className={`fa fa-file-text-o ${renderColor(indexxxx)}`}></i><i id={`popover${indexxxx}`} onClick={() => {\n                                                                setFileAtPopoverInteractionState(file);\n                                                                // do set (hard coded) switch\n                                                                setDynamicPopoverStateOpen(indexxxx, true, false);\n                                                            }} className={`fa fa-ellipsis-v f-14 ellips ${selectedFile.selectedFileIndex === indexxxx ? \"apply-special-hover-effect-black-icon\" : \"apply-special-hover-effect\"}`}></i>\n                                                                <Popover placement=\"bottom\" isOpen={popoverGeneralStatus[`popover${indexxxx}`]} target={`popover${indexxxx}`} toggle={() => {\n                                                                    // reverse dynamic popover state!\n                                                                    setDynamicPopoverStateOpen(indexxxx, null, true);\n                                                                }}>\n                                                                    <PopoverHeader>Want to delete this file? <div className=\"popover-cancel-container\" onClick={() => {\n                                                                        // do set (hard coded) switch\n                                                                        setDynamicPopoverStateOpen(indexxxx, false, false);\n                                                                    }}><img src={require(\"../../../../../../../assets/icons/close-64.png\")} className=\"small-close-popover-icon\" /></div></PopoverHeader>\n                                                                    <PopoverBody>Would you like to <em style={{ color: \"blue\", textDecorationLine: \"underline\" }}>permanently delete</em> this file from your selected/uploaded files? This will remove ONLY this file which will free up space (if you have 10 files already) and will allow you to select another file to replace it. This action <strong style={{ color: \"red\" }}>cannot</strong> be undone.\n                                                                        <hr />\n                                                                        <Button style={{ marginTop: \"7.5px\", width: \"100%\" }} onClick={() => {\n                                                                            deleteCurrentlySelectedFile(indexxxx);\n                                                                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Delete file!</Button>\n                                                                    </PopoverBody>\n                                                                </Popover>\n                                                            </div>\n                                                            <div className=\"file-bottom\">\n                                                                <h6>{file.name}</h6>\n                                                                <p className=\"mb-1\">{formatBytes(file.size)}</p>\n                                                                <p> <b>{\"Uploaded at\"} : </b>{file.date}</p>\n                                                            </div>\n                                                            <div className=\"center-button-file\">\n                                                                <Button style={{ width: \"100%\" }} onClick={() => {\n                                                                    setSelectedFile({\n                                                                        ...file,\n                                                                        selectedFileIndex: indexxxx\n                                                                    });\n                                                                }} className=\"btn-air-secondary\" color=\"secondary\" size=\"sm\">View File</Button>\n                                                            </div>\n                                                        </li>\n                                                    );\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col md=\"8\" lg=\"8\" xl=\"8\">\n                            <Card>\n                                <CardBody className=\"file-viewer-cardbody\">\n                                    <div className=\"height-100-wmaxed\">\n                                        <FileViewer\n                                            fileType={calculateFileType(selectedFile.type)}\n                                            filePath={`${process.env.REACT_APP_ASSET_LINK}/${selectedFile.link}`}\n                                            onError={onError}\n                                            key={selectedFile.id}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Modal> : null}\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Upload related files & attachments</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <Label>Select a single supporting file or multiple (Up to 10 files <strong>total</strong>)</Label>\n                                    <p className=\"subtext-under-label-upload\"><strong style={{ color: \"blue\" }}>NOTE</strong>: These files will be transfered or \"handed over\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be <strong>downloading</strong> and viewing.</p>\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            ref={dropzoneRef}\n                                            PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                            maxFiles={1}\n                                            autoUpload={true}\n                                            submitButtonDisabled={false}\n                                            InputComponent={CustomInputHelper}\n                                            getFilesFromEvent={getFilesFromEvent}\n                                            onSubmit={onSubmitHelper}\n                                            SubmitButtonComponent={(data, e) => {\n                                                return (\n                                                    <div className=\"absolutely-position-submit-btn\">\n                                                        {renderCustomButtonDropzone(data, e)}\n                                                    </div>\n                                                );\n                                            }}\n                                            multiple={false}\n                                            canCancel={false}\n                                            styles={{\n                                                dropzone: { height: 325 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                {_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null}\n                {_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? <Row>\n                    <Card className=\"card-absolute\">\n                        <CardBody>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Label>Currently, you've <strong style={{ color: \"red\" }}>successfully</strong> uploaded <strong style={{ color: \"blue\", textDecorationLine: \"underline\", fontSize: \"19.5px\" }}>{previouslySavedSoftwareData.uploadedPublicFiles.length}</strong> files out of your ten (10) file limit. You have <strong style={{ color: \"blue\", textDecorationLine: \"underline\", fontSize: \"19.5px\" }}>{(10 - previouslySavedSoftwareData.uploadedPublicFiles.length)}</strong> available slots left to upload additional files!</Label>\n                                <hr />\n                                <Button color=\"primary\" style={{ width: \"100%\" }} onClick={() => {\n                                    handleFinalSubmissionOfForm();\n                                }}> ~ Submit form details and proceed to next page ~ </Button>\n                            </Col>\n                        </CardBody>\n                    </Card>\n                </Row> : <Fragment>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"card-absolute\">\n                                <CardHeader className=\"bg-secondary\">\n                                    <h5>Upload at least three (3) files to proceed w/this form</h5>\n                                </CardHeader>\n                                <CardBody>\n                                    <p>\n                                        {\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\"}\n                                        {\"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\"}\n                                        {\"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\"}\n                                        {\"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\"}\n                                        {\"unknown printer took a galley of type and scrambled.\"}\n                                    </p>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Fragment>}\n            </Container>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nexport default connect(mapStateToProps, { saveSoftwareListingInfo })(PageTwoMainHelper);"]},"metadata":{},"sourceType":"module"}