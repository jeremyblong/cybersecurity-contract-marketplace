{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTurnCredentials = void 0;\n/* eslint-disable camelcase */\n\nvar TwilioConnection = require('../twilioconnection.js');\n\nvar ICE_VERSION = require('../util/constants').ICE_VERSION;\n\nvar _a = require('../util/twilio-video-errors'),\n    createTwilioError = _a.createTwilioError,\n    SignalingConnectionError = _a.SignalingConnectionError;\n\nvar events_1 = require(\"events\");\n\nfunction getTurnCredentials(token, wsServer) {\n  return new Promise(function (resolve, reject) {\n    var eventObserver = new events_1.EventEmitter();\n    var connectionOptions = {\n      networkMonitor: null,\n      eventObserver: eventObserver,\n      helloBody: {\n        edge: 'roaming',\n        preflight: true,\n        token: token,\n        type: 'ice',\n        version: ICE_VERSION\n      }\n    };\n    var twilioConnection = new TwilioConnection(wsServer, connectionOptions);\n    var done = false;\n    twilioConnection.once('close', function () {\n      if (!done) {\n        done = true;\n        reject(new SignalingConnectionError());\n      }\n    });\n    twilioConnection.on('message', function (messageData) {\n      var code = messageData.code,\n          message = messageData.message,\n          ice_servers = messageData.ice_servers,\n          type = messageData.type;\n\n      if ((type === 'iced' || type === 'error') && !done) {\n        done = true;\n\n        if (type === 'iced') {\n          resolve(ice_servers);\n        } else {\n          reject(createTwilioError(code, message));\n        }\n\n        twilioConnection.close();\n      }\n    });\n  });\n}\n\nexports.getTurnCredentials = getTurnCredentials;","map":{"version":3,"sources":["../../lib/preflight/getturncredentials.ts"],"names":[],"mappings":";;;;;;AAAA;;AACA,IAAM,gBAAgB,GAAG,OAAO,CAAC,wBAAD,CAAhC;;AACQ,IAAA,WAAW,GAAK,OAAO,CAAC,mBAAD,CAAP,CAAL,WAAX;;AACF,IAAA,EAAA,GAAkD,OAAO,CAAC,6BAAD,CAAzD;AAAA,IAAE,iBAAiB,GAAA,EAAA,CAAA,iBAAnB;AAAA,IAAqB,wBAAwB,GAAA,EAAA,CAAA,wBAA7C;;AAGN,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAIA,SAAgB,kBAAhB,CAAmC,KAAnC,EAAkD,QAAlD,EAAkE;AAChE,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACjC,QAAM,aAAa,GAAG,IAAI,QAAA,CAAA,YAAJ,EAAtB;AACA,QAAM,iBAAiB,GAAG;AACxB,MAAA,cAAc,EAAE,IADQ;AAExB,MAAA,aAAa,EAAA,aAFW;AAGxB,MAAA,SAAS,EAAE;AACT,QAAA,IAAI,EAAE,SADG;AAET,QAAA,SAAS,EAAE,IAFF;AAGT,QAAA,KAAK,EAAE,KAHE;AAIT,QAAA,IAAI,EAAE,KAJG;AAKT,QAAA,OAAO,EAAE;AALA;AAHa,KAA1B;AAYA,QAAM,gBAAgB,GAAG,IAAI,gBAAJ,CAAqB,QAArB,EAA+B,iBAA/B,CAAzB;AACA,QAAI,IAAI,GAAG,KAAX;AACA,IAAA,gBAAgB,CAAC,IAAjB,CAAsB,OAAtB,EAA+B,YAAA;AAC7B,UAAI,CAAC,IAAL,EAAW;AACT,QAAA,IAAI,GAAG,IAAP;AACA,QAAA,MAAM,CAAC,IAAI,wBAAJ,EAAD,CAAN;AACD;AACF,KALD;AAOA,IAAA,gBAAgB,CAAC,EAAjB,CAAoB,SAApB,EAA+B,UAAC,WAAD,EAK9B;AACS,UAAA,IAAI,GAAiC,WAAW,CAA5C,IAAJ;AAAA,UAAM,OAAO,GAAwB,WAAW,CAAnC,OAAb;AAAA,UAAe,WAAW,GAAW,WAAW,CAAtB,WAA1B;AAAA,UAA4B,IAAI,GAAK,WAAW,CAAhB,IAAhC;;AACR,UAAI,CAAC,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,OAA7B,KAAyC,CAAC,IAA9C,EAAoD;AAClD,QAAA,IAAI,GAAG,IAAP;;AACA,YAAI,IAAI,KAAK,MAAb,EAAqB;AACnB,UAAA,OAAO,CAAC,WAAD,CAAP;AACD,SAFD,MAEO;AACL,UAAA,MAAM,CAAC,iBAAiB,CAAC,IAAD,EAAO,OAAP,CAAlB,CAAN;AACD;;AACD,QAAA,gBAAgB,CAAC,KAAjB;AACD;AACF,KAhBD;AAiBD,GAxCM,CAAP;AAyCD;;AA1CD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTurnCredentials = void 0;\n/* eslint-disable camelcase */\nvar TwilioConnection = require('../twilioconnection.js');\nvar ICE_VERSION = require('../util/constants').ICE_VERSION;\nvar _a = require('../util/twilio-video-errors'), createTwilioError = _a.createTwilioError, SignalingConnectionError = _a.SignalingConnectionError;\nvar events_1 = require(\"events\");\nfunction getTurnCredentials(token, wsServer) {\n    return new Promise(function (resolve, reject) {\n        var eventObserver = new events_1.EventEmitter();\n        var connectionOptions = {\n            networkMonitor: null,\n            eventObserver: eventObserver,\n            helloBody: {\n                edge: 'roaming',\n                preflight: true,\n                token: token,\n                type: 'ice',\n                version: ICE_VERSION\n            },\n        };\n        var twilioConnection = new TwilioConnection(wsServer, connectionOptions);\n        var done = false;\n        twilioConnection.once('close', function () {\n            if (!done) {\n                done = true;\n                reject(new SignalingConnectionError());\n            }\n        });\n        twilioConnection.on('message', function (messageData) {\n            var code = messageData.code, message = messageData.message, ice_servers = messageData.ice_servers, type = messageData.type;\n            if ((type === 'iced' || type === 'error') && !done) {\n                done = true;\n                if (type === 'iced') {\n                    resolve(ice_servers);\n                }\n                else {\n                    reject(createTwilioError(code, message));\n                }\n                twilioConnection.close();\n            }\n        });\n    });\n}\nexports.getTurnCredentials = getTurnCredentials;\n//# sourceMappingURL=getturncredentials.js.map"]},"metadata":{},"sourceType":"script"}