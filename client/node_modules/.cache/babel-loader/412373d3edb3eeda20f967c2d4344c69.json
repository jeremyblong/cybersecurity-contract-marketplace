{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport Dropzone from 'react-dropzone-uploader';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport FileViewer from 'react-file-viewer';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType\n} = helpers;\nconst steps = [{\n  selector: '#navigate-to-redirect',\n  content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`\n}];\n\nconst CreateNewCoursePageTwo = _ref => {\n  let {\n    setProgress\n  } = _ref;\n  const dropzoneRef = useRef(null);\n  const scrollToTourWrapper = useRef(null); // state initialization\n\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [subtitle, setSubTitleValue] = useState(\"\");\n  const [stepOpen, setStepOpenState] = useState(false); // ref={scrollToTourWrapper} id={\"navigate-to-redirect\"} - attach this to MORE-INFO button/icon\n\n  const disableBodyAndScroll = target => {\n    disableBodyScroll(target);\n  }; // enable body!\n\n\n  const enableBody = target => clearAllBodyScrollLocks();\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const handleTourActivate = () => {\n    console.log(\"handleTourActivate ran...\");\n    scrollToTourWrapper.current.scrollIntoView(); // alter slightly according to scroll behavior\n\n    setTimeout(() => {\n      window.scrollBy(0, -175);\n    }, 300); // #navigate-to-redirect\n\n    setTimeout(() => {\n      setStepOpenState(true);\n    }, 750);\n  };\n\n  const handleSubAddition = () => {\n    console.log(\"handleSubAddition ran...\");\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tour, {\n    steps: steps,\n    isOpen: stepOpen,\n    onAfterOpen: disableBodyAndScroll,\n    onBeforeClose: enableBody,\n    onRequestClose: () => {\n      setStepOpenState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio radio-info mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }, \"Add a \\\"Sub-Section Course Content\\\" section with this form. If you're confused as to what this means, \", /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => handleTourActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 149\n    }\n  }, \"click this\"), \" to retreieve more details on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 237\n    }\n  }, \"how to create sellable content/courses\")), /*#__PURE__*/React.createElement(InputGroup, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 82\n    }\n  }, \"Add Course Section\")), /*#__PURE__*/React.createElement(Input, {\n    value: subtitle,\n    onChange: e => setSubTitleValue(e.target.value),\n    className: \"form-control min-height-input-courses\",\n    name: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter a course sub-section title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handleSubAddition(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 82\n    }\n  }, \"Add New Section\")))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewCoursePageTwo);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js"],"names":["React","Fragment","useRef","useState","connect","Dropzone","helpers","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","InputGroup","InputGroupAddon","InputGroupText","FileViewer","Tour","disableBodyScroll","clearAllBodyScrollLocks","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","steps","selector","content","CreateNewCoursePageTwo","setProgress","dropzoneRef","scrollToTourWrapper","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","subtitle","setSubTitleValue","stepOpen","setStepOpenState","disableBodyAndScroll","target","enableBody","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","files","URL","createObjectURL","renderPreviewOfFile","data","fileWithMeta","type","err","console","log","id","handleTourActivate","current","scrollIntoView","setTimeout","window","scrollBy","handleSubAddition","functions","dropzone","height","dropzoneActive","borderColor","paddingTop","width","value","mapStateToProps","state","userData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport Dropzone from 'react-dropzone-uploader';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport FileViewer from 'react-file-viewer';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\n\nconst { \n    renderCustomButtonDropzone,\n    onSubmitHelper,\n    calculateFileType\n} = helpers;\n\nconst steps = [\n    {\n      selector: '#navigate-to-redirect',\n      content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`,\n    }\n]\n\nconst CreateNewCoursePageTwo = ({ setProgress }) => {\n\n    const dropzoneRef = useRef(null);\n    const scrollToTourWrapper = useRef(null);\n    // state initialization\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ subtitle, setSubTitleValue ] = useState(\"\");\n    const [ stepOpen, setStepOpenState ] = useState(false);\n\n    // ref={scrollToTourWrapper} id={\"navigate-to-redirect\"} - attach this to MORE-INFO button/icon\n    const disableBodyAndScroll = target => {\n        disableBodyScroll(target);        \n    };\n    // enable body!\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const handleTourActivate = () => {\n        console.log(\"handleTourActivate ran...\");\n\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly according to scroll behavior\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 300);\n        // #navigate-to-redirect\n        setTimeout(() => {\n            setStepOpenState(true);\n        }, 750)\n    }\n    const handleSubAddition = () => {\n        console.log(\"handleSubAddition ran...\")\n    }\n    return (\n        <Fragment>\n            <Tour\n                steps={steps}\n                isOpen={stepOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={() => {\n                    setStepOpenState(false);\n                }} \n            />\n            <Row>\n            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <div className=\"radio radio-info mr-3\">\n                                    <Input type=\"radio\" value={null} />\n                                    <Label></Label>\n                                </div>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <Dropzone\n                                    ref={dropzoneRef}\n                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                    maxFiles={1}\n                                    autoUpload={true}\n                                    onChangeStatus={(functions) => {\n                                        setChangeOptions(functions);\n                                    }}\n                                    submitButtonDisabled={false}\n                                    InputComponent={CustomInputHelper}\n                                    getFilesFromEvent={null}\n                                    onSubmit={onSubmitHelper}\n                                    accept=\"video/*\"\n                                    SubmitButtonComponent={(data) => {\n                                        return (\n                                            <div className=\"absolutely-position-submit-btn\">\n                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus)}\n                                            </div>\n                                        );\n                                    }}\n                                    multiple={false}\n                                    canCancel={false}\n                                    styles={{\n                                        dropzone: { height: 350 },\n                                        dropzoneActive: { borderColor: 'green' },\n                                    }}\n                                />\n                            </Row>\n                            <hr />\n                            <Row style={{ paddingTop: \"12.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Add a \"Sub-Section Course Content\" section with this form. If you're confused as to what this means, <div onClick={() => handleTourActivate()}>click this</div> to retreieve more details on <strong>how to create sellable content/courses</strong></Label>\n                                        <InputGroup style={{ width: \"100%\" }}>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Add Course Section\"}</InputGroupText></InputGroupAddon>\n                                            <Input value={subtitle} onChange={(e) => setSubTitleValue(e.target.value)} className=\"form-control min-height-input-courses\" name={\"subtitle\"} type=\"text\" placeholder={\"Enter a course sub-section title...\"} />\n                                            <InputGroupAddon addonType=\"prepend\"><Button style={{ width: \"100%\" }} onClick={() => handleSubAddition()} className=\"btn-square-info\" color=\"info\" size=\"lg\">Add New Section</Button></InputGroupAddon>\n                                        </InputGroup>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(CreateNewCoursePageTwo);"]},"metadata":{},"sourceType":"module"}