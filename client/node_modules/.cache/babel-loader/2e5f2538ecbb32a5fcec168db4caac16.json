{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n  const courseTitle = {\n    check: (setError, register) => {\n      return { ...register(\"courseTitle\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 25 characters to 100 characters\"\n          },\n          minLength: {\n            value: 25,\n            message: \"You must enter AT Least 25 characters\"\n          },\n          maxLength: {\n            value: 100,\n            message: \"You may ONLY enter 100 characters or less\"\n          },\n          onBlur: e => {// code here...\n          }\n        })\n      };\n    },\n    name: \"courseTitle\",\n    placeholder: \"Enter a 'Course Title'\",\n    type: \"text\",\n    label: \"Course Title\"\n  };\n  const courseCategory = {\n    check: (setError, register, values) => {\n      return { ...register(\"reservePrice\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {\n            // code here...\n            console.log(\"blur - e\", e); // current value from this input\n\n            const current = e.target.value; // starting bid\n\n            const startingBid = values.startBid; // compare to make sure reserve is greater than starting bid\n\n            if (Number(current) <= Number(startingBid)) {\n              setTimeout(() => {\n                setError(\"reservePrice\", {\n                  type: \"manual\",\n                  message: \"You MUST enter a 'reserve price' GREATER than your starting bid price!\"\n                });\n              }, 50);\n            }\n          }\n        })\n      };\n    },\n    name: \"reservePrice\",\n    placeholder: \"Enter a reserve price...\",\n    type: \"number\",\n    label: \"Enter a reserve price\"\n  };\n  return {\n    courseTitle,\n    courseCategory\n  };\n};\n\nexport default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/helpers/reduxFormHelpers.js"],"names":["HookHelpers","courseTitle","check","setError","register","required","value","message","minLength","maxLength","onBlur","e","name","placeholder","type","label","courseCategory","values","console","log","current","target","startingBid","startBid","Number","setTimeout"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,MAAM;AAEtB,QAAMC,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,aACI,EAAC,GAAGA,QAAQ,CAAC,aAAD,EAAgB;AAAEC,UAAAA,QAAQ,EAAE;AACpCC,YAAAA,KAAK,EAAE,IAD6B;AAEpCC,YAAAA,OAAO,EAAE;AAF2B,WAAZ;AAGzBC,UAAAA,SAAS,EAAE;AACVF,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAHc;AAMzBE,UAAAA,SAAS,EAAE;AACVH,YAAAA,KAAK,EAAE,GADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WANc;AASzBG,UAAAA,MAAM,EAAGC,CAAD,IAAO,CACd;AACH;AAX2B,SAAhB;AAAZ,OADJ;AAcH,KAhBe;AAiBhBC,IAAAA,IAAI,EAAE,aAjBU;AAkBhBC,IAAAA,WAAW,EAAE,wBAlBG;AAmBhBC,IAAAA,IAAI,EAAE,MAnBU;AAoBhBC,IAAAA,KAAK,EAAE;AApBS,GAApB;AAsBA,QAAMC,cAAc,GAAG;AACnBd,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBa,MAArB,KAAgC;AACnC,aACI,EAAC,GAAGb,QAAQ,CAAC,cAAD,EAAiB;AAAEC,UAAAA,QAAQ,EAAE;AACrCC,YAAAA,KAAK,EAAE,IAD8B;AAErCC,YAAAA,OAAO,EAAE;AAF4B,WAAZ;AAG1BC,UAAAA,SAAS,EAAE;AACVF,YAAAA,KAAK,EAAE,CADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAHe;AAM1BE,UAAAA,SAAS,EAAE;AACVH,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WANe;AAS1BG,UAAAA,MAAM,EAAGC,CAAD,IAAO;AACd;AACAO,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,CAAxB,EAFc,CAGd;;AACA,kBAAMS,OAAO,GAAGT,CAAC,CAACU,MAAF,CAASf,KAAzB,CAJc,CAKd;;AACA,kBAAMgB,WAAW,GAAGL,MAAM,CAACM,QAA3B,CANc,CAOd;;AACA,gBAAIC,MAAM,CAACJ,OAAD,CAAN,IAAmBI,MAAM,CAACF,WAAD,CAA7B,EAA4C;AACxCG,cAAAA,UAAU,CAAC,MAAM;AACbtB,gBAAAA,QAAQ,CAAC,cAAD,EAAiB;AACrBW,kBAAAA,IAAI,EAAE,QADe;AAErBP,kBAAAA,OAAO,EAAE;AAFY,iBAAjB,CAAR;AAIH,eALS,EAKP,EALO,CAAV;AAMH;AACJ;AAzB4B,SAAjB;AAAZ,OADJ;AA4BH,KA9BkB;AA+BnBK,IAAAA,IAAI,EAAE,cA/Ba;AAgCnBC,IAAAA,WAAW,EAAE,0BAhCM;AAiCnBC,IAAAA,IAAI,EAAE,QAjCa;AAkCnBC,IAAAA,KAAK,EAAE;AAlCY,GAAvB;AAqCA,SAAO;AACHd,IAAAA,WADG;AAEHe,IAAAA;AAFG,GAAP;AAIH,CAjED;;AAoEA,eAAehB,WAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n    \n    const courseTitle = {\n        check: (setError, register) => {\n            return (\n                {...register(\"courseTitle\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 25 characters to 100 characters\"\n                }, minLength: {\n                    value: 25,\n                    message: \"You must enter AT Least 25 characters\"\n                }, maxLength: {\n                    value: 100,\n                    message: \"You may ONLY enter 100 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        name: \"courseTitle\",\n        placeholder: \"Enter a 'Course Title'\",\n        type: \"text\",\n        label: \"Course Title\"\n    };\n    const courseCategory = {\n        check: (setError, register, values) => {\n            return (\n                {...register(\"reservePrice\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                    console.log(\"blur - e\", e);\n                    // current value from this input\n                    const current = e.target.value;\n                    // starting bid\n                    const startingBid = values.startBid;\n                    // compare to make sure reserve is greater than starting bid\n                    if (Number(current) <= Number(startingBid)) {\n                        setTimeout(() => {\n                            setError(\"reservePrice\", {\n                                type: \"manual\",\n                                message: \"You MUST enter a 'reserve price' GREATER than your starting bid price!\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            )\n        },\n        name: \"reservePrice\",\n        placeholder: \"Enter a reserve price...\",\n        type: \"number\",\n        label: \"Enter a reserve price\"\n    };\n\n    return {\n        courseTitle,\n        courseCategory\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}