{"ast":null,"code":"import React, { Fragment } from 'react';\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst handleFileDeletionUploadedFiles = (i, setMyFile, setPopoverStates, selected) => {\n  // set files state\n  setMyFile(prevState => {\n    return prevState.filter((item, idx) => {\n      if (item.id !== selected.id) {\n        return true;\n      }\n    });\n  }); // close popover\n\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${i}`]: false\n    };\n  });\n};\n\nconst handleDotsClickExpansion = (file, index, setPopoverStates) => {\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${index}`]: true\n    };\n  });\n};\n\nconst bytesToSize = bytes => {\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  if (bytes == 0) return '0 Byte';\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n};\n\nconst calculateFileType = type => {\n  switch (type) {\n    case \"video/mp4\":\n      return \"mp4\";\n      break;\n\n    case \"image/png\":\n      return \"png\";\n      break;\n\n    case \"image/jpeg\":\n      return \"jpeg\";\n      break;\n\n    case \"image/jpg\":\n      return \"jpg\";\n      break;\n\n    case \"image/gif\":\n      return \"gif\";\n      break;\n\n    case \"image/bmp\":\n      return \"bmp\";\n      break;\n\n    case \"application/pdf\":\n      return \"pdf\";\n      break;\n\n    case \"text/csv\":\n      return \"csv\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n      return \"xlsx\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n      return \"docx\";\n      break;\n\n    case \"video/webm\":\n      return \"webm\";\n      break;\n\n    case \"audio/mpeg\":\n      return \"mp3\";\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst closePopoverDynamic = (i, setPopoverStates) => {\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${i}`]: false\n    };\n  });\n}; // UPLOAD file via api-call to AWS-S3\n\n\nconst handleFileUploadAnyType = (onSubmit, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setMyFile, currentFileSelectedUpload, metaFileData, setProgress) => {\n  // upload file to aws S3\n  const data = new FormData();\n  data.append(\"file\", currentFileSelectedUpload);\n  data.append(\"meta\", metaFileData);\n  const config = {\n    onUploadProgress: progressEvent => {\n      let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      setProgress(percentCompleted);\n    },\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n    if (res.data.message === \"Successfully uploaded file!\") {\n      console.log(res.data);\n      const {\n        file\n      } = res.data; // update local file array state\n\n      setMyFile(prevState => {\n        return [...prevState, { ...file,\n          icon: \"fa fa-file\"\n        }];\n      });\n      NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      onSubmit();\n    } else {\n      console.log(\"Err\", res.data);\n      NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n      onSubmit();\n    }\n  }).catch(err => {\n    console.log(err);\n    NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n    onSubmit();\n  });\n};\n\nexport default {\n  handleFileDeletionUploadedFiles,\n  handleDotsClickExpansion,\n  calculateFileType,\n  bytesToSize,\n  handleFileUploadAnyType,\n  closePopoverDynamic\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/fileManagerHelperFunctions.js"],"names":["React","Fragment","axios","NotificationManager","handleFileDeletionUploadedFiles","i","setMyFile","setPopoverStates","selected","prevState","filter","item","idx","id","handleDotsClickExpansion","file","index","bytesToSize","bytes","sizes","parseInt","Math","floor","log","round","pow","calculateFileType","type","closePopoverDynamic","handleFileUploadAnyType","onSubmit","setMetaFileData","setFileReadyStatus","setCurrentUploadFileStatus","currentFileSelectedUpload","metaFileData","setProgress","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","console","icon","success","error","catch","err"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,qBAApC;;AAGA,MAAMC,+BAA+B,GAAG,CAACC,CAAD,EAAIC,SAAJ,EAAeC,gBAAf,EAAiCC,QAAjC,KAA8C;AAClF;AACAF,EAAAA,SAAS,CAACG,SAAS,IAAI;AACnB,WAAOA,SAAS,CAACC,MAAV,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,UAAID,IAAI,CAACE,EAAL,KAAYL,QAAQ,CAACK,EAAzB,EAA6B;AACzB,eAAO,IAAP;AACH;AACJ,KAJM,CAAP;AAKH,GANQ,CAAT,CAFkF,CASlF;;AACAN,EAAAA,gBAAgB,CAACE,SAAS,IAAI;AAC1B,WAAO,EACH,GAAGA,SADA;AAEH,OAAE,UAASJ,CAAE,EAAb,GAAiB;AAFd,KAAP;AAIH,GALe,CAAhB;AAMH,CAhBD;;AAiBA,MAAMS,wBAAwB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcT,gBAAd,KAAmC;AAChEA,EAAAA,gBAAgB,CAACE,SAAS,IAAI;AAC1B,WAAO,EACH,GAAGA,SADA;AAEH,OAAE,UAASO,KAAM,EAAjB,GAAqB;AAFlB,KAAP;AAIH,GALe,CAAhB;AAMH,CAPD;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,MAAIC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAZ;AACA,MAAID,KAAK,IAAI,CAAb,EAAgB,OAAO,QAAP;AAChB,MAAIb,CAAC,GAAGe,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASL,KAAT,IAAkBG,IAAI,CAACE,GAAL,CAAS,IAAT,CAA7B,CAAD,CAAhB;AACA,SAAOF,IAAI,CAACG,KAAL,CAAWN,KAAK,GAAGG,IAAI,CAACI,GAAL,CAAS,IAAT,EAAepB,CAAf,CAAnB,EAAsC,CAAtC,IAA2C,GAA3C,GAAiDc,KAAK,CAACd,CAAD,CAA7D;AACH,CALD;;AAMA,MAAMqB,iBAAiB,GAAIC,IAAD,IAAU;AAChC,UAAQA,IAAR;AACI,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,iBAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,UAAL;AACI,aAAO,KAAP;AACA;;AACJ,SAAK,mEAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,yEAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,MAAP;AACA;;AACJ,SAAK,YAAL;AACI,aAAO,KAAP;AACA;;AACJ;AACI;AAtCR;AAwCH,CAzCD;;AA0CA,MAAMC,mBAAmB,GAAG,CAACvB,CAAD,EAAIE,gBAAJ,KAAyB;AACjDA,EAAAA,gBAAgB,CAACE,SAAS,IAAI;AAC1B,WAAO,EACH,GAAGA,SADA;AAEH,OAAE,UAASJ,CAAE,EAAb,GAAiB;AAFd,KAAP;AAIH,GALe,CAAhB;AAMH,CAPD,C,CAQA;;;AACA,MAAMwB,uBAAuB,GAAG,CAACC,QAAD,EAAWC,eAAX,EAA4BC,kBAA5B,EAAgDC,0BAAhD,EAA4E3B,SAA5E,EAAuF4B,yBAAvF,EAAkHC,YAAlH,EAAgIC,WAAhI,KAAgJ;AAC5K;AACA,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBL,yBAApB;AACAG,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,YAApB;AAEA,QAAMK,MAAM,GAAG;AACXC,IAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,UAAIC,gBAAgB,GAAGtB,IAAI,CAACG,KAAL,CAAYkB,aAAa,CAACE,MAAd,GAAuB,GAAxB,GAA+BF,aAAa,CAACG,KAAxD,CAAvB;AAEAT,MAAAA,WAAW,CAACO,gBAAD,CAAX;AACH,KALU;AAMXG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AANE,GAAf;AAWA5C,EAAAA,KAAK,CAAC6C,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,wCAA7C,EAAsFb,IAAtF,EAA4FG,MAA5F,EAAoGW,IAApG,CAA0GC,GAAD,IAAS;AAC9G,QAAIA,GAAG,CAACf,IAAJ,CAASgB,OAAT,KAAqB,6BAAzB,EAAwD;AACpDC,MAAAA,OAAO,CAAC/B,GAAR,CAAY6B,GAAG,CAACf,IAAhB;AAEA,YAAM;AAAEtB,QAAAA;AAAF,UAAWqC,GAAG,CAACf,IAArB,CAHoD,CAKpD;;AACA/B,MAAAA,SAAS,CAACG,SAAS,IAAI;AACnB,eAAO,CAAC,GAAGA,SAAJ,EAAe,EAClB,GAAGM,IADe;AAElBwC,UAAAA,IAAI,EAAE;AAFY,SAAf,CAAP;AAIH,OALQ,CAAT;AAOApD,MAAAA,mBAAmB,CAACqD,OAApB,CAA6B,iIAA7B,EAA+J,6BAA/J,EAA8L,IAA9L;AAEAzB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AAEAH,MAAAA,QAAQ;AACX,KApBD,MAoBO;AACHwB,MAAAA,OAAO,CAAC/B,GAAR,CAAY,KAAZ,EAAmB6B,GAAG,CAACf,IAAvB;AAEAlC,MAAAA,mBAAmB,CAACsD,KAApB,CAA0BL,GAAG,CAACf,IAAJ,CAASgB,OAAnC,EAA4C,yCAA5C,EAAuF,IAAvF;AAEAvB,MAAAA,QAAQ;AACX;AACJ,GA5BD,EA4BG4B,KA5BH,CA4BUC,GAAD,IAAS;AACdL,IAAAA,OAAO,CAAC/B,GAAR,CAAYoC,GAAZ;AAEAxD,IAAAA,mBAAmB,CAACsD,KAApB,CAA0B,wHAA1B,EAAoJ,yCAApJ,EAA+L,IAA/L;AAEA3B,IAAAA,QAAQ;AACX,GAlCD;AAmCH,CArDD;;AAsDA,eAAe;AACX1B,EAAAA,+BADW;AAEXU,EAAAA,wBAFW;AAGXY,EAAAA,iBAHW;AAIXT,EAAAA,WAJW;AAKXY,EAAAA,uBALW;AAMXD,EAAAA;AANW,CAAf","sourcesContent":["import React, { Fragment} from 'react';\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\n\n\nconst handleFileDeletionUploadedFiles = (i, setMyFile, setPopoverStates, selected) => {\n    // set files state\n    setMyFile(prevState => {\n        return prevState.filter((item, idx) => {\n            if (item.id !== selected.id) {\n                return true;\n            }\n        })\n    });\n    // close popover\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${i}`]: false\n        }\n    });\n}\nconst handleDotsClickExpansion = (file, index, setPopoverStates) => {\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${index}`]: true\n        }\n    });\n}\nconst bytesToSize = (bytes) => {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst closePopoverDynamic = (i, setPopoverStates) => {\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${i}`]: false\n        }\n    });\n}\n// UPLOAD file via api-call to AWS-S3\nconst handleFileUploadAnyType = (onSubmit, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setMyFile, currentFileSelectedUpload, metaFileData, setProgress) => {\n    // upload file to aws S3\n    const data = new FormData();\n\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", metaFileData);\n\n    const config = {\n        onUploadProgress: (progressEvent) => {\n            let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n            setProgress(percentCompleted);\n        },\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n            console.log(res.data);\n\n            const { file } = res.data;\n\n            // update local file array state\n            setMyFile(prevState => {\n                return [...prevState, {\n                    ...file,\n                    icon: \"fa fa-file\"\n                }]\n            });\n\n            NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n\n            setMetaFileData(null);\n            setFileReadyStatus(false);\n            setCurrentUploadFileStatus(null);\n\n            onSubmit();\n        } else {\n            console.log(\"Err\", res.data);\n\n            NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n\n            onSubmit();\n        }\n    }).catch((err) => {\n        console.log(err);\n\n        NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n\n        onSubmit();\n    })\n}\nexport default {\n    handleFileDeletionUploadedFiles,\n    handleDotsClickExpansion,\n    calculateFileType,\n    bytesToSize,\n    handleFileUploadAnyType,\n    closePopoverDynamic\n}\n"]},"metadata":{},"sourceType":"module"}