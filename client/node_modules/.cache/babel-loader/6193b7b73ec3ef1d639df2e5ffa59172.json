{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js\";\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport Slider from \"react-slick\";\nimport { Modal } from 'react-responsive-modal';\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst PageTwoMainHelper = _ref => {\n  let {\n    userData,\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData\n  } = _ref;\n  const [progress, setProgress] = useState(0);\n  const [fileModalOpen, setFileModalOpenStatus] = useState(false);\n\n  const getUploadParams = _ref2 => {\n    let {\n      meta\n    } = _ref2;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  useEffect(() => {// probably end up putting something here?\n  }, []);\n\n  const handleChangeStatus = (_ref3, status) => {\n    let {\n      meta,\n      file\n    } = _ref3;\n    console.log(\"handleChangeStatus : \", meta, file, status);\n\n    if (status === \"preparing\") {\n      NotificationManager.info(`We've initiated your upload - we will notify you when your file has successfully uploaded! (These are just automatic uploads that ONLY you can view/manage)`, 'Initiated upload!', 4500);\n    }\n\n    if (status === \"done\") {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"meta\", meta);\n      const config = {\n        onUploadProgress: progressEvent => {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n          console.log(res.data);\n          const {\n            file,\n            generatedID\n          } = res.data;\n          saveSoftwareListingInfo({ ...previouslySavedSoftwareData,\n            uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n          });\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n        } else {\n          console.log(\"Err\", res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const renderColor = i => {\n    switch (i) {\n      case 1:\n        return \"txt-success\";\n        break;\n\n      case 2:\n        return \"txt-info\";\n        break;\n\n      case 3:\n        return \"txt-danger\";\n        break;\n\n      case 4:\n        return \"txt-warning\";\n        break;\n\n      case 5:\n        return \"txt-dark\";\n        break;\n\n      case 6:\n        return \"txt-primary\";\n        break;\n\n      case 7:\n        return \"txt-secondary\";\n        break;\n\n      case 8:\n        return \"txt-pink\";\n        break;\n\n      case 9:\n        return \"txt-grey\";\n        break;\n\n      case 10:\n        return \"txt-success\";\n        break;\n\n      default:\n        return \"txt-warning\";\n        break;\n    }\n  };\n\n  const formatBytes = function (bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n\n  const renderConditionalUponFileUploads = () => {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"file-manager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"If you'd like to view your previously uploaded files (uploaded yet NOT public \", /*#__PURE__*/React.createElement(\"em\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 114\n      }\n    }, \"yet\"), \") can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 313\n      }\n    }, \"\\\"See More\\\"\"), \" button to view all of your uploaded content.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Uploaded File(s) & Content\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \"These are your \\\"Completed & already uploaded\\\" files \", /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 85\n      }\n    }, \"however\"), \" they will only be permanently saved upon completion and posting of this listing as a whole.\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        id: \"file-box-customized-software\",\n        className: \"file-box\",\n        key: indexxxx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `fa fa-file-text-o ${renderColor(indexxxx)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 71\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-ellipsis-v f-14 ellips\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 135\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"file-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 49\n        }\n      }, file.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 49\n        }\n      }, formatBytes(file.size)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 49\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 53\n        }\n      }, \"Uploaded at\", \" : \"), file.date)));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }), previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => {\n        setFileModalOpenStatus(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 91\n      }\n    }, \"View All/Other Uploaded File's\") : null)))));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 4.25,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'customFileModalOverlay',\n      modal: 'customFileModal'\n    },\n    open: fileModalOpen,\n    onOverlayClick: () => {\n      console.log(\"onOverlayClicked clicked!\");\n    },\n    onClose: () => {\n      setFileModalOpenStatus(false);\n    },\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"5\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"6\")))), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, \"Upload related files & attachments\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, \"Select a single supporting file or multiple (Up to 10 files \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 104\n    }\n  }, \"total\"), \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtext-under-label-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 79\n    }\n  }, \"NOTE\"), \": These files will be transfered or \\\"handed over\\\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 343\n    }\n  }, \"downloading\"), \" and viewing.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 1,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Drop a file OR select to browse local data\",\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }))))))), _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveSoftwareListingInfo\n})(PageTwoMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js"],"names":["React","useState","useEffect","useRef","Fragment","Container","Row","Col","Card","CardHeader","CardBody","Form","Label","Button","Dropzone","axios","connect","NotificationManager","LoadingBar","saveSoftwareListingInfo","_","Slider","Modal","settings","dots","infinite","speed","slidesToShow","slidesToScroll","PageTwoMainHelper","userData","previouslySavedSoftwareData","progress","setProgress","fileModalOpen","setFileModalOpenStatus","getUploadParams","meta","url","handleChangeStatus","status","file","console","log","info","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","generatedID","uploadedPublicFiles","has","success","catch","err","renderColor","i","formatBytes","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","renderConditionalUponFileUploads","color","slice","map","indexxxx","name","size","date","length","width","overlay","modal","dropzone","height","dropzoneActive","borderColor","mapStateToProps","state","auth","softwareListingSale","softwareListingSaleInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label, Button } from 'reactstrap'\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport Slider from \"react-slick\";\nimport { Modal } from 'react-responsive-modal';\n\nconst settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n};\n\nconst PageTwoMainHelper = ({ userData, saveSoftwareListingInfo, previouslySavedSoftwareData }) => {\n\n    const [ progress, setProgress ] = useState(0); \n    const [ fileModalOpen, setFileModalOpenStatus ] = useState(false);\n\n    const getUploadParams = ({ meta }) => { \n        return { url: 'https://httpbin.org/post' } \n    };\n    useEffect(() => {\n        // probably end up putting something here?\n    }, [])\n\n    const handleChangeStatus = ({ meta, file }, status) => {\n        console.log(\"handleChangeStatus : \", meta, file, status);\n\n        if (status === \"preparing\") {\n            NotificationManager.info(`We've initiated your upload - we will notify you when your file has successfully uploaded! (These are just automatic uploads that ONLY you can view/manage)`, 'Initiated upload!', 4500);  \n        } \n\n        if (status === \"done\") {\n            const data = new FormData();\n    \n            data.append(\"file\", file);\n            data.append(\"meta\", meta);\n\n            const config = {\n                onUploadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded file!\") {\n                    console.log(res.data);\n\n                    const { file, generatedID } = res.data;\n\n                    saveSoftwareListingInfo({\n                        ...previouslySavedSoftwareData,\n                        uploadedPublicFiles: _.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") ? [...previouslySavedSoftwareData.uploadedPublicFiles, file] : [file]\n                    })\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n                } else {\n                    console.log(\"Err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n    const renderColor = (i) => {\n        switch (i) {\n            case 1:\n                return \"txt-success\";\n                break;\n            case 2:\n                return \"txt-info\";\n                break;\n            case 3:\n                return \"txt-danger\";\n                break;\n            case 4:\n                return \"txt-warning\";\n                break;\n            case 5:\n                return \"txt-dark\";\n                break;\n            case 6:\n                return \"txt-primary\";\n                break;\n            case 7:\n                return \"txt-secondary\";\n                break;\n            case 8:\n                return \"txt-pink\";\n                break;\n            case 9:\n                return \"txt-grey\";\n                break;\n            case 10:\n                return \"txt-success\";\n                break;\n            default:\n                return \"txt-warning\";\n                break;\n        }\n    }\n    const formatBytes = (bytes, decimals = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n    const renderConditionalUponFileUploads = () => {\n        return (\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <div className=\"file-content\">\n                    <Card>\n                        <CardBody className=\"file-manager\">\n                            <Label>If you'd like to view your previously uploaded files (uploaded yet NOT public <em style={{ color: \"red\" }}>yet</em>) can be viewed below however we will only show the first three (3) files in the preview region. If you'd like to view the rest of your uploaded files, click the <strong style={{ color: \"blue\" }}>\"See More\"</strong> button to view all of your uploaded content.</Label>\n                            \n                            <h4 className=\"mb-3\">Uploaded File(s) & Content</h4>\n                            <h6>These are your \"Completed & already uploaded\" files <em>however</em> they will only be permanently saved upon completion and posting of this listing as a whole.</h6>\n                            <ul className=\"files\">\n                                {previouslySavedSoftwareData.uploadedPublicFiles.slice(0, 3).map((file, indexxxx) => {\n                                    return (\n                                        <li id=\"file-box-customized-software\" className=\"file-box\" key={indexxxx}>\n                                            <div className=\"file-top\"><i className={`fa fa-file-text-o ${renderColor(indexxxx)}`}></i><i className=\"fa fa-ellipsis-v f-14 ellips\"></i></div>\n                                            <div className=\"file-bottom\">\n                                                <h6>{file.name} </h6>\n                                                <p className=\"mb-1\">{formatBytes(file.size)}</p>\n                                                <p> <b>{\"Uploaded at\"} : </b>{file.date}</p>\n                                            </div>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                            <hr />\n                            {previouslySavedSoftwareData.uploadedPublicFiles.length > 3 ? <Button color=\"secondary\" style={{ width: \"100%\" }} onClick={() => {\n                                setFileModalOpenStatus(true);\n                            }}>View All/Other Uploaded File's</Button> : null}\n                        </CardBody>\n                    </Card>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={4.25}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Modal classNames={{\n                overlay: 'customFileModalOverlay',\n                modal: 'customFileModal',\n            }} open={fileModalOpen} onOverlayClick={() => {\n                console.log(\"onOverlayClicked clicked!\");\n            }} onClose={() => {\n                setFileModalOpenStatus(false);\n            }} center>\n                <Slider {...settings}>\n                    <div>\n                        <h3>1</h3>\n                    </div>\n                    <div>\n                        <h3>2</h3>\n                    </div>\n                    <div>\n                        <h3>3</h3>\n                    </div>\n                    <div>\n                        <h3>4</h3>\n                    </div>\n                    <div>\n                        <h3>5</h3>\n                    </div>\n                    <div>\n                        <h3>6</h3>\n                    </div>\n                </Slider>\n            </Modal>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Upload related files & attachments</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <Label>Select a single supporting file or multiple (Up to 10 files <strong>total</strong>)</Label>\n                                    <p className=\"subtext-under-label-upload\"><strong style={{ color: \"blue\" }}>NOTE</strong>: These files will be transfered or \"handed over\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be <strong>downloading</strong> and viewing.</p>\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            getUploadParams={getUploadParams}\n                                            onChangeStatus={handleChangeStatus}\n                                            maxFiles={1}\n                                            multiple={false}\n                                            canCancel={false}\n                                            inputContent=\"Drop a file OR select to browse local data\"\n                                            styles={{\n                                                dropzone: { height: 275 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                {_.has(previouslySavedSoftwareData, \"uploadedPublicFiles\") && previouslySavedSoftwareData.uploadedPublicFiles.length > 0 ? renderConditionalUponFileUploads() : null}\n            </Container>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nexport default connect(mapStateToProps, { saveSoftwareListingInfo })(PageTwoMainHelper);\n"]},"metadata":{},"sourceType":"module"}