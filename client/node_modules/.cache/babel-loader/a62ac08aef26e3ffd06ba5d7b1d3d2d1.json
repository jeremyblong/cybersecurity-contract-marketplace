{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst HookHelpers=()=>{const courseTitle={check:(setError,register)=>{return{...register(\"courseTitle\",{required:{value:true,message:\"You MUST enter AT least 25 characters to 100 characters\"},minLength:{value:25,message:\"You must enter AT Least 25 characters\"},maxLength:{value:100,message:\"You may ONLY enter 100 characters or less\"}})};},onChange:(e,setValue)=>{const value=e.target.value;setValue(\"courseTitle\",value,{shouldValidate:true});},name:\"courseTitle\",placeholder:\"Enter a 'Course Title'\",type:\"text\",label:\"Course Title\"};const objectiveChecks={check:(register,name)=>{return{...register(name,{required:{value:true,message:\"You MUST enter AT least 25 characters to 160 characters\"},minLength:{value:25,message:\"You must enter AT Least 25 characters\"},maxLength:{value:160,message:\"You may ONLY enter 160 characters or less\"}})};},onChange:(setValue,name,value)=>{// update react-hook-form value(s)\nsetValue(name,value,{shouldValidate:true});},placeholder:\"Example: Define the roles and responsibilities of a project manager\",type:\"text\"};const prerequisitesChecks={check:(register,name)=>{return{...register(name,{required:{value:true,message:\"You MUST enter AT least 25 characters to 160 characters\"},minLength:{value:25,message:\"You must enter AT Least 25 characters\"},maxLength:{value:160,message:\"You may ONLY enter 160 characters or less\"}})};},onChange:(setValue,name,value)=>{// update react-hook-form value(s)\nsetValue(name,value,{shouldValidate:true});},placeholder:\"Example: No programming experience needed. You will learn everything you need to know\",type:\"text\"};const courseDesignedForChecks={check:(register,name)=>{return{...register(name,{required:{value:true,message:\"You MUST enter AT least 25 characters to 160 characters\"},minLength:{value:25,message:\"You must enter AT Least 25 characters\"},maxLength:{value:160,message:\"You may ONLY enter 160 characters or less\"},onBlur:e=>{// code here...\n}})};},onChange:(setValue,name,value)=>{// update react-hook-form value(s)\nsetValue(name,value,{shouldValidate:true});},placeholder:\"Example: Beginner Python developers curious about data science\",type:\"text\",label:\"Course Title\"};const courseCategory={check:(setError,register,clearErrors)=>{return{...register(\"courseCategory\",{required:{value:true,message:\"You MUST select a 'category' option before proceeding forward\"},onBlur:e=>{// code here...\nconsole.log(\"blur - e\",e);// current value from this input\nconst value=e.target.value;// timeout to delay for state change(s)\nsetTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"courseCategory\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"courseCategory\",{type:\"manual\",message:\"You MUST select a 'category' option before proceeding forward\"});}},50);}})};},onChange:(selectedOption,setValue,clearErrors)=>{console.log(\"value changed...:\",selectedOption);setValue(\"courseCategory\",selectedOption,{shouldValidate:false});setTimeout(()=>{clearErrors(\"courseCategory\");},75);},name:\"courseCategory\",placeholder:\"Select a category/group type\",label:\"Select a category for your course\"};const pricing={check:(setError,register,clearErrors)=>{return{...register(\"pricing\",{required:{value:true,message:\"You MUST select a 'pricing' option before proceeding forward\"},onBlur:e=>{// code here...\nconsole.log(\"blur - e\",e);// current value from this input\nconst value=e.target.value;// timeout to delay for state change(s)\nsetTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"pricing\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"pricing\",{type:\"manual\",message:\"You MUST select a 'pricing' option before proceeding forward\"});}},50);}})};},onChange:(selectedOption,setValue,clearErrors)=>{console.log(\"value changed...:\",selectedOption);setValue(\"pricing\",selectedOption,{shouldValidate:false});setTimeout(()=>{clearErrors(\"pricing\");},75);},name:\"pricing\",placeholder:\"Select a pricing option...\",label:\"Select a 'pricing option' for your course\"};const hashtagsChecker={check:(register,name)=>{return{...register(name,{required:{value:true,message:\"You MUST enter AT least 5 hashtags/tags before attempting to continue\"}})};},onBlurred:(tags,setValue,clearErrors,setError)=>{setValue(\"courseHashtags\",tags,{shouldValidate:true});// timeout to delay for state change(s)\nsetTimeout(()=>{// clear error after proper selection\nif(typeof tags!==\"undefined\"&&tags.length>=5&&tags.length<=15){clearErrors(\"courseHashtags\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"courseHashtags\",{type:\"manual\",message:\"You MUST enter BETWEEN 5-15 hashtags/tags before attempting to continue\"});}},100);},placeholder:\"Enter between 5-15 hashtags/tags...\",type:\"text\",label:\"Enter BETWEEN 5-15 hashtags to proceed forward - people will use these to find your specific course...\"};const descriptionChecks={check:(clearErrors,register,setError,currentValues,wordCount)=>{return{...register(\"description\",{required:{value:true,message:\"You must enter AT least 1000 characters OR 200 words to proceed\"},minLength:{value:1000,message:\"You must enter AT least 1000 characters OR 200 words to proceed\"},maxLength:{value:6000,message:\"You may only enter up to a max of 6000 characters or 475 words\"}})};},onBlur:(clearErrors,setError,currentValues,wordCount)=>{console.log(\"blurred dynamic description\");const description=currentValues.description;setTimeout(()=>{if(typeof description!==\"undefined\"&&description.length>=1000&&description.length<=6000){clearErrors(\"description\");}else{if(typeof description!==\"undefined\"&&description.length!==0){if(wordCount>=200||typeof description!==\"undefined\"&&description.length<=1000&&description.length>=0){console.log(\"one ran!\");setError(\"description\",{type:\"manual\",message:\"You must enter AT least 1000 characters OR 200 words to proceed\"});}else if(wordCount>=475&&typeof description!==\"undefined\"&&description.length>=6000){console.log(\"two ran!\");setError(\"description\",{type:\"manual\",message:\"You may only enter up to a max of 6000 characters OR a maximum of 475 words\"});}else{console.log(\"three ran!\");setError(\"description\",{type:\"manual\",message:\"You must enter between 1000-6000 characters to proceed or a minimum of 200 words\"});}}else{setError(\"description\",{type:\"manual\",message:\"You must enter a valid value for this input - we have detected that no data is currently in the input\"});}}},50);},placeholder:\"Enter your text here... (You can use MARKUP & various text styling tools with the bar above)\",name:\"description\"};return{courseTitle,courseCategory,hashtagsChecker,descriptionChecks,pricing,objectiveChecks,prerequisitesChecks,courseDesignedForChecks};};export default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/helpers/reduxFormHelpers.js"],"names":["HookHelpers","courseTitle","check","setError","register","required","value","message","minLength","maxLength","onChange","e","setValue","target","shouldValidate","name","placeholder","type","label","objectiveChecks","prerequisitesChecks","courseDesignedForChecks","onBlur","courseCategory","clearErrors","console","log","setTimeout","Object","keys","length","selectedOption","pricing","hashtagsChecker","onBlurred","tags","descriptionChecks","currentValues","wordCount","description"],"mappings":"AAAA;AACA,KAAMA,CAAAA,WAAW,CAAG,IAAM,CAEtB,KAAMC,CAAAA,WAAW,CAAG,CAChBC,KAAK,CAAE,CAACC,QAAD,CAAWC,QAAX,GAAwB,CAC3B,MACI,CAAC,GAAGA,QAAQ,CAAC,aAAD,CAAgB,CAAEC,QAAQ,CAAE,CACpCC,KAAK,CAAE,IAD6B,CAEpCC,OAAO,CAAE,yDAF2B,CAAZ,CAGzBC,SAAS,CAAE,CACVF,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,uCAFC,CAHc,CAMzBE,SAAS,CAAE,CACVH,KAAK,CAAE,GADG,CAEVC,OAAO,CAAE,2CAFC,CANc,CAAhB,CAAZ,CADJ,CAYH,CAde,CAehBG,QAAQ,CAAE,CAACC,CAAD,CAAIC,QAAJ,GAAiB,CACvB,KAAMN,CAAAA,KAAK,CAAGK,CAAC,CAACE,MAAF,CAASP,KAAvB,CAEAM,QAAQ,CAAC,aAAD,CAAgBN,KAAhB,CAAuB,CAAEQ,cAAc,CAAE,IAAlB,CAAvB,CAAR,CACH,CAnBe,CAoBhBC,IAAI,CAAE,aApBU,CAqBhBC,WAAW,CAAE,wBArBG,CAsBhBC,IAAI,CAAE,MAtBU,CAuBhBC,KAAK,CAAE,cAvBS,CAApB,CAyBA,KAAMC,CAAAA,eAAe,CAAG,CACpBjB,KAAK,CAAE,CAACE,QAAD,CAAWW,IAAX,GAAoB,CACvB,MACI,CAAC,GAAGX,QAAQ,CAACW,IAAD,CAAO,CAAEV,QAAQ,CAAE,CAC3BC,KAAK,CAAE,IADoB,CAE3BC,OAAO,CAAE,yDAFkB,CAAZ,CAGhBC,SAAS,CAAE,CACVF,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,uCAFC,CAHK,CAMhBE,SAAS,CAAE,CACVH,KAAK,CAAE,GADG,CAEVC,OAAO,CAAE,2CAFC,CANK,CAAP,CAAZ,CADJ,CAYH,CAdmB,CAepBG,QAAQ,CAAE,CAACE,QAAD,CAAWG,IAAX,CAAiBT,KAAjB,GAA2B,CACjC;AACAM,QAAQ,CAACG,IAAD,CAAOT,KAAP,CAAc,CAAEQ,cAAc,CAAE,IAAlB,CAAd,CAAR,CACH,CAlBmB,CAmBpBE,WAAW,CAAE,qEAnBO,CAoBpBC,IAAI,CAAE,MApBc,CAAxB,CAsBA,KAAMG,CAAAA,mBAAmB,CAAG,CACxBlB,KAAK,CAAE,CAACE,QAAD,CAAWW,IAAX,GAAoB,CACvB,MACI,CAAC,GAAGX,QAAQ,CAACW,IAAD,CAAO,CAAEV,QAAQ,CAAE,CAC3BC,KAAK,CAAE,IADoB,CAE3BC,OAAO,CAAE,yDAFkB,CAAZ,CAGhBC,SAAS,CAAE,CACVF,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,uCAFC,CAHK,CAMhBE,SAAS,CAAE,CACVH,KAAK,CAAE,GADG,CAEVC,OAAO,CAAE,2CAFC,CANK,CAAP,CAAZ,CADJ,CAYH,CAduB,CAexBG,QAAQ,CAAE,CAACE,QAAD,CAAWG,IAAX,CAAiBT,KAAjB,GAA2B,CACjC;AACAM,QAAQ,CAACG,IAAD,CAAOT,KAAP,CAAc,CAAEQ,cAAc,CAAE,IAAlB,CAAd,CAAR,CACH,CAlBuB,CAmBxBE,WAAW,CAAE,uFAnBW,CAoBxBC,IAAI,CAAE,MApBkB,CAA5B,CAsBA,KAAMI,CAAAA,uBAAuB,CAAG,CAC5BnB,KAAK,CAAE,CAACE,QAAD,CAAWW,IAAX,GAAoB,CACvB,MACI,CAAC,GAAGX,QAAQ,CAACW,IAAD,CAAO,CAAEV,QAAQ,CAAE,CAC3BC,KAAK,CAAE,IADoB,CAE3BC,OAAO,CAAE,yDAFkB,CAAZ,CAGhBC,SAAS,CAAE,CACVF,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,uCAFC,CAHK,CAMhBE,SAAS,CAAE,CACVH,KAAK,CAAE,GADG,CAEVC,OAAO,CAAE,2CAFC,CANK,CAShBe,MAAM,CAAGX,CAAD,EAAO,CACd;AACH,CAXkB,CAAP,CAAZ,CADJ,CAcH,CAhB2B,CAiB5BD,QAAQ,CAAE,CAACE,QAAD,CAAWG,IAAX,CAAiBT,KAAjB,GAA2B,CACjC;AACAM,QAAQ,CAACG,IAAD,CAAOT,KAAP,CAAc,CAAEQ,cAAc,CAAE,IAAlB,CAAd,CAAR,CACH,CApB2B,CAqB5BE,WAAW,CAAE,gEArBe,CAsB5BC,IAAI,CAAE,MAtBsB,CAuB5BC,KAAK,CAAE,cAvBqB,CAAhC,CAyBA,KAAMK,CAAAA,cAAc,CAAG,CACnBrB,KAAK,CAAE,CAACC,QAAD,CAAWC,QAAX,CAAqBoB,WAArB,GAAqC,CACxC,MACI,CAAC,GAAGpB,QAAQ,CAAC,gBAAD,CAAmB,CAAEC,QAAQ,CAAE,CACvCC,KAAK,CAAE,IADgC,CAEvCC,OAAO,CAAE,+DAF8B,CAAZ,CAG5Be,MAAM,CAAGX,CAAD,EAAO,CACd;AACAc,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBf,CAAxB,EACA;AACA,KAAML,CAAAA,KAAK,CAAGK,CAAC,CAACE,MAAF,CAASP,KAAvB,CACA;AACAqB,UAAU,CAAC,IAAM,CACb;AACA,GAAK,MAAOrB,CAAAA,KAAP,GAAiB,WAAlB,EAAmCsB,MAAM,CAACC,IAAP,CAAYvB,KAAZ,EAAmBwB,MAAnB,CAA4B,CAAnE,CAAuE,CACnEN,WAAW,CAAC,gBAAD,CAAX,CACH,CAFD,IAEO,CACH;AACArB,QAAQ,CAAC,gBAAD,CAAmB,CACvBc,IAAI,CAAE,QADiB,CAEvBV,OAAO,CAAE,+DAFc,CAAnB,CAAR,CAIH,CACJ,CAXS,CAWP,EAXO,CAAV,CAYH,CArB8B,CAAnB,CAAZ,CADJ,CAwBH,CA1BkB,CA2BnBG,QAAQ,CAAE,CAACqB,cAAD,CAAiBnB,QAAjB,CAA2BY,WAA3B,GAA2C,CACjDC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCK,cAAjC,EAEAnB,QAAQ,CAAC,gBAAD,CAAmBmB,cAAnB,CAAmC,CAAEjB,cAAc,CAAE,KAAlB,CAAnC,CAAR,CAEAa,UAAU,CAAC,IAAM,CACbH,WAAW,CAAC,gBAAD,CAAX,CACH,CAFS,CAEP,EAFO,CAAV,CAGH,CAnCkB,CAoCnBT,IAAI,CAAE,gBApCa,CAqCnBC,WAAW,CAAE,8BArCM,CAsCnBE,KAAK,CAAE,mCAtCY,CAAvB,CAwCA,KAAMc,CAAAA,OAAO,CAAG,CACZ9B,KAAK,CAAE,CAACC,QAAD,CAAWC,QAAX,CAAqBoB,WAArB,GAAqC,CACxC,MACI,CAAC,GAAGpB,QAAQ,CAAC,SAAD,CAAY,CAAEC,QAAQ,CAAE,CAChCC,KAAK,CAAE,IADyB,CAEhCC,OAAO,CAAE,8DAFuB,CAAZ,CAGrBe,MAAM,CAAGX,CAAD,EAAO,CACd;AACAc,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBf,CAAxB,EACA;AACA,KAAML,CAAAA,KAAK,CAAGK,CAAC,CAACE,MAAF,CAASP,KAAvB,CACA;AACAqB,UAAU,CAAC,IAAM,CACb;AACA,GAAK,MAAOrB,CAAAA,KAAP,GAAiB,WAAlB,EAAmCsB,MAAM,CAACC,IAAP,CAAYvB,KAAZ,EAAmBwB,MAAnB,CAA4B,CAAnE,CAAuE,CACnEN,WAAW,CAAC,SAAD,CAAX,CACH,CAFD,IAEO,CACH;AACArB,QAAQ,CAAC,SAAD,CAAY,CAChBc,IAAI,CAAE,QADU,CAEhBV,OAAO,CAAE,8DAFO,CAAZ,CAAR,CAIH,CACJ,CAXS,CAWP,EAXO,CAAV,CAYH,CArBuB,CAAZ,CAAZ,CADJ,CAwBH,CA1BW,CA2BZG,QAAQ,CAAE,CAACqB,cAAD,CAAiBnB,QAAjB,CAA2BY,WAA3B,GAA2C,CACjDC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCK,cAAjC,EAEAnB,QAAQ,CAAC,SAAD,CAAYmB,cAAZ,CAA4B,CAAEjB,cAAc,CAAE,KAAlB,CAA5B,CAAR,CAEAa,UAAU,CAAC,IAAM,CACbH,WAAW,CAAC,SAAD,CAAX,CACH,CAFS,CAEP,EAFO,CAAV,CAGH,CAnCW,CAoCZT,IAAI,CAAE,SApCM,CAqCZC,WAAW,CAAE,4BArCD,CAsCZE,KAAK,CAAE,2CAtCK,CAAhB,CAwCA,KAAMe,CAAAA,eAAe,CAAG,CACpB/B,KAAK,CAAE,CAACE,QAAD,CAAWW,IAAX,GAAoB,CACvB,MACI,CAAC,GAAGX,QAAQ,CAACW,IAAD,CAAO,CAAEV,QAAQ,CAAE,CAC3BC,KAAK,CAAE,IADoB,CAE3BC,OAAO,CAAE,uEAFkB,CAAZ,CAAP,CAAZ,CADJ,CAMH,CARmB,CASpB2B,SAAS,CAAE,CAACC,IAAD,CAAOvB,QAAP,CAAiBY,WAAjB,CAA8BrB,QAA9B,GAA2C,CAClDS,QAAQ,CAAC,gBAAD,CAAmBuB,IAAnB,CAAyB,CAAErB,cAAc,CAAE,IAAlB,CAAzB,CAAR,CACA;AACAa,UAAU,CAAC,IAAM,CACb;AACA,GAAK,MAAOQ,CAAAA,IAAP,GAAgB,WAAjB,EAAkCA,IAAI,CAACL,MAAL,EAAe,CAAf,EAAoBK,IAAI,CAACL,MAAL,EAAe,EAAzE,CAA8E,CAC1EN,WAAW,CAAC,gBAAD,CAAX,CACH,CAFD,IAEO,CACH;AACArB,QAAQ,CAAC,gBAAD,CAAmB,CACvBc,IAAI,CAAE,QADiB,CAEvBV,OAAO,CAAE,yEAFc,CAAnB,CAAR,CAIH,CACJ,CAXS,CAWP,GAXO,CAAV,CAYH,CAxBmB,CAyBpBS,WAAW,CAAE,qCAzBO,CA0BpBC,IAAI,CAAE,MA1Bc,CA2BpBC,KAAK,CAAE,wGA3Ba,CAAxB,CA6BA,KAAMkB,CAAAA,iBAAiB,CAAG,CACtBlC,KAAK,CAAE,CAACsB,WAAD,CAAcpB,QAAd,CAAwBD,QAAxB,CAAkCkC,aAAlC,CAAiDC,SAAjD,GAA+D,CAClE,MACI,CAAC,GAAGlC,QAAQ,CAAC,aAAD,CAAgB,CAAEC,QAAQ,CAAE,CACpCC,KAAK,CAAE,IAD6B,CAEpCC,OAAO,CAAE,iEAF2B,CAAZ,CAGzBC,SAAS,CAAE,CACVF,KAAK,CAAE,IADG,CAEVC,OAAO,CAAE,iEAFC,CAHc,CAMzBE,SAAS,CAAE,CACVH,KAAK,CAAE,IADG,CAEVC,OAAO,CAAE,gEAFC,CANc,CAAhB,CAAZ,CADJ,CAYH,CAdqB,CAetBe,MAAM,CAAE,CAACE,WAAD,CAAcrB,QAAd,CAAwBkC,aAAxB,CAAuCC,SAAvC,GAAqD,CAEzDb,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAEA,KAAMa,CAAAA,WAAW,CAAGF,aAAa,CAACE,WAAlC,CAEAZ,UAAU,CAAC,IAAM,CACb,GAAK,MAAOY,CAAAA,WAAP,GAAuB,WAAxB,EAA0CA,WAAW,CAACT,MAAZ,EAAsB,IAAvB,EAAiCS,WAAW,CAACT,MAAZ,EAAsB,IAApG,CAA4G,CACxGN,WAAW,CAAC,aAAD,CAAX,CACH,CAFD,IAEO,CACH,GAAK,MAAOe,CAAAA,WAAP,GAAuB,WAAxB,EAAwCA,WAAW,CAACT,MAAZ,GAAuB,CAAnE,CAAsE,CAClE,GAAKQ,SAAS,EAAI,GAAd,EAAwB,MAAOC,CAAAA,WAAP,GAAuB,WAAvB,EAAsCA,WAAW,CAACT,MAAZ,EAAsB,IAA7D,EAAuES,WAAW,CAACT,MAAZ,EAAsB,CAAxH,CAA6H,CACzHL,OAAO,CAACC,GAAR,CAAY,UAAZ,EAEAvB,QAAQ,CAAC,aAAD,CAAgB,CACpBc,IAAI,CAAE,QADc,CAEpBV,OAAO,CAAE,iEAFW,CAAhB,CAAR,CAIH,CAPD,IAOO,IAAK+B,SAAS,EAAI,GAAd,EAAwB,MAAOC,CAAAA,WAAP,GAAuB,WAAvB,EAAsCA,WAAW,CAACT,MAAZ,EAAsB,IAAxF,CAAgG,CACnGL,OAAO,CAACC,GAAR,CAAY,UAAZ,EAEAvB,QAAQ,CAAC,aAAD,CAAgB,CACpBc,IAAI,CAAE,QADc,CAEpBV,OAAO,CAAE,6EAFW,CAAhB,CAAR,CAIH,CAPM,IAOA,CACHkB,OAAO,CAACC,GAAR,CAAY,YAAZ,EAEAvB,QAAQ,CAAC,aAAD,CAAgB,CACpBc,IAAI,CAAE,QADc,CAEpBV,OAAO,CAAE,kFAFW,CAAhB,CAAR,CAIH,CACJ,CAvBD,IAuBO,CACHJ,QAAQ,CAAC,aAAD,CAAgB,CACpBc,IAAI,CAAE,QADc,CAEpBV,OAAO,CAAE,uGAFW,CAAhB,CAAR,CAIH,CACJ,CACJ,CAlCS,CAkCP,EAlCO,CAAV,CAmCH,CAxDqB,CAyDtBS,WAAW,CAAE,8FAzDS,CA0DtBD,IAAI,CAAE,aA1DgB,CAA1B,CA6DA,MAAO,CACHd,WADG,CAEHsB,cAFG,CAGHU,eAHG,CAIHG,iBAJG,CAKHJ,OALG,CAMHb,eANG,CAOHC,mBAPG,CAQHC,uBARG,CAAP,CAUH,CApRD,CAuRA,cAAerB,CAAAA,WAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst HookHelpers = () => {\n    \n    const courseTitle = {\n        check: (setError, register) => {\n            return (\n                {...register(\"courseTitle\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 25 characters to 100 characters\"\n                }, minLength: {\n                    value: 25,\n                    message: \"You must enter AT Least 25 characters\"\n                }, maxLength: {\n                    value: 100,\n                    message: \"You may ONLY enter 100 characters or less\"\n                }})}\n            )\n        },\n        onChange: (e, setValue) => {\n            const value = e.target.value;\n\n            setValue(\"courseTitle\", value, { shouldValidate: true });\n        },\n        name: \"courseTitle\",\n        placeholder: \"Enter a 'Course Title'\",\n        type: \"text\",\n        label: \"Course Title\"\n    };\n    const objectiveChecks = {\n        check: (register, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 25 characters to 160 characters\"\n                }, minLength: {\n                    value: 25,\n                    message: \"You must enter AT Least 25 characters\"\n                }, maxLength: {\n                    value: 160,\n                    message: \"You may ONLY enter 160 characters or less\"\n                }})}\n            )\n        },\n        onChange: (setValue, name, value) => {\n            // update react-hook-form value(s)\n            setValue(name, value, { shouldValidate: true });\n        },\n        placeholder: \"Example: Define the roles and responsibilities of a project manager\",\n        type: \"text\"\n    };\n    const prerequisitesChecks = {\n        check: (register, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 25 characters to 160 characters\"\n                }, minLength: {\n                    value: 25,\n                    message: \"You must enter AT Least 25 characters\"\n                }, maxLength: {\n                    value: 160,\n                    message: \"You may ONLY enter 160 characters or less\"\n                }})}\n            )\n        },\n        onChange: (setValue, name, value) => {\n            // update react-hook-form value(s)\n            setValue(name, value, { shouldValidate: true });\n        },\n        placeholder: \"Example: No programming experience needed. You will learn everything you need to know\",\n        type: \"text\"\n    };\n    const courseDesignedForChecks = {\n        check: (register, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 25 characters to 160 characters\"\n                }, minLength: {\n                    value: 25,\n                    message: \"You must enter AT Least 25 characters\"\n                }, maxLength: {\n                    value: 160,\n                    message: \"You may ONLY enter 160 characters or less\"\n                }, onBlur: (e) => {\n                    // code here...\n                }})}\n            )\n        },\n        onChange: (setValue, name, value) => {\n            // update react-hook-form value(s)\n            setValue(name, value, { shouldValidate: true });\n        },\n        placeholder: \"Example: Beginner Python developers curious about data science\",\n        type: \"text\",\n        label: \"Course Title\"\n    }\n    const courseCategory = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"courseCategory\", { required: {\n                    value: true,\n                    message: \"You MUST select a 'category' option before proceeding forward\"\n                }, onBlur: (e) => {\n                    // code here...\n                    console.log(\"blur - e\", e);\n                    // current value from this input\n                    const value = e.target.value;\n                    // timeout to delay for state change(s)\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"courseCategory\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"courseCategory\", {\n                                type: \"manual\",\n                                message: \"You MUST select a 'category' option before proceeding forward\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            )\n        },\n        onChange: (selectedOption, setValue, clearErrors) => {\n            console.log(\"value changed...:\", selectedOption);\n            \n            setValue(\"courseCategory\", selectedOption, { shouldValidate: false });\n\n            setTimeout(() => {\n                clearErrors(\"courseCategory\");\n            }, 75)\n        },\n        name: \"courseCategory\",\n        placeholder: \"Select a category/group type\",\n        label: \"Select a category for your course\"\n    };\n    const pricing = {\n        check: (setError, register, clearErrors) => {\n            return (\n                {...register(\"pricing\", { required: {\n                    value: true,\n                    message: \"You MUST select a 'pricing' option before proceeding forward\"\n                }, onBlur: (e) => {\n                    // code here...\n                    console.log(\"blur - e\", e);\n                    // current value from this input\n                    const value = e.target.value;\n                    // timeout to delay for state change(s)\n                    setTimeout(() => {\n                        // clear error after proper selection\n                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                            clearErrors(\"pricing\");\n                        } else {\n                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                            setError(\"pricing\", {\n                                type: \"manual\",\n                                message: \"You MUST select a 'pricing' option before proceeding forward\",\n                            });\n                        }\n                    }, 50);\n                }})}\n            )\n        },\n        onChange: (selectedOption, setValue, clearErrors) => {\n            console.log(\"value changed...:\", selectedOption);\n            \n            setValue(\"pricing\", selectedOption, { shouldValidate: false });\n\n            setTimeout(() => {\n                clearErrors(\"pricing\");\n            }, 75)\n        },\n        name: \"pricing\",\n        placeholder: \"Select a pricing option...\",\n        label: \"Select a 'pricing option' for your course\"\n    };\n    const hashtagsChecker = {\n        check: (register, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 5 hashtags/tags before attempting to continue\"\n                }})}\n            )\n        },\n        onBlurred: (tags, setValue, clearErrors, setError) => {\n            setValue(\"courseHashtags\", tags, { shouldValidate: true });\n            // timeout to delay for state change(s)\n            setTimeout(() => {\n                // clear error after proper selection\n                if ((typeof tags !== \"undefined\") && (tags.length >= 5 && tags.length <= 15)) {\n                    clearErrors(\"courseHashtags\");\n                } else {\n                    // set error as nothing was selected (blank 'click-off' selection of selector)\n                    setError(\"courseHashtags\", {\n                        type: \"manual\",\n                        message: \"You MUST enter BETWEEN 5-15 hashtags/tags before attempting to continue\",\n                    });\n                }\n            }, 100);\n        },\n        placeholder: \"Enter between 5-15 hashtags/tags...\",\n        type: \"text\",\n        label: \"Enter BETWEEN 5-15 hashtags to proceed forward - people will use these to find your specific course...\"\n    };\n    const descriptionChecks = {\n        check: (clearErrors, register, setError, currentValues, wordCount) => {\n            return (\n                {...register(\"description\", { required: {\n                    value: true,\n                    message: \"You must enter AT least 1000 characters OR 200 words to proceed\"\n                }, minLength: {\n                    value: 1000,\n                    message: \"You must enter AT least 1000 characters OR 200 words to proceed\"\n                }, maxLength: {\n                    value: 6000,\n                    message: \"You may only enter up to a max of 6000 characters or 475 words\"\n                }})}\n            );\n        },\n        onBlur: (clearErrors, setError, currentValues, wordCount) => {\n\n            console.log(\"blurred dynamic description\");\n\n            const description = currentValues.description;\n\n            setTimeout(() => {\n                if ((typeof description !== \"undefined\") && ((description.length >= 1000) && (description.length <= 6000))) {\n                    clearErrors(\"description\");\n                } else {\n                    if ((typeof description !== \"undefined\") && description.length !== 0) {\n                        if ((wordCount >= 200) || ((typeof description !== \"undefined\" && description.length <= 1000) && (description.length >= 0))) {\n                            console.log(\"one ran!\");\n\n                            setError(\"description\", {\n                                type: \"manual\",\n                                message: \"You must enter AT least 1000 characters OR 200 words to proceed\",\n                            });\n                        } else if ((wordCount >= 475) && ((typeof description !== \"undefined\" && description.length >= 6000))) {\n                            console.log(\"two ran!\");\n\n                            setError(\"description\", {\n                                type: \"manual\",\n                                message: \"You may only enter up to a max of 6000 characters OR a maximum of 475 words\",\n                            });\n                        } else {\n                            console.log(\"three ran!\");\n\n                            setError(\"description\", {\n                                type: \"manual\",\n                                message: \"You must enter between 1000-6000 characters to proceed or a minimum of 200 words\",\n                            });\n                        }\n                    } else {\n                        setError(\"description\", {\n                            type: \"manual\",\n                            message: \"You must enter a valid value for this input - we have detected that no data is currently in the input\",\n                        });\n                    }\n                }\n            }, 50)\n        },\n        placeholder: \"Enter your text here... (You can use MARKUP & various text styling tools with the bar above)\",\n        name: \"description\"\n    }\n\n    return {\n        courseTitle,\n        courseCategory,\n        hashtagsChecker,\n        descriptionChecks,\n        pricing,\n        objectiveChecks,\n        prerequisitesChecks,\n        courseDesignedForChecks\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}