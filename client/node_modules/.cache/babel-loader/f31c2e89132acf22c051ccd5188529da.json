{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport ReactImageVideoLightbox from 'react-image-video-lightbox';\n\nconst renderPictureOrVideoLast = file => {\n  if (file !== null && _.has(file, \"link\")) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"img-fluid\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid\",\n        alt: \"post1\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }))));\n    }\n  } else {\n    // image logic - DEFAULT.\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"latest-post profile-pic-video-sidebar-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      alt: \"post1\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nconst RenderGalleryModalHackerProfileHelper = _ref => {\n  let {\n    onCloseModal,\n    isOpen,\n    user\n  } = _ref;\n  const [picturesArr, setPicturesArr] = useState([]);\n  useEffect(async () => {\n    const freshGalleryArr = [];\n\n    if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n      // pictures exist - run setup logic\n      const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n        if (idx + 1 === row.length) {\n          // Last one.\n          freshGalleryArr.push({\n            url: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            altTag: \"profile-picture-or-video\"\n          });\n          console.log(\"last reached in contructor loop!\");\n        } else {\n          // Not last one.\n          freshGalleryArr.push({\n            url: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            altTag: \"profile-picture-or-video\"\n          });\n        }\n      });\n      setPicturesArr(newlyStructuredProfilePicsVids);\n    }\n  }, []);\n\n  const galleryCallback = data => {\n    console.log(\"galleryCallback callback :\", data);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactImageVideoLightbox, {\n    data: picturesArr,\n    startIndex: 0,\n    showResourceCount: true,\n    onCloseCallback: galleryCallback,\n    onNavigationCallback: currentIndex => console.log(`Current index: ${currentIndex}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default {\n  renderPictureOrVideoLast,\n  RenderGalleryModalHackerProfileHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js"],"names":["React","Fragment","useState","useEffect","ReactPlayer","_","ReactImageVideoLightbox","renderPictureOrVideoLast","file","has","type","includes","process","env","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","RenderGalleryModalHackerProfileHelper","onCloseModal","isOpen","user","picturesArr","setPicturesArr","freshGalleryArr","profilePicsVideos","length","newlyStructuredProfilePicsVids","map","el","idx","row","push","url","altTag","console","log","galleryCallback","data","currentIndex"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport ReactImageVideoLightbox from 'react-image-video-lightbox';\n\nconst renderPictureOrVideoLast = (file) => {\n    if (file !== null && _.has(file, \"link\")) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <li>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"img-fluid\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <li>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <img className=\"img-fluid\" alt=\"post1\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        }  \n    } else {\n        // image logic - DEFAULT.\n        return (\n            <Fragment>\n                <li>\n                    <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                        <img className=\"img-fluid\" alt=\"post1\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} />\n                    </div>\n                </li>\n            </Fragment>\n        );\n    } \n}\nconst RenderGalleryModalHackerProfileHelper = ({ onCloseModal, isOpen, user }) => {\n\n    const [ picturesArr, setPicturesArr ] = useState([]);\n\n    useEffect(async () => {\n\n        const freshGalleryArr = [];\n\n        if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n            // pictures exist - run setup logic\n            const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n                if (idx + 1 === row.length) {\n                    // Last one.\n                    freshGalleryArr.push({\n                        url: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        altTag: \"profile-picture-or-video\"\n                    });\n                    console.log(\"last reached in contructor loop!\");\n                } else {\n                    // Not last one.\n                    freshGalleryArr.push({\n                        url: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        altTag: \"profile-picture-or-video\"\n                    })\n                }\n            });\n            setPicturesArr(newlyStructuredProfilePicsVids);\n        }\n    }, []);\n\n    const galleryCallback = (data) => {\n        console.log(\"galleryCallback callback :\", data);\n    }\n    return (\n        <Fragment>\n            <ReactImageVideoLightbox\n                data={picturesArr}\n                startIndex={0}\n                showResourceCount={true}\n                onCloseCallback={galleryCallback}\n                onNavigationCallback={(currentIndex) =>\n                    console.log(`Current index: ${currentIndex}`)\n                }\n            />\n        </Fragment>\n    );\n}\nexport default {\n    renderPictureOrVideoLast,\n    RenderGalleryModalHackerProfileHelper\n};"]},"metadata":{},"sourceType":"module"}