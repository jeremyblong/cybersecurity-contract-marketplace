{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/misc/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Media, Input, InputGroup, InputGroupAddon, Popover, PopoverBody, PopoverHeader, Form, Tooltip } from 'reactstrap';\nimport moment from \"moment\";\nimport ReactPlayer from 'react-player';\nimport { MoreVertical } from \"react-feather\";\nimport two from '../../../../../../../assets/images/job-search/6.jpg';\nimport \"./styles.css\";\nimport { Picker } from 'emoji-mart';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { NotificationManager } from 'react-notifications';\nimport CommentsIndividualPostHelper from \"../viewPostFileContents/helpers/renderComments/otherHelpers/reactHookForm.js\";\nimport helpers from \"./miscHelpers/helpers.js\";\nconst {\n  renderProfilePicVideo,\n  renderProfilePicVideoPost,\n  renderCustomCommentImageVideo,\n  RenderEmojiLogic\n} = helpers;\nconst homepageCheckMessageMeetsCritera = CommentsIndividualPostHelper().homepageCheckMessageMeetsCritera;\n\nconst handleRespondEmoji = (emojiName, relatedPost, closePopover, targetAndPopState, userData, user) => {\n  console.log(\"emojiName\", emojiName);\n  const config = {\n    reaction: emojiName,\n    reactorID: userData.uniqueId,\n    posterID: user.uniqueId,\n    relatedPostID: relatedPost.uniqueId\n  };\n  axios.post(`${process.env.REACT_APP_BASE_URL}/react/posting/hacker/profile/individual/specific/post/main/mapped`, config).then(res => {\n    if (res.data.message === \"Successfully reacted to post!\") {\n      console.log(res.data);\n      const {\n        post\n      } = res.data;\n      NotificationManager.success(\"You've successfully reacted with an emoji to this user's specific post! If you'd like to remove this reaction, simply react with any of the emoji's again & it'll revoke your response.\", \"Successfully reacted to post!\", 4750);\n      relatedPost = post;\n    } else if (res.data.message === \"Successfully REMOVED reaction to post!\") {\n      const {\n        post\n      } = res.data;\n      relatedPost = post;\n      NotificationManager.info(\"We've successfully REMOVED your previous reaction as you've already reacted to this post, if you didn't mean to remove this reaction, simply react with same emoji again...\", \"Successfully removed previous reaction!\", 4750);\n    } else {\n      console.log(\"Err\", res.data);\n      NotificationManager.error(\"An error occurred while attempting to react to this specific post with the appropriate emoji, Try again & contact support if the issue persists.\", \"Error reacting to post!\", 4750);\n    }\n  }).catch(err => {\n    console.log(err);\n  }); // const configuration = {\n  //     emojiName,\n  //     id: userData.uniqueId,\n  //     listingId: data.uniqueId,\n  //     commentID: comment.id,\n  //     comment\n  // };\n  // axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/employer/listing`, configuration).then((res) => {\n  //     if (res.data.message === \"Successfully reacted to comment!\") {\n  //         console.log(res.data);\n  //         const { listing, commenttt } = res.data;\n  //         NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n  //         const indexed = comments.findIndex(x => x.id === commenttt.id);\n  //         const copy = [...comments];\n  //         copy[indexed] = commenttt;\n  //         setCommentsState(copy);\n  //         closePopover(targetAndPopState);\n  //     } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n  //         const { listing, commenttt } = res.data;\n  //         NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n  //         const indexed = comments.findIndex(x => x.id === commenttt.id);\n  //         const copy = [...comments];\n  //         copy[indexed] = commenttt;\n  //         setCommentsState(copy);\n  //         closePopover(targetAndPopState);\n  //     } else {\n  //         console.log(\"Err\", res.data);\n  //     }\n  // }).catch((err) => {\n  //     console.log(err);\n  // })\n};\n\nconst renderGridImageOrVideo = (file, bottom, setSelectedPost, post, setPostPaneOpenState, index, setSelectedIndex) => {\n  if (file.type.includes(\"video\")) {\n    // video logic\n    return /*#__PURE__*/React.createElement(Media, {\n      onClick: () => {\n        setSelectedIndex(index); // set the selected modal/pane post\n\n        setSelectedPost({ ...post,\n          files: post.uploadedRelevantFiles\n        }); // delay so selectedPost loads before/prior then display\n\n        setTimeout(() => {\n          setPostPaneOpenState(true);\n        }, 375);\n      },\n      className: bottom === true ? \"maxed-out-post-video-custom-wrapper-bottom\" : \"maxed-out-post-video-custom-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      playing: true,\n      loop: true,\n      muted: true,\n      width: \"100%\",\n      height: \"100%\",\n      className: \"maxed-out-post-video-custom\",\n      wrapper: \"div\",\n      url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }));\n  } else if (file.type.includes(\"image\")) {\n    // image logic\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: bottom === true ? \"align-post-content-picture-bottom-item\" : \"align-post-content-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      onClick: () => {\n        setSelectedIndex(index); // set the selected modal/pane post\n\n        setSelectedPost({ ...post,\n          files: post.uploadedRelevantFiles\n        }); // delay so selectedPost loads before/prior then display\n\n        setTimeout(() => {\n          setPostPaneOpenState(true);\n        }, 375);\n      },\n      className: \"post-image-resized\",\n      alt: \"post-picture\",\n      src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    console.log(\"NEITHER MATCH.\"); // image logic\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: bottom === true ? \"align-post-content-picture-bottom-item\" : \"align-post-content-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      onClick: () => {\n        setSelectedIndex(index); // set the selected modal/pane post\n\n        setSelectedPost({ ...post,\n          files: post.uploadedRelevantFiles\n        }); // delay so selectedPost loads before/prior then display\n\n        setTimeout(() => {\n          setPostPaneOpenState(true);\n        }, 375);\n      },\n      className: \"post-image-resized\",\n      alt: \"post-picture\",\n      src: require(\"../../../../../../../assets/images/cannot-display-file.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    })));\n  }\n};\n\nconst RenderCertainImageDisplay = _ref => {\n  let {\n    setSelectedIndex,\n    setPostPaneOpenState,\n    files,\n    setSelectedPost,\n    post\n  } = _ref;\n\n  switch (files.length) {\n    case 0:\n      return null;\n      break;\n\n    case 1:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex));\n      break;\n\n    case 2:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex))));\n      break;\n\n    case 3:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"12\",\n        lg: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          paddingTop: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[1], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex))));\n      break;\n\n    case 4:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          paddingTop: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[3], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex))));\n      break;\n\n    case 5:\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"6\",\n        lg: \"6\",\n        xl: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 1, setSelectedIndex))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          paddingTop: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"4\",\n        lg: \"4\",\n        xl: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 2, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"4\",\n        lg: \"4\",\n        xl: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[3], true, setSelectedPost, post, setPostPaneOpenState, 3, setSelectedIndex)), /*#__PURE__*/React.createElement(Col, {\n        className: \"image-render-col-custom\",\n        sm: \"12\",\n        md: \"4\",\n        lg: \"4\",\n        xl: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, renderGridImageOrVideo(files[4], true, setSelectedPost, post, setPostPaneOpenState, 4, setSelectedIndex))));\n      break;\n\n    default:\n      return null;\n      break;\n  }\n};\n\nconst TimelinePostsMappedHelper = _ref2 => {\n  let {\n    comments,\n    setCommentsState,\n    setSelectedIndex,\n    setPostPaneOpenState,\n    setSelectedPost,\n    post,\n    index,\n    user,\n    userData,\n    setPopoverState,\n    popover,\n    popoverIDTarget\n  } = _ref2;\n  // post.uploadedRelevantFiles.length\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [previewOpen, setPreviewState] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues();\n  useEffect(() => {\n    setCommentsState(post.comments);\n  }, []);\n  useEffect(() => {\n    console.log(\"comments update\");\n    setCommentsState(comments);\n  }, [comments]);\n\n  const openPopoverPane = () => {\n    setPopoverState(prevState => {\n      return { ...prevState,\n        [popoverIDTarget]: true\n      };\n    });\n  };\n\n  const addEmoji = emoji => {\n    const text = `${currentValues.homepageComment}${emoji.native}`; // close picker\n\n    setShowEmojiPicker(false); // update homepageComment string value\n\n    setValue(\"homepageComment\", text, {\n      shouldValidate: false\n    });\n  };\n\n  const renderFormErrors = errors => {\n    console.log(\"renderFormErrors\", errors);\n  };\n\n  const onSubmitForm = formData => {\n    console.log(\"onSubmitForm submitted form properly...!:\", formData);\n    setPreviewState(false);\n    const {\n      homepageComment\n    } = formData;\n    const configuration = {\n      id: userData.uniqueId,\n      specificPostId: post.uniqueId,\n      profileID: user.uniqueId,\n      comment: homepageComment,\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      accountType: userData.accountType,\n      mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/post/new/comment/hacker/timeline/profile/individual`, configuration).then(res => {\n      if (res.data.message === \"Successfully posted comment!\") {\n        console.log(res.data);\n        const {\n          updatedComments\n        } = res.data;\n        setValue(\"homepageComment\", \"\", {\n          shouldValidate: false\n        });\n        setCommentsState(updatedComments);\n        NotificationManager.success(\"Successfully posted your desired comment, we've successfully updated this listing data & notified the owner of these changes!\", \"Successfully posted a new comment!\", 4750);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmitForm, errors => renderFormErrors(errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"add-shadow-general-card-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-users-social\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, renderProfilePicVideoPost(user.profilePicsVideos), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0 f-w-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 37\n    }\n  }, `${user.firstName} ${user.lastName}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, \"Posted \", moment(post.date).fromNow())), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertical, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 75\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingBottom: \"12.5px\"\n    },\n    className: \"timeline-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }, post.title)), /*#__PURE__*/React.createElement(RenderCertainImageDisplay, {\n    setSelectedIndex: setSelectedIndex,\n    setPostPaneOpenState: setPostPaneOpenState,\n    post: post,\n    setSelectedPost: setSelectedPost,\n    files: post.uploadedRelevantFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, post.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-response-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => openPopoverPane(),\n    id: `post${index}`,\n    src: require(\"../../../../../../../assets/gifs/thoughts.gif\"),\n    className: \"emoji-response-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"17.5px\"\n    },\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      setSelectedPost({ ...post,\n        files: post.uploadedRelevantFiles,\n        index\n      }); // set slight delay to allow previous logic to load\n\n      setTimeout(() => {\n        setPostPaneOpenState(true);\n      }, 375);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 91\n    }\n  }, \"More Details/Comments & Complete Information\")), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogicMainPostings, {\n    user: user,\n    index: index,\n    handleRespondEmoji: handleRespondEmoji,\n    userData: userData,\n    relatedPost: post,\n    reactions: post.reactions,\n    setPopoverState: setPopoverState,\n    popoverState: popover,\n    targetAndPopState: popoverIDTarget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"like-content custom-like-response-zone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setSelectedPost({ ...post,\n        files: post.uploadedRelevantFiles,\n        index\n      }); // set slight delay to allow previous logic to load\n\n      setTimeout(() => {\n        setPostPaneOpenState(true);\n      }, 375);\n    },\n    className: \"pull-right comment-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 70\n    }\n  }, \"20\", \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setSelectedPost({ ...post,\n        files: post.uploadedRelevantFiles,\n        index\n      }); // set slight delay to allow previous logic to load\n\n      setTimeout(() => {\n        setPostPaneOpenState(true);\n      }, 375);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 90\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-share-alt mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 32\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right comment-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 130\n    }\n  }, comments.length, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 161\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-comments-o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 167\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n    reactions: post.reactions,\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    id: \"create-spacer-comment-box-profile-individual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    onClick: () => {\n      setSelectedPost({ ...post,\n        files: post.uploadedRelevantFiles,\n        index\n      }); // set slight delay to allow previous logic to load\n\n      setTimeout(() => {\n        setPostPaneOpenState(true);\n      }, 375);\n    },\n    className: \"img-50 img-fluid m-r-20\",\n    alt: \"\",\n    src: require(\"../../../../../../../assets/gifs/typing-black.gif\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({}, homepageCheckMessageMeetsCritera.check(setError, register, clearErrors, \"homepageComment\"), {\n    onChange: e => {\n      homepageCheckMessageMeetsCritera.onChange(e, \"homepageComment\", setValue);\n      const caret = e.target.selectionStart;\n      const element = e.target;\n      window.requestAnimationFrame(() => {\n        element.selectionStart = caret;\n        element.selectionEnd = caret;\n      });\n    },\n    value: currentValues.homepageComment,\n    name: \"homepageComment\",\n    className: \"form-control input-txt-bx write-comment-post\",\n    type: \"text\",\n    placeholder: homepageCheckMessageMeetsCritera.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    isOpen: previewOpen,\n    target: \"inputPreviewText\",\n    toggle: () => setPreviewState(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 49\n    }\n  }, currentValues.homepageComment), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    id: \"inputPreviewText\",\n    onMouseEnter: () => setPreviewState(prevState => !prevState),\n    style: {\n      marginLeft: \"17.5px\"\n    },\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-secondary\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 53\n    }\n  }, \"Submit Comment!\")), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => setShowEmojiPicker(!showEmojiPicker),\n    className: \"fa fa-smile-o fa-3x restyle-emoji-activator-icon\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 53\n    }\n  }), showEmojiPicker === true ? /*#__PURE__*/React.createElement(Picker, {\n    style: {\n      position: \"absolute\",\n      right: \"40px\",\n      top: \"-375px\"\n    },\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 61\n    }\n  }) : null)), errors.homepageComment ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginTop: \"3.5px\"\n    },\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 71\n    }\n  }, errors.homepageComment.message) : null))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"custom-profile-comments-row-override\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"social-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, comments.slice(0, 4).map((comment, idxxxxxx) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: idxxxxxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        setSelectedPost({ ...post,\n          files: post.uploadedRelevantFiles,\n          index\n        }); // set slight delay to allow previous logic to load\n\n        setTimeout(() => {\n          setPostPaneOpenState(true);\n        }, 375);\n      },\n      className: \"your-msg your-msg-custom-profile-mapped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 53\n      }\n    }, renderCustomCommentImageVideo(comment.posterPicOrVideo), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"f-w-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 69\n      }\n    }, comment.posterName, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 116\n      }\n    }, \" \", moment(comment.date).fromNow(), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-reply font-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 156\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 61\n      }\n    }, comment.commentText)))), comment.subComments.map((subcomment, idx) => {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        onClick: () => {\n          setSelectedPost({ ...post,\n            files: post.uploadedRelevantFiles,\n            index\n          }); // set slight delay to allow previous logic to load\n\n          setTimeout(() => {\n            setPostPaneOpenState(true);\n          }, 375);\n        },\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"other-msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"img-50 img-fluid m-r-20 rounded-circle\",\n        alt: \"\",\n        src: two,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 69\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"f-w-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 81\n        }\n      }, subcomment.poster, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 127\n        }\n      }, \" \", moment(subcomment.date).fromNow(), \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-reply font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 170\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 73\n        }\n      }, subcomment.comment, \" \")))));\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      setSelectedPost({ ...post,\n        files: post.uploadedRelevantFiles,\n        index\n      }); // set slight delay to allow previous logic to load\n\n      setTimeout(() => {\n        setPostPaneOpenState(true);\n      }, 375);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 66\n    }\n  }, \"More Details/Comments & Complete Information\"))))))))));\n};\n\nconst RenderPopoverEmojiLogicMainPostings = _ref3 => {\n  let {\n    user,\n    relatedPost,\n    userData,\n    index,\n    reactions,\n    targetAndPopState,\n    setPopoverState,\n    popoverState,\n    handleRespondEmoji\n  } = _ref3;\n  const [stateCount, setStateCount] = useState(0);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    let count = 0; // loop over reactions\n\n    for (const key in reactions) {\n      const reactionOutcome = reactions[key]; // check if emoji is already added - if not... add it!\n\n      if (reactionOutcome > 0) {\n        count++;\n      }\n    }\n\n    setStateCount(count);\n    setReady(true);\n  }, []);\n\n  const renderMainContentPopover = () => {\n    const closePopover = targetAndPopState => {\n      setPopoverState(prevState => {\n        return { ...prevState,\n          [targetAndPopState]: false\n        };\n      });\n    };\n\n    if (ready === true) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        placement: \"right\",\n        isOpen: popoverState[targetAndPopState],\n        target: `post${index}`,\n        toggle: () => {\n          closePopover(targetAndPopState);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }\n      }, \"Current Post Reaction's (\", stateCount, \" total reaction type's)\"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseLeave: () => {\n          closePopover(targetAndPopState);\n        },\n        className: \"mouse-exit-close-popover-emojis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"sunglasses\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/sunglasses.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"steaming\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/steaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"tearsOfJoy\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/tearsOfJoy.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"vomitting\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/vomitting.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"partying\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/partying.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"course-emoji-col\",\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"screaming\", relatedPost, closePopover, targetAndPopState, userData, user),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../assets/gifs/screaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 45\n        }\n      }))))))));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }\n  }, renderMainContentPopover());\n};\n\nexport default {\n  TimelinePostsMappedHelper,\n  renderProfilePicVideo,\n  renderProfilePicVideoPost\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/helpers/misc/index.js"],"names":["React","Fragment","useEffect","useState","Row","Col","Card","CardBody","Button","Media","Input","InputGroup","InputGroupAddon","Popover","PopoverBody","PopoverHeader","Form","Tooltip","moment","ReactPlayer","MoreVertical","two","Picker","axios","useForm","NotificationManager","CommentsIndividualPostHelper","helpers","renderProfilePicVideo","renderProfilePicVideoPost","renderCustomCommentImageVideo","RenderEmojiLogic","homepageCheckMessageMeetsCritera","handleRespondEmoji","emojiName","relatedPost","closePopover","targetAndPopState","userData","user","console","log","config","reaction","reactorID","uniqueId","posterID","relatedPostID","post","process","env","REACT_APP_BASE_URL","then","res","data","message","success","info","error","catch","err","renderGridImageOrVideo","file","bottom","setSelectedPost","setPostPaneOpenState","index","setSelectedIndex","type","includes","files","uploadedRelevantFiles","setTimeout","REACT_APP_ASSET_LINK","link","require","RenderCertainImageDisplay","length","paddingTop","TimelinePostsMappedHelper","comments","setCommentsState","setPopoverState","popover","popoverIDTarget","showEmojiPicker","setShowEmojiPicker","previewOpen","setPreviewState","register","handleSubmit","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","openPopoverPane","prevState","addEmoji","emoji","text","homepageComment","native","shouldValidate","renderFormErrors","onSubmitForm","formData","configuration","id","specificPostId","profileID","comment","firstName","lastName","accountType","mostRecentProfilePicVideo","profilePicsVideos","updatedComments","date","fromNow","paddingBottom","title","description","reactions","check","e","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","placeholder","marginLeft","position","right","top","marginTop","slice","map","idxxxxxx","posterPicOrVideo","posterName","commentText","subComments","subcomment","idx","poster","RenderPopoverEmojiLogicMainPostings","popoverState","stateCount","setStateCount","ready","setReady","count","key","reactionOutcome","renderMainContentPopover"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Media, Input, InputGroup, InputGroupAddon, Popover, PopoverBody, PopoverHeader, Form, Tooltip } from 'reactstrap';\nimport moment from \"moment\";\nimport ReactPlayer from 'react-player';\nimport { MoreVertical } from \"react-feather\";\nimport two from '../../../../../../../assets/images/job-search/6.jpg';\nimport \"./styles.css\";\nimport { Picker } from 'emoji-mart';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { NotificationManager } from 'react-notifications';\nimport CommentsIndividualPostHelper from \"../viewPostFileContents/helpers/renderComments/otherHelpers/reactHookForm.js\";\nimport helpers from \"./miscHelpers/helpers.js\";\n\n\nconst {\n    renderProfilePicVideo, \n    renderProfilePicVideoPost, \n    renderCustomCommentImageVideo, \n    RenderEmojiLogic\n} = helpers;\n\n\nconst homepageCheckMessageMeetsCritera = CommentsIndividualPostHelper().homepageCheckMessageMeetsCritera;\n\n\nconst handleRespondEmoji = (emojiName, relatedPost, closePopover, targetAndPopState, userData, user) => {\n    console.log(\"emojiName\", emojiName);\n\n    const config = {\n        reaction: emojiName,\n        reactorID: userData.uniqueId,\n        posterID: user.uniqueId, \n        relatedPostID: relatedPost.uniqueId\n    }\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/react/posting/hacker/profile/individual/specific/post/main/mapped`, config).then((res) => {\n        if (res.data.message === \"Successfully reacted to post!\") {\n            console.log(res.data);\n\n            const { post } = res.data;\n\n            NotificationManager.success(\"You've successfully reacted with an emoji to this user's specific post! If you'd like to remove this reaction, simply react with any of the emoji's again & it'll revoke your response.\", \"Successfully reacted to post!\", 4750);\n\n            relatedPost = post;\n\n        } else if (res.data.message === \"Successfully REMOVED reaction to post!\") {\n            const { post } = res.data;\n\n            relatedPost = post;\n\n            NotificationManager.info(\"We've successfully REMOVED your previous reaction as you've already reacted to this post, if you didn't mean to remove this reaction, simply react with same emoji again...\", \"Successfully removed previous reaction!\", 4750);\n        } else {\n            console.log(\"Err\", res.data);\n\n            NotificationManager.error(\"An error occurred while attempting to react to this specific post with the appropriate emoji, Try again & contact support if the issue persists.\", \"Error reacting to post!\", 4750);\n        }\n    }).catch((err) => {\n        console.log(err);\n    })\n\n    // const configuration = {\n    //     emojiName,\n    //     id: userData.uniqueId,\n    //     listingId: data.uniqueId,\n    //     commentID: comment.id,\n    //     comment\n    // };\n\n    // axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/employer/listing`, configuration).then((res) => {\n    //     if (res.data.message === \"Successfully reacted to comment!\") {\n    //         console.log(res.data);\n\n    //         const { listing, commenttt } = res.data;\n\n    //         NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n\n    //         const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n    //         const copy = [...comments];\n    //         copy[indexed] = commenttt;\n            \n    //         setCommentsState(copy);\n\n    //         closePopover(targetAndPopState);\n    //     } else if (res.data.message === \"You've already reacted to this comment! Since you've previously reacted, we're removing your existing response so you can update it!\") {\n    //         const { listing, commenttt } = res.data;\n\n    //         NotificationManager.warning(res.data.message, \"Successfully redacted your existing response!\", 4500);\n\n    //         const indexed = comments.findIndex(x => x.id === commenttt.id);\n\n    //         const copy = [...comments];\n    //         copy[indexed] = commenttt;\n            \n    //         setCommentsState(copy);\n\n    //         closePopover(targetAndPopState);\n    //     } else {\n    //         console.log(\"Err\", res.data);\n    //     }\n    // }).catch((err) => {\n    //     console.log(err);\n    // })\n}\nconst renderGridImageOrVideo = (file, bottom, setSelectedPost, post, setPostPaneOpenState, index, setSelectedIndex) => {\n    if (file.type.includes(\"video\")) {\n        // video logic\n        return (\n            <Media onClick={() => {\n                setSelectedIndex(index);\n                // set the selected modal/pane post\n                setSelectedPost({\n                    ...post,\n                    files: post.uploadedRelevantFiles\n                });\n                // delay so selectedPost loads before/prior then display\n                setTimeout(() => {\n                    setPostPaneOpenState(true);\n                }, 375);\n            }} className={bottom === true ? \"maxed-out-post-video-custom-wrapper-bottom\" : \"maxed-out-post-video-custom-wrapper\"}>\n                <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} height={\"100%\"} className={\"maxed-out-post-video-custom\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n            </Media>\n        );\n    } else if (file.type.includes(\"image\")) {\n        // image logic\n        return (\n            <Fragment>\n                <div className={bottom === true ? \"align-post-content-picture-bottom-item\" : \"align-post-content-picture\"}>\n                    <Media onClick={() => {\n                        setSelectedIndex(index);\n                        // set the selected modal/pane post\n                        setSelectedPost({\n                            ...post,\n                            files: post.uploadedRelevantFiles\n                        });\n                        // delay so selectedPost loads before/prior then display\n                        setTimeout(() => {\n                            setPostPaneOpenState(true);\n                        }, 375);\n                    }} className=\"post-image-resized\" alt=\"post-picture\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                </div>\n            </Fragment>\n        );\n    } else {\n        console.log(\"NEITHER MATCH.\");\n\n        // image logic\n        return (\n            <Fragment>\n                <div className={bottom === true ? \"align-post-content-picture-bottom-item\" : \"align-post-content-picture\"}>\n                    <Media onClick={() => {\n                        setSelectedIndex(index);\n                        // set the selected modal/pane post\n                        setSelectedPost({\n                            ...post,\n                            files: post.uploadedRelevantFiles\n                        });\n                        // delay so selectedPost loads before/prior then display\n                        setTimeout(() => {\n                            setPostPaneOpenState(true);\n                        }, 375);\n                    }} className=\"post-image-resized\" alt=\"post-picture\" src={require(\"../../../../../../../assets/images/cannot-display-file.png\")} />\n                </div>\n            </Fragment>\n        );\n    }\n}\nconst RenderCertainImageDisplay = ({ setSelectedIndex, setPostPaneOpenState, files, setSelectedPost, post }) => {\n    switch (files.length) {\n        case 0:\n            return null;\n            break;\n        case 1:\n            return (\n                <Fragment>\n                    {renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                </Fragment>\n            );\n            break;\n        case 2:\n            return (\n                <Fragment>\n                    <Row>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                </Fragment>\n            );\n            break;\n        case 3:\n            return (\n                <Fragment>\n                    <Row>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            {renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                    <Row style={{ paddingTop: \"3px\" }}>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[1], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                </Fragment>\n            );\n            break;\n        case 4:\n            return (\n                <Fragment>\n                    <Row>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                    <Row style={{ paddingTop: \"3px\" }}>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[3], true, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                </Fragment>\n            );\n            break;\n        case 5:\n            return (\n                <Fragment>\n                    <Row>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[0], false, setSelectedPost, post, setPostPaneOpenState, 0, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            {renderGridImageOrVideo(files[1], false, setSelectedPost, post, setPostPaneOpenState, 1, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                    <Row style={{ paddingTop: \"3px\" }}>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                            {renderGridImageOrVideo(files[2], true, setSelectedPost, post, setPostPaneOpenState, 2, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                            {renderGridImageOrVideo(files[3], true, setSelectedPost, post, setPostPaneOpenState, 3, setSelectedIndex)}\n                        </Col>\n                        <Col className={\"image-render-col-custom\"} sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\">\n                            {renderGridImageOrVideo(files[4], true, setSelectedPost, post, setPostPaneOpenState, 4, setSelectedIndex)}\n                        </Col>\n                    </Row>\n                </Fragment>\n            );\n            break;\n            \n        default:\n            return null;\n            break;\n    }\n}\nconst TimelinePostsMappedHelper = ({ comments, setCommentsState, setSelectedIndex, setPostPaneOpenState, setSelectedPost, post, index, user, userData, setPopoverState, popover, popoverIDTarget }) => {\n    // post.uploadedRelevantFiles.length\n    const [ showEmojiPicker, setShowEmojiPicker ] = useState(false);\n    const [ previewOpen, setPreviewState ] = useState(false);\n\n    const { register, handleSubmit, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n\n    useEffect(() => {\n        setCommentsState(post.comments);\n    }, []);\n\n    useEffect(() => {\n        console.log(\"comments update\");\n\n        setCommentsState(comments);\n    }, [comments]);\n    \n    const openPopoverPane = () => {\n\n        setPopoverState(prevState => {\n            return {\n                ...prevState,\n                [popoverIDTarget]: true\n            }\n        });\n    }\n    const addEmoji = (emoji) =>  {\n        const text = `${currentValues.homepageComment}${emoji.native}`;\n        // close picker\n        setShowEmojiPicker(false);\n        // update homepageComment string value\n        setValue(\"homepageComment\", text, { shouldValidate: false });\n    }\n    const renderFormErrors = (errors) => {\n        console.log(\"renderFormErrors\", errors);\n    }\n    const onSubmitForm = (formData) => {\n        console.log(\"onSubmitForm submitted form properly...!:\", formData);\n\n        setPreviewState(false);\n\n        const { homepageComment } = formData;\n\n        const configuration = {\n            id: userData.uniqueId,\n            specificPostId: post.uniqueId,\n            profileID: user.uniqueId,\n            comment: homepageComment,\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            accountType: userData.accountType,\n            mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/post/new/comment/hacker/timeline/profile/individual`, configuration).then((res) => {\n            if (res.data.message === \"Successfully posted comment!\") {\n                console.log(res.data);\n\n                const { updatedComments } = res.data;\n\n                setValue(\"homepageComment\", \"\", { shouldValidate: false });\n\n                setCommentsState(updatedComments);\n\n                NotificationManager.success(\"Successfully posted your desired comment, we've successfully updated this listing data & notified the owner of these changes!\", \"Successfully posted a new comment!\", 4750);\n\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    return (\n        <Fragment key={index}>\n        <Form onSubmit={handleSubmit(onSubmitForm, (errors) => renderFormErrors(errors))}>\n            <Col sm=\"12\">\n                <Card className={\"add-shadow-general-card-profile\"}>\n                    <CardBody>\n                        <div className=\"new-users-social\">\n                            <Media>\n                                {renderProfilePicVideoPost(user.profilePicsVideos)}\n                                <Media body>\n                                    <h6 className=\"mb-0 f-w-700\">{`${user.firstName} ${user.lastName}`}</h6>\n                                    <p>Posted {moment(post.date).fromNow()}</p>\n                                </Media><span className=\"pull-right mt-0\"><MoreVertical /></span>\n                            </Media>\n                        </div>\n                        <div style={{ paddingBottom: \"12.5px\" }} className=\"timeline-content\">\n                            <p className={\"post-title-main\"}>\n                                {post.title}\n                            </p>\n                        </div>\n                        <RenderCertainImageDisplay setSelectedIndex={setSelectedIndex} setPostPaneOpenState={setPostPaneOpenState} post={post} setSelectedPost={setSelectedPost} files={post.uploadedRelevantFiles} />\n                        <div className=\"timeline-content\">\n                            <p>\n                                {post.description}\n                            </p>\n                            <div className={\"emoji-response-post\"}>\n                                <img onClick={() => openPopoverPane()} id={`post${index}`} src={require(\"../../../../../../../assets/gifs/thoughts.gif\")} className={\"emoji-response-icon\"} />\n                            </div>\n                            <div style={{ paddingTop: \"17.5px\" }} className=\"text-center\"><a onClick={() => {\n                                setSelectedPost({\n                                    ...post,\n                                    files: post.uploadedRelevantFiles,\n                                    index\n                                });\n                                // set slight delay to allow previous logic to load\n                                setTimeout(() => {\n                                    setPostPaneOpenState(true)\n                                }, 375)\n                            }}>More Details/Comments & Complete Information</a></div>\n                            <RenderPopoverEmojiLogicMainPostings user={user} index={index} handleRespondEmoji={handleRespondEmoji} userData={userData} relatedPost={post} reactions={post.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                            <div className=\"like-content custom-like-response-zone\"><span onClick={() => {\n                                setSelectedPost({\n                                    ...post,\n                                    files: post.uploadedRelevantFiles,\n                                    index\n                                });\n                                // set slight delay to allow previous logic to load\n                                setTimeout(() => {\n                                    setPostPaneOpenState(true)\n                                }, 375)\n                            }} className=\"pull-right comment-number\"><span>{\"20\"} </span><span onClick={() => {\n                                setSelectedPost({\n                                    ...post,\n                                    files: post.uploadedRelevantFiles,\n                                    index\n                                });\n                                // set slight delay to allow previous logic to load\n                                setTimeout(() => {\n                                    setPostPaneOpenState(true)\n                                }, 375)\n                            }}><i className=\"fa fa-share-alt mr-0\"></i></span></span><span className=\"pull-right comment-number\"><span>{comments.length} </span><span><i className=\"fa fa-comments-o\"></i></span></span></div>\n                            <Row>\n                                <RenderEmojiLogic reactions={post.reactions} comments={comments} />\n                            </Row>\n                            <Row id={\"create-spacer-comment-box-profile-individual\"}>\n                                <div className=\"comments-box\">\n                                    <Media>\n                                        <Media onClick={() => {\n                                            setSelectedPost({\n                                                ...post,\n                                                files: post.uploadedRelevantFiles,\n                                                index\n                                            });\n                                            // set slight delay to allow previous logic to load\n                                            setTimeout(() => {\n                                                setPostPaneOpenState(true)\n                                            }, 375)\n                                        }} className=\"img-50 img-fluid m-r-20\" alt=\"\" src={require(\"../../../../../../../assets/gifs/typing-black.gif\")} />\n                                        <Media body>\n                                            <InputGroup className=\"text-box\">\n                                                <Input {...homepageCheckMessageMeetsCritera.check(setError, register, clearErrors, \"homepageComment\")} onChange={(e) => {\n\n                                                    homepageCheckMessageMeetsCritera.onChange(e, \"homepageComment\", setValue);\n\n                                                    const caret = e.target.selectionStart;\n                                                    const element = e.target;\n                                                    window.requestAnimationFrame(() => {\n                                                        element.selectionStart = caret\n                                                        element.selectionEnd = caret\n                                                    })\n                                                }} value={currentValues.homepageComment} name={\"homepageComment\"} className={\"form-control input-txt-bx write-comment-post\"} type={\"text\"} placeholder={homepageCheckMessageMeetsCritera.placeholder} />\n                                                <Tooltip placement={\"top\"} isOpen={previewOpen} target={\"inputPreviewText\"} toggle={() => setPreviewState(prevState => !prevState)}>\n                                                    {currentValues.homepageComment}\n                                                </Tooltip>\n                                                <InputGroupAddon id={\"inputPreviewText\"} onMouseEnter={() => setPreviewState(prevState => !prevState)} style={{ marginLeft: \"17.5px\" }} addonType=\"append\">\n                                                    <Button type={\"submit\"} className={\"btn-square-secondary\"} color={\"secondary\"}>Submit Comment!</Button>\n                                                </InputGroupAddon>\n                                                <InputGroupAddon addonType=\"append\">\n                                                    <i onClick={() => setShowEmojiPicker(!showEmojiPicker)} className=\"fa fa-smile-o fa-3x restyle-emoji-activator-icon\" aria-hidden=\"true\"></i>\n                                                    {showEmojiPicker === true ? (\n                                                            <Picker style={{ position: \"absolute\", right: \"40px\", top: \"-375px\" }} set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                                                    ) : null}\n                                                </InputGroupAddon>\n                                            </InputGroup>\n                                            {errors.homepageComment ? <span style={{ marginTop: \"3.5px\" }} className=\"span-tooltip\">{errors.homepageComment.message}</span> : null}\n                                        </Media>\n                                    </Media>\n                                </div>\n                            </Row>\n                        </div>\n                        <Row className={\"custom-profile-comments-row-override\"}>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <div className=\"social-chat\">\n                                    {comments.slice(0, 4).map((comment, idxxxxxx) => {\n                                        return (\n                                            <Fragment key={idxxxxxx}>\n                                                <div onClick={() => {\n                                                    setSelectedPost({\n                                                        ...post,\n                                                        files: post.uploadedRelevantFiles,\n                                                        index\n                                                    });\n                                                    // set slight delay to allow previous logic to load\n                                                    setTimeout(() => {\n                                                        setPostPaneOpenState(true)\n                                                    }, 375)\n                                                }} className=\"your-msg your-msg-custom-profile-mapped\">\n                                                    <Media>\n                                                        {renderCustomCommentImageVideo(comment.posterPicOrVideo)}\n                                                        <Media body><span className=\"f-w-600\">{comment.posterName} <span> {moment(comment.date).fromNow()} <i className=\"fa fa-reply font-primary\"></i></span></span>\n                                                            <p>{comment.commentText}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </div>\n                                                {comment.subComments.map((subcomment, idx) => {\n                                                    return (\n                                                        <Fragment onClick={() => {\n                                                            setSelectedPost({\n                                                                ...post,\n                                                                files: post.uploadedRelevantFiles,\n                                                                index\n                                                            });\n                                                            // set slight delay to allow previous logic to load\n                                                            setTimeout(() => {\n                                                                setPostPaneOpenState(true)\n                                                            }, 375)\n                                                        }} key={idx}>\n                                                            <div className=\"other-msg\">\n                                                                <Media>\n                                                                    <Media className=\"img-50 img-fluid m-r-20 rounded-circle\" alt=\"\" src={two} />\n                                                                    <Media body><span className=\"f-w-600\">{subcomment.poster} <span> {moment(subcomment.date).fromNow()} <i className=\"fa fa-reply font-primary\"></i></span></span>\n                                                                        <p>{subcomment.comment} </p>\n                                                                    </Media>\n                                                                </Media>\n                                                            </div>\n                                                        </Fragment>\n                                                    );\n                                                })}\n                                            </Fragment>\n                                        );\n                                    })}\n                                    <div className=\"text-center\"><a onClick={() => {\n                                        setSelectedPost({\n                                            ...post,\n                                            files: post.uploadedRelevantFiles,\n                                            index\n                                        });\n                                        // set slight delay to allow previous logic to load\n                                        setTimeout(() => {\n                                            setPostPaneOpenState(true)\n                                        }, 375)\n                                    }}>More Details/Comments & Complete Information</a></div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Col>\n            </Form>\n        </Fragment>\n    );\n}\n\nconst RenderPopoverEmojiLogicMainPostings = ({ user, relatedPost, userData, index, reactions, targetAndPopState, setPopoverState, popoverState, handleRespondEmoji }) => {\n\n    const [stateCount, setStateCount] = useState(0);\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        let count = 0;\n        // loop over reactions\n        for (const key in reactions) {\n            const reactionOutcome = reactions[key];\n\n            // check if emoji is already added - if not... add it!\n            if (reactionOutcome > 0) {\n                count++;\n            }\n        }\n        setStateCount(count);\n        setReady(true);\n    }, []);\n\n    const renderMainContentPopover = () => {\n        const closePopover = (targetAndPopState) => {\n            setPopoverState(prevState => {\n                return {\n                    ...prevState,\n                    [targetAndPopState]: false\n                }\n            });\n        }\n        if (ready === true) {\n            return (\n                <Fragment>\n                    <Popover placement=\"right\" isOpen={popoverState[targetAndPopState]} target={`post${index}`} toggle={() => {\n                        closePopover(targetAndPopState);\n                    }}>\n                        <PopoverHeader>Current Post Reaction's ({stateCount} total reaction type's)</PopoverHeader>\n                        <PopoverBody>\n                            <div onMouseLeave={() => {\n                                closePopover(targetAndPopState);\n                            }} className={\"mouse-exit-close-popover-emojis\"}>\n                                <Row>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"sunglasses\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/sunglasses.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"steaming\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/steaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"tearsOfJoy\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/tearsOfJoy.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"vomitting\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/vomitting.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"partying\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/partying.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col className={\"course-emoji-col\"} sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"screaming\", relatedPost, closePopover, targetAndPopState, userData, user)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../assets/gifs/screaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </PopoverBody>\n                    </Popover>\n                </Fragment>\n            );\n        } else {\n            return null;\n        }\n    }\n    return (\n        <Fragment>\n            {renderMainContentPopover()}\n        </Fragment>\n    );\n}\n\nexport default {\n    TimelinePostsMappedHelper, \n    renderProfilePicVideo,\n    renderProfilePicVideoPost\n};"]},"metadata":{},"sourceType":"module"}