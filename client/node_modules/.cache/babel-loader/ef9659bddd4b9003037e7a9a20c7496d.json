{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js\";\nimport React, { Fragment, useState, useRef } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType\n} = helpers;\n\nconst SheetHelperPaneUploadCourseContent = _ref => {\n  let {\n    isOpen,\n    setIsOpen,\n    setProgress,\n    shiftCoreStyles,\n    disableBodyScroll,\n    clearAllBodyScrollLocks\n  } = _ref;\n  const dropzoneRef = useRef(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [showInitial, setShowInitialState] = useState(true);\n  const [videoFile, setVideoFileState] = useState(null);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered-both-ways\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, text), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleDescriptionChange = e => {\n    const value = e.target.value;\n    setDescription(value);\n  };\n\n  const handleAdditionFileDescription = () => {\n    console.log(\"handleAdditionFileDescription clicked...\");\n    const newlyAddedData = {\n      description,\n      video: videoFile,\n      id: uuid(),\n      systemDate: Date.now(),\n      date: new Date(),\n      formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n      comments: [],\n      likes: 0,\n      dislikes: 0\n    };\n    closeModalRelated();\n  };\n\n  const closeModalRelated = () => {\n    // image upload logic CLEAR existing state\n    setMetaFileData(null); // image upload logic CLEAR existing state\n\n    setFileReadyStatus(false); // image upload logic CLEAR existing state\n\n    setCurrentUploadFileStatus(null); // allow background clicking again\n\n    shiftCoreStyles(false); // close modal\n\n    setIsOpen(false); // clear scroll locks as PANE is closed now...\n\n    clearAllBodyScrollLocks();\n  };\n\n  const handleSubmissionAndCloseRegardless = () => {\n    closeModalRelated();\n  };\n\n  console.log(\"filePathData\", filePathData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handleSubmissionAndCloseRegardless(),\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger\",\n    size: \"md-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, \"Close Pane (Data will NOT be preserved)\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 49\n    }\n  }, \"This is the form that is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 78\n    }\n  }, \"primarily\"), \" used to upload/change content related to \\\"course content\\\". Use the form below to upload video's to each course \\\"clip/section\\\" and enter a description if you'd like...\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-video-overlay-courses-upload centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 49\n    }\n  }, currentFileSelectedUpload === null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-boxshadow-courses centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 91\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"header-no-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 155\n    }\n  }, \"Current NO file(s) is selected/uploaded - please select a file.\")) : null, /*#__PURE__*/React.createElement(ReactPlayer, {\n    controls: true,\n    playIcon: true,\n    playing: false,\n    loop: false,\n    volume: 1,\n    width: \"100%\",\n    height: \"100%\",\n    url: filePathData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 61\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState));\n    },\n    className: \"shadow-courses-dropzone\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 49\n    }\n  }), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 71\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      setCurrentFilePathData(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 57\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 49\n    }\n  }, \"Course Section/Segment Description\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => handleDescriptionChange(e),\n    value: description,\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: \"Enter a description for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"75%\"\n    },\n    onClick: () => handleAdditionFileDescription(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 49\n    }\n  }, \"Submit New Information/Details & File(s)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles\n})(SheetHelperPaneUploadCourseContent);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Media","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","Dropzone","_","connect","shiftCoreStyles","ReactPlayer","uuid","moment","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setProgress","disableBodyScroll","clearAllBodyScrollLocks","dropzoneRef","changeOptions","setChangeOptions","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","description","setDescription","showInitial","setShowInitialState","videoFile","setVideoFileState","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","URL","createObjectURL","handleDescriptionChange","value","handleAdditionFileDescription","newlyAddedData","video","systemDate","Date","now","date","formattedDate","format","comments","likes","dislikes","closeModalRelated","handleSubmissionAndCloseRegardless","margin","width","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","marginTop","remove","mapStateToProps","state","userData","auth","courseData","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setProgress, shiftCoreStyles, disableBodyScroll, clearAllBodyScrollLocks }) => {\n    const dropzoneRef = useRef(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ description, setDescription ] = useState(\"\");\n    const [ showInitial, setShowInitialState ] = useState(true);\n    const [ videoFile, setVideoFileState ] = useState(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    {text}\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleDescriptionChange = (e) => {\n        const value = e.target.value;\n\n        setDescription(value);\n    }\n    const handleAdditionFileDescription = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        const newlyAddedData = {\n            description,\n            video: videoFile,\n            id: uuid(),\n            systemDate: Date.now(),\n            date: new Date(),\n            formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n            comments: [],\n            likes: 0,\n            dislikes: 0\n        }\n\n        closeModalRelated();\n    }\n    const closeModalRelated = () => {\n        // image upload logic CLEAR existing state\n        setMetaFileData(null);\n        // image upload logic CLEAR existing state\n        setFileReadyStatus(false);\n        // image upload logic CLEAR existing state\n        setCurrentUploadFileStatus(null);\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // close modal\n        setIsOpen(false);\n        // clear scroll locks as PANE is closed now...\n        clearAllBodyScrollLocks();\n    }\n    const handleSubmissionAndCloseRegardless = () => {\n        closeModalRelated();\n    }\n    console.log(\"filePathData\", filePathData);\n    return (\n        <Fragment>\n            <div id=\"sheet-container\">\n                <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row style={{ margin: \"17.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button style={{ width: \"100%\" }} onClick={() => handleSubmissionAndCloseRegardless()} className=\"btn-square-danger\" outline color=\"danger\" size=\"md-2x\">Close Pane (Data will NOT be preserved)</Button>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Row>\n                                <Card>\n                                    <CardBody>\n                                        <Row style={{ marginBottom: \"20px\" }}>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h3>This is the form that is <strong>primarily</strong> used to upload/change content related to \"course content\". Use the form below to upload video's to each course \"clip/section\" and enter a description if you'd like...</h3>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <div className={\"add-video-overlay-courses-upload centered-both-ways\"}>\n                                                    {currentFileSelectedUpload === null ? <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div> : null}\n                                                    <ReactPlayer controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                                                </div>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    getFilesFromEvent={null}\n                                                    onSubmit={onSubmitHelper}\n                                                    accept=\"video/*\"\n                                                    SubmitButtonComponent={(data) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    className={\"shadow-courses-dropzone\"}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 350 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                                {fileReady === true ? <Fragment>\n                                                    <hr className=\"secondary-hr\" />\n                                                    <div className=\"centered-both-ways\">\n                                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                            setMetaFileData(null);\n                                                            setFileReadyStatus(false);\n                                                            setCurrentUploadFileStatus(null);\n                                                            setCurrentFilePathData(null);\n\n                                                            changeOptions.remove();\n                                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                    </div>\n                                                </Fragment> : null}\n                                            </Col>\n                                            <hr style={{ marginTop: \"25px\" }} />\n                                            <FormGroup className=\" m-form__group\">\n                                                <Label>Course Section/Segment Description</Label>\n                                                <InputGroup>\n                                                    <Input onChange={(e) => handleDescriptionChange(e)} value={description} className=\"form-control\" rows={6} type=\"textarea\" placeholder={\"Enter a description for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}/>\n                                                </InputGroup>\n                                            </FormGroup>\n                                            <hr />\n                                            <div className={\"centered-both-ways\"}>\n                                                <Button outline style={{ width: \"75%\" }} onClick={() => handleAdditionFileDescription()} className=\"btn-square-info\" color=\"info\" size=\"md\">Submit New Information/Details & File(s)</Button>\n                                            </div>\n                                        </Row>\n                                        <hr />\n                                    </CardBody>\n                                </Card>\n                            </Row>\n                        </Sheet.Content>\n                        </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet>\n            </div>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles })(SheetHelperPaneUploadCourseContent);"]},"metadata":{},"sourceType":"module"}