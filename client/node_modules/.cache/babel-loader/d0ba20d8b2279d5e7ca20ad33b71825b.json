{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/Blog/createNewBlog/createANewBlog.js\";\nimport React, { Fragment, useState, useMemo } from 'react';\nimport { Container, Col, Row, Card, CardHeader, CardFooter, CardBody, Button, Input, FormGroup, InputGroupAddon, InputGroup, Label, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport { NotificationManager } from 'react-notifications';\n\nconst CreateANewBlogPostHelper = props => {\n  const [data, setData] = useState({\n    title: \"\",\n    subtitle: \"\",\n    body: \"\"\n  });\n  const autofocusNoSpellcheckerOptions = useMemo(() => {\n    return {\n      autofocus: false,\n      spellChecker: false\n    };\n  }, []);\n\n  const handleSubmissionAndCreate = () => {\n    const {\n      title,\n      subtitle,\n      body\n    } = data;\n\n    if (typeof title !== \"undefined\" && title.length >= 25 && typeof subtitle !== \"undefined\" && subtitle.length >= 25 && typeof body !== \"undefined\" && body.length >= 100) {\n      confirmAlert({\n        title: 'Ready to post this blog post(ing)?',\n        message: `Are you sure you're ready to post this specific blog post? If so, please click on 'continue' to proceed posting..`,\n        buttons: [{\n          label: 'Yes, Continue Posting!',\n          onClick: () => {\n            console.log(\"handleSubmissionAndCreate ran/clicked..\");\n          }\n        }, {\n          label: 'No, Cancel/Revise.',\n          onClick: () => {\n            console.log(\"Canelled\");\n          }\n        }]\n      });\n    } else {\n      NotificationManager.warning(\"You MUST enter AT-LEAST 25 character's for both the 'title' and 'subtitle' and AT-LEAST 100 character's for the 'body/content' section.\", \"Double check your character count!\", 4750);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer-top-unauth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-r-info b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"new-blog-post-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, \"Create a new blog post \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 97\n    }\n  }, \"(***ADMIN'S ONLY***)\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 57\n    }\n  }, \"Any attempts\"), \" from any \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 96\n    }\n  }, \"unauthorized\"), \" user's will automatically be rejected. If you found this page by accident or for whatever other reasons, congratulations. Please be nice and leave us alone, thanks :)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer-top-auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, \"Enter the MAIN post \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 72\n    }\n  }, \"title\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 86\n    }\n  }, \"Post Title\")), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setData(prevState => {\n      return { ...prevState,\n        title: e.target.value\n      };\n    }),\n    value: data.title,\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Enter a post 'title'..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }, \"Enter the post \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 67\n    }\n  }, \"sub-title\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 86\n    }\n  }, \"Sub-title\")), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setData(prevState => {\n      return { ...prevState,\n        subtitle: e.target.value\n      };\n    }),\n    value: data.subtitle,\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Enter a post 'sub-title'..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, \"Enter the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 58\n    }\n  }, \"actual\"), \" post content (actual content)\"), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"post-content-custom\",\n    placeholder: `## Summary:\n                                                [Add summary of the vulnerability]\n\n                                                ## Steps to Reproduce:\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\n\n                                                1. [add step]\n                                                2. [add step]\n                                                3. [add step]\n\n                                                ## Impact\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\n                                                How does the issue affect the business or the user? \n                                                What can the attacker get through the issue? \n                                                Can the issue be escalated further? If so, how?\n\n                                                ## Mitigation\n                                                [Please give a brief description of how the bug could be fixed.]\n\n\n                                                ## Supporting Material/References:\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\n\n                                                * [attachment / reference]\n                                            `,\n    onChange: value => setData(prevState => {\n      return { ...prevState,\n        body: value\n      };\n    }),\n    value: data.body,\n    options: autofocusNoSpellcheckerOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    onClick: handleSubmissionAndCreate,\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    color: \"success-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"Submit New Blog Post & Continue\"))))))));\n};\n\nexport default CreateANewBlogPostHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/Blog/createNewBlog/createANewBlog.js"],"names":["React","Fragment","useState","useMemo","Container","Col","Row","Card","CardHeader","CardFooter","CardBody","Button","Input","FormGroup","InputGroupAddon","InputGroup","Label","InputGroupText","SimpleMDE","confirmAlert","NotificationManager","CreateANewBlogPostHelper","props","data","setData","title","subtitle","body","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleSubmissionAndCreate","length","message","buttons","label","onClick","console","log","warning","color","e","prevState","target","value","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useMemo } from 'react';\nimport { Container, Col, Row, Card, CardHeader, CardFooter, CardBody, Button, Input, FormGroup, InputGroupAddon, InputGroup, Label, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { confirmAlert } from 'react-confirm-alert'; \nimport { NotificationManager } from 'react-notifications';\n\nconst CreateANewBlogPostHelper = (props) => {\n    const [ data, setData ] = useState({\n        title: \"\",\n        subtitle: \"\",\n        body: \"\"\n    })\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        }\n    }, []);\n\n    const handleSubmissionAndCreate = () => {\n        const { title, subtitle, body } = data;\n        if ((typeof title !== \"undefined\" && title.length >= 25) && (typeof subtitle !== \"undefined\" && subtitle.length >= 25) && (typeof body !== \"undefined\" && body.length >= 100)) {\n            confirmAlert({\n                title: 'Ready to post this blog post(ing)?',\n                message: `Are you sure you're ready to post this specific blog post? If so, please click on 'continue' to proceed posting..`,\n                buttons: [\n                  {\n                    label: 'Yes, Continue Posting!',\n                    onClick: () => {\n                        console.log(\"handleSubmissionAndCreate ran/clicked..\");\n                    }\n                  },\n                  {\n                    label: 'No, Cancel/Revise.',\n                    onClick: () => {\n                        console.log(\"Canelled\");\n                    }\n                  }\n                ]\n            });\n        } else {\n            NotificationManager.warning(\"You MUST enter AT-LEAST 25 character's for both the 'title' and 'subtitle' and AT-LEAST 100 character's for the 'body/content' section.\", \"Double check your character count!\", 4750);\n        }\n    }\n    return (\n        <Fragment>\n            <div className='spacer-top-unauth'>\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className={\"shadow\"}>\n                                <CardHeader className={\"b-r-info b-l-info\"}>\n                                    <h2 className='new-blog-post-header'>Create a new blog post <strong style={{ color: \"red\" }}>(***ADMIN'S ONLY***)</strong></h2>\n                                    <p className='lead'><strong>Any attempts</strong> from any <strong>unauthorized</strong> user's will automatically be rejected. If you found this page by accident or for whatever other reasons, congratulations. Please be nice and leave us alone, thanks :)</p>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className='spacer-top-auth'>\n                                        <FormGroup className=\" m-form__group\">\n                                            <Label>Enter the MAIN post <strong>title</strong></Label>\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Post Title\"}</InputGroupText></InputGroupAddon>\n                                                <Input onChange={(e) => setData(prevState => {\n                                                    return {\n                                                        ...prevState,\n                                                        title: e.target.value\n                                                    }\n                                                })} value={data.title} className=\"form-control\" type=\"text\" placeholder=\"Enter a post 'title'..\"/>\n                                            </InputGroup>\n                                        </FormGroup>\n                                        <FormGroup className=\" m-form__group\">\n                                            <Label>Enter the post <strong>sub-title</strong></Label>\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Sub-title\"}</InputGroupText></InputGroupAddon>\n                                                <Input onChange={(e) => setData(prevState => {\n                                                    return {\n                                                        ...prevState,\n                                                        subtitle: e.target.value\n                                                    }\n                                                })} value={data.subtitle} className=\"form-control\" type=\"text\" placeholder=\"Enter a post 'sub-title'..\"/>\n                                            </InputGroup>\n                                        </FormGroup>\n                                        <Label>Enter the <strong>actual</strong> post content (actual content)</Label>\n                                        <SimpleMDE\n                                            id=\"post-content-custom\"\n                                            placeholder={`## Summary:\n                                                [Add summary of the vulnerability]\n\n                                                ## Steps to Reproduce:\n                                                [Add details for how we can reproduce the issue. Please ensure reproducibility of the issue.]\n\n                                                1. [add step]\n                                                2. [add step]\n                                                3. [add step]\n\n                                                ## Impact\n                                                [This session is very important as it helps us to assess the severity of the issue. To help you with filling in this session, we think that answering the following questions may help:\n                                                How does the issue affect the business or the user? \n                                                What can the attacker get through the issue? \n                                                Can the issue be escalated further? If so, how?\n\n                                                ## Mitigation\n                                                [Please give a brief description of how the bug could be fixed.]\n\n\n                                                ## Supporting Material/References:\n                                                [list any additional material (e.g. screenshots, logs, etc.)]\n\n                                                * [attachment / reference]\n                                            `}\n                                            onChange={(value) => setData(prevState => {\n                                                return {\n                                                    ...prevState,\n                                                    body: value\n                                                }\n                                            })}\n                                            value={data.body}\n                                            options={autofocusNoSpellcheckerOptions}\n                                        />\n                                    </div>\n                                </CardBody>\n                                <CardFooter className={\"b-l-info b-r-info\"}>\n                                    <Button className='btn-square-success' onClick={handleSubmissionAndCreate} style={{ width: \"100%\" }} outline color={\"success-2x\"}>Submit New Blog Post & Continue</Button>\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default CreateANewBlogPostHelper;"]},"metadata":{},"sourceType":"module"}