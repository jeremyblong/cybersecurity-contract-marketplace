{"ast":null,"code":"'use strict';\n\nvar specialKeyCodeMap;\nspecialKeyCodeMap = {\n  9: 'tab',\n  27: 'esc',\n  37: 'left',\n  39: 'right',\n  13: 'enter',\n  38: 'up',\n  40: 'down'\n};\n\nvar _ = require('../common/utils.js');\n\nvar DOM = require('../common/dom.js');\n\nvar EventEmitter = require('./event_emitter.js'); // constructor\n// -----------\n\n\nfunction Input(o) {\n  var that = this;\n  var onBlur;\n  var onFocus;\n  var onKeydown;\n  var onInput;\n  o = o || {};\n\n  if (!o.input) {\n    _.error('input is missing');\n  } // bound functions\n\n\n  onBlur = _.bind(this._onBlur, this);\n  onFocus = _.bind(this._onFocus, this);\n  onKeydown = _.bind(this._onKeydown, this);\n  onInput = _.bind(this._onInput, this);\n  this.$hint = DOM.element(o.hint);\n  this.$input = DOM.element(o.input).on('blur.aa', onBlur).on('focus.aa', onFocus).on('keydown.aa', onKeydown); // if no hint, noop all the hint related functions\n\n  if (this.$hint.length === 0) {\n    this.setHint = this.getHint = this.clearHint = this.clearHintIfInvalid = _.noop;\n  } // ie7 and ie8 don't support the input event\n  // ie9 doesn't fire the input event when characters are removed\n  // not sure if ie10 is compatible\n\n\n  if (!_.isMsie()) {\n    this.$input.on('input.aa', onInput);\n  } else {\n    this.$input.on('keydown.aa keypress.aa cut.aa paste.aa', function ($e) {\n      // if a special key triggered this, ignore it\n      if (specialKeyCodeMap[$e.which || $e.keyCode]) {\n        return;\n      } // give the browser a chance to update the value of the input\n      // before checking to see if the query changed\n\n\n      _.defer(_.bind(that._onInput, that, $e));\n    });\n  } // the query defaults to whatever the value of the input is\n  // on initialization, it'll most likely be an empty string\n\n\n  this.query = this.$input.val(); // helps with calculating the width of the input's value\n\n  this.$overflowHelper = buildOverflowHelper(this.$input);\n} // static methods\n// --------------\n\n\nInput.normalizeQuery = function (str) {\n  // strips leading whitespace and condenses all whitespace\n  return (str || '').replace(/^\\s*/g, '').replace(/\\s{2,}/g, ' ');\n}; // instance methods\n// ----------------\n\n\n_.mixin(Input.prototype, EventEmitter, {\n  // ### private\n  _onBlur: function onBlur() {\n    this.resetInputValue();\n    this.$input.removeAttr('aria-activedescendant');\n    this.trigger('blurred');\n  },\n  _onFocus: function onFocus() {\n    this.trigger('focused');\n  },\n  _onKeydown: function onKeydown($e) {\n    // which is normalized and consistent (but not for ie)\n    var keyName = specialKeyCodeMap[$e.which || $e.keyCode];\n\n    this._managePreventDefault(keyName, $e);\n\n    if (keyName && this._shouldTrigger(keyName, $e)) {\n      this.trigger(keyName + 'Keyed', $e);\n    }\n  },\n  _onInput: function onInput() {\n    this._checkInputValue();\n  },\n  _managePreventDefault: function managePreventDefault(keyName, $e) {\n    var preventDefault;\n    var hintValue;\n    var inputValue;\n\n    switch (keyName) {\n      case 'tab':\n        hintValue = this.getHint();\n        inputValue = this.getInputValue();\n        preventDefault = hintValue && hintValue !== inputValue && !withModifier($e);\n        break;\n\n      case 'up':\n      case 'down':\n        preventDefault = !withModifier($e);\n        break;\n\n      default:\n        preventDefault = false;\n    }\n\n    if (preventDefault) {\n      $e.preventDefault();\n    }\n  },\n  _shouldTrigger: function shouldTrigger(keyName, $e) {\n    var trigger;\n\n    switch (keyName) {\n      case 'tab':\n        trigger = !withModifier($e);\n        break;\n\n      default:\n        trigger = true;\n    }\n\n    return trigger;\n  },\n  _checkInputValue: function checkInputValue() {\n    var inputValue;\n    var areEquivalent;\n    var hasDifferentWhitespace;\n    inputValue = this.getInputValue();\n    areEquivalent = areQueriesEquivalent(inputValue, this.query);\n    hasDifferentWhitespace = areEquivalent && this.query ? this.query.length !== inputValue.length : false;\n    this.query = inputValue;\n\n    if (!areEquivalent) {\n      this.trigger('queryChanged', this.query);\n    } else if (hasDifferentWhitespace) {\n      this.trigger('whitespaceChanged', this.query);\n    }\n  },\n  // ### public\n  focus: function focus() {\n    this.$input.focus();\n  },\n  blur: function blur() {\n    this.$input.blur();\n  },\n  getQuery: function getQuery() {\n    return this.query;\n  },\n  setQuery: function setQuery(query) {\n    this.query = query;\n  },\n  getInputValue: function getInputValue() {\n    return this.$input.val();\n  },\n  setInputValue: function setInputValue(value, silent) {\n    if (typeof value === 'undefined') {\n      value = this.query;\n    }\n\n    this.$input.val(value); // silent prevents any additional events from being triggered\n\n    if (silent) {\n      this.clearHint();\n    } else {\n      this._checkInputValue();\n    }\n  },\n  expand: function expand() {\n    this.$input.attr('aria-expanded', 'true');\n  },\n  collapse: function collapse() {\n    this.$input.attr('aria-expanded', 'false');\n  },\n  setActiveDescendant: function setActiveDescendant(activedescendantId) {\n    this.$input.attr('aria-activedescendant', activedescendantId);\n  },\n  removeActiveDescendant: function removeActiveDescendant() {\n    this.$input.removeAttr('aria-activedescendant');\n  },\n  resetInputValue: function resetInputValue() {\n    this.setInputValue(this.query, true);\n  },\n  getHint: function getHint() {\n    return this.$hint.val();\n  },\n  setHint: function setHint(value) {\n    this.$hint.val(value);\n  },\n  clearHint: function clearHint() {\n    this.setHint('');\n  },\n  clearHintIfInvalid: function clearHintIfInvalid() {\n    var val;\n    var hint;\n    var valIsPrefixOfHint;\n    var isValid;\n    val = this.getInputValue();\n    hint = this.getHint();\n    valIsPrefixOfHint = val !== hint && hint.indexOf(val) === 0;\n    isValid = val !== '' && valIsPrefixOfHint && !this.hasOverflow();\n\n    if (!isValid) {\n      this.clearHint();\n    }\n  },\n  getLanguageDirection: function getLanguageDirection() {\n    return (this.$input.css('direction') || 'ltr').toLowerCase();\n  },\n  hasOverflow: function hasOverflow() {\n    // 2 is arbitrary, just picking a small number to handle edge cases\n    var constraint = this.$input.width() - 2;\n    this.$overflowHelper.text(this.getInputValue());\n    return this.$overflowHelper.width() >= constraint;\n  },\n  isCursorAtEnd: function () {\n    var valueLength;\n    var selectionStart;\n    var range;\n    valueLength = this.$input.val().length;\n    selectionStart = this.$input[0].selectionStart;\n\n    if (_.isNumber(selectionStart)) {\n      return selectionStart === valueLength;\n    } else if (document.selection) {\n      // NOTE: this won't work unless the input has focus, the good news\n      // is this code should only get called when the input has focus\n      range = document.selection.createRange();\n      range.moveStart('character', -valueLength);\n      return valueLength === range.text.length;\n    }\n\n    return true;\n  },\n  destroy: function destroy() {\n    this.$hint.off('.aa');\n    this.$input.off('.aa');\n    this.$hint = this.$input = this.$overflowHelper = null;\n  }\n}); // helper functions\n// ----------------\n\n\nfunction buildOverflowHelper($input) {\n  return DOM.element('<pre aria-hidden=\"true\"></pre>').css({\n    // position helper off-screen\n    position: 'absolute',\n    visibility: 'hidden',\n    // avoid line breaks and whitespace collapsing\n    whiteSpace: 'pre',\n    // use same font css as input to calculate accurate width\n    fontFamily: $input.css('font-family'),\n    fontSize: $input.css('font-size'),\n    fontStyle: $input.css('font-style'),\n    fontVariant: $input.css('font-variant'),\n    fontWeight: $input.css('font-weight'),\n    wordSpacing: $input.css('word-spacing'),\n    letterSpacing: $input.css('letter-spacing'),\n    textIndent: $input.css('text-indent'),\n    textRendering: $input.css('text-rendering'),\n    textTransform: $input.css('text-transform')\n  }).insertAfter($input);\n}\n\nfunction areQueriesEquivalent(a, b) {\n  return Input.normalizeQuery(a) === Input.normalizeQuery(b);\n}\n\nfunction withModifier($e) {\n  return $e.altKey || $e.ctrlKey || $e.metaKey || $e.shiftKey;\n}\n\nmodule.exports = Input;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/node_modules/autocomplete.js/src/autocomplete/input.js"],"names":["specialKeyCodeMap","_","require","DOM","EventEmitter","Input","o","that","onBlur","onFocus","onKeydown","onInput","input","error","bind","_onBlur","_onFocus","_onKeydown","_onInput","$hint","element","hint","$input","on","length","setHint","getHint","clearHint","clearHintIfInvalid","noop","isMsie","$e","which","keyCode","defer","query","val","$overflowHelper","buildOverflowHelper","normalizeQuery","str","replace","mixin","prototype","resetInputValue","removeAttr","trigger","keyName","_managePreventDefault","_shouldTrigger","_checkInputValue","managePreventDefault","preventDefault","hintValue","inputValue","getInputValue","withModifier","shouldTrigger","checkInputValue","areEquivalent","hasDifferentWhitespace","areQueriesEquivalent","focus","blur","getQuery","setQuery","setInputValue","value","silent","expand","attr","collapse","setActiveDescendant","activedescendantId","removeActiveDescendant","valIsPrefixOfHint","isValid","indexOf","hasOverflow","getLanguageDirection","css","toLowerCase","constraint","width","text","isCursorAtEnd","valueLength","selectionStart","range","isNumber","document","selection","createRange","moveStart","destroy","off","position","visibility","whiteSpace","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","wordSpacing","letterSpacing","textIndent","textRendering","textTransform","insertAfter","a","b","altKey","ctrlKey","metaKey","shiftKey","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar specialKeyCodeMap;\n\nspecialKeyCodeMap = {\n  9: 'tab',\n  27: 'esc',\n  37: 'left',\n  39: 'right',\n  13: 'enter',\n  38: 'up',\n  40: 'down'\n};\n\nvar _ = require('../common/utils.js');\nvar DOM = require('../common/dom.js');\nvar EventEmitter = require('./event_emitter.js');\n\n// constructor\n// -----------\n\nfunction Input(o) {\n  var that = this;\n  var onBlur;\n  var onFocus;\n  var onKeydown;\n  var onInput;\n\n  o = o || {};\n\n  if (!o.input) {\n    _.error('input is missing');\n  }\n\n  // bound functions\n  onBlur = _.bind(this._onBlur, this);\n  onFocus = _.bind(this._onFocus, this);\n  onKeydown = _.bind(this._onKeydown, this);\n  onInput = _.bind(this._onInput, this);\n\n  this.$hint = DOM.element(o.hint);\n  this.$input = DOM.element(o.input)\n    .on('blur.aa', onBlur)\n    .on('focus.aa', onFocus)\n    .on('keydown.aa', onKeydown);\n\n  // if no hint, noop all the hint related functions\n  if (this.$hint.length === 0) {\n    this.setHint = this.getHint = this.clearHint = this.clearHintIfInvalid = _.noop;\n  }\n\n  // ie7 and ie8 don't support the input event\n  // ie9 doesn't fire the input event when characters are removed\n  // not sure if ie10 is compatible\n  if (!_.isMsie()) {\n    this.$input.on('input.aa', onInput);\n  } else {\n    this.$input.on('keydown.aa keypress.aa cut.aa paste.aa', function($e) {\n      // if a special key triggered this, ignore it\n      if (specialKeyCodeMap[$e.which || $e.keyCode]) {\n        return;\n      }\n\n      // give the browser a chance to update the value of the input\n      // before checking to see if the query changed\n      _.defer(_.bind(that._onInput, that, $e));\n    });\n  }\n\n  // the query defaults to whatever the value of the input is\n  // on initialization, it'll most likely be an empty string\n  this.query = this.$input.val();\n\n  // helps with calculating the width of the input's value\n  this.$overflowHelper = buildOverflowHelper(this.$input);\n}\n\n// static methods\n// --------------\n\nInput.normalizeQuery = function(str) {\n  // strips leading whitespace and condenses all whitespace\n  return (str || '').replace(/^\\s*/g, '').replace(/\\s{2,}/g, ' ');\n};\n\n// instance methods\n// ----------------\n\n_.mixin(Input.prototype, EventEmitter, {\n\n  // ### private\n\n  _onBlur: function onBlur() {\n    this.resetInputValue();\n    this.$input.removeAttr('aria-activedescendant');\n    this.trigger('blurred');\n  },\n\n  _onFocus: function onFocus() {\n    this.trigger('focused');\n  },\n\n  _onKeydown: function onKeydown($e) {\n    // which is normalized and consistent (but not for ie)\n    var keyName = specialKeyCodeMap[$e.which || $e.keyCode];\n\n    this._managePreventDefault(keyName, $e);\n    if (keyName && this._shouldTrigger(keyName, $e)) {\n      this.trigger(keyName + 'Keyed', $e);\n    }\n  },\n\n  _onInput: function onInput() {\n    this._checkInputValue();\n  },\n\n  _managePreventDefault: function managePreventDefault(keyName, $e) {\n    var preventDefault;\n    var hintValue;\n    var inputValue;\n\n    switch (keyName) {\n    case 'tab':\n      hintValue = this.getHint();\n      inputValue = this.getInputValue();\n\n      preventDefault = hintValue &&\n        hintValue !== inputValue &&\n        !withModifier($e);\n      break;\n\n    case 'up':\n    case 'down':\n      preventDefault = !withModifier($e);\n      break;\n\n    default:\n      preventDefault = false;\n    }\n\n    if (preventDefault) {\n      $e.preventDefault();\n    }\n  },\n\n  _shouldTrigger: function shouldTrigger(keyName, $e) {\n    var trigger;\n\n    switch (keyName) {\n    case 'tab':\n      trigger = !withModifier($e);\n      break;\n\n    default:\n      trigger = true;\n    }\n\n    return trigger;\n  },\n\n  _checkInputValue: function checkInputValue() {\n    var inputValue;\n    var areEquivalent;\n    var hasDifferentWhitespace;\n\n    inputValue = this.getInputValue();\n    areEquivalent = areQueriesEquivalent(inputValue, this.query);\n    hasDifferentWhitespace = areEquivalent && this.query ?\n      this.query.length !== inputValue.length : false;\n\n    this.query = inputValue;\n\n    if (!areEquivalent) {\n      this.trigger('queryChanged', this.query);\n    } else if (hasDifferentWhitespace) {\n      this.trigger('whitespaceChanged', this.query);\n    }\n  },\n\n  // ### public\n\n  focus: function focus() {\n    this.$input.focus();\n  },\n\n  blur: function blur() {\n    this.$input.blur();\n  },\n\n  getQuery: function getQuery() {\n    return this.query;\n  },\n\n  setQuery: function setQuery(query) {\n    this.query = query;\n  },\n\n  getInputValue: function getInputValue() {\n    return this.$input.val();\n  },\n\n  setInputValue: function setInputValue(value, silent) {\n    if (typeof value === 'undefined') {\n      value = this.query;\n    }\n    this.$input.val(value);\n\n    // silent prevents any additional events from being triggered\n    if (silent) {\n      this.clearHint();\n    } else {\n      this._checkInputValue();\n    }\n  },\n\n  expand: function expand() {\n    this.$input.attr('aria-expanded', 'true');\n  },\n\n  collapse: function collapse() {\n    this.$input.attr('aria-expanded', 'false');\n  },\n\n  setActiveDescendant: function setActiveDescendant(activedescendantId) {\n    this.$input.attr('aria-activedescendant', activedescendantId);\n  },\n\n  removeActiveDescendant: function removeActiveDescendant() {\n    this.$input.removeAttr('aria-activedescendant');\n  },\n\n  resetInputValue: function resetInputValue() {\n    this.setInputValue(this.query, true);\n  },\n\n  getHint: function getHint() {\n    return this.$hint.val();\n  },\n\n  setHint: function setHint(value) {\n    this.$hint.val(value);\n  },\n\n  clearHint: function clearHint() {\n    this.setHint('');\n  },\n\n  clearHintIfInvalid: function clearHintIfInvalid() {\n    var val;\n    var hint;\n    var valIsPrefixOfHint;\n    var isValid;\n\n    val = this.getInputValue();\n    hint = this.getHint();\n    valIsPrefixOfHint = val !== hint && hint.indexOf(val) === 0;\n    isValid = val !== '' && valIsPrefixOfHint && !this.hasOverflow();\n\n    if (!isValid) {\n      this.clearHint();\n    }\n  },\n\n  getLanguageDirection: function getLanguageDirection() {\n    return (this.$input.css('direction') || 'ltr').toLowerCase();\n  },\n\n  hasOverflow: function hasOverflow() {\n    // 2 is arbitrary, just picking a small number to handle edge cases\n    var constraint = this.$input.width() - 2;\n\n    this.$overflowHelper.text(this.getInputValue());\n\n    return this.$overflowHelper.width() >= constraint;\n  },\n\n  isCursorAtEnd: function() {\n    var valueLength;\n    var selectionStart;\n    var range;\n\n    valueLength = this.$input.val().length;\n    selectionStart = this.$input[0].selectionStart;\n\n    if (_.isNumber(selectionStart)) {\n      return selectionStart === valueLength;\n    } else if (document.selection) {\n      // NOTE: this won't work unless the input has focus, the good news\n      // is this code should only get called when the input has focus\n      range = document.selection.createRange();\n      range.moveStart('character', -valueLength);\n\n      return valueLength === range.text.length;\n    }\n\n    return true;\n  },\n\n  destroy: function destroy() {\n    this.$hint.off('.aa');\n    this.$input.off('.aa');\n\n    this.$hint = this.$input = this.$overflowHelper = null;\n  }\n});\n\n// helper functions\n// ----------------\n\nfunction buildOverflowHelper($input) {\n  return DOM.element('<pre aria-hidden=\"true\"></pre>')\n    .css({\n      // position helper off-screen\n      position: 'absolute',\n      visibility: 'hidden',\n      // avoid line breaks and whitespace collapsing\n      whiteSpace: 'pre',\n      // use same font css as input to calculate accurate width\n      fontFamily: $input.css('font-family'),\n      fontSize: $input.css('font-size'),\n      fontStyle: $input.css('font-style'),\n      fontVariant: $input.css('font-variant'),\n      fontWeight: $input.css('font-weight'),\n      wordSpacing: $input.css('word-spacing'),\n      letterSpacing: $input.css('letter-spacing'),\n      textIndent: $input.css('text-indent'),\n      textRendering: $input.css('text-rendering'),\n      textTransform: $input.css('text-transform')\n    })\n    .insertAfter($input);\n}\n\nfunction areQueriesEquivalent(a, b) {\n  return Input.normalizeQuery(a) === Input.normalizeQuery(b);\n}\n\nfunction withModifier($e) {\n  return $e.altKey || $e.ctrlKey || $e.metaKey || $e.shiftKey;\n}\n\nmodule.exports = Input;\n"]},"metadata":{},"sourceType":"script"}