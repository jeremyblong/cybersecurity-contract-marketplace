{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { closest, getDomIndex, getScrollElement } from './util';\nvar DEFAULT_NODE_SELECTOR = 'tr';\nvar DIRECTIONS = {\n  TOP: 1,\n  BOTTOM: 3\n};\nvar UNIT_PX = 'px';\nvar DRAG_LIND_STYLE = 'position:fixed;z-index:9999;height:0;' + 'margin-top:-1px;border-bottom:dashed 2px red;display:none;';\n\nvar ReactDragListView = function (_Component) {\n  _inherits(ReactDragListView, _Component);\n\n  function ReactDragListView(props) {\n    _classCallCheck(this, ReactDragListView);\n\n    var _this = _possibleConstructorReturn(this, (ReactDragListView.__proto__ || Object.getPrototypeOf(ReactDragListView)).call(this, props));\n\n    _this.onMouseDown = _this.onMouseDown.bind(_this);\n    _this.onDragStart = _this.onDragStart.bind(_this);\n    _this.onDragEnter = _this.onDragEnter.bind(_this);\n    _this.onDragEnd = _this.onDragEnd.bind(_this);\n    _this.autoScroll = _this.autoScroll.bind(_this);\n    _this.state = {\n      fromIndex: -1,\n      toIndex: -1\n    };\n    _this.scrollElement = null;\n    _this.scrollTimerId = -1;\n    _this.direction = DIRECTIONS.BOTTOM;\n    return _this;\n  }\n\n  _createClass(ReactDragListView, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.dragLine && this.dragLine.parentNode) {\n        this.dragLine.parentNode.removeChild(this.dragLine);\n        this.dragLine = null;\n        this.cacheDragTarget = null;\n      }\n    }\n  }, {\n    key: 'onMouseDown',\n    value: function onMouseDown(e) {\n      var handle = this.getHandleNode(e.target);\n\n      if (handle) {\n        var target = !this.props.handleSelector || this.props.handleSelector === this.props.nodeSelector ? handle : this.getDragNode(handle);\n\n        if (target) {\n          handle.setAttribute('draggable', false);\n          target.setAttribute('draggable', true);\n          target.ondragstart = this.onDragStart;\n          target.ondragend = this.onDragEnd;\n        }\n      }\n    }\n  }, {\n    key: 'onDragStart',\n    value: function onDragStart(e) {\n      var target = this.getDragNode(e.target);\n      var eventData = e;\n\n      if (target) {\n        var parentNode = target.parentNode;\n        eventData.dataTransfer.setData('Text', '');\n        eventData.dataTransfer.effectAllowed = 'move';\n        parentNode.ondragenter = this.onDragEnter;\n\n        parentNode.ondragover = function (ev) {\n          ev.preventDefault();\n          return true;\n        };\n\n        var fromIndex = getDomIndex(target, this.props.ignoreSelector);\n        this.setState({\n          fromIndex: fromIndex,\n          toIndex: fromIndex\n        });\n        this.scrollElement = getScrollElement(parentNode);\n      }\n    }\n  }, {\n    key: 'onDragEnter',\n    value: function onDragEnter(e) {\n      var target = this.getDragNode(e.target);\n      var eventData = e;\n      var toIndex = void 0;\n\n      if (target) {\n        toIndex = getDomIndex(target, this.props.ignoreSelector);\n\n        if (this.props.enableScroll) {\n          this.resolveAutoScroll(eventData, target);\n        }\n      } else {\n        toIndex = -1;\n        this.stopAutoScroll();\n      }\n\n      this.cacheDragTarget = target;\n      this.setState({\n        toIndex: toIndex\n      });\n      this.fixDragLine(target);\n    }\n  }, {\n    key: 'onDragEnd',\n    value: function onDragEnd(e) {\n      var target = this.getDragNode(e.target);\n      this.stopAutoScroll();\n\n      if (target) {\n        target.removeAttribute('draggable');\n        target.ondragstart = null;\n        target.ondragend = null;\n        target.parentNode.ondragenter = null;\n        target.parentNode.ondragover = null;\n\n        if (this.state.fromIndex >= 0 && this.state.fromIndex !== this.state.toIndex) {\n          this.props.onDragEnd(this.state.fromIndex, this.state.toIndex);\n        }\n      }\n\n      this.hideDragLine();\n      this.setState({\n        fromIndex: -1,\n        toIndex: -1\n      });\n    }\n  }, {\n    key: 'getDragNode',\n    value: function getDragNode(target) {\n      return closest(target, this.props.nodeSelector, this.dragList);\n    }\n  }, {\n    key: 'getHandleNode',\n    value: function getHandleNode(target) {\n      return closest(target, this.props.handleSelector || this.props.nodeSelector, this.dragList);\n    }\n  }, {\n    key: 'getDragLine',\n    value: function getDragLine() {\n      if (!this.dragLine) {\n        this.dragLine = window.document.createElement('div');\n        this.dragLine.setAttribute('style', DRAG_LIND_STYLE);\n        window.document.body.appendChild(this.dragLine);\n      }\n\n      this.dragLine.className = this.props.lineClassName || '';\n      return this.dragLine;\n    }\n  }, {\n    key: 'resolveAutoScroll',\n    value: function resolveAutoScroll(e, target) {\n      if (!this.scrollElement) {\n        return;\n      }\n\n      var _scrollElement$getBou = this.scrollElement.getBoundingClientRect(),\n          top = _scrollElement$getBou.top,\n          height = _scrollElement$getBou.height;\n\n      var targetHeight = target.offsetHeight;\n      var pageY = e.pageY;\n      var compatibleHeight = targetHeight * (2 / 3);\n      this.direction = 0;\n\n      if (pageY > top + height - compatibleHeight) {\n        this.direction = DIRECTIONS.BOTTOM;\n      } else if (pageY < top + compatibleHeight) {\n        this.direction = DIRECTIONS.TOP;\n      }\n\n      if (this.direction) {\n        if (this.scrollTimerId < 0) {\n          this.scrollTimerId = setInterval(this.autoScroll, 20);\n        }\n      } else {\n        this.stopAutoScroll();\n      }\n    }\n  }, {\n    key: 'stopAutoScroll',\n    value: function stopAutoScroll() {\n      clearInterval(this.scrollTimerId);\n      this.scrollTimerId = -1;\n      this.fixDragLine(this.cacheDragTarget);\n    }\n  }, {\n    key: 'autoScroll',\n    value: function autoScroll() {\n      var scrollTop = this.scrollElement.scrollTop;\n\n      if (this.direction === DIRECTIONS.BOTTOM) {\n        this.scrollElement.scrollTop = scrollTop + this.props.scrollSpeed;\n\n        if (scrollTop === this.scrollElement.scrollTop) {\n          this.stopAutoScroll();\n        }\n      } else if (this.direction === DIRECTIONS.TOP) {\n        this.scrollElement.scrollTop = scrollTop - this.props.scrollSpeed;\n\n        if (this.scrollElement.scrollTop <= 0) {\n          this.stopAutoScroll();\n        }\n      } else {\n        this.stopAutoScroll();\n      }\n    }\n  }, {\n    key: 'hideDragLine',\n    value: function hideDragLine() {\n      if (this.dragLine) {\n        this.dragLine.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'fixDragLine',\n    value: function fixDragLine(target) {\n      var dragLine = this.getDragLine();\n\n      if (!target || this.state.fromIndex < 0 || this.state.fromIndex === this.state.toIndex) {\n        this.hideDragLine();\n        return;\n      }\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          left = _target$getBoundingCl.left,\n          top = _target$getBoundingCl.top,\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var lineTop = this.state.toIndex < this.state.fromIndex ? top : top + height;\n\n      if (this.props.enableScroll && this.scrollElement) {\n        var _scrollElement$getBou2 = this.scrollElement.getBoundingClientRect(),\n            scrollHeight = _scrollElement$getBou2.height,\n            scrollTop = _scrollElement$getBou2.top;\n\n        if (lineTop < scrollTop - 2 || lineTop > scrollTop + scrollHeight + 2) {\n          this.hideDragLine();\n          return;\n        }\n      }\n\n      dragLine.style.left = left + UNIT_PX;\n      dragLine.style.width = width + UNIT_PX;\n      dragLine.style.top = lineTop + UNIT_PX;\n      dragLine.style.display = 'block';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        role: 'presentation',\n        onMouseDown: this.onMouseDown,\n        ref: function ref(c) {\n          _this2.dragList = c;\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return ReactDragListView;\n}(Component);\n\nReactDragListView.propTypes = {\n  onDragEnd: PropTypes.func.isRequired,\n  handleSelector: PropTypes.string,\n  nodeSelector: PropTypes.string,\n  ignoreSelector: PropTypes.string,\n  enableScroll: PropTypes.bool,\n  scrollSpeed: PropTypes.number,\n  lineClassName: PropTypes.string,\n  children: PropTypes.node\n};\nReactDragListView.defaultProps = {\n  nodeSelector: DEFAULT_NODE_SELECTOR,\n  ignoreSelector: '',\n  enableScroll: true,\n  scrollSpeed: 10,\n  handleSelector: '',\n  lineClassName: '',\n  children: null\n};\nexport default ReactDragListView;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/node_modules/react-drag-listview/es/ReactDragListView.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Component","PropTypes","closest","getDomIndex","getScrollElement","DEFAULT_NODE_SELECTOR","DIRECTIONS","TOP","BOTTOM","UNIT_PX","DRAG_LIND_STYLE","ReactDragListView","_Component","props","_this","__proto__","Object","getPrototypeOf","call","onMouseDown","bind","onDragStart","onDragEnter","onDragEnd","autoScroll","state","fromIndex","toIndex","scrollElement","scrollTimerId","direction","key","value","componentWillUnmount","dragLine","parentNode","removeChild","cacheDragTarget","e","handle","getHandleNode","target","handleSelector","nodeSelector","getDragNode","setAttribute","ondragstart","ondragend","eventData","dataTransfer","setData","effectAllowed","ondragenter","ondragover","ev","preventDefault","ignoreSelector","setState","enableScroll","resolveAutoScroll","stopAutoScroll","fixDragLine","removeAttribute","hideDragLine","dragList","getDragLine","window","document","createElement","body","appendChild","className","lineClassName","_scrollElement$getBou","getBoundingClientRect","top","height","targetHeight","offsetHeight","pageY","compatibleHeight","setInterval","clearInterval","scrollTop","scrollSpeed","style","display","_target$getBoundingCl","left","width","lineTop","_scrollElement$getBou2","scrollHeight","render","_this2","role","ref","c","children","propTypes","func","isRequired","string","bool","number","node","defaultProps"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { closest, getDomIndex, getScrollElement } from './util';\n\nvar DEFAULT_NODE_SELECTOR = 'tr';\nvar DIRECTIONS = {\n  TOP: 1,\n  BOTTOM: 3\n};\nvar UNIT_PX = 'px';\nvar DRAG_LIND_STYLE = 'position:fixed;z-index:9999;height:0;' + 'margin-top:-1px;border-bottom:dashed 2px red;display:none;';\n\nvar ReactDragListView = function (_Component) {\n  _inherits(ReactDragListView, _Component);\n\n  function ReactDragListView(props) {\n    _classCallCheck(this, ReactDragListView);\n\n    var _this = _possibleConstructorReturn(this, (ReactDragListView.__proto__ || Object.getPrototypeOf(ReactDragListView)).call(this, props));\n\n    _this.onMouseDown = _this.onMouseDown.bind(_this);\n    _this.onDragStart = _this.onDragStart.bind(_this);\n    _this.onDragEnter = _this.onDragEnter.bind(_this);\n    _this.onDragEnd = _this.onDragEnd.bind(_this);\n    _this.autoScroll = _this.autoScroll.bind(_this);\n\n    _this.state = {\n      fromIndex: -1,\n      toIndex: -1\n    };\n\n    _this.scrollElement = null;\n    _this.scrollTimerId = -1;\n    _this.direction = DIRECTIONS.BOTTOM;\n    return _this;\n  }\n\n  _createClass(ReactDragListView, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.dragLine && this.dragLine.parentNode) {\n        this.dragLine.parentNode.removeChild(this.dragLine);\n        this.dragLine = null;\n        this.cacheDragTarget = null;\n      }\n    }\n  }, {\n    key: 'onMouseDown',\n    value: function onMouseDown(e) {\n      var handle = this.getHandleNode(e.target);\n      if (handle) {\n        var target = !this.props.handleSelector || this.props.handleSelector === this.props.nodeSelector ? handle : this.getDragNode(handle);\n        if (target) {\n          handle.setAttribute('draggable', false);\n          target.setAttribute('draggable', true);\n          target.ondragstart = this.onDragStart;\n          target.ondragend = this.onDragEnd;\n        }\n      }\n    }\n  }, {\n    key: 'onDragStart',\n    value: function onDragStart(e) {\n      var target = this.getDragNode(e.target);\n      var eventData = e;\n      if (target) {\n        var parentNode = target.parentNode;\n\n        eventData.dataTransfer.setData('Text', '');\n        eventData.dataTransfer.effectAllowed = 'move';\n        parentNode.ondragenter = this.onDragEnter;\n        parentNode.ondragover = function (ev) {\n          ev.preventDefault();\n          return true;\n        };\n        var fromIndex = getDomIndex(target, this.props.ignoreSelector);\n        this.setState({ fromIndex: fromIndex, toIndex: fromIndex });\n        this.scrollElement = getScrollElement(parentNode);\n      }\n    }\n  }, {\n    key: 'onDragEnter',\n    value: function onDragEnter(e) {\n      var target = this.getDragNode(e.target);\n      var eventData = e;\n      var toIndex = void 0;\n      if (target) {\n        toIndex = getDomIndex(target, this.props.ignoreSelector);\n        if (this.props.enableScroll) {\n          this.resolveAutoScroll(eventData, target);\n        }\n      } else {\n        toIndex = -1;\n        this.stopAutoScroll();\n      }\n      this.cacheDragTarget = target;\n      this.setState({ toIndex: toIndex });\n      this.fixDragLine(target);\n    }\n  }, {\n    key: 'onDragEnd',\n    value: function onDragEnd(e) {\n      var target = this.getDragNode(e.target);\n      this.stopAutoScroll();\n      if (target) {\n        target.removeAttribute('draggable');\n        target.ondragstart = null;\n        target.ondragend = null;\n        target.parentNode.ondragenter = null;\n        target.parentNode.ondragover = null;\n        if (this.state.fromIndex >= 0 && this.state.fromIndex !== this.state.toIndex) {\n          this.props.onDragEnd(this.state.fromIndex, this.state.toIndex);\n        }\n      }\n      this.hideDragLine();\n      this.setState({ fromIndex: -1, toIndex: -1 });\n    }\n  }, {\n    key: 'getDragNode',\n    value: function getDragNode(target) {\n      return closest(target, this.props.nodeSelector, this.dragList);\n    }\n  }, {\n    key: 'getHandleNode',\n    value: function getHandleNode(target) {\n      return closest(target, this.props.handleSelector || this.props.nodeSelector, this.dragList);\n    }\n  }, {\n    key: 'getDragLine',\n    value: function getDragLine() {\n      if (!this.dragLine) {\n        this.dragLine = window.document.createElement('div');\n        this.dragLine.setAttribute('style', DRAG_LIND_STYLE);\n        window.document.body.appendChild(this.dragLine);\n      }\n      this.dragLine.className = this.props.lineClassName || '';\n      return this.dragLine;\n    }\n  }, {\n    key: 'resolveAutoScroll',\n    value: function resolveAutoScroll(e, target) {\n      if (!this.scrollElement) {\n        return;\n      }\n\n      var _scrollElement$getBou = this.scrollElement.getBoundingClientRect(),\n          top = _scrollElement$getBou.top,\n          height = _scrollElement$getBou.height;\n\n      var targetHeight = target.offsetHeight;\n      var pageY = e.pageY;\n\n      var compatibleHeight = targetHeight * (2 / 3);\n      this.direction = 0;\n      if (pageY > top + height - compatibleHeight) {\n        this.direction = DIRECTIONS.BOTTOM;\n      } else if (pageY < top + compatibleHeight) {\n        this.direction = DIRECTIONS.TOP;\n      }\n      if (this.direction) {\n        if (this.scrollTimerId < 0) {\n          this.scrollTimerId = setInterval(this.autoScroll, 20);\n        }\n      } else {\n        this.stopAutoScroll();\n      }\n    }\n  }, {\n    key: 'stopAutoScroll',\n    value: function stopAutoScroll() {\n      clearInterval(this.scrollTimerId);\n      this.scrollTimerId = -1;\n      this.fixDragLine(this.cacheDragTarget);\n    }\n  }, {\n    key: 'autoScroll',\n    value: function autoScroll() {\n      var scrollTop = this.scrollElement.scrollTop;\n\n      if (this.direction === DIRECTIONS.BOTTOM) {\n        this.scrollElement.scrollTop = scrollTop + this.props.scrollSpeed;\n        if (scrollTop === this.scrollElement.scrollTop) {\n          this.stopAutoScroll();\n        }\n      } else if (this.direction === DIRECTIONS.TOP) {\n        this.scrollElement.scrollTop = scrollTop - this.props.scrollSpeed;\n        if (this.scrollElement.scrollTop <= 0) {\n          this.stopAutoScroll();\n        }\n      } else {\n        this.stopAutoScroll();\n      }\n    }\n  }, {\n    key: 'hideDragLine',\n    value: function hideDragLine() {\n      if (this.dragLine) {\n        this.dragLine.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'fixDragLine',\n    value: function fixDragLine(target) {\n      var dragLine = this.getDragLine();\n      if (!target || this.state.fromIndex < 0 || this.state.fromIndex === this.state.toIndex) {\n        this.hideDragLine();\n        return;\n      }\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          left = _target$getBoundingCl.left,\n          top = _target$getBoundingCl.top,\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var lineTop = this.state.toIndex < this.state.fromIndex ? top : top + height;\n      if (this.props.enableScroll && this.scrollElement) {\n        var _scrollElement$getBou2 = this.scrollElement.getBoundingClientRect(),\n            scrollHeight = _scrollElement$getBou2.height,\n            scrollTop = _scrollElement$getBou2.top;\n\n        if (lineTop < scrollTop - 2 || lineTop > scrollTop + scrollHeight + 2) {\n          this.hideDragLine();\n          return;\n        }\n      }\n      dragLine.style.left = left + UNIT_PX;\n      dragLine.style.width = width + UNIT_PX;\n      dragLine.style.top = lineTop + UNIT_PX;\n      dragLine.style.display = 'block';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\n        'div',\n        { role: 'presentation', onMouseDown: this.onMouseDown, ref: function ref(c) {\n            _this2.dragList = c;\n          } },\n        this.props.children\n      );\n    }\n  }]);\n\n  return ReactDragListView;\n}(Component);\n\nReactDragListView.propTypes = {\n  onDragEnd: PropTypes.func.isRequired,\n  handleSelector: PropTypes.string,\n  nodeSelector: PropTypes.string,\n  ignoreSelector: PropTypes.string,\n  enableScroll: PropTypes.bool,\n  scrollSpeed: PropTypes.number,\n  lineClassName: PropTypes.string,\n  children: PropTypes.node\n};\nReactDragListView.defaultProps = {\n  nodeSelector: DEFAULT_NODE_SELECTOR,\n  ignoreSelector: '',\n  enableScroll: true,\n  scrollSpeed: 10,\n  handleSelector: '',\n  lineClassName: '',\n  children: null\n};\n\n\nexport default ReactDragListView;"]},"metadata":{},"sourceType":"module"}