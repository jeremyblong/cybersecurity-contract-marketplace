{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js\";\nimport React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, Form, CardHeader } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType,\n  renderCustomButtonDropzoneFollowAlong\n} = helpers;\n\nconst SheetHelperPaneUploadCourseContent = _ref => {\n  let {\n    isOpen,\n    setIsOpen,\n    setProgress,\n    shiftCoreStyles,\n    disableBodyScroll,\n    clearAllBodyScrollLocks,\n    courseData,\n    updateCourseInformationData,\n    selectedCourseContent,\n    setCourseContentState\n  } = _ref;\n  // ref's initialization\n  const dropzoneRef = useRef(null);\n  const dropzoneIncludedFilesRef = useRef(null); // state initialization\n\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [changeOptionsTwo, setChangeOptionsTwo] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [showInitial, setShowInitialState] = useState(true);\n  const [videoFile, setVideoFileState] = useState(null);\n  const [loaded, setLoadedState] = useState(false); // below starts the dropzone-two state initialization\n\n  const [filePathDataFollowAlong, setCurrentFilePathDataFollowAlong] = useState(null);\n  const [currentFileSelectedUploadFollowAlong, setCurrentUploadFileStatusFollowAlong] = useState(null);\n  const [fileReadyFollowAlong, setFileReadyStatusFollowAlong] = useState(false);\n  const [fileMetaDataFollowAlong, setMetaFileDataFollowAlong] = useState(null);\n  const [showInitialFollowAlong, setShowInitialStateFollowAlong] = useState(true);\n  const [fileFollowAlong, setFileFollowAlong] = useState(null);\n  const [loadedFollowAlong, setLoadedStateFollowAlong] = useState(false);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const renderPreviewOfFileFollowAlong = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReadyFollowAlong === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathDataFollowAlong,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent); // check if previously already updated\n\n    if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n      setDescription(selectedCourseContent.description);\n      const configuration = {\n        method: 'get',\n        url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n        responseType: 'blob'\n      };\n      axios(configuration).then(response => {\n        // create fileready\n        const file = new File([response.data], selectedCourseContent.video.name); // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // mark pane READY to display content\n\n        setLoadedState(true);\n      });\n    } else {} // update local component state to reflect already-made changes\n\n  }, [isOpen]);\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered-both-ways\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone-text-courses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, text)), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const CustomInputFileAttachments = _ref3 => {\n    let {\n      accept,\n      onFiles\n    } = _ref3;\n    const text = showInitialFollowAlong === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data to upload 'follow-along' file content (any file types)\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered-both-ways\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone-text-courses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, text)), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathDataFollowAlong(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatusFollowAlong(file); // mark file as READY \n\n        setFileReadyStatusFollowAlong(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleDescriptionChange = e => {\n    const value = e.target.value;\n    setDescription(value);\n  };\n\n  const handleAdditionFileDescription = () => {\n    console.log(\"handleAdditionFileDescription clicked...\");\n\n    if (videoFile !== null) {\n      if (typeof description !== \"undefined\" && description.length >= 25 && description.length <= 750) {\n        // mock a copy of redux state\n        const shallowCopy = [...courseData]; // newly created obj with desc and video info data\n\n        const newlyAddedData = {\n          description,\n          video: videoFile,\n          id: uuid(),\n          systemDate: Date.now(),\n          date: new Date(),\n          formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n          comments: [],\n          likes: 0,\n          dislikes: 0\n        }; // courseData\n\n        const matchingItem = shallowCopy.find((course, index) => {\n          if (course.id === selectedCourseContent.id) {\n            return true;\n          }\n        }); // combined OLD and NEW state\n\n        const combinedPreviousPlusNew = { ...matchingItem,\n          ...newlyAddedData\n        }; // find index of matching item\n\n        const updatedStateIndex = shallowCopy.findIndex(item => item.id === selectedCourseContent.id); // replace matching item\n\n        shallowCopy[updatedStateIndex] = combinedPreviousPlusNew; // update redux state\n\n        updateCourseInformationData(shallowCopy); // close modal\n\n        closeModalRelated();\n        NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n      } else {\n        NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n      }\n    } else {\n      NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n    }\n  };\n\n  const handleAdditionFileDescriptionFollowAlong = () => {\n    console.log(\"handleAdditionFileDescription clicked...\");\n\n    if (fileFollowAlong !== null) {\n      // mock a copy of redux state\n      const shallowCopy = [...courseData]; // newly created obj with desc and video info data\n\n      const newlyAddedData = {\n        description,\n        video: videoFile,\n        id: uuid(),\n        systemDate: Date.now(),\n        date: new Date(),\n        formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n        comments: [],\n        likes: 0,\n        dislikes: 0\n      }; // courseData\n\n      const matchingItem = shallowCopy.find((course, index) => {\n        if (course.id === selectedCourseContent.id) {\n          return true;\n        }\n      }); // combined OLD and NEW state\n\n      const combinedPreviousPlusNew = { ...matchingItem,\n        ...newlyAddedData\n      }; // find index of matching item\n\n      const updatedStateIndex = shallowCopy.findIndex(item => item.id === selectedCourseContent.id); // replace matching item\n\n      shallowCopy[updatedStateIndex] = combinedPreviousPlusNew; // update redux state\n      // updateCourseInformationData(shallowCopy);\n\n      NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n    } else {\n      NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n    }\n  };\n\n  const closeModalRelated = () => {\n    // clear video logic\n    setCourseContentState(null); // image upload logic CLEAR existing state\n\n    setCurrentUploadFileStatus(null); // revert image state back to default\n\n    setVideoFileState(null); // set current file path to default state\n\n    setCurrentFilePathData(null); // set description back to default\n\n    setDescription(\"\"); // image upload logic CLEAR existing state\n\n    setMetaFileData(null); // image upload logic CLEAR existing state\n\n    setFileReadyStatus(false); // allow background clicking again\n\n    shiftCoreStyles(false); // change loading state back to default\n\n    setLoadedState(false); // close modal\n\n    setIsOpen(false); // clear scroll locks as PANE is closed now...\n\n    clearAllBodyScrollLocks();\n  };\n\n  const renderPreChecks = () => {\n    if (loaded === true) {\n      console.log(\"loaded!\"); // ready to display live content\n\n      if (currentFileSelectedUpload === null) {\n        console.log(\"currentFileSelectedUpload === null\", true);\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-boxshadow-courses centered-both-ways\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"header-no-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 89\n          }\n        }, \"Current NO file(s) is selected/uploaded - please select a file.\")));\n      } else {\n        console.log(\"currentFileSelectedUpload === null\", false);\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          controls: true,\n          playIcon: true,\n          playing: false,\n          loop: false,\n          volume: 1,\n          width: \"100%\",\n          height: \"100%\",\n          url: filePathData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }\n        }));\n      }\n    } else {\n      console.log(\"still loading...\"); // still loading display skelaton\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-positied-loading-courses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"custom-loading-courses\",\n        count: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  const prechecksFollowAlong = () => {\n    if (loaded === true) {\n      console.log(\"loaded!\"); // ready to display live content\n\n      if (currentFileSelectedUpload === null) {\n        console.log(\"currentFileSelectedUpload === null\", true);\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-boxshadow-courses centered-both-ways\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"header-no-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 89\n          }\n        }, \"Current NO file(s) is selected/uploaded - please select a file if this section requires \", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 213\n          }\n        }, \"\\\"follow along\\\"\"), \" content.\")));\n      } else {\n        console.log(\"currentFileSelectedUpload === null\", false);\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FileViewer, {\n          fileType: calculateFileType(null),\n          filePath: filePathDataFollowAlong,\n          onError: err => console.log(\"fileviewer error - \", err),\n          key: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }\n        }));\n      }\n    } else {\n      console.log(\"still loading...\"); // still loading display skelaton\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-positied-loading-courses-follow-along\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"custom-loading-courses-follow-along\",\n        count: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  console.log(\"courseData paneSheet.js plus loaded\", courseData, loaded);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: closeModalRelated,\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger\",\n    size: \"md-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  }, \"Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 49\n    }\n  }, \"This is the form that is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 78\n    }\n  }, \"primarily\"), \" used to upload/change content related to \\\"course content\\\". Use the form below to upload video's to each course \\\"clip/section\\\" and enter a description if you'd like...\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-video-overlay-courses-upload centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 49\n    }\n  }, renderPreChecks())), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 61\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState));\n    },\n    className: \"shadow-courses-dropzone\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 49\n    }\n  }), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 71\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      setCurrentFilePathData(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 57\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 49\n    }\n  }, \"Course Section/Segment Description (Between 25-750 Charector's in length)\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => handleDescriptionChange(e),\n    value: description,\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: \"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"75%\"\n    },\n    onClick: () => handleAdditionFileDescription(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 49\n    }\n  }, \"Submit New Information/Details & File(s)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 49\n    }\n  }, \"Upload any supporting files (if any/applicable)\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    className: \"top-title-course-help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 49\n    }\n  }, \"These files will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 140\n    }\n  }, \"fully-downloadable (on purpose)\"), \" so viewer's/students will be able to download course content to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 282\n    }\n  }, \"follow along\"), \" with you during your pre-recorded videos/seminars!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneIncludedFilesRef,\n    PreviewComponent: data => renderPreviewOfFileFollowAlong(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptionsTwo(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputFileAttachments,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 77\n        }\n      }, renderCustomButtonDropzoneFollowAlong(data, setMetaFileDataFollowAlong, currentFileSelectedUploadFollowAlong, fileMetaDataFollowAlong, fileReadyFollowAlong, setFileReadyStatusFollowAlong, setProgress, setFileFollowAlong, setShowInitialStateFollowAlong));\n    },\n    className: \"shadow-courses-dropzone\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 200\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 57\n    }\n  }, prechecksFollowAlong())))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles,\n  updateCourseInformationData\n})(SheetHelperPaneUploadCourseContent);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","useEffect","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Media","InputGroup","Form","CardHeader","Dropzone","_","connect","shiftCoreStyles","ReactPlayer","uuid","moment","updateCourseInformationData","NotificationManager","axios","Skeleton","SkeletonTheme","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","renderCustomButtonDropzoneFollowAlong","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setProgress","disableBodyScroll","clearAllBodyScrollLocks","courseData","selectedCourseContent","setCourseContentState","dropzoneRef","dropzoneIncludedFilesRef","changeOptions","setChangeOptions","changeOptionsTwo","setChangeOptionsTwo","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","description","setDescription","showInitial","setShowInitialState","videoFile","setVideoFileState","loaded","setLoadedState","filePathDataFollowAlong","setCurrentFilePathDataFollowAlong","currentFileSelectedUploadFollowAlong","setCurrentUploadFileStatusFollowAlong","fileReadyFollowAlong","setFileReadyStatusFollowAlong","fileMetaDataFollowAlong","setMetaFileDataFollowAlong","showInitialFollowAlong","setShowInitialStateFollowAlong","fileFollowAlong","setFileFollowAlong","loadedFollowAlong","setLoadedStateFollowAlong","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","renderPreviewOfFileFollowAlong","video","has","Object","keys","length","configuration","method","url","process","env","REACT_APP_ASSET_LINK","link","responseType","then","response","File","name","URL","createObjectURL","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","CustomInputFileAttachments","handleDescriptionChange","value","handleAdditionFileDescription","shallowCopy","newlyAddedData","systemDate","Date","now","date","formattedDate","format","comments","likes","dislikes","matchingItem","find","course","index","combinedPreviousPlusNew","updatedStateIndex","findIndex","item","closeModalRelated","success","error","handleAdditionFileDescriptionFollowAlong","renderPreChecks","prechecksFollowAlong","margin","width","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","marginTop","remove","paddingTop","mapStateToProps","state","userData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, Form, CardHeader } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType, renderCustomButtonDropzoneFollowAlong } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setProgress, shiftCoreStyles, disableBodyScroll, clearAllBodyScrollLocks, courseData, updateCourseInformationData, selectedCourseContent, setCourseContentState }) => {\n    // ref's initialization\n    const dropzoneRef = useRef(null);\n    const dropzoneIncludedFilesRef = useRef(null);\n    // state initialization\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ changeOptionsTwo, setChangeOptionsTwo ] = useState(null);\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ description, setDescription ] = useState(\"\");\n    const [ showInitial, setShowInitialState ] = useState(true);\n    const [ videoFile, setVideoFileState ] = useState(null);\n    const [ loaded, setLoadedState ] = useState(false);\n    // below starts the dropzone-two state initialization\n    const [ filePathDataFollowAlong, setCurrentFilePathDataFollowAlong ] = useState(null);\n    const [ currentFileSelectedUploadFollowAlong, setCurrentUploadFileStatusFollowAlong ] = useState(null);\n    const [ fileReadyFollowAlong, setFileReadyStatusFollowAlong ] = useState(false);\n    const [ fileMetaDataFollowAlong, setMetaFileDataFollowAlong ] = useState(null);\n    const [ showInitialFollowAlong, setShowInitialStateFollowAlong ] = useState(true);\n    const [ fileFollowAlong, setFileFollowAlong ] = useState(null);\n    const [ loadedFollowAlong, setLoadedStateFollowAlong ] = useState(false);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const renderPreviewOfFileFollowAlong = (data) => {\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReadyFollowAlong === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathDataFollowAlong}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    useEffect(() => {\n        console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent)\n        // check if previously already updated\n        if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n            setDescription(selectedCourseContent.description);\n\n            const configuration = {\n                method: 'get',\n                url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n                responseType: 'blob'\n            };\n\n            axios(configuration).then((response) => {\n                // create fileready\n                const file = new File([response.data], selectedCourseContent.video.name); \n                // set current file path to convert to readable URL later\n                setCurrentFilePathData(URL.createObjectURL(file));\n                // set status update for current file\n                setCurrentUploadFileStatus(file);\n                // mark file as READY \n                setFileReadyStatus(true);\n                // mark pane READY to display content\n                setLoadedState(true);\n            })\n        } else {\n            \n        }\n        // update local component state to reflect already-made changes\n    }, [isOpen])\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    <p className={\"dropzone-text-courses\"}>{text}</p>\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const CustomInputFileAttachments = ({ accept, onFiles }) => {\n\n        const text = showInitialFollowAlong === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data to upload 'follow-along' file content (any file types)\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    <p className={\"dropzone-text-courses\"}>{text}</p>\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathDataFollowAlong(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatusFollowAlong(file);\n                        // mark file as READY \n                        setFileReadyStatusFollowAlong(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleDescriptionChange = (e) => {\n        const value = e.target.value;\n\n        setDescription(value);\n    }\n    const handleAdditionFileDescription = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        if (videoFile !== null) {\n            if (typeof description !== \"undefined\" && (description.length >= 25 && description.length <= 750)) {\n                // mock a copy of redux state\n                const shallowCopy = [...courseData];\n                // newly created obj with desc and video info data\n                const newlyAddedData = {\n                    description,\n                    video: videoFile,\n                    id: uuid(),\n                    systemDate: Date.now(),\n                    date: new Date(),\n                    formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                    comments: [],\n                    likes: 0,\n                    dislikes: 0\n                }\n                // courseData\n                const matchingItem = shallowCopy.find((course, index) => {\n                    if (course.id === selectedCourseContent.id) {\n                        return true;\n                    }\n                });\n                // combined OLD and NEW state\n                const combinedPreviousPlusNew = {\n                    ...matchingItem,\n                    ...newlyAddedData\n                }\n                // find index of matching item\n                const updatedStateIndex = shallowCopy.findIndex((item) => item.id === selectedCourseContent.id);\n                // replace matching item\n                shallowCopy[updatedStateIndex] = combinedPreviousPlusNew;\n                // update redux state\n                updateCourseInformationData(shallowCopy);\n                // close modal\n                closeModalRelated();\n\n                NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n            } else {\n                NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n            }\n        } else {\n            NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n        }\n    }\n    const handleAdditionFileDescriptionFollowAlong = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        if (fileFollowAlong !== null) {\n            // mock a copy of redux state\n            const shallowCopy = [...courseData];\n            // newly created obj with desc and video info data\n            const newlyAddedData = {\n                description,\n                video: videoFile,\n                id: uuid(),\n                systemDate: Date.now(),\n                date: new Date(),\n                formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                comments: [],\n                likes: 0,\n                dislikes: 0\n            }\n            // courseData\n            const matchingItem = shallowCopy.find((course, index) => {\n                if (course.id === selectedCourseContent.id) {\n                    return true;\n                }\n            });\n            // combined OLD and NEW state\n            const combinedPreviousPlusNew = {\n                ...matchingItem,\n                ...newlyAddedData\n            }\n            // find index of matching item\n            const updatedStateIndex = shallowCopy.findIndex((item) => item.id === selectedCourseContent.id);\n            // replace matching item\n            shallowCopy[updatedStateIndex] = combinedPreviousPlusNew;\n            // update redux state\n            // updateCourseInformationData(shallowCopy);\n\n            NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n        } else {\n            NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n        }\n    }\n    const closeModalRelated = () => {\n        // clear video logic\n        setCourseContentState(null);\n        // image upload logic CLEAR existing state\n        setCurrentUploadFileStatus(null);\n        // revert image state back to default\n        setVideoFileState(null);\n        // set current file path to default state\n        setCurrentFilePathData(null);\n        // set description back to default\n        setDescription(\"\");\n        // image upload logic CLEAR existing state\n        setMetaFileData(null);\n        // image upload logic CLEAR existing state\n        setFileReadyStatus(false);\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // change loading state back to default\n        setLoadedState(false);\n        // close modal\n        setIsOpen(false);\n        // clear scroll locks as PANE is closed now...\n        clearAllBodyScrollLocks();\n    }\n    const renderPreChecks = () => {\n        if (loaded === true) {\n            console.log(\"loaded!\")\n            // ready to display live content\n            if (currentFileSelectedUpload === null) {\n                console.log(\"currentFileSelectedUpload === null\", true);\n                return (\n                    <Fragment>\n                        <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                    </Fragment>\n                );\n            } else {\n                console.log(\"currentFileSelectedUpload === null\", false);\n                return (\n                    <Fragment>\n                        <ReactPlayer controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                    </Fragment>\n                );   \n            }\n        } else {\n            console.log(\"still loading...\")\n            // still loading display skelaton\n            return (\n                <div className={\"absolutely-positied-loading-courses\"}>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"custom-loading-courses\"} count={12} />\n                        </p>\n                    </SkeletonTheme>\n                </div>\n            );\n        }\n    }\n    const prechecksFollowAlong = () => {\n        if (loaded === true) {\n            console.log(\"loaded!\")\n            // ready to display live content\n            if (currentFileSelectedUpload === null) {\n                console.log(\"currentFileSelectedUpload === null\", true);\n                return (\n                    <Fragment>\n                        <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file if this section requires <strong>\"follow along\"</strong> content.</h6></div>\n                    </Fragment>\n                );\n            } else {\n                console.log(\"currentFileSelectedUpload === null\", false);\n                return (\n                    <Fragment>\n                        <FileViewer\n                            fileType={calculateFileType(null)}\n                            filePath={filePathDataFollowAlong}\n                            onError={(err) => console.log(\"fileviewer error - \", err)}\n                            key={null}\n                        />\n                    </Fragment>\n                );   \n            }\n        } else {\n            console.log(\"still loading...\")\n            // still loading display skelaton\n            return (\n                <div className={\"absolutely-positied-loading-courses-follow-along\"}>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"custom-loading-courses-follow-along\"} count={9} />\n                        </p>\n                    </SkeletonTheme>\n                </div>\n            );\n        }\n    }\n    console.log(\"courseData paneSheet.js plus loaded\", courseData, loaded);\n    return (\n        <Fragment>\n            <div id=\"sheet-container\">\n                <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row style={{ margin: \"17.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button style={{ width: \"100%\" }} onClick={closeModalRelated} className=\"btn-square-danger\" outline color=\"danger\" size=\"md-2x\">Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)</Button>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Row>\n                                <Card>\n                                    <CardBody>\n                                        <Row style={{ marginBottom: \"20px\" }}>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h3>This is the form that is <strong>primarily</strong> used to upload/change content related to \"course content\". Use the form below to upload video's to each course \"clip/section\" and enter a description if you'd like...</h3>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <div className={\"add-video-overlay-courses-upload centered-both-ways\"}>\n                                                    {renderPreChecks()}\n                                                </div>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    getFilesFromEvent={null}\n                                                    onSubmit={onSubmitHelper}\n                                                    accept=\"video/*\"\n                                                    SubmitButtonComponent={(data) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    className={\"shadow-courses-dropzone\"}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 350 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                                {fileReady === true ? <Fragment>\n                                                    <hr className=\"secondary-hr\" />\n                                                    <div className=\"centered-both-ways\">\n                                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                            setMetaFileData(null);\n                                                            setFileReadyStatus(false);\n                                                            setCurrentUploadFileStatus(null);\n                                                            setCurrentFilePathData(null);\n\n                                                            changeOptions.remove();\n                                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                    </div>\n                                                </Fragment> : null}\n                                            </Col>\n                                            <hr style={{ marginTop: \"25px\" }} />\n                                            <FormGroup className=\" m-form__group\">\n                                                <Label>Course Section/Segment Description (Between 25-750 Charector's in length)</Label>\n                                                <InputGroup>\n                                                    <Input onChange={(e) => handleDescriptionChange(e)} value={description} className=\"form-control\" rows={6} type=\"textarea\" placeholder={\"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}/>\n                                                </InputGroup>\n                                            </FormGroup>\n                                            <hr />\n                                            <div className={\"centered-both-ways\"}>\n                                                <Button outline style={{ width: \"75%\" }} onClick={() => handleAdditionFileDescription()} className=\"btn-square-info\" color=\"info\" size=\"md\">Submit New Information/Details & File(s)</Button>\n                                            </div>\n                                        </Row>\n                                        <hr />\n                                        <Card>\n                                            <CardHeader>\n                                                <h5>Upload any supporting files (if any/applicable)</h5>\n                                                <p style={{ paddingTop: \"7.5px\" }} className={\"top-title-course-help\"}>These files will be <strong style={{ color: \"#f73164\" }}>fully-downloadable (on purpose)</strong> so viewer's/students will be able to download course content to <strong>follow along</strong> with you during your pre-recorded videos/seminars!</p>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Form>\n                                                    <Row>\n                                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                            <div className=\"dz-message needsclick\">\n                                                                <Dropzone\n                                                                    ref={dropzoneIncludedFilesRef}\n                                                                    PreviewComponent={(data) => renderPreviewOfFileFollowAlong(data)}\n                                                                    maxFiles={1}\n                                                                    autoUpload={true}\n                                                                    onChangeStatus={(functions) => {\n                                                                        setChangeOptionsTwo(functions);\n                                                                    }}\n                                                                    submitButtonDisabled={false}\n                                                                    InputComponent={CustomInputFileAttachments}\n                                                                    getFilesFromEvent={null}\n                                                                    onSubmit={onSubmitHelper}\n                                                                    accept=\"*\"\n                                                                    SubmitButtonComponent={(data) => {\n                                                                        return (\n                                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                                {renderCustomButtonDropzoneFollowAlong(data, setMetaFileDataFollowAlong, currentFileSelectedUploadFollowAlong, fileMetaDataFollowAlong, fileReadyFollowAlong, setFileReadyStatusFollowAlong, setProgress, setFileFollowAlong, setShowInitialStateFollowAlong)}\n                                                                            </div>\n                                                                        );\n                                                                    }}\n                                                                    className={\"shadow-courses-dropzone\"}\n                                                                    multiple={false}\n                                                                    canCancel={false}\n                                                                    styles={{\n                                                                        dropzone: { height: 200 },\n                                                                        dropzoneActive: { borderColor: 'green' },\n                                                                    }}\n                                                                />\n                                                            </div>\n                                                        </Col>\n                                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                            {prechecksFollowAlong()}\n                                                        </Col>\n                                                    </Row>\n                                                </Form>\n                                            </CardBody>\n                                        </Card>\n                                    </CardBody>\n                                </Card>\n                            </Row>\n                        </Sheet.Content>\n                        </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet>\n            </div>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, updateCourseInformationData })(SheetHelperPaneUploadCourseContent);"]},"metadata":{},"sourceType":"module"}