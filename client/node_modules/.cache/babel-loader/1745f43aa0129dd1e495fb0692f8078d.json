{"ast":null,"code":"import _objectSpread from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n// helpers logic related to mainly to redux-hook-form\nvar CommentsIndividualPostHelper = function CommentsIndividualPostHelper() {\n  var checkMessageMeetsCritera = {\n    check: function check(setError, register, clearErrors, name) {\n      return _objectSpread({}, register(name, {\n        required: {\n          value: true,\n          message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n        },\n        minLength: {\n          value: 50,\n          message: \"You MUST enter AT Least 50 characters\"\n        },\n        maxLength: {\n          value: 450,\n          message: \"You may ONLY enter 450 characters or less\"\n        },\n        onBlur: function onBlur(e) {\n          console.log(\"blurred/\"); // deconstruct actual value\n\n          var value = e.target.value; // deconstruct length\n\n          var len = value.length; // check if both min/max values met\n\n          if (len > 0 && len >= 50 && len <= 450) {\n            // clear error\n            clearErrors(name);\n          } else {\n            // set error\n            setTimeout(function () {\n              setError(name, {\n                type: \"manual\",\n                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\"\n              });\n            }, 50);\n          }\n        }\n      }));\n    },\n    onChange: function onChange(e, name, setValue) {\n      // deconstruct actual value\n      var value = e.target.value; // set new value\n\n      setValue(name, value, {\n        shouldValidate: true\n      });\n    },\n    label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n    name: \"comment\",\n    placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n  };\n  var homepageCheckMessageMeetsCritera = {\n    check: function check(setError, register, clearErrors, name) {\n      return _objectSpread({}, register(name, {\n        required: {\n          value: true,\n          message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n        },\n        minLength: {\n          value: 50,\n          message: \"You MUST enter AT Least 50 characters\"\n        },\n        maxLength: {\n          value: 450,\n          message: \"You may ONLY enter 450 characters or less\"\n        },\n        onBlur: function onBlur(e) {\n          console.log(\"blurred/\"); // deconstruct actual value\n\n          var value = e.target.value; // deconstruct length\n\n          var len = value.length; // check if both min/max values met\n\n          if (len > 0 && len >= 50 && len <= 450) {\n            // clear error\n            clearErrors(name);\n          } else {\n            // set error\n            setTimeout(function () {\n              setError(name, {\n                type: \"manual\",\n                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\"\n              });\n            }, 50);\n          }\n        }\n      }));\n    },\n    onChange: function onChange(e, name, setValue) {\n      // deconstruct actual value\n      var value = e.target.value; // set new value\n\n      setValue(name, value, {\n        shouldValidate: true\n      });\n    },\n    label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n    name: \"homepageComment\",\n    placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n  }; // return values to other component\n\n  return {\n    homepageCheckMessageMeetsCritera: homepageCheckMessageMeetsCritera,\n    checkMessageMeetsCritera: checkMessageMeetsCritera\n  };\n};\n\nexport default CommentsIndividualPostHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/hackers/individualProfile/helpers/viewPostFileContents/helpers/renderComments/otherHelpers/reactHookForm.js"],"names":["CommentsIndividualPostHelper","checkMessageMeetsCritera","check","setError","register","clearErrors","name","required","value","message","minLength","maxLength","onBlur","e","console","log","target","len","length","setTimeout","type","onChange","setValue","shouldValidate","label","placeholder","homepageCheckMessageMeetsCritera"],"mappings":"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","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst CommentsIndividualPostHelper = () => {\n\n    const checkMessageMeetsCritera = {\n        check: (setError, register, clearErrors, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n                }, minLength: {\n                    value: 50,\n                    message: \"You MUST enter AT Least 50 characters\"\n                }, maxLength: {\n                    value: 450,\n                    message: \"You may ONLY enter 450 characters or less\"\n                }, onBlur: (e) => {\n                    console.log(\"blurred/\");\n                    // deconstruct actual value\n                    const value = e.target.value;\n                    // deconstruct length\n                    const len = value.length;\n                    // check if both min/max values met\n                    if ((len > 0) && (len >= 50) && (len <= 450)) {\n                        // clear error\n                        clearErrors(name);\n                    } else {\n                        // set error\n                        setTimeout(() => {\n                            setError(name, {\n                                type: \"manual\",\n                                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            );\n        },\n        onChange: (e, name, setValue) => {\n            // deconstruct actual value\n            const value = e.target.value;\n            // set new value\n            setValue(name, value, { shouldValidate: true })\n        },\n        label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n        name: \"comment\",\n        placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n    }\n    const homepageCheckMessageMeetsCritera = {\n        check: (setError, register, clearErrors, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n                }, minLength: {\n                    value: 50,\n                    message: \"You MUST enter AT Least 50 characters\"\n                }, maxLength: {\n                    value: 450,\n                    message: \"You may ONLY enter 450 characters or less\"\n                }, onBlur: (e) => {\n                    console.log(\"blurred/\");\n                    // deconstruct actual value\n                    const value = e.target.value;\n                    // deconstruct length\n                    const len = value.length;\n                    // check if both min/max values met\n                    if ((len > 0) && (len >= 50) && (len <= 450)) {\n                        // clear error\n                        clearErrors(name);\n                    } else {\n                        // set error\n                        setTimeout(() => {\n                            setError(name, {\n                                type: \"manual\",\n                                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            );\n        },\n        onChange: (e, name, setValue) => {\n            // deconstruct actual value\n            const value = e.target.value;\n            // set new value\n            setValue(name, value, { shouldValidate: true })\n        },\n        label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n        name: \"homepageComment\",\n        placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n    }\n    // return values to other component\n    return {\n        homepageCheckMessageMeetsCritera,\n        checkMessageMeetsCritera\n    }\n}\n\nexport default CommentsIndividualPostHelper;"]},"metadata":{},"sourceType":"module"}