{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/panes/videoInvitePane/videoInvite.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport TimePicker from 'rc-time-picker';\n\nconst VideoInvitePaneInviteEmployerHelper = _ref => {\n  let {\n    videoInterviewPane,\n    setVideoInterviewStartPane\n  } = _ref;\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleSelect = date => {\n    console.log(date);\n\n    if (new Date(date) > new Date()) {\n      setSelectedDate(date);\n    } else {\n      NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\", \"Date is BEFORE the current date! Reselect..\", 4750);\n    }\n  };\n\n  console.log(\"selectedDate\", selectedDate);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: videoInterviewPane,\n    onClose: () => setVideoInterviewStartPane(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginized-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    onClick: () => setVideoInterviewStartPane(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Cancel/Close Pane\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container-invite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Send An Invite & Start A Video Interview!\",\n    title: \"Initialize A Video Interview With This User!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12 box-col-12\",\n    xl: \"12 xl-100\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-messaging-initialize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 49\n    }\n  }, \"Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    date: selectedDate,\n    onChange: handleSelect,\n    shownDate: new Date(),\n    className: \"custom-date-range-picker\",\n    showMonthAndYearPickers: false,\n    staticRanges: [],\n    direction: \"horizontal\",\n    showMonthArrow: true,\n    months: 2,\n    showDateDisplay: false,\n    inputRanges: [],\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    showHour: true,\n    popupClassName: \"popupClassName\",\n    showMinute: true,\n    showSecond: true,\n    className: \"time-selector-invite-video\",\n    placeholder: \"Select a time for this video conference..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 49\n    }\n  }, \"This is going to invite \", \"\", \" to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..\")))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default VideoInvitePaneInviteEmployerHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/panes/videoInvitePane/videoInvite.js"],"names":["React","Fragment","useState","useEffect","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","CardFooter","Form","Label","Input","InputGroup","InputGroupAddon","InputGroupText","uuid","NotificationManager","Breadcrumb","Calendar","TimePicker","VideoInvitePaneInviteEmployerHelper","videoInterviewPane","setVideoInterviewStartPane","selectedDate","setSelectedDate","Date","handleSelect","date","console","log","warning","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport TimePicker from 'rc-time-picker';\n\n\nconst VideoInvitePaneInviteEmployerHelper = ({ videoInterviewPane, setVideoInterviewStartPane }) => {\n\n    const [ selectedDate, setSelectedDate ] = useState(new Date());\n\n    const handleSelect = (date) => {\n        console.log(date);\n\n        if (new Date(date) > new Date()) {\n            setSelectedDate(date);\n        } else {\n            NotificationManager.warning(\"You MUST select a date that lands on a day AFTER today's date! Please select a date that occurs later than the current date.\", \"Date is BEFORE the current date! Reselect..\", 4750);\n        }\n    }\n\n    console.log(\"selectedDate\", selectedDate);\n\n    return (\n        <Fragment>\n            <Sheet isOpen={videoInterviewPane} onClose={() => setVideoInterviewStartPane(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div className='marginized-header'>\n                            <Button className='btn-square-danger' color={\"danger-2x\"} style={{ width: \"100%\" }} outline onClick={() => setVideoInterviewStartPane(false)}>Cancel/Close Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                        <div className='inner-container-invite'>\n                            <Breadcrumb parent=\"Send An Invite & Start A Video Interview!\" title=\"Initialize A Video Interview With This User!\" />\n                            <Sheet.Content>\n                                <Container fluid={true}>\n                                    <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                        <Card className={\"card-shadow-messaging-initialize\"}>\n                                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                                <h3>Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!</h3>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Calendar\n                                                            date={selectedDate}\n                                                            onChange={handleSelect}\n                                                            shownDate={new Date()}\n                                                            className={\"custom-date-range-picker\"}\n                                                            showMonthAndYearPickers={false}\n                                                            staticRanges={[]}\n                                                            direction={\"horizontal\"}\n                                                            showMonthArrow={true}\n                                                            months={2}\n                                                            showDateDisplay={false}\n                                                            inputRanges={[]}\n                                                            rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                                        />\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <TimePicker showHour={true} popupClassName={\"popupClassName\"} showMinute={true} showSecond={true} className={\"time-selector-invite-video\"} placeholder={\"Select a time for this video conference..\"} />\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter className={\"b-l-primary b-r-primary\"}>\n                                                <p className='lead'>This is going to invite {\"\"} to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..</p>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Container>\n                            </Sheet.Content>\n                        </div>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\n\nexport default VideoInvitePaneInviteEmployerHelper;"]},"metadata":{},"sourceType":"module"}