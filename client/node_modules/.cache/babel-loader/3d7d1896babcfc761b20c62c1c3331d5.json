{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/jobManagement/employers/mainManageApplicants/helpers/miscFunctions.js\";\nimport React, { Fragment } from \"react\";\nimport ReactPlayer from 'react-player';\n\nconst renderImageOrVideo = file => {\n  if (file.type.includes(\"video\")) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon-wrapper-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      key: file.id,\n      controls: true,\n      loop: true,\n      muted: true,\n      url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      className: \"stretch-both-ways-topped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon-wrapper-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: file.id,\n      src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n      className: \"stretch-both-ways-topped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    })));\n  }\n};\n\nconst randomPreview = applicant => {\n  return applicant.attachedFiles[Math.floor(Math.random() * applicant.attachedFiles.length)];\n};\n\nexport default {\n  renderImageOrVideo,\n  randomPreview\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/jobManagement/employers/mainManageApplicants/helpers/miscFunctions.js"],"names":["React","Fragment","ReactPlayer","renderImageOrVideo","file","type","includes","id","process","env","REACT_APP_ASSET_LINK","link","randomPreview","applicant","attachedFiles","Math","floor","random","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACjC,MAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC7B,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEF,IAAI,CAACG,EAAvB;AAA2B,MAAA,QAAQ,EAAE,IAArC;AAA2C,MAAA,IAAI,EAAE,IAAjD;AAAuD,MAAA,KAAK,EAAE,IAA9D;AAAoE,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGN,IAAI,CAACO,IAAK,EAA1H;AAA6H,MAAA,SAAS,EAAC,0BAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH,GARD,MAQO;AACH,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEP,IAAI,CAACG,EAAf;AAAmB,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGN,IAAI,CAACO,IAAK,EAAzE;AAA4E,MAAA,SAAS,EAAC,0BAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;AACJ,CAlBD;;AAmBA,MAAMC,aAAa,GAAIC,SAAD,IAAe;AACjC,SAAOA,SAAS,CAACC,aAAV,CAAwBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACC,aAAV,CAAwBI,MAAnD,CAAxB,CAAP;AACH,CAFD;;AAGA,eAAe;AACXf,EAAAA,kBADW;AAEXS,EAAAA;AAFW,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport ReactPlayer from 'react-player';\n\n\nconst renderImageOrVideo = (file) => {\n    if (file.type.includes(\"video\")) {\n        return (\n            <Fragment>\n                <div className=\"ribbon-wrapper-bottom\">\n                    <ReactPlayer key={file.id} controls={true} loop={true} muted={true} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} className=\"stretch-both-ways-topped\" />\n                </div>\n            </Fragment>\n        );\n    } else {\n        return (\n            <Fragment>\n                <div className=\"ribbon-wrapper-bottom\">\n                    <img key={file.id} src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} className=\"stretch-both-ways-topped\" />\n                </div>\n            </Fragment>\n        );\n    }\n}\nconst randomPreview = (applicant) => {\n    return applicant.attachedFiles[Math.floor(Math.random() * applicant.attachedFiles.length)];\n};\nexport default {\n    renderImageOrVideo,\n    randomPreview\n}"]},"metadata":{},"sourceType":"module"}