{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart';\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst ViewIndividualLiveStreamHelper = _ref => {\n  let {\n    location,\n    information\n  } = _ref;\n  // create history obj for redirects\n  const history = useHistory();\n  const [state, setState] = useState({\n    nav1: null,\n    nav2: null\n  });\n  const [streamData, setStreamData] = useState(null); // eslint-disable-next-line\n\n  const generated = uuid(); // chat begin\n\n  const allMembers = [];\n  const chats = [];\n  const selectedUser = {\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    online: false,\n    id: generated,\n    name: \"Jeremy Blong\",\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n  };\n  const currentUser = {\n    id: generated\n  };\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [videoUrl, setVideoUrlState] = useState(null);\n  const [userData, setUserData] = useState(null); // chat end\n\n  const slider1 = useRef();\n  const slider2 = useRef();\n  useEffect(() => {\n    setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n    setStreamData(location.state.stream);\n    const configuration = {\n      params: {\n        uniqueId: information.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setUserData(user);\n      } else {\n        console.log(\"Err\", res.data);\n        NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n    });\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const addEmoji = emoji => {\n    const text = `${messageInput}${emoji.native}`;\n    setShowEmojiPicker(false);\n    setMessageInput(text);\n  };\n\n  const handleMessageChange = message => {\n    setMessageInput(message);\n  };\n\n  const handleMessagePress = e => {\n    if (e.key === \"Enter\" || e === \"send\") {\n      var container = document.querySelector(\".chat-history\");\n      setTimeout(function () {\n        container.scrollBy({\n          top: 200,\n          behavior: 'smooth'\n        });\n      }, 310);\n      let currentUserId = currentUser.id;\n      let selectedUserId = selectedUser.id;\n      let selectedUserName = selectedUser.name;\n\n      if (messageInput.length > 0) {\n        setMessageInput('');\n        setTimeout(() => {\n          const replyMessage = \"Hey This is \" + selectedUserName + \", Sorry I busy right now, I will text you later\";\n          if (selectedUser.online === true) document.querySelector(\".status-circle\").classList.add('online');\n          selectedUser.online = true;\n        }, 5000);\n      }\n    }\n  };\n\n  const chatMenuToggle = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const selectedChat = allMembers && chats && selectedUser ? chats.find(x => x.users.includes(currentUser.id) && x.users.includes(selectedUser.id)) : null;\n\n  const renderLiveStreamPlayer = () => {\n    if (videoUrl !== null) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          height: \"100%\"\n        },\n        className: \"ribbon-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"ribbon-wrapped-streaming-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ribbon ribbon-clip ribbon-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, \"LIVE FEED!\"), /*#__PURE__*/React.createElement(ReactHlsPlayer, {\n        className: \"custom-streaming-player\",\n        src: videoUrl,\n        autoPlay: true,\n        controls: true,\n        width: \"100%\",\n        height: \"95%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"stretch-bars\",\n        count: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  const renderProfilePictureOrVideo = last => {\n    // last image will be rendered\n    if (!last.type.includes(\"video\")) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        src: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n        className: \"rounded-circle\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${last.link}`,\n        className: \"rounded-circle media media-body\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  console.log(\"userData\", userData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Live Streaming\",\n    title: \"Individual Live Stream (Currently LIVE)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"7\",\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, renderLiveStreamPlayer()), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"5\",\n    xl: \"5 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"streaming-chat-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, userData !== null ? /*#__PURE__*/React.createElement(CardBody, {\n    className: \"streaming-chat-card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"pr-0 chat-right-aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 45\n    }\n  }, renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : /*#__PURE__*/React.createElement(Media, {\n    src: \"../../../../../assets/images/placeholder.png\",\n    className: \"rounded-circle\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 226\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 53\n    }\n  }, selectedUser.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 53\n    }\n  }, selectedUser.online ? 'online' : selectedUser.lastSeenDate)), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline float-left float-sm-right chat-menu-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 108\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-clip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 108\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-headphone-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 108\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-video-camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 108\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item toogle-bar\",\n    onClick: () => chatMenuToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 130\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 152\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history chat-msg-box custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 49\n    }\n  }, typeof selectedChat !== \"undefined\" && selectedChat.messages.length > 0 ? selectedChat.messages.map((item, index) => {\n    const participators = allMembers.chats.find(x => x.id === item.sender);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `message my-message ${item.sender !== currentUser.id ? '' : 'float-right'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      src: selectedUser.image,\n      className: `rounded-circle ${item.sender !== currentUser.id ? 'float-left' : 'float-right'} chat-user-img img-30`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-data text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"message-data-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 73\n      }\n    }, item.time)), item.text));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"img-fluid\",\n    src: start_conversion,\n    alt: \"start conversion \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 61\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 49\n    }\n  }, showEmojiPicker ? /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 57\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    xl: \"12\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smiley-box bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker\",\n    onClick: () => toggleEmojiPicker(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: require('../../../../../assets/images/smiley.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control input-txt-bx\",\n    placeholder: \"Type a message......\",\n    value: messageInput,\n    onKeyPress: e => handleMessagePress(e),\n    onChange: e => handleMessageChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => handleMessagePress('send'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 61\n    }\n  }, Send)))))))))) : null)))), /*#__PURE__*/React.createElement(BottomContainerHelper, {\n    userData: userData,\n    streamData: streamData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    information: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewIndividualLiveStreamHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","Button","Media","CardBody","Form","FormGroup","Input","InputGroup","InputGroupAddon","Nav","NavItem","NavLink","TabPane","TabContent","BottomContainerHelper","useHistory","withRouter","connect","start_conversion","Picker","Send","uuid","moment","ReactHlsPlayer","Skeleton","SkeletonTheme","NotificationManager","axios","ReactPlayer","_","ViewIndividualLiveStreamHelper","location","information","history","state","setState","nav1","nav2","streamData","setStreamData","generated","allMembers","chats","selectedUser","image","require","online","id","name","lastSeenDate","format","currentUser","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","menuToggle","setMenuToggle","videoUrl","setVideoUrlState","userData","setUserData","slider1","slider2","stream","playback_id","configuration","params","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","user","error","catch","err","current","toggleEmojiPicker","addEmoji","emoji","text","native","handleMessageChange","handleMessagePress","e","key","container","document","querySelector","setTimeout","scrollBy","top","behavior","currentUserId","selectedUserId","selectedUserName","length","replyMessage","classList","add","chatMenuToggle","selectedChat","find","x","users","includes","renderLiveStreamPlayer","height","renderProfilePictureOrVideo","last","type","REACT_APP_ASSET_LINK","link","has","profilePicsVideos","messages","map","item","index","participators","sender","time","target","value","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart'\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\n\nconst  ViewIndividualLiveStreamHelper = ({ location, information })  => {\n    // create history obj for redirects\n    const history = useHistory();\n    const [ state, setState ] = useState({ nav1: null, nav2: null });\n    const [ streamData, setStreamData ] = useState(null);\n    // eslint-disable-next-line\n    const generated = uuid();\n    // chat begin\n    const allMembers = [];\n    const chats = [];\n    const selectedUser = {\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        online: false,\n        id: generated,\n        name: \"Jeremy Blong\",\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n    };\n    const currentUser = {\n        id: generated\n    };\n    const [ messageInput, setMessageInput ] = useState('');\n    const [ showEmojiPicker, setShowEmojiPicker ] = useState(false)\n    const [ menuToggle, setMenuToggle ] = useState(false);\n    const [ videoUrl, setVideoUrlState ] = useState(null);\n    const [ userData, setUserData ] = useState(null);\n    // chat end\n    const slider1 = useRef();\n    const slider2 = useRef();\n\n    useEffect(() => {\n\n        setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n        setStreamData(location.state.stream);\n\n        const configuration = {\n            params: {\n                uniqueId: information.uniqueId\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUserData(user);\n            } else {\n                console.log(\"Err\", res.data);\n\n                NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n        })\n\n        setState({\n            nav1: slider1.current,\n            nav2: slider2.current\n          });\n      } , []);\n\n    const toggleEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n  \n    const addEmoji = (emoji) =>  {\n        const text = `${messageInput}${emoji.native}`;\n        setShowEmojiPicker(false);\n        setMessageInput(text)\n    }\n\n    const handleMessageChange = (message) => {\n        setMessageInput(message)\n    }\n\n    const handleMessagePress = (e) => {\n        if (e.key === \"Enter\" || e === \"send\") {\n\n            var container = document.querySelector(\".chat-history\");\n            setTimeout(function () {\n                container.scrollBy({ top: 200, behavior: 'smooth' });\n            }, 310)\n\n            let currentUserId = currentUser.id;\n            let selectedUserId = selectedUser.id;\n            let selectedUserName = selectedUser.name;\n           \n            if (messageInput.length > 0) {\n\n                setMessageInput('');\n                setTimeout(() => {\n                    const replyMessage = \"Hey This is \" + selectedUserName + \", Sorry I busy right now, I will text you later\";\n                    if (selectedUser.online === true)\n                        document.querySelector(\".status-circle\").classList.add('online');\n                        selectedUser.online = true;\n\n                }, 5000);\n            }\n        }\n    }\n\n    const chatMenuToggle = () => {\n        setMenuToggle(!menuToggle)\n    }\n    const selectedChat = (allMembers && chats && selectedUser) ? chats.find(x => x.users.includes(currentUser.id) && x.users.includes(selectedUser.id)) : null;\n\n    const renderLiveStreamPlayer = () => {\n        if (videoUrl !== null) {\n            return (\n                <Fragment>\n                    <Card style={{ height: \"100%\" }} className=\"ribbon-wrapper\">\n                        <CardBody className={\"ribbon-wrapped-streaming-card\"}>\n                            <div className=\"ribbon ribbon-clip ribbon-info\">LIVE FEED!</div>\n                            <ReactHlsPlayer \n                                className={\"custom-streaming-player\"}\n                                src={videoUrl}\n                                autoPlay={true}\n                                controls={true}\n                                width=\"100%\"\n                                height=\"95%\"\n                            />\n                        </CardBody>\n                    </Card>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"stretch-bars\"} count={30} />\n                        </p>\n                    </SkeletonTheme>\n                </Fragment>\n            );\n        }\n    }\n    const renderProfilePictureOrVideo = (last) => {\n        // last image will be rendered\n        if (!last.type.includes(\"video\")) {\n            return (\n                <Fragment>\n                    <Media src={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} className=\"rounded-circle\" alt=\"\" />\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${last.link}`} className=\"rounded-circle media media-body\" alt=\"\" />\n                </Fragment>\n            );\n        }\n    }\n    console.log(\"userData\", userData);\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Live Streaming\" title=\"Individual Live Stream (Currently LIVE)\"/>\n            <Container fluid={true}>\n                <Row>\n                    <Col>\n                    <Card>\n                        <Row className=\"product-page-main\">\n                            <Col sm=\"12\" md=\"12\" lg=\"7\" xl=\"7\">\n                                {renderLiveStreamPlayer()}\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"5\" xl=\"5 xl-100\">\n                                <Card className={\"streaming-chat-card-wrapper\"}>\n                                    {userData !== null ? <CardBody className={\"streaming-chat-card-body p-0\"}>\n                                        <Row className=\"chat-box\">\n                                        <Col className=\"pr-0 chat-right-aside\">\n                                            <div className=\"chat\">\n                                            <div className=\"chat-header clearfix\">\n                                                {renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : <Media src={\"../../../../../assets/images/placeholder.png\"} className=\"rounded-circle\" alt=\"\" />)}\n                                                <div className=\"about\">\n                                                    <div className=\"name\">\n                                                        {selectedUser.name}\n                                                    </div>\n                                                    <div className=\"status digits\" >\n                                                        {selectedUser.online ? 'online' : selectedUser.lastSeenDate}\n                                                    </div>\n                                                </div>\n                                                <ul className=\"list-inline float-left float-sm-right chat-menu-icons\">\n                                                    <li className=\"list-inline-item\"><a href=\"#javascript\"><i className=\"icon-search\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href=\"#javascript\"><i className=\"icon-clip\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href=\"#javascript\"><i className=\"icon-headphone-alt\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href=\"#javascript\"><i className=\"icon-video-camera\"></i></a></li>\n                                                    <li className=\"list-inline-item toogle-bar\" onClick={() => chatMenuToggle()}><a href=\"#javascript\"><i className=\"icon-menu\"></i></a></li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-history chat-msg-box custom-scrollbar\" >\n                                                <ul>\n                                                    {typeof selectedChat !== \"undefined\" && selectedChat.messages.length > 0 ? selectedChat.messages.map((item, index) => {\n                                                        const participators = allMembers.chats.find(x => x.id === item.sender);\n                                                        return (\n                                                            <li key={index} className=\"clearfix\">\n                                                                <div className={`message my-message ${item.sender !== currentUser.id ? '' : 'float-right'}`}>\n                                                                    <Media src={selectedUser.image}\n                                                                        className={`rounded-circle ${item.sender !== currentUser.id ? 'float-left' : 'float-right'} chat-user-img img-30`} alt=\"\" />\n                                                                    <div className=\"message-data text-right\">\n                                                                        <span className=\"message-data-time\">{item.time}</span>\n                                                                    </div>\n                                                                    {item.text}\n                                                                </div>\n                                                            </li>\n                                                        );\n                                                    }) :\n                                                        <div>\n                                                            <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                                                        </div>\n                                                    }\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-message clearfix\">\n                                                <Row>\n                                                <div className=\"mb-2\">\n                                                {showEmojiPicker ? (\n                                                        <Picker set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                                                ) : null}\n                                                </div>\n                                                <Col xl=\"12\" className=\"d-flex\">\n                                                    <div className=\"smiley-box bg-primary\">\n                                                    \n                                                        <div className=\"picker\" onClick={() => toggleEmojiPicker()}>\n                                                        <Media src={require('../../../../../assets/images/smiley.png')}  alt=\"\"/>\n                                                        </div>\n\n                                                    </div>\n                                                    <InputGroup className=\"text-box\">\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control input-txt-bx\"\n                                                            placeholder=\"Type a message......\"\n                                                            value={messageInput}\n                                                            onKeyPress={(e) => handleMessagePress(e)}\n                                                            onChange={(e) => handleMessageChange(e.target.value)}\n                                                        />\n                                                        <InputGroupAddon addonType=\"append\">\n                                                            <Button color=\"primary\" onClick={() => handleMessagePress('send')} >{Send}</Button>\n                                                        </InputGroupAddon>\n                                                    </InputGroup>\n                                                </Col>\n                                                </Row>\n                                            </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </CardBody> : null}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n                <BottomContainerHelper userData={userData} streamData={streamData} /></Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        information: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(withRouter(ViewIndividualLiveStreamHelper));\n"]},"metadata":{},"sourceType":"module"}