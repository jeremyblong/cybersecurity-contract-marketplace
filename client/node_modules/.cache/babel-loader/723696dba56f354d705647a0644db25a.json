{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport Dropzone from 'react-dropzone-uploader';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport FileViewer from 'react-file-viewer';\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType\n} = helpers;\n\nconst CreateNewCoursePageTwo = _ref => {\n  let {\n    setProgress\n  } = _ref;\n  const dropzoneRef = useRef(null); // state initialization\n\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [subtitle, setSubTitleValue] = useState(\"\");\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const handleTourActivate = () => {};\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, \"Add a \\\"Sub-Section Course Content\\\" section with this form. If you're confused as to what this means, \", /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => handleTourActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 149\n    }\n  }, \"click this\"), \" to retreieve more details on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 237\n    }\n  }, \"how to create sellable content/courses\")), /*#__PURE__*/React.createElement(InputGroup, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 82\n    }\n  }, \"Add Course Section\")), /*#__PURE__*/React.createElement(Input, {\n    value: subtitle,\n    onChange: e => setSubTitleValue(e.target.value),\n    className: \"form-control min-height-input-courses\",\n    name: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter a course sub-section title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => {},\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 82\n    }\n  }, \"Add New Section\")))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewCoursePageTwo);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js"],"names":["React","Fragment","useRef","useState","connect","Dropzone","helpers","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","InputGroup","InputGroupAddon","InputGroupText","FileViewer","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","CreateNewCoursePageTwo","setProgress","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","subtitle","setSubTitleValue","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","file","target","files","URL","createObjectURL","renderPreviewOfFile","data","fileWithMeta","type","err","console","log","id","handleTourActivate","functions","dropzone","height","dropzoneActive","borderColor","paddingTop","width","value","mapStateToProps","state","userData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport Dropzone from 'react-dropzone-uploader';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport FileViewer from 'react-file-viewer';\n\n\nconst { \n    renderCustomButtonDropzone,\n    onSubmitHelper,\n    calculateFileType\n} = helpers;\n\nconst CreateNewCoursePageTwo = ({ setProgress }) => {\n\n    const dropzoneRef = useRef(null);\n    // state initialization\n    const [fileReady, setFileReadyStatus] = useState(false);\n    const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n    const [filePathData, setCurrentFilePathData] = useState(null);\n    const [fileMetaData, setMetaFileData] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ subtitle, setSubTitleValue ] = useState(\"\");\n\n\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const handleTourActivate = () => {\n\n    }\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <Dropzone\n                                    ref={dropzoneRef}\n                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                    maxFiles={1}\n                                    autoUpload={true}\n                                    onChangeStatus={(functions) => {\n                                        setChangeOptions(functions);\n                                    }}\n                                    submitButtonDisabled={false}\n                                    InputComponent={CustomInputHelper}\n                                    getFilesFromEvent={null}\n                                    onSubmit={onSubmitHelper}\n                                    accept=\"video/*\"\n                                    SubmitButtonComponent={(data) => {\n                                        return (\n                                            <div className=\"absolutely-position-submit-btn\">\n                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setCurrentUploadFileStatus)}\n                                            </div>\n                                        );\n                                    }}\n                                    multiple={false}\n                                    canCancel={false}\n                                    styles={{\n                                        dropzone: { height: 350 },\n                                        dropzoneActive: { borderColor: 'green' },\n                                    }}\n                                />\n                            </Row>\n                            <hr />\n                            <Row style={{ paddingTop: \"12.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Add a \"Sub-Section Course Content\" section with this form. If you're confused as to what this means, <div onClick={() => handleTourActivate()}>click this</div> to retreieve more details on <strong>how to create sellable content/courses</strong></Label>\n                                        <InputGroup style={{ width: \"100%\" }}>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Add Course Section\"}</InputGroupText></InputGroupAddon>\n                                            <Input value={subtitle} onChange={(e) => setSubTitleValue(e.target.value)} className=\"form-control min-height-input-courses\" name={\"subtitle\"} type=\"text\" placeholder={\"Enter a course sub-section title...\"} />\n                                            <InputGroupAddon addonType=\"prepend\"><Button style={{ width: \"100%\" }} onClick={() => {\n                                        \n                                            }} className=\"btn-square-info\" color=\"info\" size=\"lg\">Add New Section</Button></InputGroupAddon>\n                                        </InputGroup>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(CreateNewCoursePageTwo);"]},"metadata":{},"sourceType":"module"}