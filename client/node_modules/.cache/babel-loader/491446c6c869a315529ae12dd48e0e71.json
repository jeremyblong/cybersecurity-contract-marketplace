{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/renderCommentSection.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera;\nconst {\n  RenderPopoverEmojiLogic,\n  RenderEmojiLogic\n} = helpers;\n\nconst CommentsIndividualCourseHelper = _ref => {\n  let {\n    courseData,\n    userData\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n\n  const usePrevious = value => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  const [comments, setCommentsState] = useState([]);\n  const [popover, setPopoverState] = useState({});\n  const [changed, setChanged] = useState([]);\n  useEffect(() => {\n    setCommentsState(courseData.comments);\n    setPopoverState(() => {\n      const newObjCount = {};\n      const comments = courseData.comments; // reassign state items in preperation for future state changes...\n\n      for (const keyyy in comments) {\n        newObjCount[`comment${keyyy}`] = false;\n      }\n\n      setPopoverState(newObjCount);\n    });\n  }, []);\n  console.log(\"popover state...:\", popover);\n  const currentValues = getValues();\n\n  const onSubmitForm = data => {\n    console.log(\"onSubmitForm submitted form properly...!:\", data);\n    const {\n      comment\n    } = data;\n    const configuration = {\n      id: userData.uniqueId,\n      courseId: courseData.id,\n      comment,\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      accountType: userData.accountType,\n      mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/course/individual/listing`, configuration).then(res => {\n      if (res.data.message === \"Successfully posted comment!\") {\n        console.log(res.data);\n        const {\n          updatedComments\n        } = res.data;\n        setValue(\"comment\", \"\", {\n          shouldValidate: false\n        });\n        setCommentsState(updatedComments);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleRespondEmoji = (emojiName, comment) => {\n    console.log(\"emojiName\", emojiName);\n    const configuration = {\n      emojiName,\n      id: userData.uniqueId,\n      courseId: courseData.id,\n      commentID: comment.id,\n      comment\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/course/learning`, configuration).then(res => {\n      if (res.data.message === \"Successfully reacted to comment!\") {\n        console.log(res.data);\n        const {\n          course\n        } = res.data;\n        NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n        setCommentsState(course.comments);\n        setChanged(course.comments);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderFormErrors = errors => {\n    console.log(\"renderFormErrors\", errors);\n  };\n\n  const renderCommentPicOrVideo = file => {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"media-body align-self-center\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      })));\n    }\n  };\n\n  console.log(\"CHANGE variable MAIN component :\", changed);\n  const prevCommentState = usePrevious(comments);\n  useEffect(() => () => {\n    console.log(\"reactions update or unmount\"); // update state\n\n    console.log(\"prev VS new\", prevCommentState, comments); // if (condition) {\n    //     setCommentsState(comments);\n    // } \n  }, [comments]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmitForm, errors => renderFormErrors(errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, checkMessageMeetsCritera.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\"), {\n    onChange: e => {\n      checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n      const caret = e.target.selectionStart;\n      const element = e.target;\n      window.requestAnimationFrame(() => {\n        element.selectionStart = caret;\n        element.selectionEnd = caret;\n      });\n    },\n    value: currentValues.comment,\n    name: \"comment\",\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: checkMessageMeetsCritera.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), errors.comment ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 43\n    }\n  }, errors.comment.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-course-comment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-primary\",\n    color: \"primary-2x\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Leave/Post Comment!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-list-course-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n    console.log(\"comment\", comment);\n    const popoverIDTarget = `comment${index}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: require(\"../../../../../../../assets/images/blog/comment.jpg\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 130\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 53\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 94\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\", \" \", /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n      reactions: comment.reactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 173\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: popoverIDTarget,\n      onClick: () => {\n        setPopoverState(prevState => {\n          return { ...prevState,\n            [`comment${index}`]: true\n          };\n        });\n      },\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 100\n      }\n    }), \"React to post w/emoji\"), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogic, {\n      handleRespondEmoji: handleRespondEmoji,\n      comment: comment,\n      courseData: courseData,\n      userData: userData,\n      reactions: comment.reactions,\n      setPopoverState: setPopoverState,\n      popoverState: popover,\n      targetAndPopState: popoverIDTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CommentsIndividualCourseHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/renderCommentSection.js"],"names":["React","Fragment","useState","useEffect","useRef","Row","Col","Media","Input","Label","Button","Form","axios","connect","useForm","Controller","MainHooksCourseIndividualCustomHelpers","ReactPlayer","helpers","NotificationManager","checkMessageMeetsCritera","RenderPopoverEmojiLogic","RenderEmojiLogic","CommentsIndividualCourseHelper","courseData","userData","register","handleSubmit","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","usePrevious","value","ref","current","comments","setCommentsState","popover","setPopoverState","changed","setChanged","newObjCount","keyyy","console","log","currentValues","onSubmitForm","data","comment","configuration","id","uniqueId","courseId","firstName","lastName","accountType","mostRecentProfilePicVideo","profilePicsVideos","length","post","process","env","REACT_APP_BASE_URL","then","res","message","updatedComments","shouldValidate","catch","err","handleRespondEmoji","emojiName","commentID","course","success","renderFormErrors","renderCommentPicOrVideo","file","type","includes","REACT_APP_ASSET_LINK","link","prevCommentState","label","check","e","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","placeholder","map","index","popoverIDTarget","posterPicOrVideo","require","posterName","posterAccountType","reactions","prevState","commentText","subComments","subcomment","idx","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\n\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera;\n\n\nconst { RenderPopoverEmojiLogic, RenderEmojiLogic } = helpers;\n\nconst CommentsIndividualCourseHelper = ({ courseData, userData }) => {\n\n    const { register, handleSubmit, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n\n    const usePrevious = (value) => {\n        const ref = useRef();\n        useEffect(() => {\n          ref.current = value;\n        });\n        return ref.current;\n    }\n\n    const [ comments, setCommentsState ] = useState([]);\n    const [ popover, setPopoverState ] = useState({}); \n    const [ changed, setChanged ] = useState([]);\n\n    useEffect(() => {\n        setCommentsState(courseData.comments);\n        \n        setPopoverState(() => {\n            const newObjCount = {};\n            const comments = courseData.comments;\n            // reassign state items in preperation for future state changes...\n            for (const keyyy in comments) {\n                newObjCount[`comment${keyyy}`] = false;\n            }\n            setPopoverState(newObjCount);\n        })\n    }, []);\n\n    console.log(\"popover state...:\", popover);\n\n    const currentValues = getValues();\n\n    const onSubmitForm = (data) => {\n        console.log(\"onSubmitForm submitted form properly...!:\", data);\n\n        const { comment } = data;\n\n        const configuration = {\n            id: userData.uniqueId,\n            courseId: courseData.id,\n            comment,\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            accountType: userData.accountType,\n            mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/course/individual/listing`, configuration).then((res) => {\n            if (res.data.message === \"Successfully posted comment!\") {\n                console.log(res.data);\n\n                const { updatedComments } = res.data;\n\n                setValue(\"comment\", \"\", { shouldValidate: false });\n\n                setCommentsState(updatedComments);\n\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const handleRespondEmoji = (emojiName, comment) => {\n        console.log(\"emojiName\", emojiName);\n\n        const configuration = {\n            emojiName,\n            id: userData.uniqueId,\n            courseId: courseData.id,\n            commentID: comment.id,\n            comment\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/respond/emoji/comment/course/learning`, configuration).then((res) => {\n            if (res.data.message === \"Successfully reacted to comment!\") {\n                console.log(res.data);\n\n                const { course } = res.data;\n\n                NotificationManager.success(\"Successfully REACTED to the selected comment, Your response is now live!\", \"Successfully reacted to comment!\", 4500);\n                \n                setCommentsState(course.comments);\n\n                setChanged(course.comments);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderFormErrors = (errors) => {\n        console.log(\"renderFormErrors\", errors);\n    }\n    const renderCommentPicOrVideo = (file) => {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"media-body align-self-center\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Media> \n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <Media className=\"align-self-center\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} alt=\"\"/>\n                    </Media>\n                </Fragment>\n            );\n        }  \n    }\n    console.log(\"CHANGE variable MAIN component :\", changed);\n\n    const prevCommentState = usePrevious(comments);\n\n    useEffect(() => () => {\n        console.log(\"reactions update or unmount\");\n        // update state\n\n        console.log(\"prev VS new\", prevCommentState, comments);\n        // if (condition) {\n        //     setCommentsState(comments);\n        // } \n    }, [comments] );\n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <Form onSubmit={handleSubmit(onSubmitForm, (errors) => renderFormErrors(errors))}>\n                    <hr/>\n                        <Label className={\"heavy-label-course\"}>{checkMessageMeetsCritera.label}</Label>\n                        <Input {...checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\")} onChange={(e) => {\n\n                            checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n\n                            const caret = e.target.selectionStart;\n                            const element = e.target;\n                            window.requestAnimationFrame(() => {\n                                element.selectionStart = caret\n                                element.selectionEnd = caret\n                            })\n                        }} value={currentValues.comment} name={\"comment\"} className={\"form-control\"} rows={6} type={\"textarea\"} placeholder={checkMessageMeetsCritera.placeholder} />\n                        {errors.comment ? <span className=\"span-tooltip\">{errors.comment.message}</span> : null}\n                        <div className={\"float-right-course-comment-btn\"}>\n                            <Button type={\"submit\"} className={\"btn-square-primary\"} color={\"primary-2x\"} outline>Leave/Post Comment!</Button>\n                        </div>\n                    <hr />\n                </Form>\n                <ul className={\"comment-list-course-ul\"}>\n                    {typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n                        console.log(\"comment\", comment);\n\n                        const popoverIDTarget = `comment${index}`;\n                        return (\n                            <Fragment key={index}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : <Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/comment.jpg\")} alt=\"\"/>}\n                                        <Media body>\n                                            <Row>\n                                                <Col md=\"4 xl-100\">\n                                                    <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"} <RenderEmojiLogic reactions={comment.reactions} /></span></h6>\n                                                </Col>\n                                                <Col md=\"8 xl-100\">\n                                                    <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                    {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                    <li id={popoverIDTarget} onClick={() => {\n                                                        setPopoverState(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                [`comment${index}`]: true\n                                                            }\n                                                        });\n                                                    }} className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"React to post w/emoji\"}</li>\n                                                    <RenderPopoverEmojiLogic handleRespondEmoji={handleRespondEmoji} comment={comment} courseData={courseData} userData={userData} reactions={comment.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                                                    </ul>\n                                                </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CommentsIndividualCourseHelper);\n"]},"metadata":{},"sourceType":"module"}