{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/view/viewBalanceInfo.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { CardHeader, CardBody, CardFooter, Card, Row, Col, Container } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst ViewAllBalanceRelatedInfoHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [balanceInfo, setBalanceInfo] = useState(null);\n  const [instantAvailable, setInstantAvailable] = useState(null);\n  const [available, setAvailiable] = useState(null);\n  const [pending, setPending] = useState(null);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const config = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then(res => {\n      if (res.data.message === \"Gathered balance!\") {\n        const {\n          bal\n        } = res.data;\n        setBalanceInfo(bal);\n\n        for (let index = 0; index < bal.instant_available.length; index++) {\n          const element = bal.instant_available[index];\n\n          if (element.currency === \"usd\") {\n            setInstantAvailable(element);\n            break;\n          }\n        }\n\n        for (let index = 0; index < bal.available.length; index++) {\n          const element = bal.available[index];\n\n          if (element.currency === \"usd\") {\n            setAvailiable(element);\n            break;\n          }\n        }\n\n        for (let index = 0; index < bal.pending.length; index++) {\n          const element = bal.pending[index];\n\n          if (element.currency === \"usd\") {\n            setPending(element);\n            break;\n          }\n        }\n\n        console.log(res.data); // setReady(true);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information. Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information. Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"View Balance (Pending, Available & Held)\",\n    title: \"View Balance & Other Related Critical Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    md: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-card-balance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"balance-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Below you will be able to find, manage and view your related account balances & other related info!\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"4\",\n    md: \"12\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-bal-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-success border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"header-balance-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }\n  }, \"Available\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 49\n    }\n  }, \"You currently \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 83\n    }\n  }, \"available balance\"), \" which you have \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 133\n    }\n  }, \"immediate\"), \" access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 49\n    }\n  }), ready === true && userData.accountType === \"hackers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 105\n    }\n  }, \"$\", (available / 100).amount.toFixed(2)) : ready === true && userData.accountType === \"employers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 247\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 294\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-bottom-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 65\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"4\",\n    md: \"12\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-bal-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"header-balance-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 49\n    }\n  }, userData.accountType === \"hackers\" ? \"Instant Available\" : \"Connect Reserved\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 69\n    }\n  }, \"Funds held\"), \" due to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 104\n    }\n  }, \"negative\"), \" balances on hacker account types. These are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 174\n    }\n  }, \"\\\"held\\\"\"), \" funds.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 49\n    }\n  }), ready === true && userData.accountType === \"hackers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 105\n    }\n  }, \"$\", (instantAvailable / 100).amount.toFixed(2)) : ready === true && userData.accountType === \"employers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 254\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 301\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-bottom-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 65\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"4\",\n    md: \"12\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-bal-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"header-balance-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 49\n    }\n  }, \"Pending\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 49\n    }\n  }, \"These funds are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 85\n    }\n  }, \"\\\"pending\\\"\"), \" funds which means they are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 139\n    }\n  }, \"not yet\"), \" available due to the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 185\n    }\n  }, \"7-day rolling pay cycle\"), \". It generally takes a few days (7) for newly aquired funds to become available!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 49\n    }\n  }), ready === true && userData.accountType === \"hackers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 105\n    }\n  }, \"$\", (pending / 100).amount.toFixed(2)) : ready === true && userData.accountType === \"employers\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heavy-instant-availiable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 245\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 292\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-bottom-bal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#c9c9c9\",\n    highlightColor: \"#444\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    count: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 65\n    }\n  })))))))))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewAllBalanceRelatedInfoHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/view/viewBalanceInfo.js"],"names":["React","Fragment","useState","useEffect","CardHeader","CardBody","CardFooter","Card","Row","Col","Container","Breadcrumb","connect","axios","NotificationManager","Skeleton","SkeletonTheme","ViewAllBalanceRelatedInfoHelper","userData","balanceInfo","setBalanceInfo","instantAvailable","setInstantAvailable","available","setAvailiable","pending","setPending","ready","setReady","config","params","id","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","bal","index","instant_available","length","element","currency","console","log","warning","catch","err","amount","toFixed","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { CardHeader, CardBody, CardFooter, Card, Row, Col, Container } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nconst ViewAllBalanceRelatedInfoHelper = ({ userData }) => {\n\n    const [ balanceInfo, setBalanceInfo ] = useState(null);\n    const [ instantAvailable, setInstantAvailable ] = useState(null);\n    const [ available, setAvailiable ] = useState(null);\n    const [ pending, setPending ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then((res) => {\n            if (res.data.message === \"Gathered balance!\") {\n\n                const { bal } = res.data;\n\n                setBalanceInfo(bal);\n\n                for (let index = 0; index < bal.instant_available.length; index++) {\n                    const element = bal.instant_available[index];\n                    if (element.currency === \"usd\") {\n                        setInstantAvailable(element);\n                        break;\n                    }\n                }\n                for (let index = 0; index < bal.available.length; index++) {\n                    const element = bal.available[index];\n                    if (element.currency === \"usd\") {\n                        setAvailiable(element);\n                        break;\n                    }\n                }\n                for (let index = 0; index < bal.pending.length; index++) {\n                    const element = bal.pending[index];\n                    if (element.currency === \"usd\") {\n                        setPending(element);\n                        break;\n                    }\n                }\n\n                console.log(res.data);\n\n                // setReady(true);\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information. Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information. Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, [])\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"View Balance (Pending, Available & Held)\" title=\"View Balance & Other Related Critical Information\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                        <Card className={\"shadow-card-balance\"}>\n                            <CardHeader className='b-l-info b-r-info'>\n                                <h3 className='balance-title'>Below you will be able to find, manage and view your related account balances & other related info!</h3>\n                            </CardHeader>\n                            <CardBody className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                                        <Card className='card-bal-bal'>\n                                            <CardHeader className=\"b-l-success border-3\">\n                                                <h5 className='header-balance-green'>Available</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <p className='lead'>You currently <strong>available balance</strong> which you have <strong>immediate</strong> access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..</p>\n                                                <hr />\n                                                {ready === true && userData.accountType === \"hackers\" ? <p className='heavy-instant-availiable'>${(available / 100).amount.toFixed(2)}</p> : ready === true && userData.accountType === \"employers\" ? <p className='heavy-instant-availiable'></p> : <Fragment>\n                                                    <div className='position-bottom-bal'>\n                                                        <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                                            <p>\n                                                                <Skeleton count={12} />\n                                                            </p>\n                                                        </SkeletonTheme>\n                                                    </div>\n                                                </Fragment>}\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                                        <Card className='card-bal-bal'>\n                                            <CardHeader className=\"b-l-secondary border-3\">\n                                                <h5 className='header-balance-red'>{userData.accountType === \"hackers\" ? \"Instant Available\" : \"Connect Reserved\"}</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <p className='lead'><strong>Funds held</strong> due to <strong>negative</strong> balances on hacker account types. These are <strong>\"held\"</strong> funds.</p>\n                                                <hr />\n                                                {ready === true && userData.accountType === \"hackers\" ? <p className='heavy-instant-availiable'>${(instantAvailable / 100).amount.toFixed(2)}</p> : ready === true && userData.accountType === \"employers\" ? <p className='heavy-instant-availiable'></p> : <Fragment>\n                                                    <div className='position-bottom-bal'>\n                                                        <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                                            <p>\n                                                                <Skeleton count={12} />\n                                                            </p>\n                                                        </SkeletonTheme>\n                                                    </div>\n                                                </Fragment>}\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                                        <Card className='card-bal-bal'>\n                                            <CardHeader className=\"b-l-primary border-3\">\n                                                <h5 className='header-balance-primary'>Pending</h5>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <p className='lead'>These funds are <strong>\"pending\"</strong> funds which means they are <strong>not yet</strong> available due to the <strong>7-day rolling pay cycle</strong>. It generally takes a few days (7) for newly aquired funds to become available!</p>\n                                                <hr />\n                                                {ready === true && userData.accountType === \"hackers\" ? <p className='heavy-instant-availiable'>${(pending / 100).amount.toFixed(2)}</p> : ready === true && userData.accountType === \"employers\" ? <p className='heavy-instant-availiable'></p> : <Fragment>\n                                                    <div className='position-bottom-bal'>\n                                                        <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                                            <p>\n                                                                <Skeleton count={12} />\n                                                            </p>\n                                                        </SkeletonTheme>\n                                                    </div>\n                                                </Fragment>}\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-info b-r-info'>\n\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewAllBalanceRelatedInfoHelper);"]},"metadata":{},"sourceType":"module"}