{"ast":null,"code":"import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst HookHelpers = () => {\n  const {\n    register,\n    setError\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const startBidCheck = {\n    check: { ...register(\"startBid\", {\n        required: {\n          value: true,\n          message: \"You MUST enter AT least 1 characters to 10 characters\"\n        },\n        minLength: {\n          value: 1,\n          message: \"You must enter AT Least 1 characters\"\n        },\n        maxLength: {\n          value: 10,\n          message: \"You may ONLY enter 10 characters or less\"\n        },\n        onBlur: e => {\n          console.log(\"blurred\", e); // code here...\n\n          setError(\"startBid\", {\n            type: \"manual\",\n            message: \"Enter something at least??\"\n          });\n        }\n      })\n    },\n    name: \"startBid\",\n    placeholder: \"Enter a starting bid...\",\n    type: \"text\",\n    label: \"Starting Bid\"\n  };\n  return {\n    startBidCheck\n  };\n};\n\nexport default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["React","useState","useRef","useEffect","Fragment","useForm","Controller","HookHelpers","register","setError","mode","reValidateMode","startBidCheck","check","required","value","message","minLength","maxLength","onBlur","e","console","log","type","name","placeholder","label"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBJ,OAAO,CAAC;AACnCK,IAAAA,IAAI,EAAE,WAD6B;AAEnCC,IAAAA,cAAc,EAAE;AAFmB,GAAD,CAAtC;AAKA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,EAAC,GAAGL,QAAQ,CAAC,UAAD,EAAa;AAAEM,QAAAA,QAAQ,EAAE;AACxCC,UAAAA,KAAK,EAAE,IADiC;AAExCC,UAAAA,OAAO,EAAE;AAF+B,SAAZ;AAG7BC,QAAAA,SAAS,EAAE;AACVF,UAAAA,KAAK,EAAE,CADG;AAEVC,UAAAA,OAAO,EAAE;AAFC,SAHkB;AAM7BE,QAAAA,SAAS,EAAE;AACVH,UAAAA,KAAK,EAAE,EADG;AAEVC,UAAAA,OAAO,EAAE;AAFC,SANkB;AAS7BG,QAAAA,MAAM,EAAGC,CAAD,IAAO;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB,EADc,CAEd;;AACAX,UAAAA,QAAQ,CAAC,UAAD,EAAa;AACjBc,YAAAA,IAAI,EAAE,QADW;AAEjBP,YAAAA,OAAO,EAAE;AAFQ,WAAb,CAAR;AAIH;AAhB+B,OAAb;AAAZ,KADW;AAkBlBQ,IAAAA,IAAI,EAAE,UAlBY;AAmBlBC,IAAAA,WAAW,EAAE,yBAnBK;AAoBlBF,IAAAA,IAAI,EAAE,MApBY;AAqBlBG,IAAAA,KAAK,EAAE;AArBW,GAAtB;AAwBA,SAAO;AACHd,IAAAA;AADG,GAAP;AAGH,CAlCD;;AAqCA,eAAeL,WAAf","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\n\n\nconst HookHelpers = () => {\n\n    const { register, setError } = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n    \n    const startBidCheck = {\n        check: {...register(\"startBid\", { required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters\"\n        }, minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n        }, maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n        }, onBlur: (e) => {\n            console.log(\"blurred\", e);\n            // code here...\n            setError(\"startBid\", {\n                type: \"manual\",\n                message: \"Enter something at least??\",\n            });\n        }})},\n        name: \"startBid\",\n        placeholder: \"Enter a starting bid...\",\n        type: \"text\",\n        label: \"Starting Bid\"\n    };\n\n    return {\n        startBidCheck\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}