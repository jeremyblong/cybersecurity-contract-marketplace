{"ast":null,"code":"import React from'react';import{Route,Redirect,withRouter}from'react-router-dom';import{connect}from\"react-redux\";import _ from\"lodash\";import ReactLoading from'react-loading';class ProtectedRoute extends React.Component{constructor(props){super(props);this.state={isLoading:true};}componentDidUpdate(prevProps){if(this.state.isLoading===true){if(JSON.stringify(prevProps.userData)!==JSON.stringify(this.props.userData)){this.setState({isLoading:false});}}}componentDidMount(){setTimeout(()=>{this.setState({isLoading:false});},2500);}render(){const{component:Component,...rest}=this.props;if(this.state.isLoading){return/*#__PURE__*/React.createElement(ReactLoading,{type:\"cubes\",color:\"#00acee\",height:350,width:650});}else{if(!_.isEmpty(this.props.userData)){return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:props=>/*#__PURE__*/React.createElement(Component,props)}));}else{return/*#__PURE__*/React.createElement(Redirect,{to:\"/sign-in\"});}}}}const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(withRouter(ProtectedRoute));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/route/protected/protectedRoute.js"],"names":["React","Route","Redirect","withRouter","connect","_","ReactLoading","ProtectedRoute","Component","constructor","props","state","isLoading","componentDidUpdate","prevProps","JSON","stringify","userData","setState","componentDidMount","setTimeout","render","component","rest","isEmpty","mapStateToProps","auth","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,kBAA5C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CAEA,KAAMC,CAAAA,cAAN,QAA6BP,CAAAA,KAAK,CAACQ,SAAU,CAC7CC,WAAW,CAACC,KAAD,CAAQ,CACf,MAAMA,KAAN,EAEA,KAAKC,KAAL,CAAa,CACTC,SAAS,CAAE,IADF,CAAb,CAGH,CACGC,kBAAkB,CAAEC,SAAF,CAAa,CAC3B,GAAI,KAAKH,KAAL,CAAWC,SAAX,GAAyB,IAA7B,CAAmC,CAC/B,GAAIG,IAAI,CAACC,SAAL,CAAeF,SAAS,CAACG,QAAzB,IAAuCF,IAAI,CAACC,SAAL,CAAe,KAAKN,KAAL,CAAWO,QAA1B,CAA3C,CAAgF,CAE5E,KAAKC,QAAL,CAAc,CACVN,SAAS,CAAE,KADD,CAAd,EAGH,CACJ,CACJ,CACDO,iBAAiB,EAAI,CACjBC,UAAU,CAAC,IAAM,CACb,KAAKF,QAAL,CAAc,CACVN,SAAS,CAAE,KADD,CAAd,EAGH,CAJS,CAIP,IAJO,CAAV,CAKH,CACDS,MAAM,EAAG,CACL,KAAM,CAAEC,SAAS,CAAEd,SAAb,CAAwB,GAAGe,IAA3B,EAAoC,KAAKb,KAA/C,CAEA,GAAG,KAAKC,KAAL,CAAWC,SAAd,CAAyB,CACrB,mBAAO,oBAAC,YAAD,EAAc,IAAI,CAAE,OAApB,CAA6B,KAAK,CAAE,SAApC,CAA+C,MAAM,CAAE,GAAvD,CAA4D,KAAK,CAAE,GAAnE,EAAP,CACH,CAFD,IAEO,CACH,GAAG,CAACP,CAAC,CAACmB,OAAF,CAAU,KAAKd,KAAL,CAAWO,QAArB,CAAJ,CAAmC,CAC/B,mBAAQ,oBAAC,KAAD,kBAAWM,IAAX,EAAiB,MAAM,CAAGb,KAAD,eAAY,oBAAC,SAAD,CAAeA,KAAf,CAArC,GAAR,CACH,CAFD,IAEO,CACH,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAP,CACH,CACJ,CACJ,CArCwC,CAuC7C,KAAMe,CAAAA,eAAe,CAAId,KAAD,EAAW,CAC/B,MAAO,CACLM,QAAQ,CAAEN,KAAK,CAACe,IAAN,CAAWC,IADhB,CAAP,CAGH,CAJD,CAKA,cAAevB,CAAAA,OAAO,CAACqB,eAAD,CAAkB,EAAlB,CAAP,CAA8BtB,UAAU,CAACI,cAAD,CAAxC,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport ReactLoading from 'react-loading';\n\nclass ProtectedRoute extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: true\n    }\n}\n    componentDidUpdate (prevProps) {\n        if (this.state.isLoading === true) {\n            if (JSON.stringify(prevProps.userData) !== JSON.stringify(this.props.userData)) {\n                \n                this.setState({\n                    isLoading: false\n                })\n            }\n        }\n    }\n    componentDidMount () {\n        setTimeout(() => {\n            this.setState({\n                isLoading: false\n            })\n        }, 2500)\n    }\n    render() {\n        const { component: Component, ...rest } = this.props;\n\n        if(this.state.isLoading) {\n            return <ReactLoading type={\"cubes\"} color={\"#00acee\"} height={350} width={650} />;\n        } else {\n            if(!_.isEmpty(this.props.userData)){\n                return (<Route {...rest} render={(props) => (<Component {...props}/>)} />);\n            } else {\n                return <Redirect to='/sign-in' />;\n            }\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(withRouter(ProtectedRoute));"]},"metadata":{},"sourceType":"module"}