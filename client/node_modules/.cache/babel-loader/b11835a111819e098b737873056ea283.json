{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/employer/introduction/introVideo.js\";\nimport React, { Fragment, useRef } from \"react\";\nimport \"./styles.css\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport { Button, Container, Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\n\nconst IntroVideoEmployerAccountHelper = props => {\n  const dropzoneRef = useRef(null); // start of state logic...\n\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n\n  const renderPreviewOfFile = (data, fileReady, filePathData) => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n    const text = \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(imageChangeAndConversion(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const renderCustomButtonDropzone = (data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile) => {\n    const {\n      meta\n    } = data.files[0];\n    console.log(\"meta\", meta);\n\n    if (currentFileSelectedUpload === null) {\n      return null;\n    } else {\n      if (fileReady === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: e => {\n            e.preventDefault(); // file meta data for next action\n\n            setMetaFileData(meta); // set file status as ready or prepared.\n\n            setFileReadyStatus(false);\n            const runSubmit = data.onSubmit;\n            handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setPromotionalDemoFile);\n          },\n          className: \"btn-air-secondary\",\n          color: \"secondary\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginTop: \"25px\"\n          },\n          onClick: () => {\n            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n          },\n          className: \"btn-air-light\",\n          color: \"light\",\n          size: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, \"Submit & Upload New File!\"));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, \"Upload a company 'introductory video' explaining your company & what you do!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data, fileReady, filePathData),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: _ref => {\n      let {\n        accept,\n        onFiles\n      } = _ref;\n      return CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus);\n    },\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 53\n        }\n      }, renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile));\n    },\n    accept: \"video/*\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 300,\n        minWidth: \"100%\"\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  })), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null)))))));\n};\n\nexport default IntroVideoEmployerAccountHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/employer/introduction/introVideo.js"],"names":["React","Fragment","useRef","Dropzone","axios","NotificationManager","FileViewer","_","Button","Container","Row","Col","Card","CardBody","CardHeader","IntroVideoEmployerAccountHelper","props","dropzoneRef","fileReady","setFileReadyStatus","useState","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","renderPreviewOfFile","data","file","fileWithMeta","calculateFileType","type","err","warning","id","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","imageChangeAndConversion","renderCustomButtonDropzone","setProgress","setPromotionalDemoFile","meta","console","log","marginTop","preventDefault","runSubmit","onSubmit","handleSubmit","functions","onSubmitHelper","dropzone","height","minWidth","dropzoneActive","borderColor","remove"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef } from \"react\";\nimport \"./styles.css\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport { Button, Container, Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\n\nconst IntroVideoEmployerAccountHelper = (props) => {\n\n\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n\n\n    const renderPreviewOfFile = (data, fileReady, filePathData) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    const CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(imageChangeAndConversion(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const renderCustomButtonDropzone = (data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile) => {\n\n        const { meta } = data.files[0];\n\n        console.log(\"meta\", meta);\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit, currentFileSelectedUpload, fileMetaData, setProgress, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setPromotionalDemoFile);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    return (\n        <Fragment>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h2 className=\"upload-video-header\">Upload a company 'introductory video' explaining your company & what you do!</h2>\n                            </CardHeader>\n                            <CardBody>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            ref={dropzoneRef}\n                                            PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                            maxFiles={1}\n                                            autoUpload={true}\n                                            onChangeStatus={(functions) => {\n                                                setChangeOptions(functions);\n                                            }}\n                                            submitButtonDisabled={false}\n                                            InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                            onSubmit={onSubmitHelper}\n                                            SubmitButtonComponent={(data, e) => {\n                                                return (\n                                                    <div className=\"absolutely-position-submit-btn\">\n                                                        {renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile)}\n                                                    </div>\n                                                );\n                                            }}\n                                            accept={\"video/*\"}\n                                            multiple={false}\n                                            canCancel={false}\n                                            styles={{\n                                                dropzone: { height: 300, minWidth: \"100%\" },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                    {fileReady === true ? <Fragment>\n                                        <hr className=\"secondary-hr\" />\n                                        <div className=\"centered-both-ways\">\n                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                setMetaFileData(null);\n                                                setFileReadyStatus(false);\n                                                setCurrentUploadFileStatus(null);\n\n                                                changeOptions.remove();\n                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                        </div>\n                                    </Fragment> : null}\n                                </Col>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default IntroVideoEmployerAccountHelper; "]},"metadata":{},"sourceType":"module"}