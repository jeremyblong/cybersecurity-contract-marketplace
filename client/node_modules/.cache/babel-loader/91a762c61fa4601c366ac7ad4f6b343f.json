{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/hackers/main/mainLandingPage.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageHackerHelper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitude is :\", position.coords.latitude); //\n\n        console.log(\"Longitude is :\", position.coords.longitude);\n        const location = {\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude\n        };\n        const {\n          uniqueId\n        } = this.props.userData;\n        axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n          accountType: \"hackers\",\n          location,\n          id: uniqueId\n        }).then(res => {\n          if (res.data.message === \"Successfully saved location data to account!\") {\n            console.log(res.data);\n            const {\n              user\n            } = res.data;\n            this.props.authentication(user);\n            NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n          } else {\n            console.log(\"err\", res.data);\n            NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"~ dashboard hacker! ~\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authentication\n})(MainLandingPageHackerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/hackers/main/mainLandingPage.js"],"names":["React","Component","axios","connect","authentication","NotificationManager","MainLandingPageHackerHelper","constructor","props","state","componentDidMount","navigator","console","log","geolocation","getCurrentPosition","position","coords","latitude","longitude","location","uniqueId","userData","post","process","env","REACT_APP_BASE_URL","accountType","id","then","res","data","message","user","success","error","catch","err","render","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qDAA/B;AACA,SAASC,mBAAT,QAAoC,qBAApC;;AAEA,MAAMC,2BAAN,SAA0CL,SAA1C,CAAoD;AACpDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AACGC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,iBAAiBC,SAArB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAF,MAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAAQ,CAACC,MAAT,CAAgBC,QAA7C,EADmD,CAEnD;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AAEA,cAAMC,QAAQ,GAAG;AACbD,UAAAA,SAAS,EAAEH,QAAQ,CAACC,MAAT,CAAgBE,SADd;AAEbD,UAAAA,QAAQ,EAAEF,QAAQ,CAACC,MAAT,CAAgBC;AAFb,SAAjB;AAKA,cAAM;AAAEG,UAAAA;AAAF,YAAe,KAAKb,KAAL,CAAWc,QAAhC;AAEApB,QAAAA,KAAK,CAACqB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,wBAA7C,EAAsE;AAClEC,UAAAA,WAAW,EAAE,SADqD;AAElEP,UAAAA,QAFkE;AAGlEQ,UAAAA,EAAE,EAAEP;AAH8D,SAAtE,EAIGQ,IAJH,CAISC,GAAD,IAAS;AACb,cAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,8CAAzB,EAAyE;AACrEpB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACC,IAAhB;AAEA,kBAAM;AAAEE,cAAAA;AAAF,gBAAWH,GAAG,CAACC,IAArB;AAEA,iBAAKvB,KAAL,CAAWJ,cAAX,CAA0B6B,IAA1B;AAEA5B,YAAAA,mBAAmB,CAAC6B,OAApB,CAA6B,0HAA7B,EAAwJ,wBAAxJ,EAAkL,IAAlL;AACH,WARD,MAQO;AACHtB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBiB,GAAG,CAACC,IAAvB;AAEA1B,YAAAA,mBAAmB,CAAC8B,KAApB,CAA2B,8FAA3B,EAA0H,0BAA1H,EAAsJ,IAAtJ;AACH;AACJ,SAlBD,EAkBGC,KAlBH,CAkBUC,GAAD,IAAS;AACdzB,UAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACH,SApBD;AAqBH,OAjCD;AAkCD,KArCH,MAqCS;AACLzB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ;;AACDyB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAKH;;AAxD+C;;AA0DpD,MAAMC,eAAe,GAAI9B,KAAD,IAAW;AAC/B,SAAO;AACHa,IAAAA,QAAQ,EAAEb,KAAK,CAAC+B,IAAN,CAAWT;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAe5B,OAAO,CAACoC,eAAD,EAAkB;AAAEnC,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,2BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\nimport { NotificationManager } from 'react-notifications';\n\nclass MainLandingPageHackerHelper extends Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n}\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            console.log(\"Available\");\n\n            navigator.geolocation.getCurrentPosition((position) => {\n                console.log(\"Latitude is :\", position.coords.latitude);\n                //\n                console.log(\"Longitude is :\", position.coords.longitude);\n\n                const location = {\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude\n                };\n\n                const { uniqueId } = this.props.userData;\n\n                axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n                    accountType: \"hackers\",\n                    location,\n                    id: uniqueId\n                }).then((res) => {\n                    if (res.data.message === \"Successfully saved location data to account!\") {\n                        console.log(res.data);\n\n                        const { user } = res.data;\n\n                        this.props.authentication(user);\n\n                        NotificationManager.success(`We've successfully updated your location so you have a better tailored user experience with our location-based services.`, 'Updated your location!', 3500);\n                    } else {\n                        console.log(\"err\", res.data);\n\n                        NotificationManager.error(`We've encountered an error updating your current location for our location-based services...`, 'Error updating location!', 3500);\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                });\n            });\n          } else {\n            console.log(\"Not Available\");\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h1>~ dashboard hacker! ~</h1>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { authentication })(MainLandingPageHackerHelper);"]},"metadata":{},"sourceType":"module"}