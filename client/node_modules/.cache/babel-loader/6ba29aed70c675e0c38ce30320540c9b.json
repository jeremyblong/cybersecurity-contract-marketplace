{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/createLiveStream/createNewStream/createNewLiveStreamMain.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Input, Button, Link, NavLink, Nav, NavItem, TabPane, TabContent, Media, Label, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Database, Grid, Upload, Code } from 'react-feather';\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport { useForm, Controller } from 'react-hook-form';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport hookFormHelpers from \"./helpers/helperFunctions.js\";\nimport Select from \"react-select\";\nconst hashtagsChecker = hookFormHelpers().hashtagsChecker;\nconst handleSubcategoryCheckerChange = hookFormHelpers().handleSubcategoryCheckerChange;\nconst subcategoryChecker = hookFormHelpers().subcategoryChecker;\nconst subcategoryOptions = [{\n  value: 'malware-related',\n  label: 'Malware Related Codes'\n}, {\n  value: 'phishing',\n  label: 'Phishing'\n}, {\n  value: \"cross-site-scripting-xss\",\n  label: \"Cross Site Scripting (XSS)\"\n}, {\n  value: \"denial-of-service\",\n  label: \"Denial Of Service (DDoS)\"\n}, {\n  value: \"session-hijacking-man-in-middle\",\n  label: \"Session Hijacking & Man-In-Middle Attacks\"\n}, {\n  value: \"macro-malware-in-documents\",\n  label: \"Macro-Malware In Documents\"\n}, {\n  value: \"iot-attack\",\n  label: \"IoT Attack\"\n}, {\n  value: \"clickjacking-ui-redress\",\n  label: \"Clickjacking/UI Redress\"\n}, {\n  value: \"dns-spoofing\",\n  label: \"DNS Spoofing\"\n}, {\n  value: \"watering-hole-attack\",\n  label: \"Watering Hole Attack\"\n}, {\n  value: \"keylogger-attack\",\n  label: \"Keylogger Attack\"\n}, {\n  value: \"bruteforce-attack\",\n  label: \"Brute-Force Attack\"\n}, {\n  value: \"dictionary-attack\",\n  label: \"Dictionary Attack\"\n}, // easy/lazy BELOW\n{\n  value: \"credential-reuse\",\n  label: \"Credential Reuse\"\n}, {\n  value: 'sql-injection-attack',\n  label: 'SQL Injection Attack'\n}, {\n  value: \"fake-wap\",\n  label: \"Fake WAP\"\n}, {\n  value: \"bait-and-switch\",\n  label: \"Bait & Switch\"\n}, {\n  value: \"browser-locker\",\n  label: \"Browser Locker\"\n} // easy/lazy ABOVE\n];\n\nconst CreateNewLiveStreamAsHackerHelper = _ref => {\n  let {} = _ref;\n  // refs initialization\n  const subCategoryRefSelector = useRef(null); // initialize state obj's\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [tabbedPaneActive, setTabbedPaneActive] = useState(\"1\");\n  const [streamKey, setStreamKey] = useState(null);\n  const [streamInfo, setStreamInfo] = useState(null);\n  const [playbackStream, setPlaybackStream] = useState(null);\n  const [visibility, setVisibility] = useState(null); // react-hook-form logic - initialization\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    setValue,\n    getValues,\n    setError,\n    values,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  useEffect(() => {// component mounted\n  }, []);\n\n  const handleChange = event => {\n    event.preventDefault();\n    setSearchTerm(event.target.value);\n  };\n\n  const handleLiveStreamStart = () => {\n    console.log(\"handleLiveStream start...\");\n    axios.get(`${process.env.REACT_APP_BASE_URL}/create/live/stream/stream/key`).then(res => {\n      if (res.data.message === \"We've generated your stream key!\") {\n        console.log(res.data); // pull off streamKey\n\n        const {\n          streamKey,\n          result\n        } = res.data;\n        const playbackID = `https://stream.mux.com/${result.playback_ids[0].id}.m3u8 `;\n        setPlaybackStream(playbackID);\n        navigator.clipboard.writeText(streamKey);\n        NotificationManager.success(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\", 'COPIED STREAM KEY TO CLIPBOARD!', 4750);\n        setStreamKey(streamKey);\n        setStreamInfo(result);\n      } else {\n        console.log(\"err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSubmit = (e, data) => {\n    console.log(e, data);\n  };\n\n  const renderFormError = (e, errors) => {\n    console.log(e, errors);\n  };\n\n  const renderBeforeReadyLogic = () => {\n    const currentValues = getValues();\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"b-l-primary border-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"You have \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 38\n      }\n    }, \"not\"), \" officially started/initalized your live stream yet...Manage your settings BEFORE going live using the options below\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Visibility/General Settings Adjustment's\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: null,\n      className: tabbedPaneActive === '1' ? 'active' : '',\n      onClick: () => setTabbedPaneActive('1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 148\n      }\n    }), \"VISIBILITY\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: null,\n      className: tabbedPaneActive === '2' ? 'active' : '',\n      onClick: () => setTabbedPaneActive('2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-man-in-glasses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 148\n      }\n    }), \"GENERAL SETTINGS (title, desc, etc...)\"))), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: tabbedPaneActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      className: \"fade show custom-tab-pane-streaming\",\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"mega-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mega-title-custom-streaming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }, \"Select Visibility - Dicate \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 119\n      }\n    }, \"WHO\"), \" can see/view your live stream in action\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-showcase-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio radio-primary mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onClick: () => setVisibility({\n        visibility: \"public/anyone\",\n        accountType: null\n      }),\n      checked: visibility !== null && visibility.visibility === \"public/anyone\" ? true : false,\n      id: \"radio30\",\n      type: \"radio\",\n      name: \"radio1\",\n      value: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"radio30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0 mega-title-badge mega-title-badge-streaming-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 61\n      }\n    }, \"PUBLIC/ANYONE\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary pull-right digits custom-digits-streaming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 146\n      }\n    }, \"PUBLIC/ANYONE (On/Off Platform)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 61\n      }\n    }, `Public/anyone meaning ANYONE (employer's & hacker accounts alike) can both view your live stream AS WELL as anyone NOT registered on the ${process.env.REACT_APP_APPLICATION_NAME} platform...`))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-showcase-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio radio-secondary mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onClick: () => setVisibility({\n        visibility: \"only-platform-users\",\n        accountType: null\n      }),\n      checked: visibility !== null && visibility.visibility === \"only-platform-users\" ? true : false,\n      id: \"radio31\",\n      type: \"radio\",\n      name: \"radio1\",\n      value: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"radio31\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0 mega-title-badge mega-title-badge-streaming-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 61\n      }\n    }, \"PUBLIC/ANYONE ON \", process.env.REACT_APP_APPLICATION_NAME, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary pull-right digits custom-digits-streaming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 191\n      }\n    }, `Anyone on ${process.env.REACT_APP_APPLICATION_NAME}`)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 61\n      }\n    }, `Anyone on our platform (${process.env.REACT_APP_APPLICATION_NAME}) will be able to view your live stream HOWEVER people that're NOT REGISTERED on our platform will NOT be able to view your live stream until they login & identifiy themselves...`)))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-showcase-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio radio-success mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onClick: () => setVisibility({\n        visibility: \"specific-group\",\n        accountType: \"employers\"\n      }),\n      checked: visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"employers\" ? true : false,\n      id: \"radio32\",\n      type: \"radio\",\n      name: \"radio1\",\n      value: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"radio32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0 mega-title-badge mega-title-badge-streaming-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 61\n      }\n    }, \"ONLY EMPLOYERS'S CAN VIEW\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-success pull-right digits custom-digits-streaming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 158\n      }\n    }, \"ONLY EMPLOYERS'S\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    }, \"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects EMPLOYER'S GROUP.\"))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"6\",\n      lg: \"6\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-showcase-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio radio-info mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onClick: () => setVisibility({\n        visibility: \"specific-group\",\n        accountType: \"hackers\"\n      }),\n      checked: visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"hackers\" ? true : false,\n      id: \"radio33\",\n      type: \"radio\",\n      name: \"radio1\",\n      value: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"radio33\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0 mega-title-badge mega-title-badge-streaming-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 61\n      }\n    }, \"ONLY HACKER'S CAN VIEW\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-info pull-right digits custom-digits-streaming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 155\n      }\n    }, \"ONLY HACKER'S\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 61\n      }\n    }, \"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects HACKER GROUP.\"))))))))), /*#__PURE__*/React.createElement(TabPane, {\n      className: \"custom-tab-pane-streaming\",\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"needs-validation streaming-start-form-wrapper\",\n      noValidate: \"\",\n      onSubmit: handleSubmit(onSubmit, (e, errors) => renderFormError(e, errors)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"validationCustom01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    }, \"Stream Title\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 45\n      }\n    }, errors.firstName && 'First name is required')), /*#__PURE__*/React.createElement(Col, {\n      md: \"4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }, subcategoryChecker.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n      control: control,\n      name: subcategoryChecker.name\n    }, subcategoryChecker.check(setError, register, values, errors, \"subCategory\", clearErrors), {\n      render: _ref2 => {\n        let {\n          field\n        } = _ref2;\n        return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n          ref: subCategoryRefSelector,\n          autoBlur: true,\n          placeholder: subcategoryChecker.placeholder,\n          defaultValue: null,\n          onMenuClose: () => {},\n          value: currentValues.subCategory,\n          onChange: selectedOption => handleSubcategoryCheckerChange(selectedOption, setValue, subCategoryRefSelector),\n          options: subcategoryOptions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 53\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 45\n      }\n    })), errors.subCategory ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 67\n      }\n    }, errors.subCategory.message) : null), /*#__PURE__*/React.createElement(Col, {\n      md: \"4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"validationCustomUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, \"Stream Language\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      name: \"userName\",\n      type: \"text\",\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }, errors.lastName && 'User name is required')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: \"12\",\n      lg: \"12\",\n      xl: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 53\n      }\n    }, \"Tag\")), /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      name: \"hashtags\",\n      type: \"text\",\n      placeholder: \"Enter a hashtag/word to append to your live stream...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 49\n      }\n    }), errors.hashtagsError ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 73\n      }\n    }, errors.hashtagsError.message) : null))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"form-check-input\",\n      id: \"invalidCheck\",\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-check-label\",\n      htmlFor: \"invalidCheck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 49\n      }\n    }, \"Agree to terms and conditions\")))), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }, \"Submit form\"))))))));\n  };\n\n  console.log(streamKey, streamInfo);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Live streaming creation\",\n    title: \"Create a new 'live hacking-stream' now!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"3\",\n    className: \"box-col-6 pr-0 file-spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, \"Select a category of your live hacking stream before being able to start your stream & go public!\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 58\n    }\n  }), \" API-Endpoint Testing/Hacking\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 56\n    }\n  }), \" Malware\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 56\n    }\n  }), \" Phishing\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 56\n    }\n  }), \" SQL-Injection Attack\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 56\n    }\n  }), \" Cross-Site Scripting (XSS)\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 56\n    }\n  }), \" Denial-of-Service (DoS)\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 60\n    }\n  }), \" Session Hijacking / Man-in-middle\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 60\n    }\n  }), \" Credential Reuse\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-outline-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Database, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 66\n    }\n  }), Storage), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-t-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress sm-progress-bar mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar bg-primary\",\n    role: \"progressbar\",\n    style: {\n      width: \"25%\"\n    },\n    \"aria-valuenow\": \"25\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, \"25 GB of 100 GB used\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-outline-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 66\n    }\n  }), \"Pricing for subscription (premium membership)\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pricing-plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, \"Trial \\\"Tier-Hacker\\\" Account \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  }, \"FREE (limited-time)\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Signup for our FREE 'tier-hacker' account which is basically a super-bonus version of a regular account. This includes many restricted features/functionality and give's you a better stance on our platform.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-outline-success btn-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 29\n    }\n  }, \"Already a member\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"bg-img\",\n    src: require(\"../../../../../assets/images/dashboard/folder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pricing-plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Premium Live Streaming\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, \"$25/month\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }, \" \", \"Placed on homepage at top of list and shown BEFORE all other listings that're NOT boosted/promoted as well...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-outline-primary btn-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 29\n    }\n  }, \"Upgrade Now!\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"bg-img\",\n    src: require(\"../../../../../assets/images/dashboard/folder1.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    xl: \"9\",\n    md: \"12\",\n    className: \"box-col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary border-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, \"Live Streaming Key\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, \"This will allow you to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 86\n    }\n  }, \"START\"), \" your live stream (enter \\\"stream key\\\" to start stream)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 25\n    }\n  }, streamKey === null ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"before-text-streamkey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 51\n    }\n  }, \"Once you \\\"start\\\" your live stream process by clicking \\\"Start a live stream!\\\" above to initialize your \\\"stream key\\\" to go to the next-step of the process of starting and initalizing a publically viewable live stream...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 312\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }, \"Your stream key is below, Click the button below to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 88\n    }\n  }, \"\\\"Copy\\\"\"), \" the stream key to your clipboard.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    id: \"no-border-button-custom\",\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    color: \"secondary-2x\",\n    className: \"btn-squared-secondary ml-1\",\n    onClick: () => navigator.clipboard.writeText(streamKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, `Copy your STREAM KEY ~ ${streamKey}`), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    id: \"no-border-button-custom\",\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    color: \"primary-2x\",\n    className: \"btn-squared-primary ml-1\",\n    onClick: () => navigator.clipboard.writeText(\"rtmps://global-live.mux.com:443/app\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, `Copy Server URL ~ rtmps://global-live.mux.com:443/app`)))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control-plaintext\",\n    type: \"text\",\n    value: searchTerm,\n    onChange: e => handleChange(e),\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"75%\"\n    },\n    outline: true,\n    color: \"info-2x\",\n    className: \"btn-squared-info ml-1\",\n    onClick: handleLiveStreamStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 154\n    }\n  }), \"Start a live stream!\")))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"custom-cardbody-streaming-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }, \"Upload/start a new LIVE stream (live streams of live hack's)\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 29\n    }\n  }, \"Start a stream of a LIVE \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 58\n    }\n  }, \"AUTHORIZED\"), \" hack (digital asset's \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 108\n    }\n  }, \"ONLY\"), \") and \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 135\n    }\n  }, \"EARN MONEY\"), \" via \\\"Gifts\\\", \\\"Kudo's\\\" and other various incentives/prizes while hacking away! You'll earn more money if you have more followers/viewers so try to grow your audience!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 29\n    }\n  }), playbackStream !== null ? /*#__PURE__*/React.createElement(\"video\", {\n    className: \"streaming-video-wrapper\",\n    controls: true,\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    className: \"streaming-video\",\n    src: playbackStream,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 33\n    }\n  })) : renderBeforeReadyLogic())))))));\n};\n\nexport default CreateNewLiveStreamAsHackerHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/createLiveStream/createNewStream/createNewLiveStreamMain.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Input","Button","Link","NavLink","Nav","NavItem","TabPane","TabContent","Media","Label","InputGroup","InputGroupAddon","InputGroupText","Database","Grid","Upload","Code","axios","NotificationManager","useForm","Controller","Skeleton","SkeletonTheme","hookFormHelpers","Select","hashtagsChecker","handleSubcategoryCheckerChange","subcategoryChecker","subcategoryOptions","value","label","CreateNewLiveStreamAsHackerHelper","subCategoryRefSelector","searchTerm","setSearchTerm","tabbedPaneActive","setTabbedPaneActive","streamKey","setStreamKey","streamInfo","setStreamInfo","playbackStream","setPlaybackStream","visibility","setVisibility","register","handleSubmit","control","reset","setValue","getValues","setError","values","clearErrors","formState","errors","mode","reValidateMode","handleChange","event","preventDefault","target","handleLiveStreamStart","console","log","get","process","env","REACT_APP_BASE_URL","then","res","data","message","result","playbackID","playback_ids","id","navigator","clipboard","writeText","success","catch","err","onSubmit","e","renderFormError","renderBeforeReadyLogic","currentValues","accountType","REACT_APP_APPLICATION_NAME","firstName","name","check","field","placeholder","subCategory","selectedOption","lastName","hashtagsError","Storage","width","require","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Input, Button, Link, NavLink, Nav, NavItem, TabPane, TabContent, Media, Label, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { Database, Grid, Upload, Code } from 'react-feather';\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport { useForm, Controller } from 'react-hook-form';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport hookFormHelpers from \"./helpers/helperFunctions.js\";\nimport Select from \"react-select\";\n\nconst hashtagsChecker = hookFormHelpers().hashtagsChecker;\nconst handleSubcategoryCheckerChange = hookFormHelpers().handleSubcategoryCheckerChange; \nconst subcategoryChecker = hookFormHelpers().subcategoryChecker;\n\n\nconst subcategoryOptions = [\n    { value: 'malware-related', label: 'Malware Related Codes' },\n    { value: 'phishing', label: 'Phishing' },\n    { value: \"cross-site-scripting-xss\", label: \"Cross Site Scripting (XSS)\" },\n    { value: \"denial-of-service\", label: \"Denial Of Service (DDoS)\" },\n    { value: \"session-hijacking-man-in-middle\", label: \"Session Hijacking & Man-In-Middle Attacks\" },\n    { value: \"macro-malware-in-documents\", label: \"Macro-Malware In Documents\" },\n    { value: \"iot-attack\", label: \"IoT Attack\" },\n    { value: \"clickjacking-ui-redress\", label: \"Clickjacking/UI Redress\" },\n    { value: \"dns-spoofing\", label: \"DNS Spoofing\" },\n    { value: \"watering-hole-attack\", label: \"Watering Hole Attack\" },\n    { value: \"keylogger-attack\", label: \"Keylogger Attack\" },\n    { value: \"bruteforce-attack\", label: \"Brute-Force Attack\" },\n    { value: \"dictionary-attack\", label: \"Dictionary Attack\" },\n    // easy/lazy BELOW\n    { value: \"credential-reuse\", label: \"Credential Reuse\" },\n    { value: 'sql-injection-attack', label: 'SQL Injection Attack' },\n    { value: \"fake-wap\", label: \"Fake WAP\" },\n    { value: \"bait-and-switch\", label: \"Bait & Switch\" },\n    { value: \"browser-locker\", label: \"Browser Locker\" },\n    // easy/lazy ABOVE\n];\nconst CreateNewLiveStreamAsHackerHelper = ({  }) => {\n    // refs initialization\n    const subCategoryRefSelector = useRef(null);\n    // initialize state obj's\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [ tabbedPaneActive, setTabbedPaneActive ] = useState(\"1\");\n    const [ streamKey, setStreamKey ] = useState(null);\n    const [ streamInfo, setStreamInfo ] = useState(null);\n    const [ playbackStream, setPlaybackStream ] = useState(null);\n    const [ visibility, setVisibility ] = useState(null);\n\n\n    // react-hook-form logic - initialization\n    const { register, handleSubmit, control, reset, setValue, getValues, setError, values, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    useEffect(() => {\n        // component mounted\n\n    },[])\n\n    const handleChange = event => {\n        event.preventDefault();\n        setSearchTerm(event.target.value)\n    };\n    const handleLiveStreamStart = () => {\n        console.log(\"handleLiveStream start...\");\n        \n        axios.get(`${process.env.REACT_APP_BASE_URL}/create/live/stream/stream/key`).then((res) => {\n            if (res.data.message === \"We've generated your stream key!\") {\n                console.log(res.data);\n                // pull off streamKey\n                const { streamKey, result } = res.data;\n\n                const playbackID = `https://stream.mux.com/${result.playback_ids[0].id}.m3u8 `;\n\n                setPlaybackStream(playbackID);\n\n                navigator.clipboard.writeText(streamKey);\n\n                NotificationManager.success(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\", 'COPIED STREAM KEY TO CLIPBOARD!', 4750);\n\n                setStreamKey(streamKey);\n                setStreamInfo(result);\n            } else {\n                console.log(\"err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const onSubmit = (e, data) => {\n        console.log(e, data);\n    }\n    const renderFormError = (e, errors) => {\n        console.log(e, errors);\n    }\n    const renderBeforeReadyLogic = () => {\n        const currentValues = getValues();\n        return (\n            <Fragment>\n                <Card>\n                    <CardHeader className=\"b-l-primary border-3\">\n                        <h5>You have <strong>not</strong> officially started/initalized your live stream yet...Manage your settings BEFORE going live using the options below</h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardHeader>\n                        <h5>Visibility/General Settings Adjustment's</h5>\n                    </CardHeader>\n                    <CardBody>\n                        <Nav className=\"nav-dark\">\n                            <NavItem>\n                                <NavLink href={null} className={tabbedPaneActive === '1' ? 'active' : ''} onClick={() => setTabbedPaneActive('1')}><i className=\"icofont icofont-ui-home\"></i>VISIBILITY</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href={null} className={tabbedPaneActive === '2' ? 'active' : ''} onClick={() => setTabbedPaneActive('2')}><i className=\"icofont icofont-man-in-glasses\"></i>GENERAL SETTINGS (title, desc, etc...)</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={tabbedPaneActive}>\n                            <TabPane className={\"fade show custom-tab-pane-streaming\"} tabId=\"1\">\n                                <Form className=\"mega-inline\">\n                                    <Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <p className=\"mega-title-custom-streaming\">Select Visibility - Dicate <strong>WHO</strong> can see/view your live stream in action</p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-primary mr-3\">\n                                                            <Input onClick={() => setVisibility({\n                                                                visibility: \"public/anyone\",\n                                                                accountType: null\n                                                            })} checked={visibility !== null && visibility.visibility === \"public/anyone\" ? true : false} id=\"radio30\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio30\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">PUBLIC/ANYONE<span className=\"badge badge-primary pull-right digits custom-digits-streaming\">{\"PUBLIC/ANYONE (On/Off Platform)\"}</span></h6>\n                                                            <p>{`Public/anyone meaning ANYONE (employer's & hacker accounts alike) can both view your live stream AS WELL as anyone NOT registered on the ${process.env.REACT_APP_APPLICATION_NAME} platform...`}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-secondary mr-3\">\n                                                            <Input onClick={() => setVisibility({\n                                                                visibility: \"only-platform-users\",\n                                                                accountType: null\n                                                            })} checked={visibility !== null && visibility.visibility === \"only-platform-users\" ? true : false} id=\"radio31\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio31\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">PUBLIC/ANYONE ON {process.env.REACT_APP_APPLICATION_NAME} <span className=\"badge badge-secondary pull-right digits custom-digits-streaming\">{`Anyone on ${process.env.REACT_APP_APPLICATION_NAME}`}</span></h6>\n                                                            <p>{`Anyone on our platform (${process.env.REACT_APP_APPLICATION_NAME}) will be able to view your live stream HOWEVER people that're NOT REGISTERED on our platform will NOT be able to view your live stream until they login & identifiy themselves...`}</p>\n                                                        </Media>\n                                                    </Media>\n                                                    \n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-success mr-3\">\n                                                            <Input onClick={() => setVisibility({\n                                                                visibility: \"specific-group\",\n                                                                accountType: \"employers\"\n                                                            })} checked={visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"employers\" ? true : false} id=\"radio32\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio32\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">ONLY EMPLOYERS'S CAN VIEW<span className=\"badge badge-success pull-right digits custom-digits-streaming\">{\"ONLY EMPLOYERS'S\"}</span></h6>\n                                                            <p>{\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects EMPLOYER'S GROUP.\"}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-info mr-3\">\n                                                            <Input onClick={() => setVisibility({\n                                                                visibility: \"specific-group\",\n                                                                accountType: \"hackers\"\n                                                            })} checked={visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"hackers\" ? true : false} id=\"radio33\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio33\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">ONLY HACKER'S CAN VIEW<span className=\"badge badge-info pull-right digits custom-digits-streaming\">{\"ONLY HACKER'S\"}</span></h6>\n                                                            <p>{\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects HACKER GROUP.\"}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Row>\n                                </Form>\n                            </TabPane>\n                            <TabPane className={\"custom-tab-pane-streaming\"} tabId=\"2\">\n                                <Form className=\"needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(onSubmit, (e, errors) => renderFormError(e, errors))}>\n                                    <div className=\"form-row\">\n                                        <Col md=\"4 mb-3\">\n                                        <Label htmlFor=\"validationCustom01\">Stream Title</Label>\n                                            <Input className=\"form-control\" name=\"firstName\" type=\"text\" placeholder=\"First name\"/>\n                                            <span>{errors.firstName && 'First name is required'}</span>\n                                        </Col>\n                                        <Col md=\"4 mb-3\">\n                                            <Label>{subcategoryChecker.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={subcategoryChecker.name}\n                                                {...subcategoryChecker.check(setError, register, values, errors, \"subCategory\", clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={subCategoryRefSelector}\n                                                        autoBlur={true}\n                                                        placeholder={subcategoryChecker.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={() => {}}\n                                                        value={currentValues.subCategory}\n                                                        onChange={(selectedOption) => handleSubcategoryCheckerChange(selectedOption, setValue, subCategoryRefSelector)}\n                                                        options={subcategoryOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.subCategory ? <span className=\"span-tooltip\">{errors.subCategory.message}</span> : null}\n                                        </Col>\n                                        <Col md=\"4 mb-3\">\n                                        <Label htmlFor=\"validationCustomUsername\">Stream Language</Label>\n                                        <InputGroup>\n                                            <Input className=\"form-control\" name=\"userName\" type=\"text\" placeholder=\"Username\"/>\n                                            <span>{errors.lastName && 'User name is required'}</span>\n                                        </InputGroup>\n                                        </Col>\n                                    </div>\n                                    <div className=\"form-row\">\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText>{\"Tag\"}</InputGroupText>\n                                                </InputGroupAddon>\n                                                <Input className=\"form-control\" name=\"hashtags\" type=\"text\" placeholder=\"Enter a hashtag/word to append to your live stream...\"/>\n                                                {errors.hashtagsError ? <span className=\"span-tooltip\">{errors.hashtagsError.message}</span> : null}\n                                            </InputGroup>\n                                        </Col>\n                                    </div>\n                                    <FormGroup>\n                                        <div className=\"form-check\">\n                                            <div className=\"checkbox p-0\">\n                                                <Input className=\"form-check-input\" id=\"invalidCheck\" type=\"checkbox\" />\n                                                <Label className=\"form-check-label\" htmlFor=\"invalidCheck\">{\"Agree to terms and conditions\"}</Label>\n                                            </div>\n                                        </div>\n                                    </FormGroup>\n                                    <Button color=\"info\">{\"Submit form\"}</Button>\n                                </Form>\n                            </TabPane>\n                        </TabContent>\n                    </CardBody>\n                    </CardBody>\n                </Card>\n            </Fragment>\n        );\n    }\n    console.log(streamKey, streamInfo);\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Live streaming creation\" title=\"Create a new 'live hacking-stream' now!\" />\n        <Container fluid={true}>\n            <Row>\n            <Col xl=\"3\" className=\"box-col-6 pr-0 file-spacing\">\n                <div className=\"file-sidebar\">\n                <Card>\n                    <CardBody>\n                    <h6 className=\"mb-3\">Select a category of your live hacking stream before being able to start your stream & go public!</h6>\n                    <ul>\n                        <li>\n                        <div className=\"btn btn-primary\"><Code /> API-Endpoint Testing/Hacking</div>\n                        </li>\n                        <li>\n                        <div className=\"btn btn-light\"><Code /> Malware</div>\n                        </li>\n                        <li>\n                        <div className=\"btn btn-light\"><Code /> Phishing</div>\n                        </li>\n                        <li>\n                        <div className=\"btn btn-light\"><Code /> SQL-Injection Attack</div>\n                        </li>\n                        <li>\n                        <div className=\"btn btn-light\"><Code /> Cross-Site Scripting (XSS)</div>\n                        </li>\n                        <li>\n                        <div className=\"btn btn-light\"><Code /> Denial-of-Service (DoS)</div>\n                        </li>\n                        <li>\n                            <div className=\"btn btn-light\"><Code /> Session Hijacking / Man-in-middle</div>\n                        </li>\n                        <li>\n                            <div className=\"btn btn-light\"><Code /> Credential Reuse</div>\n                        </li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        <li>\n                        <div className=\"btn btn-outline-primary\"><Database />{Storage}</div>\n                        <div className=\"m-t-15\">\n                            <div className=\"progress sm-progress-bar mb-1\">\n                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                            <p>{\"25 GB of 100 GB used\"}</p>\n                        </div>\n                        </li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        <li>\n                        <div className=\"btn btn-outline-primary\"><Grid />Pricing for subscription (premium membership)</div>\n                        </li>\n                        <li>\n                        <div className=\"pricing-plan\">\n                            <h6>Trial \"Tier-Hacker\" Account </h6>\n                            <h5>FREE (limited-time)</h5>\n                            <p>{\"Signup for our FREE 'tier-hacker' account which is basically a super-bonus version of a regular account. This includes many restricted features/functionality and give's you a better stance on our platform.\"}</p>\n                            <div className=\"btn btn-outline-success btn-md\">{\"Already a member\"}</div>\n                            <img className=\"bg-img\" src={require(\"../../../../../assets/images/dashboard/folder.png\")} alt=\"\" />\n                        </div>\n                        </li>\n                        <li>\n                        <div className=\"pricing-plan\">\n                            <h6>Premium Live Streaming</h6>\n                            <h5>{\"$25/month\"}</h5>\n                            <p> {\"Placed on homepage at top of list and shown BEFORE all other listings that're NOT boosted/promoted as well...\"}</p>\n                            <div className=\"btn btn-outline-primary btn-md\">Upgrade Now!</div>\n                            <img className=\"bg-img\" src={require(\"../../../../../assets/images/dashboard/folder1.png\")} alt=\"\" />\n                        </div>\n                        </li>\n                    </ul>\n                    </CardBody>\n                </Card>\n                </div>\n            </Col>\n            <Col xl=\"9\" md=\"12\" className=\"box-col-12\">\n                <div className=\"file-content\">\n                    <Card>\n                        <CardHeader className=\"b-l-secondary border-3\">\n                            <h5>Live Streaming Key</h5>\n                            <p style={{ marginTop: \"7.5px\" }}>This will allow you to <strong>START</strong> your live stream (enter \"stream key\" to start stream)</p>\n                        </CardHeader>\n                        <CardBody>\n                            {streamKey === null ? <p className=\"before-text-streamkey\">Once you \"start\" your live stream process by clicking \"Start a live stream!\" above to initialize your \"stream key\" to go to the next-step of the process of starting and initalizing a publically viewable live stream...</p> : <div>\n                                <p>Your stream key is below, Click the button below to <strong>\"Copy\"</strong> the stream key to your clipboard.</p>\n                                <hr />\n                                <Button id={\"no-border-button-custom\"} style={{ width: \"100%\" }} outline color={\"secondary-2x\"} className=\"btn-squared-secondary ml-1\" onClick={() => navigator.clipboard.writeText(streamKey)}>{`Copy your STREAM KEY ~ ${streamKey}`}</Button>\n                                <hr />\n                                <Button id={\"no-border-button-custom\"} style={{ width: \"100%\" }} outline color={\"primary-2x\"} className=\"btn-squared-primary ml-1\" onClick={() => navigator.clipboard.writeText(\"rtmps://global-live.mux.com:443/app\")}>{`Copy Server URL ~ rtmps://global-live.mux.com:443/app`}</Button>\n                            </div>}\n                        </CardBody>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                        <div className=\"media\">\n                            <Form className=\"form-inline\">\n                            <FormGroup>\n                                <i className=\"fa fa-search\"></i>\n                                <Input\n                                className=\"form-control-plaintext\"\n                                type=\"text\"\n                                value={searchTerm}\n                                onChange={(e) => handleChange(e)}\n                                placeholder=\"Search...\" />\n                            </FormGroup>\n                            </Form>\n                            <div className=\"media-body text-right\">\n                            <Button style={{ width: \"75%\" }} outline color={\"info-2x\"} className=\"btn-squared-info ml-1\" onClick={handleLiveStreamStart}><Upload />{\"Start a live stream!\"}</Button>\n                            </div>\n                        </div>\n                        </CardHeader>\n                        <CardBody className=\"custom-cardbody-streaming-start\">\n                            <h4 className=\"mb-3\">Upload/start a new LIVE stream (live streams of live hack's)</h4>\n                            <h6>Start a stream of a LIVE <strong>AUTHORIZED</strong> hack (digital asset's <strong>ONLY</strong>) and <strong>EARN MONEY</strong> via \"Gifts\", \"Kudo's\" and other various incentives/prizes while hacking away! You'll earn more money if you have more followers/viewers so try to grow your audience!</h6>\n                            <hr />\n                            {playbackStream !== null ? <video className={\"streaming-video-wrapper\"} controls muted>\n                                <source className={\"streaming-video\"} src={playbackStream} type=\"video/mp4\"></source>\n                            </video> : renderBeforeReadyLogic()}\n                        </CardBody>\n                    </Card>\n                </div>\n\n            </Col>\n            </Row>\n        </Container>\n        </Fragment>\n    );\n}\n\nexport default CreateNewLiveStreamAsHackerHelper;"]},"metadata":{},"sourceType":"module"}