{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/subscriptions/selectMembership/helpers/panes/subscribeSheet.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport axios from \"axios\";\n\nconst SubscribeToMembershipConfirmationHelper = _ref => {\n  let {\n    confirmationPane,\n    setConfirmationPaneState\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    isOpen: confirmationPane,\n    onClose: () => setConfirmationPaneState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginized-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    onClick: () => setConfirmationPaneState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }, \"Cancel/Close Pane\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container-invite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Send An Invite & Start A Video Interview!\",\n    title: \"Initialize A Video Interview With This User!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12 box-col-12\",\n    xl: \"12 xl-100\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-shadow-messaging-initialize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 49\n    }\n  }, \"Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    date: selectedDate,\n    onChange: handleSelect,\n    shownDate: new Date(),\n    className: \"custom-date-range-picker\",\n    showMonthAndYearPickers: false,\n    staticRanges: [],\n    direction: \"horizontal\",\n    showMonthArrow: true,\n    months: 2,\n    showDateDisplay: false,\n    inputRanges: [],\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"label-time-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 57\n    }\n  }, \"Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedOption,\n    onChange: handleTimeChange,\n    options: timeSlotsOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 57\n    }\n  }), selectedOption !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 84\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"selectedtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 61\n    }\n  }, \"You've selected the timeslot of \", selectedOption.label, \" on the date of \", selectedDate !== null ? moment(selectedDate).format(\"MM/DD/YYYY\") : \"-------\", \"!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 61\n    }\n  })) : null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    disabled: calculateShow(),\n    onClick: handleTimeDateSubmission,\n    style: {\n      width: \"100%\"\n    },\n    color: \"success-2x\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 57\n    }\n  }, \"Submit & Continue Sending Invite!\")))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-primary b-r-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }\n  }, \"This is going to invite \", \"\", \" to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..\")))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default SubscribeToMembershipConfirmationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/subscriptions/selectMembership/helpers/panes/subscribeSheet.js"],"names":["React","Fragment","useState","useEffect","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","CardFooter","Form","Label","Input","InputGroup","InputGroupAddon","InputGroupText","NotificationManager","Breadcrumb","Calendar","Select","moment","axios","SubscribeToMembershipConfirmationHelper","confirmationPane","setConfirmationPaneState","width","selectedDate","handleSelect","Date","selectedOption","handleTimeChange","timeSlotsOptions","label","format","calculateShow","handleTimeDateSubmission"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, Form, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../../../layout/breadcrumb';\nimport { Calendar } from 'react-date-range';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport axios from \"axios\";\n\nconst SubscribeToMembershipConfirmationHelper = ({ confirmationPane, setConfirmationPaneState }) => {\n\n    return (\n        <Fragment>\n            <Sheet isOpen={confirmationPane} onClose={() => setConfirmationPaneState(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div className='marginized-header'>\n                            <Button className='btn-square-danger' color={\"danger-2x\"} style={{ width: \"100%\" }} outline onClick={() => setConfirmationPaneState(false)}>Cancel/Close Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                        <div className='inner-container-invite'>\n                            <Sheet.Content>\n                            <Breadcrumb parent=\"Send An Invite & Start A Video Interview!\" title=\"Initialize A Video Interview With This User!\" />\n                                <Container fluid={true}>\n                                    <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                        <Card className={\"card-shadow-messaging-initialize\"}>\n                                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                                <h3>Select the various settings/options for your invite. You will be inviting this user via a notification to join your desired video interview at the appropriate selected time!</h3>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Calendar\n                                                            date={selectedDate}\n                                                            onChange={handleSelect}\n                                                            shownDate={new Date()}\n                                                            className={\"custom-date-range-picker\"}\n                                                            showMonthAndYearPickers={false}\n                                                            staticRanges={[]}\n                                                            direction={\"horizontal\"}\n                                                            showMonthArrow={true}\n                                                            months={2}\n                                                            showDateDisplay={false}\n                                                            inputRanges={[]}\n                                                            rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                                        />\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Label className='label-time-selector'>Please select a 'meeting time' or a 'video time-slot' in which you'd like to interview/communicate with this person. This will be the time you both should be video chatting by..</Label>\n                                                        <Select\n                                                            value={selectedOption}\n                                                            onChange={handleTimeChange}\n                                                            options={timeSlotsOptions}\n                                                        />\n                                                        <hr />\n                                                        {selectedOption !== null ? <Fragment>\n                                                            <h4 className='selectedtext'>You've selected the timeslot of {selectedOption.label} on the date of {selectedDate !== null ? moment(selectedDate).format(\"MM/DD/YYYY\") : \"-------\"}!</h4>\n                                                            <hr />\n                                                        </Fragment> : null}\n                                                        <Button className='btn-square-success' disabled={calculateShow()} onClick={handleTimeDateSubmission} style={{ width: \"100%\" }} color={\"success-2x\"} outline>Submit & Continue Sending Invite!</Button>\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter className={\"b-l-primary b-r-primary\"}>\n                                                <p className='lead'>This is going to invite {\"\"} to an interview at the selected date & time. Please show up approx. 5-10 min early and be considerate of your peer's time..</p>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Container>\n                            </Sheet.Content>\n                        </div>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\n\nexport default SubscribeToMembershipConfirmationHelper;"]},"metadata":{},"sourceType":"module"}