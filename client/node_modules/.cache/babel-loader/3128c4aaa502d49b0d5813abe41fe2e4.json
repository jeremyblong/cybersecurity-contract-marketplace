{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/timelineTab.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport LeftBar from './bars/leftBar.jsx';\nimport RightBar from './bars/rightBar.jsx';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport helpers from \"./helpers/misc/index.js\";\nimport ViewPostFileContentHelper from \"./helpers/viewPostFileContents/viewContent.js\";\nconst {\n  TimelinePostsMappedHelper\n} = helpers;\n\nconst TimelineTab = _ref => {\n  let {\n    user,\n    onCloseModal,\n    isOpen,\n    onOpenModal,\n    setSelectedCurrently,\n    setSelectedModalIndex,\n    modalIndexSelected,\n    userData\n  } = _ref;\n  const history = useHistory();\n  console.log(\"MY USER:\", user);\n  const [popover, setPopoverState] = useState({});\n  const [isPostPaneOpen, setPostPaneOpenState] = useState(false);\n  const [selectedPost, setSelectedPost] = useState(null); // render ONLY ONCE\n\n  useEffect(() => {\n    setPopoverState(() => {\n      const newObjCount = {};\n      const posts = user.profilePosts; // reassign state items in preperation for future state changes...\n\n      for (const keyyy in posts) {\n        newObjCount[`post${keyyy}`] = false;\n      }\n\n      return newObjCount;\n    });\n  }, []);\n\n  const postNewContentStart = () => {\n    console.log(\"postNewContentStart clicked/ran.\");\n    history.push(\"/create/new/post/hacker/profile/main/data\");\n  };\n\n  const renderConditionalContent = () => {\n    if (user !== null) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ViewPostFileContentHelper, {\n        selectedPost: selectedPost,\n        isPostPaneOpen: isPostPaneOpen,\n        setPostPaneOpenState: setPostPaneOpenState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        xl: \"3 xl-40 box-col-4\",\n        lg: \"12\",\n        md: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"default-according style-1 faq-accordion job-accordion\",\n        id: \"accordionoc4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(LeftBar, {\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        xl: \"6 xl-60 box-col-8\",\n        lg: \"12\",\n        md: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, user.uniqueId === userData.uniqueId ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 64\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"poster-image-video-content-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, \"Upload a new post and/or content to your main feed!\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"posting-sub-header-new-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, \"This can be \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 97\n        }\n      }, \"ANYTHING\"), \" from images to videos to educational content to general updates (ONLY you can see this portion of content)...\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: postNewContentStart,\n        style: {\n          width: \"100%\"\n        },\n        outline: true,\n        color: \"info\",\n        className: \"btn-square-info text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-follow m-r-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 164\n        }\n      }), \"Post New Content!\")))) : null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, typeof user.profilePosts !== \"undefined\" && user.profilePosts.length > 0 ? user.profilePosts.map((post, index) => {\n        const popoverIDTarget = `post${index}`;\n        return /*#__PURE__*/React.createElement(TimelinePostsMappedHelper, {\n          isPostPaneOpen: isPostPaneOpen,\n          setPostPaneOpenState: setPostPaneOpenState,\n          setSelectedPost: setSelectedPost,\n          user: user,\n          setPopoverState: setPopoverState,\n          popoverIDTarget: popoverIDTarget,\n          popover: popover,\n          userData: userData,\n          index: index,\n          post: post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 40\n          }\n        });\n      }) : /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginBottom: \"17.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../../../../../assets/images/boxbg.jpg\"),\n        className: \"maxed-both-ways-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 73\n        }\n      }))))), /*#__PURE__*/React.createElement(Col, {\n        xl: \"3 xl-100 box-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"default-according style-1 faq-accordion job-accordion\",\n        id: \"accordionoc1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(RightBar, {\n        modalIndexSelected: modalIndexSelected,\n        setSelectedModalIndex: setSelectedModalIndex,\n        setSelectedCurrently: setSelectedCurrently,\n        onOpenModal: onOpenModal,\n        isOpen: isOpen,\n        onCloseModal: onCloseModal,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#c9c9c9\",\n        highlightColor: \"#444\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 60,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, renderConditionalContent()));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(TimelineTab);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/timelineTab.jsx"],"names":["React","Fragment","useState","useEffect","Row","Col","Card","CardBody","Button","LeftBar","RightBar","Skeleton","SkeletonTheme","connect","useHistory","helpers","ViewPostFileContentHelper","TimelinePostsMappedHelper","TimelineTab","user","onCloseModal","isOpen","onOpenModal","setSelectedCurrently","setSelectedModalIndex","modalIndexSelected","userData","history","console","log","popover","setPopoverState","isPostPaneOpen","setPostPaneOpenState","selectedPost","setSelectedPost","newObjCount","posts","profilePosts","keyyy","postNewContentStart","push","renderConditionalContent","uniqueId","width","length","map","post","index","popoverIDTarget","marginBottom","require","mapStateToProps","state","auth","data"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport LeftBar from './bars/leftBar.jsx';\nimport RightBar from './bars/rightBar.jsx';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport helpers from \"./helpers/misc/index.js\";\nimport ViewPostFileContentHelper from \"./helpers/viewPostFileContents/viewContent.js\";\n\nconst { TimelinePostsMappedHelper } = helpers;\n\nconst TimelineTab = ({ user, onCloseModal, isOpen, onOpenModal, setSelectedCurrently, setSelectedModalIndex, modalIndexSelected, userData }) => {\n\n    const history = useHistory();\n\n    console.log(\"MY USER:\", user);\n\n    const [ popover, setPopoverState ] = useState({}); \n    const [ isPostPaneOpen, setPostPaneOpenState ] = useState(false);\n    const [ selectedPost, setSelectedPost ] = useState(null);\n\n    // render ONLY ONCE\n    useEffect(() => {\n        setPopoverState(() => {\n            const newObjCount = {};\n            const posts = user.profilePosts;\n            // reassign state items in preperation for future state changes...\n            for (const keyyy in posts) {\n                newObjCount[`post${keyyy}`] = false;\n            }\n            return newObjCount;\n        })\n    }, []);\n\n    const postNewContentStart = () => {\n        console.log(\"postNewContentStart clicked/ran.\");\n\n        history.push(\"/create/new/post/hacker/profile/main/data\");\n    }\n\n    const renderConditionalContent = () => {\n        if (user !== null) {\n            return (\n                <Fragment>\n                    <ViewPostFileContentHelper selectedPost={selectedPost} isPostPaneOpen={isPostPaneOpen} setPostPaneOpenState={setPostPaneOpenState} />\n                    <Col xl=\"3 xl-40 box-col-4\" lg=\"12\" md=\"5\">\n                        <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc4\">\n                            <Row>\n                                <LeftBar user={user} />\n                            </Row>\n                        </div>\n                    </Col>\n                    <Col xl=\"6 xl-60 box-col-8\" lg=\"12\" md=\"7\">\n                        {user.uniqueId === userData.uniqueId ? <Row>\n                            <Card>\n                                <CardBody>\n                                    <h4 className={\"poster-image-video-content-header\"}>Upload a new post and/or content to your main feed!</h4>\n                                    <p className={\"posting-sub-header-new-content\"}>This can be <strong>ANYTHING</strong> from images to videos to educational content to general updates (ONLY you can see this portion of content)...</p>\n                                    <hr />\n                                    <Button onClick={postNewContentStart} style={{ width: \"100%\" }} outline color={\"info\"} className=\"btn-square-info text-center\"><i className=\"fa fa-follow m-r-5\"></i>Post New Content!</Button>\n                                </CardBody>\n                            </Card>\n                        </Row> : null}\n                        <Row>\n                            {typeof user.profilePosts !== \"undefined\" && user.profilePosts.length > 0 ? user.profilePosts.map((post, index) => {\n                                const popoverIDTarget = `post${index}`;\n                                return <TimelinePostsMappedHelper isPostPaneOpen={isPostPaneOpen} setPostPaneOpenState={setPostPaneOpenState} setSelectedPost={setSelectedPost} user={user} setPopoverState={setPopoverState} popoverIDTarget={popoverIDTarget} popover={popover} userData={userData} index={index} post={post} />;\n                            }) : <Fragment>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                                <Row style={{ marginBottom: \"17.5px\" }}><img src={require(\"../../../../../assets/images/boxbg.jpg\")} className={\"maxed-both-ways-not-found\"} /></Row>\n                            </Fragment>}\n                        </Row>\n                    </Col>\n                    <Col xl=\"3 xl-100 box-col-12\">\n                        <div className=\"default-according style-1 faq-accordion job-accordion\" id=\"accordionoc1\">\n                            <Row>\n                                <RightBar modalIndexSelected={modalIndexSelected} setSelectedModalIndex={setSelectedModalIndex} setSelectedCurrently={setSelectedCurrently} onOpenModal={onOpenModal} isOpen={isOpen} onCloseModal={onCloseModal} user={user} />\n                            </Row>\n                        </div>\n                    </Col>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                        <p>\n                            <Skeleton count={60} />\n                        </p>\n                    </SkeletonTheme>\n                </Fragment>\n            );\n        }\n    }\n    return (\n        <Fragment>\n            <Row>\n                {renderConditionalContent()}\n            </Row>\n        </Fragment>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {})(TimelineTab);"]},"metadata":{},"sourceType":"module"}