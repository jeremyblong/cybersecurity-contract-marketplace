{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/renderComments.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\nconst {\n  checkMessageMeetsCritera\n} = helpers;\n\nconst RenderCommentsEmployerListingHelper = _ref => {\n  let {} = _ref;\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmitForm, errors => renderFormErrors(errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, checkMessageMeetsCritera.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\"), {\n    onChange: e => {\n      checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n      const caret = e.target.selectionStart;\n      const element = e.target;\n      window.requestAnimationFrame(() => {\n        element.selectionStart = caret;\n        element.selectionEnd = caret;\n      });\n    },\n    value: currentValues.comment,\n    name: \"comment\",\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: checkMessageMeetsCritera.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), errors.comment ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }, errors.comment.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-course-comment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-primary\",\n    color: \"primary-2x\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Leave/Post Comment!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"comment-list-course-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n    console.log(\"comment\", comment);\n    const popoverIDTarget = `comment${index}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: uuid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: require(\"../../../../../../../assets/images/blog/comment.jpg\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 130\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 53\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 94\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 184\n      }\n    }, /*#__PURE__*/React.createElement(RenderEmojiLogic, {\n      comments: comments,\n      reactions: comment.reactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 189\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: popoverIDTarget,\n      onClick: () => {\n        setPopoverState(prevState => {\n          return { ...prevState,\n            [`comment${index}`]: true\n          };\n        });\n      },\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 100\n      }\n    }), \"React to post w/emoji\"), /*#__PURE__*/React.createElement(RenderPopoverEmojiLogic, {\n      handleRespondEmoji: handleRespondEmoji,\n      comment: comment,\n      courseData: courseData,\n      userData: userData,\n      reactions: comment.reactions,\n      setPopoverState: setPopoverState,\n      popoverState: popover,\n      targetAndPopState: popoverIDTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)));\n};\n\nexport default RenderCommentsEmployerListingHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/renderComments.js"],"names":["React","Fragment","useState","useEffect","useRef","Row","Col","Media","Input","Label","Button","Form","axios","connect","useForm","Controller","MainHooksCourseIndividualCustomHelpers","ReactPlayer","helpers","NotificationManager","uuid","checkMessageMeetsCritera","RenderCommentsEmployerListingHelper","register","handleSubmit","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","onSubmitForm","renderFormErrors","label","check","e","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","currentValues","comment","placeholder","message","comments","length","map","index","console","log","popoverIDTarget","posterPicOrVideo","renderCommentPicOrVideo","require","posterName","posterAccountType","reactions","setPopoverState","prevState","handleRespondEmoji","courseData","userData","popover","commentText","subComments","subcomment","idx"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\nimport helpers from \"./helpers/helperFunctions.js\";\nimport { NotificationManager } from 'react-notifications';\nimport uuid from \"react-uuid\";\n\n\nconst { checkMessageMeetsCritera } = helpers;\n\nconst RenderCommentsEmployerListingHelper = ({  }) => {\n\n\n    const { register, handleSubmit, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    \n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <Form onSubmit={handleSubmit(onSubmitForm, (errors) => renderFormErrors(errors))}>\n                    <hr/>\n                        <Label className={\"heavy-label-course\"}>{checkMessageMeetsCritera.label}</Label>\n                        <Input {...checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\")} onChange={(e) => {\n\n                            checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n\n                            const caret = e.target.selectionStart;\n                            const element = e.target;\n                            window.requestAnimationFrame(() => {\n                                element.selectionStart = caret\n                                element.selectionEnd = caret\n                            })\n                        }} value={currentValues.comment} name={\"comment\"} className={\"form-control\"} rows={6} type={\"textarea\"} placeholder={checkMessageMeetsCritera.placeholder} />\n                        {errors.comment ? <span className=\"span-tooltip\">{errors.comment.message}</span> : null}\n                        <div className={\"float-right-course-comment-btn\"}>\n                            <Button type={\"submit\"} className={\"btn-square-primary\"} color={\"primary-2x\"} outline>Leave/Post Comment!</Button>\n                        </div>\n                    <hr />\n                </Form>\n                <ul className={\"comment-list-course-ul\"}>\n                    {typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n                        console.log(\"comment\", comment);\n\n                        const popoverIDTarget = `comment${index}`;\n                        return (\n                            <Fragment key={uuid()}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : <Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/comment.jpg\")} alt=\"\"/>}\n                                        <Media body>\n                                            <Row>\n                                                <Col md=\"4 xl-100\">\n                                                    <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"}</span></h6><Row><RenderEmojiLogic comments={comments} reactions={comment.reactions} /></Row>\n                                                </Col>\n                                                <Col md=\"8 xl-100\">\n                                                    <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                    {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                    <li id={popoverIDTarget} onClick={() => {\n                                                        setPopoverState(prevState => {\n                                                            return {\n                                                                ...prevState,\n                                                                [`comment${index}`]: true\n                                                            }\n                                                        });\n                                                    }} className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"React to post w/emoji\"}</li>\n                                                    <RenderPopoverEmojiLogic handleRespondEmoji={handleRespondEmoji} comment={comment} courseData={courseData} userData={userData} reactions={comment.reactions} setPopoverState={setPopoverState} popoverState={popover} targetAndPopState={popoverIDTarget} />\n                                                    </ul>\n                                                </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n        </Fragment>\n    );\n}\nexport default RenderCommentsEmployerListingHelper;"]},"metadata":{},"sourceType":"module"}