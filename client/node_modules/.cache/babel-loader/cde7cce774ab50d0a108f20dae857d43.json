{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/renderCommentSection.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera;\n\nconst CommentsIndividualCourseHelper = _ref => {\n  let {\n    courseData,\n    userData\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n  const [comments, setCommentsState] = useState([]);\n  useEffect(() => {\n    setCommentsState(courseData.comments);\n  }, []);\n  const currentValues = getValues();\n\n  const onSubmitForm = data => {\n    console.log(\"onSubmitForm submitted form properly...!:\", data);\n    const {\n      comment\n    } = data;\n    const configuration = {\n      id: userData.uniqueId,\n      courseId: courseData.id,\n      comment,\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      accountType: userData.accountType,\n      mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/course/individual/listing`, configuration).then(res => {\n      if (res.data.message === \"Successfully posted comment!\") {\n        console.log(res.data);\n        const {\n          updatedComments\n        } = res.data;\n        setValue(\"comment\", \"\", {\n          shouldValidate: false\n        });\n        setCommentsState(updatedComments);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderFormErrors = errors => {\n    console.log(\"renderFormErrors\", errors);\n  };\n\n  const renderCommentPicOrVideo = file => {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"media-body align-self-center\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Comment's\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmitForm, errors => renderFormErrors(errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, checkMessageMeetsCritera.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\"), {\n    onChange: e => {\n      return checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n    },\n    value: currentValues.comment,\n    name: \"comment\",\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: checkMessageMeetsCritera.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })), errors.comment ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 43\n    }\n  }, errors.comment.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-course-comment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn-square-primary\",\n    color: \"primary-2x\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Leave/Post Comment!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n    console.log(\"comment\", comment);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : /*#__PURE__*/React.createElement(Media, {\n      className: \"align-self-center\",\n      src: require(\"../../../../../../../assets/images/blog/comment.jpg\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 130\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, comment.posterName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 90\n      }\n    }, \" \", comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8 xl-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-social float-left float-md-right learning-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"digits custom-digit-react-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont icofont-ui-rate-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 97\n      }\n    }), \"598 Comments\")))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }\n    }, comment.commentText)))), typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n      console.log(\"sub-comment\", subcomment);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        className: \"align-self-center\",\n        src: require(\"../../../../../../../assets/images/blog/9.jpg\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 60\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 61\n        }\n      }, \"Name goes here\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 96\n        }\n      }, \" \", \"( Designer )\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 57\n        }\n      }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"))))));\n    }) : null);\n  }) : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CommentsIndividualCourseHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/renderCommentSection.js"],"names":["React","Fragment","useState","useEffect","Row","Col","Media","Input","Label","Button","Form","axios","connect","useForm","Controller","MainHooksCourseIndividualCustomHelpers","ReactPlayer","checkMessageMeetsCritera","CommentsIndividualCourseHelper","courseData","userData","register","handleSubmit","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","comments","setCommentsState","currentValues","onSubmitForm","data","console","log","comment","configuration","id","uniqueId","courseId","firstName","lastName","accountType","mostRecentProfilePicVideo","profilePicsVideos","length","post","process","env","REACT_APP_BASE_URL","then","res","message","updatedComments","shouldValidate","catch","err","renderFormErrors","renderCommentPicOrVideo","file","type","includes","REACT_APP_ASSET_LINK","link","label","check","e","onChange","placeholder","map","index","posterPicOrVideo","require","posterName","posterAccountType","commentText","subComments","subcomment","idx","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { Row, Col, Media, Input, Label, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCourseIndividualCustomHelpers from \"./helpers/reduxFormHelper.js\";\nimport ReactPlayer from \"react-player\";\n\n\nconst checkMessageMeetsCritera = MainHooksCourseIndividualCustomHelpers().checkMessageMeetsCritera\n\nconst CommentsIndividualCourseHelper = ({ courseData, userData }) => {\n\n    const { register, handleSubmit, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n\n    const [ comments, setCommentsState ] = useState([]);\n\n    useEffect(() => {\n        setCommentsState(courseData.comments);\n    }, [])\n\n    const currentValues = getValues();\n\n    const onSubmitForm = (data) => {\n        console.log(\"onSubmitForm submitted form properly...!:\", data);\n\n        const { comment } = data;\n\n        const configuration = {\n            id: userData.uniqueId,\n            courseId: courseData.id,\n            comment,\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            accountType: userData.accountType,\n            mostRecentProfilePicVideo: typeof userData.profilePicsVideos !== \"undefined\" && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos[userData.profilePicsVideos.length - 1] : null\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/post/comment/course/individual/listing`, configuration).then((res) => {\n            if (res.data.message === \"Successfully posted comment!\") {\n                console.log(res.data);\n\n                const { updatedComments } = res.data;\n\n                setValue(\"comment\", \"\", { shouldValidate: false });\n\n                setCommentsState(updatedComments);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderFormErrors = (errors) => {\n        console.log(\"renderFormErrors\", errors);\n    }\n    const renderCommentPicOrVideo = (file) => {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"media-body align-self-center\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                    </Media> \n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <Media className=\"align-self-center\">\n                        <Media className=\"align-self-center\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} alt=\"\"/>\n                    </Media>\n                </Fragment>\n            );\n        }  \n    }\n    return (\n        <Fragment>\n            <section className=\"comment-box\">\n                <h4>Comment's</h4>\n                <Form onSubmit={handleSubmit(onSubmitForm, (errors) => renderFormErrors(errors))}>\n                    <hr/>\n                        <Label className={\"heavy-label-course\"}>{checkMessageMeetsCritera.label}</Label>\n                        <Input {...checkMessageMeetsCritera.check(setError, register, clearErrors, \"comment\")} onChange={(e) => {\n                            return checkMessageMeetsCritera.onChange(e, \"comment\", setValue);\n                        }} value={currentValues.comment} name={\"comment\"} className={\"form-control\"} rows={6} type={\"textarea\"} placeholder={checkMessageMeetsCritera.placeholder} />\n                        {errors.comment ? <span className=\"span-tooltip\">{errors.comment.message}</span> : null}\n                        <div className={\"float-right-course-comment-btn\"}>\n                            <Button type={\"submit\"} className={\"btn-square-primary\"} color={\"primary-2x\"} outline>Leave/Post Comment!</Button>\n                        </div>\n                    <hr />\n                </Form>\n                <ul>\n                    {typeof comments !== \"undefined\" && comments.length > 0 ? comments.map((comment, index) => {\n                        console.log(\"comment\", comment);\n                        return (\n                            <Fragment key={index}>\n                                <li>\n                                    <Media className=\"align-self-center\">\n                                        {comment.posterPicOrVideo !== null ? renderCommentPicOrVideo(comment.posterPicOrVideo) : <Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/comment.jpg\")} alt=\"\"/>}\n                                        <Media body>\n                                            <Row>\n                                            <Col md=\"4 xl-100\">\n                                                <h6 className=\"mt-0\">{comment.posterName}<span> {comment.posterAccountType === \"hackers\" ? \"Hacker/Coder\" : \"Employer\"}</span></h6>\n                                            </Col>\n                                            <Col md=\"8 xl-100\">\n                                                <ul className=\"comment-social float-left float-md-right learning-comment\">\n                                                {/* <li className=\"digits\"><i className=\"icofont icofont-thumbs-up\"></i>{\"02 Hits\"}</li> */}\n                                                <li className=\"digits custom-digit-react-emoji\"><i className=\"icofont icofont-ui-rate-add\"></i>{\"598 Comments\"}</li>\n                                                </ul>\n                                            </Col>\n                                            </Row>\n                                            <p>{comment.commentText}</p>\n                                        </Media>\n                                    </Media>\n                                </li>\n                                {typeof comment.subComments !== \"undefined\" && comment.subComments.length > 0 ? comment.subComments.map((subcomment, idx) => {\n                                    console.log(\"sub-comment\", subcomment);\n                                    return (\n                                        <li key={idx}>\n                                            <ul>\n                                                <li>\n                                                    <Media><Media className=\"align-self-center\" src={require(\"../../../../../../../assets/images/blog/9.jpg\")} alt=\"\"/>\n                                                    <Media body>\n                                                        <Row>\n                                                        <Col xl=\"12\">\n                                                            <h6 className=\"mt-0\">Name goes here<span> {\"( Designer )\"}</span></h6>\n                                                        </Col>\n                                                        </Row>\n                                                        <p>{\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"}</p>\n                                                    </Media>\n                                                    </Media>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    );\n                                }) : null}\n                            </Fragment>\n                        );\n                    }) : null}\n                </ul>\n            </section>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CommentsIndividualCourseHelper);\n"]},"metadata":{},"sourceType":"module"}