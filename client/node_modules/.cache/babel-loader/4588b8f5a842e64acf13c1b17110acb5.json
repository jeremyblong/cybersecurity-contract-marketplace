{"ast":null,"code":"import React, { Fragment, useState } from 'react';\n\nconst handleCheckGroupType = (e, setGroupType) => {\n  const checked = e.target.checked;\n  setGroupType({\n    groupType: checked === true ? \"Public Convo's\" : \"Private Convo's\",\n    checked\n  });\n};\n\nconst handleListItemClickPrivateChannel = item => {\n  console.log(\"handleListItemClickPrivateChannel clicked... : \", item);\n};\n\nconst renderOnlineStatus = (item, userData) => {\n  for (let index = 0; index < item.members.length; index++) {\n    const user = item.members[index];\n\n    if (user.userId !== userData.uniqueId) {\n      return user.connectionStatus;\n    }\n\n    if (item.members.length - 1 === index) {\n      return user.connectionStatus;\n    }\n  }\n};\n\nconst renderNicknamePrivateGroup = (item, userData) => {\n  for (let index = 0; index < item.members.length; index++) {\n    const user = item.members[index];\n\n    if (user.userId !== userData.uniqueId) {\n      return user.nickname;\n    }\n\n    if (item.members.length - 1 === index) {\n      return user.nickname;\n    }\n  }\n};\n\nconst renderNickname = (item, userData) => {\n  for (let index = 0; index < item.operators.length; index++) {\n    const user = item.operators[index];\n\n    if (user.userId !== userData.uniqueId) {\n      return user.nickname;\n    }\n\n    if (item.operators.length - 1 === index) {\n      return \"Chat Invite Pending...\";\n    }\n  }\n};\n\nconst renderStatus = (item, userData) => {\n  for (let index = 0; index < item.operators.length; index++) {\n    const user = item.operators[index];\n\n    if (user.userId !== userData.uniqueId) {\n      return user.isActive;\n    }\n\n    if (item.operators.length - 1 === index) {\n      return user.isActive;\n    }\n  }\n};\n\nconst renderLastProfilePicMainUser = user => {\n  const reversed = user.profilePicsVideos.reverse();\n\n  for (let index = 0; index < reversed.length; index++) {\n    const item = reversed[index];\n\n    if (item.type.includes(\"image\")) {\n      return `${process.env.REACT_APP_ASSET_LINK}/${item.link}`;\n      break;\n    }\n  }\n};\n\nexport default {\n  handleCheckGroupType,\n  handleListItemClickPrivateChannel,\n  renderOnlineStatus,\n  renderNicknamePrivateGroup,\n  renderNickname,\n  renderStatus,\n  renderLastProfilePicMainUser\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/messaging/main/helpers/mainHelperFunctions.js"],"names":["React","Fragment","useState","handleCheckGroupType","e","setGroupType","checked","target","groupType","handleListItemClickPrivateChannel","item","console","log","renderOnlineStatus","userData","index","members","length","user","userId","uniqueId","connectionStatus","renderNicknamePrivateGroup","nickname","renderNickname","operators","renderStatus","isActive","renderLastProfilePicMainUser","reversed","profilePicsVideos","reverse","type","includes","process","env","REACT_APP_ASSET_LINK","link"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState } from 'react';\n\nconst handleCheckGroupType = (e, setGroupType) => {\n    const checked = e.target.checked;\n\n    setGroupType({\n        groupType: checked === true ? \"Public Convo's\" : \"Private Convo's\",\n        checked\n    })\n}\nconst handleListItemClickPrivateChannel = (item) => {\n    console.log(\"handleListItemClickPrivateChannel clicked... : \", item);\n}\nconst renderOnlineStatus = (item, userData) => {\n    for (let index = 0; index < item.members.length; index++) {\n        const user = item.members[index];\n        if (user.userId !== userData.uniqueId) {\n            return user.connectionStatus;\n        }\n        if ((item.members.length - 1) === index) {\n            return user.connectionStatus;\n        }\n    }\n}\nconst renderNicknamePrivateGroup = (item, userData) => {\n    for (let index = 0; index < item.members.length; index++) {\n        const user = item.members[index];\n        if (user.userId !== userData.uniqueId) {\n            return user.nickname;\n        }\n        if ((item.members.length - 1) === index) {\n            return user.nickname;\n        }\n    }\n}\nconst renderNickname = (item, userData) => {\n    for (let index = 0; index < item.operators.length; index++) {\n        const user = item.operators[index];\n        if (user.userId !== userData.uniqueId) {\n            return user.nickname;\n        }\n        if ((item.operators.length - 1) === index) {\n            return \"Chat Invite Pending...\";\n        }\n    }\n}\nconst renderStatus = (item, userData) => {\n    for (let index = 0; index < item.operators.length; index++) {\n        const user = item.operators[index];\n        if (user.userId !== userData.uniqueId) {\n            return user.isActive;\n        }\n        if ((item.operators.length - 1) === index) {\n            return user.isActive;\n        }\n    }\n}\nconst renderLastProfilePicMainUser = (user) => {\n    const reversed = user.profilePicsVideos.reverse();\n\n    for (let index = 0; index < reversed.length; index++) {\n        const item = reversed[index];\n        if (item.type.includes(\"image\")) {\n            return `${process.env.REACT_APP_ASSET_LINK}/${item.link}`;\n            break;\n        }\n    }\n}\nexport default {\n    handleCheckGroupType,\n    handleListItemClickPrivateChannel,\n    renderOnlineStatus,\n    renderNicknamePrivateGroup,\n    renderNickname,\n    renderStatus,\n    renderLastProfilePicMainUser\n};"]},"metadata":{},"sourceType":"module"}