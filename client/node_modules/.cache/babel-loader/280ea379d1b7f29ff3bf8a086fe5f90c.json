{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport ReactDragListView from \"react-drag-listview\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport SheetHelperPaneUploadCourseContent from \"./helpers/paneSheet.js\";\nimport { shiftCoreStyles } from \"../../../../../../../../redux/actions/universal/index.js\";\nconst {\n  handleDeletionConfirmationOpen\n} = helpers;\nconst steps = [{\n  selector: '#navigate-to-redirect',\n  content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`\n}];\n\nconst CreateNewCoursePageTwo = _ref => {\n  let {\n    setProgress,\n    updateCourseInformationData,\n    courseData,\n    shiftCoreStyles\n  } = _ref;\n  const scrollToTourWrapper = useRef(null); // state initialization\n\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [subtitle, setSubTitleValue] = useState(\"\");\n  const [stepOpen, setStepOpenState] = useState(false);\n  const [modalOpen, setModalState] = useState(false);\n  const [courseContent, setCourseContentList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedCourseContent, setCourseContentState] = useState(false);\n\n  const disableBodyAndScroll = target => {\n    disableBodyScroll(target);\n  }; // enable body!\n\n\n  const enableBody = target => clearAllBodyScrollLocks();\n\n  const handleTourActivate = () => {\n    console.log(\"handleTourActivate ran...\");\n    scrollToTourWrapper.current.scrollIntoView(); // alter slightly according to scroll behavior\n\n    setTimeout(() => {\n      window.scrollBy(0, -175);\n    }, 300); // #navigate-to-redirect\n\n    setTimeout(() => {\n      setStepOpenState(true);\n    }, 750);\n  };\n\n  const handleSubAddition = () => {\n    console.log(\"handleSubAddition ran...\");\n\n    if (typeof courseData !== \"undefined\" && courseData.length > 0) {\n      console.log(\"already exists...!\");\n      const createdDate = new Date();\n      const addNew = {\n        id: uuid(),\n        dateTimeAdded: createdDate,\n        video: null,\n        sectionTitle: subtitle,\n        formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n      };\n      updateCourseInformationData([...courseData, addNew]);\n      setSubTitleValue(\"\");\n    } else {\n      console.log(\"doesnt exist...\");\n      const createdDate = new Date();\n      const newState = [{\n        id: uuid(),\n        dateTimeAdded: createdDate,\n        video: null,\n        sectionTitle: subtitle,\n        formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n      }];\n      updateCourseInformationData(newState);\n      setSubTitleValue(\"\");\n    }\n  };\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      console.log(\"ondrag running...\", fromIndex, toIndex);\n      const data = [...courseData];\n      const item = data.splice(fromIndex, 1)[0];\n      data.splice(toIndex, 0, item);\n      console.log(data);\n      updateCourseInformationData(data);\n    },\n\n    nodeSelector: 'li',\n    handleSelector: 'a'\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tour, {\n    steps: steps,\n    isOpen: stepOpen,\n    onAfterOpen: disableBodyAndScroll,\n    onBeforeClose: enableBody,\n    onRequestClose: () => {\n      setStepOpenState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SheetHelperPaneUploadCourseContent, {\n    disableBodyScroll: disableBodyScroll,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    setProgress: setProgress,\n    setChangeOptions: setChangeOptions,\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollToTourWrapper,\n    id: \"navigate-to-redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"p-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio radio-info mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"radio66\",\n    type: \"radio\",\n    name: \"radio66\",\n    checked: modalOpen === true ? true : false,\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"radio66\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-0 mega-title-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 45\n    }\n  }, \"Confused on how to upload 'Course-Content'?\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info pull-right digits make-digits-larger-courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 126\n    }\n  }, \"Need Clarification/Help on how to upload new content?\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }, \"Are you unsure of 'what' or 'how' to upload course content & most of all organize the data in a manner that makes sense? We will guide you through the process but you can find a very detailed overview/guide by clicking the button just below this text...Click it to find out more!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handleSubAddition(),\n    className: \"btn-square-secondary\",\n    color: \"secondary\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }, \"Get help, guidance OR clarification on uploading course's!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customized-course-lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  }, \"Basically, you will need to select the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 122\n    }\n  }, \"core\"), \" details for your new course (which you've already done on page 1) and secondly (now) you will need to upload \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 253\n    }\n  }, \"ONE (1) VIDEO\"), \" per each added item in the list you generate/create below with the input/form & button to submit them. Simply, enter a \\\"part\\\" name and upload a video for that cooresponding part!\"))))), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"custom-ordered-list-courses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"Enter a name/title for your new segment (segment being a chunk or small portion of your overall course/content)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, \"Submit the title and it will automatically be added to the existing list (the course will be saved exactly as uploaded regarding the order)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"Upload a video to the cooresponding HIGHLIGHTED region and this new video will be attached to the highlighted segment (will replace any existing video/content if already exists)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, \"That's it! Proceed with your other course content...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute-positioned-button-clear-redux\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"absolute-redux-clear-button\",\n    onClick: () => handleDeletionConfirmationOpen(),\n    className: \"btn-square-danger\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Clear ENTIRE Already Filled Course Data\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"12.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, \"Add a \\\"Sub-Section Course Content\\\" section with this form. If you're confused as to what this means, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\"\n    },\n    id: \"hover-a-uploading\",\n    onClick: () => handleTourActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 149\n    }\n  }, \"click this\"), \" to retreieve more details on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 291\n    }\n  }, \"how to create sellable content/courses\")), /*#__PURE__*/React.createElement(InputGroup, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 82\n    }\n  }, \"Add Course Section\")), /*#__PURE__*/React.createElement(Input, {\n    value: subtitle,\n    onChange: e => setSubTitleValue(e.target.value),\n    className: \"form-control min-height-input-courses\",\n    name: \"subtitle\",\n    type: \"text\",\n    placeholder: \"Enter a course sub-section title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => handleSubAddition(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 82\n    }\n  }, \"Add New Section\")))))), /*#__PURE__*/React.createElement(ReactDragListView, Object.assign({}, dragProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, courseData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => {\n        setCourseContentState(item); // DISABLE clicking background\n\n        shiftCoreStyles(true); // set modal sheet pane OPEN/true\n\n        setIsOpen(true); // lock after appropriate position change\n\n        setTimeout(() => {\n          // LOCK page\n          const select = document.querySelector(\".enact-nonclick\");\n          disableBodyScroll(select);\n        }, 500);\n      },\n      src: require(\"../../../../../../../../assets/icons/view.png\"),\n      className: \"view-more-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"custom-strong-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 57\n      }\n    }, item.sectionTitle), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"badge badge-secondary counter digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 53\n      }\n    }, \"Use me to drag this item\")));\n  }))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCourseInformationData,\n  shiftCoreStyles\n})(CreateNewCoursePageTwo);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/index.js"],"names":["React","Fragment","useRef","useState","connect","helpers","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Media","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","Tour","disableBodyScroll","clearAllBodyScrollLocks","updateCourseInformationData","_","ReactDragListView","uuid","moment","SheetHelperPaneUploadCourseContent","shiftCoreStyles","handleDeletionConfirmationOpen","steps","selector","content","CreateNewCoursePageTwo","setProgress","courseData","scrollToTourWrapper","changeOptions","setChangeOptions","subtitle","setSubTitleValue","stepOpen","setStepOpenState","modalOpen","setModalState","courseContent","setCourseContentList","isOpen","setIsOpen","selectedCourseContent","setCourseContentState","disableBodyAndScroll","target","enableBody","handleTourActivate","console","log","current","scrollIntoView","setTimeout","window","scrollBy","handleSubAddition","length","createdDate","Date","addNew","id","dateTimeAdded","video","sectionTitle","formattedDate","format","newState","dragProps","onDragEnd","fromIndex","toIndex","data","item","splice","nodeSelector","handleSelector","width","paddingTop","color","e","value","map","index","select","document","querySelector","require","mapStateToProps","state","userData","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Media, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Tour from 'reactour';\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport ReactDragListView from \"react-drag-listview\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport SheetHelperPaneUploadCourseContent from \"./helpers/paneSheet.js\";\nimport { shiftCoreStyles } from \"../../../../../../../../redux/actions/universal/index.js\";\n\n\nconst { \n    handleDeletionConfirmationOpen\n} = helpers;\n\nconst steps = [\n    {\n      selector: '#navigate-to-redirect',\n      content: `If you're a bit confused as to 'how' to 'upload/create' new course content to be sold and streamed on our platform, click this highlighted icon/button and we will open a modal with more detailed information regarding this matter...`,\n    }\n]\n\nconst CreateNewCoursePageTwo = ({ setProgress, updateCourseInformationData, courseData, shiftCoreStyles }) => {\n    const scrollToTourWrapper = useRef(null);\n    // state initialization\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ subtitle, setSubTitleValue ] = useState(\"\");\n    const [ stepOpen, setStepOpenState ] = useState(false);\n    const [ modalOpen, setModalState ] = useState(false);\n    const [ courseContent, setCourseContentList ] = useState([]); \n    const [ isOpen, setIsOpen ] = useState(false);\n    const [ selectedCourseContent, setCourseContentState ] = useState(false);\n\n    const disableBodyAndScroll = target => {\n        disableBodyScroll(target);        \n    };\n    // enable body!\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const handleTourActivate = () => {\n        console.log(\"handleTourActivate ran...\");\n\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly according to scroll behavior\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 300);\n        // #navigate-to-redirect\n        setTimeout(() => {\n            setStepOpenState(true);\n        }, 750)\n    }\n    const handleSubAddition = () => {\n        console.log(\"handleSubAddition ran...\");\n\n        if (typeof courseData !== \"undefined\" && courseData.length > 0) {\n            console.log(\"already exists...!\");\n            \n            const createdDate = new Date();\n\n            const addNew = {\n                id: uuid(),\n                dateTimeAdded: createdDate,\n                video: null,\n                sectionTitle: subtitle,\n                formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n            };\n            updateCourseInformationData([...courseData, addNew]);\n            setSubTitleValue(\"\");\n        } else {\n            console.log(\"doesnt exist...\");\n\n            const createdDate = new Date();\n\n            const newState = [{\n                id: uuid(),\n                dateTimeAdded: createdDate,\n                video: null,\n                sectionTitle: subtitle,\n                formattedDate: moment(createdDate).format(\"MM/DD/YYYY hh:mm:ss a\")\n            }];\n            updateCourseInformationData(newState);\n\n            setSubTitleValue(\"\");\n        }\n    }\n    const dragProps = {\n        onDragEnd(fromIndex, toIndex) {\n            console.log(\"ondrag running...\", fromIndex, toIndex)\n            const data = [...courseData];\n            const item = data.splice(fromIndex, 1)[0];\n            data.splice(toIndex, 0, item);\n            console.log(data);\n            updateCourseInformationData(data)\n        },\n        nodeSelector: 'li',\n        handleSelector: 'a'\n    };\n    return (\n        <Fragment>\n            <Tour\n                steps={steps}\n                isOpen={stepOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={() => {\n                    setStepOpenState(false);\n                }} \n            />\n            <SheetHelperPaneUploadCourseContent disableBodyScroll={disableBodyScroll} clearAllBodyScrollLocks={clearAllBodyScrollLocks} setProgress={setProgress} setChangeOptions={setChangeOptions} isOpen={isOpen} setIsOpen={setIsOpen} />\n            <Row>\n            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <div ref={scrollToTourWrapper} id={\"navigate-to-redirect\"}>\n                                    <Media className=\"p-20\">\n                                        <div className=\"radio radio-info mr-3\">\n                                            <Input id=\"radio66\" type=\"radio\" name=\"radio66\" checked={modalOpen === true ? true : false} value={null} />\n                                            <Label for={\"radio66\"}></Label>\n                                        </div>\n                                        <Media body>\n                                            <h6 className=\"mt-0 mega-title-badge\">Confused on how to upload 'Course-Content'?<span className=\"badge badge-info pull-right digits make-digits-larger-courses\">{\"Need Clarification/Help on how to upload new content?\"}</span></h6>\n                                            <p>{\"Are you unsure of 'what' or 'how' to upload course content & most of all organize the data in a manner that makes sense? We will guide you through the process but you can find a very detailed overview/guide by clicking the button just below this text...Click it to find out more!\"}</p>\n                                            <hr />\n                                            <Button outline style={{ width: \"100%\" }} onClick={() => handleSubAddition()} className=\"btn-square-secondary\" color=\"secondary\" size=\"md\">Get help, guidance OR clarification on uploading course's!</Button>\n                                            <p className=\"customized-course-lead\">Basically, you will need to select the <strong>core</strong> details for your new course (which you've already done on page 1) and secondly (now) you will need to upload <strong>ONE (1) VIDEO</strong> per each added item in the list you generate/create below with the input/form & button to submit them. Simply, enter a \"part\" name and upload a video for that cooresponding part!</p>\n                                        </Media>\n                                    </Media>\n                                </div>\n                            </Row>\n                            <ol className={\"custom-ordered-list-courses\"}>\n                                <li>Enter a name/title for your new segment (segment being a chunk or small portion of your overall course/content)</li>\n                                <li>Submit the title and it will automatically be added to the existing list (the course will be saved exactly as uploaded regarding the order)</li>\n                                <li>Upload a video to the cooresponding HIGHLIGHTED region and this new video will be attached to the highlighted segment (will replace any existing video/content if already exists)</li>\n                                <li>That's it! Proceed with your other course content...</li>\n                            </ol>\n                            <div className={\"absolute-positioned-button-clear-redux\"}>\n                                <Button id={\"absolute-redux-clear-button\"} onClick={() => handleDeletionConfirmationOpen()} className=\"btn-square-danger\" color=\"danger\" size=\"md\">Clear ENTIRE Already Filled Course Data</Button>\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row style={{ paddingTop: \"12.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <FormGroup className=\"m-form__group\">\n                                        <Label>Add a \"Sub-Section Course Content\" section with this form. If you're confused as to what this means, <strong style={{ color: \"red\" }} id=\"hover-a-uploading\" onClick={() => handleTourActivate()}>click this</strong> to retreieve more details on <strong>how to create sellable content/courses</strong></Label>\n                                        <InputGroup style={{ width: \"100%\" }}>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>{\"Add Course Section\"}</InputGroupText></InputGroupAddon>\n                                            <Input value={subtitle} onChange={(e) => setSubTitleValue(e.target.value)} className=\"form-control min-height-input-courses\" name={\"subtitle\"} type=\"text\" placeholder={\"Enter a course sub-section title...\"} />\n                                            <InputGroupAddon addonType=\"prepend\"><Button style={{ width: \"100%\" }} onClick={() => handleSubAddition()} className=\"btn-square-info\" color=\"info\" size=\"md\">Add New Section</Button></InputGroupAddon>\n                                        </InputGroup>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <ReactDragListView {...dragProps}>\n                                <ul>\n                                    {courseData.map((item, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <ListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                                                    <img onClick={() => {\n                                                        setCourseContentState(item);\n                                                        // DISABLE clicking background\n                                                        shiftCoreStyles(true);\n                                                        // set modal sheet pane OPEN/true\n                                                        setIsOpen(true);\n                                                        // lock after appropriate position change\n                                                        setTimeout(() => {\n                                                            // LOCK page\n                                                            const select = document.querySelector(\".enact-nonclick\");\n\n                                                            disableBodyScroll(select);\n                                                        }, 500)\n                                                    }} src={require(\"../../../../../../../../assets/icons/view.png\")} className={\"view-more-icon\"} />\n                                                        <p className={\"custom-strong-list-item\"}>{item.sectionTitle}</p>\n                                                    <a className=\"badge badge-secondary counter digits\">{\"Use me to drag this item\"}</a>\n                                                </ListGroupItem>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </ul>\n                            </ReactDragListView>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData, shiftCoreStyles })(CreateNewCoursePageTwo);"]},"metadata":{},"sourceType":"module"}