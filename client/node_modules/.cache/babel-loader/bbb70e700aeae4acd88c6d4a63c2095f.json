{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/employers/createVideoInterview/createVideoChat.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\n\nconst CreateVideoChatEmployerHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]); // Create refs for the HTML elements to attach audio and video to in the DOM\n  // For now, set them to null\n\n  const videoRef = useRef(null);\n  const audioRef = useRef(null); // Get the audio and video tracks from the participant, filtering out the tracks that are null\n\n  const getExistingVideoTracks = participant => {\n    const videoPublications = Array.from(participant.videoTracks.values());\n    const existingVideoTracks = videoPublications.map(publication => publication.track).filter(track => track !== null);\n    return existingVideoTracks;\n  };\n\n  const getExistingAudioTracks = participant => {\n    const audioPublications = Array.from(participant.audioTracks.values());\n    const existingAudioTracks = audioPublications.map(publication => publication.track).filter(track => track !== null);\n    return existingAudioTracks;\n  };\n\n  useEffect(() => {\n    const configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then(res => {\n      if (res.data.message === \"Gathered user!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setUser(user);\n        Video.connect(user.activeVideoChatRoom.tokenized, {\n          name: user.activeVideoChatRoom.roomName\n        }).then(room => {\n          console.log('Connected to Room', room);\n        });\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // useEffect(() => {\n  //     const trackSubscribed = (track) => {\n  //         if (track.kind === 'video') {\n  //             setVideoTracks(videoTracks => [...videoTracks, track]);\n  //         } else {\n  //             setAudioTracks(audioTracks => [...audioTracks, track]);\n  //         }\n  //     };\n  //     const trackUnsubscribed = (track) => {\n  //         if (track.kind === 'video') {\n  //             setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n  //         } else {\n  //             setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n  //         }\n  //     };\n  //     setVideoTracks(getExistingVideoTracks(participant));\n  //     setAudioTracks(getExistingAudioTracks(participant));\n  //     // Set up event listeners\n  //     participant.on('trackSubscribed', trackSubscribed);\n  //     participant.on('trackUnsubscribed', trackUnsubscribed);\n  //     // Clean up at the end by removing all the tracks and the event listeners\n  //     return () => {\n  //         setVideoTracks([]);\n  //         setAudioTracks([]);\n  //         participant.removeAllListeners();\n  //         participant.videoTracks.forEach((track) => track.isEnabled = false)\n  //     };\n  // }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n\n    if (videoRef && videoRef.current) {\n      if (videoTrack) {\n        videoTrack.attach(videoRef.current);\n        return () => {\n          videoTrack.detach();\n        };\n      }\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n\n    if (audioRef && audioRef.current) {\n      if (audioTrack) {\n        audioTrack.attach(audioRef.current);\n        return () => {\n          audioTrack.detach();\n        };\n      }\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Invite Hacker(s) To Video Interview With You!\",\n    title: \"Find, Select & Invite Anyone On Our Platform..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"We \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 56\n    }\n  }, \"HIGHLY SUGGEST\"), \" video interviewing \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 136\n    }\n  }, \"any\"), \" potential candiates for a contracted gig and/or hacking job, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 247\n    }\n  }, \"ESPECIALLY\"), \" if testing \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 315\n    }\n  }, \"physical infrastructure\"), \" and other related on-site security.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-success b-r-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    autoPlay: true,\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    width: \"100%\",\n    height: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: null,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }), \"Your browser does not support the video tag.\")))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Initialize Room\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/employers/createVideoInterview/createVideoChat.js"],"names":["React","Fragment","useState","useEffect","useRef","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Button","Breadcrumb","connect","reduxConnect","useParams","Video","axios","CreateVideoChatEmployerHelper","userData","user","setUser","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","getExistingVideoTracks","participant","videoPublications","Array","from","values","existingVideoTracks","map","publication","track","filter","getExistingAudioTracks","audioPublications","existingAudioTracks","configuration","params","id","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","activeVideoChatRoom","tokenized","name","roomName","room","catch","err","videoTrack","current","attach","detach","audioTrack","color","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\n\nconst CreateVideoChatEmployerHelper = ({ userData }) => {\n\n    const [ user, setUser ] = useState(null);\n    const [ videoTracks, setVideoTracks ] = useState([]);\n    const [ audioTracks, setAudioTracks ] = useState([]);\n  \n    // Create refs for the HTML elements to attach audio and video to in the DOM\n    // For now, set them to null\n    const videoRef = useRef(null);\n    const audioRef = useRef(null);\n  \n    // Get the audio and video tracks from the participant, filtering out the tracks that are null\n    const getExistingVideoTracks  = (participant) => {\n        const videoPublications = Array.from(participant.videoTracks.values());\n        const existingVideoTracks = videoPublications.map(publication => publication.track).filter(track => track !== null);\n        return existingVideoTracks;\n    }\n  \n    const getExistingAudioTracks = (participant) => {\n        const audioPublications = Array.from(participant.audioTracks.values());\n        const existingAudioTracks = audioPublications.map(publication => publication.track).filter(track => track !== null);\n        return existingAudioTracks;\n    }\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUser(user);\n\n                Video.connect(user.activeVideoChatRoom.tokenized, { name: user.activeVideoChatRoom.roomName }).then(room => {\n                    console.log('Connected to Room', room);\n                });\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    // useEffect(() => {\n    //     const trackSubscribed = (track) => {\n    //         if (track.kind === 'video') {\n    //             setVideoTracks(videoTracks => [...videoTracks, track]);\n    //         } else {\n    //             setAudioTracks(audioTracks => [...audioTracks, track]);\n    //         }\n    //     };\n    \n    //     const trackUnsubscribed = (track) => {\n    //         if (track.kind === 'video') {\n    //             setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n    //         } else {\n    //             setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n    //         }\n    //     };\n    \n    //     setVideoTracks(getExistingVideoTracks(participant));\n    //     setAudioTracks(getExistingAudioTracks(participant));\n    \n    //     // Set up event listeners\n    //     participant.on('trackSubscribed', trackSubscribed);\n    //     participant.on('trackUnsubscribed', trackUnsubscribed);\n    \n    \n    //     // Clean up at the end by removing all the tracks and the event listeners\n    //     return () => {\n    //         setVideoTracks([]);\n    //         setAudioTracks([]);\n    //         participant.removeAllListeners();\n    //         participant.videoTracks.forEach((track) => track.isEnabled = false)\n    //     };\n    // }, [participant]);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoRef && videoRef.current) {\n            if (videoTrack) {\n                videoTrack.attach(videoRef.current);\n                return () => {\n                    videoTrack.detach();\n                };\n            }\n        }\n    }, [videoTracks]);\n    \n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioRef && audioRef.current) {\n            if (audioTrack) {\n                audioTrack.attach(audioRef.current);\n                return () => {\n                    audioTrack.detach();\n                };\n            }\n        }\n    }, [audioTracks]);\n    \n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Invite Hacker(s) To Video Interview With You!\" title=\"Find, Select & Invite Anyone On Our Platform..\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)</h2>\n                                <p className=\"lead\">We <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGEST</strong> video interviewing <strong style={{ color: \"#f73164\" }}>any</strong> potential candiates for a contracted gig and/or hacking job, <strong style={{ color: \"#f73164\" }}>ESPECIALLY</strong> if testing <strong>physical infrastructure</strong> and other related on-site security.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-success b-r-success'>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <video ref={videoRef} autoPlay={true} />\n                                        <audio ref={audioRef} autoPlay={true} muted={true} />\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <video width=\"100%\" height=\"100%\" controls>\n                                            <source src={null} type=\"video/mp4\" />\n                                            Your browser does not support the video tag.\n                                        </video>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <Button className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={null}>Initialize Room</Button>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);"]},"metadata":{},"sourceType":"module"}