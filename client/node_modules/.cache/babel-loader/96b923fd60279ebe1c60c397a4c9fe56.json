{"ast":null,"code":"import React,{Fragment,useState}from'react';import Sheet from'react-modal-sheet';import{Container,Row,Col,Card,CardBody,Button,CardHeader,CardFooter,ListGroup,ListGroupItem}from'reactstrap';import\"./styles.css\";import{NotificationManager}from'react-notifications';import Breadcrumb from'../../../../../../layout/breadcrumb';import{confirmAlert}from'react-confirm-alert';import axios from\"axios\";const SubscribeToMembershipConfirmationHelper=_ref=>{let{userData,selectedSubscription,confirmationPane,setConfirmationPaneState}=_ref;const calculateTier=tier=>{switch(tier){case\"tier-1\":return\"Tier ONE\";break;case\"tier-2\":return\"Tier TWO\";break;case\"tier-3\":return\"Tier THREE\";break;default:break;}};const calculateCost=tier=>{switch(tier){case\"tier-1\":return\"$25.00/Month\";break;case\"tier-2\":return\"$35.00/Month\";break;case\"tier-3\":return\"$45.00/Month\";break;default:break;}};const calculateTierDetails=tier=>{switch(tier){case\"tier-1\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"benifits-text\"},\"Benifit's of this particular tier/subscription\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"25 Free Tokens Each Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Access to 'premier' or 'VIP' areas\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"1 Profile Boost Per Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"1 Ticket To A Restricted Event Per Month\")));break;case\"tier-2\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"benifits-text\"},\"Benifit's of this particular tier/subscription\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"40 Free Tokens Each Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Access to 'premier' or 'VIP' areas\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"3 Profile Boost(s) Per Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"2 Tickets To A Restricted Event Per Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Earn 1.5x Experience Per Every 1x Earned\")));break;case\"tier-3\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"benifits-text\"},\"Benifit's of this particular tier/subscription\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"60 Free Tokens Each Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Access to 'premier' or 'VIP' areas\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"5 Profile Boost(s) Per Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"3 Tickets To A Restricted Event Per Month\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Earn 1.5x Experience Per Every 1x Earned\")));break;default:break;}};const handleRequest=tier=>{console.log(\"handleRequest\",tier);const configuration={signedinID:userData.uniqueId,signedinAccountType:userData.accountType,tier};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/subscribe/membership/both/account/types\"),configuration).then(res=>{if(res.data.message===\"Subscribed successfully!\"){console.log(res.data);NotificationManager.success(\"We've successfully charged your account & activated your subscription & benifits! Token's, 'boosts' and other cooresponding 'addons' were added to your account successfully and are now ACTIVE!\",\"Purchase successful, ACCOUNT MODIFIED W/BENIFITS!\",4750);}else if(res.data.message===\"Have NOT completed onboarding flow..\"){NotificationManager.warning(\"You MUST complete the account 'onboarding-flow' BEFORE attempting to make any purchases or any other related payment logic - please complete the onboarding flow & try this action again!\",\"MUST complete 'onboarding flow' BEFORE making this request!\",4750);}else{console.log(\"Err\",res.data);NotificationManager.error(\"An unknown error has occurred while attempting 'subscribe' to the appropriate 'tier', no changes were made! Contact support if the problem persists over a period of time..\",\"Unknown error has occurred!\",4750);}}).catch(err=>{console.log(\"Critical errror...:\",err);NotificationManager.error(\"An unknown error has occurred while attempting 'subscribe' to the appropriate 'tier', no changes were made! Contact support if the problem persists over a period of time..\",\"Unknown error has occurred!\",4750);});};const subscribeToMembership=tier=>{setConfirmationPaneState(false);confirmAlert({title:\"Are you sure you'd like to subscribe?\",message:\"You're about to subscribe to this membership UNTIL cancelled, are you sure you'd like to do this? You can manage your active subscriptions in your 'account acccess' section..\",buttons:[{label:'Yes, Sign Me Up!',onClick:()=>{handleRequest(tier);}},{label:'No, Cancel..',onClick:()=>{}}]});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Sheet,{isOpen:confirmationPane,onClose:()=>setConfirmationPaneState(false)},/*#__PURE__*/React.createElement(Sheet.Container,null,/*#__PURE__*/React.createElement(Sheet.Header,null,/*#__PURE__*/React.createElement(\"div\",{className:\"marginized-header\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-square-danger\",color:\"danger-2x\",style:{width:\"100%\"},outline:true,onClick:()=>setConfirmationPaneState(false)},\"Cancel/Close Pane\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"inner-container-invite\"},/*#__PURE__*/React.createElement(Sheet.Content,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Subscribe To One Of Our Premium Memberships!\",title:\"Subscribe To A Membership For Premium Benifits & Advantage's..\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Col,{lg:\"12 box-col-12\",xl:\"12 xl-100\",md:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"card-shadow-messaging-initialize\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"h3\",null,\"You've selected \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\",textDecorationLine:\"underline\"}},calculateTier(selectedSubscription)),\" for your selected 'subscription'! You will recieve multiple benifits that coorelate to the cooresponding tier.. This will cost you approx. \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},calculateCost(selectedSubscription)),\" but we assure you it is \",/*#__PURE__*/React.createElement(\"strong\",null,\"WELL\"),\" worth it!\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"card-absolute\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"bg-secondary\"},/*#__PURE__*/React.createElement(\"h5\",{style:{color:\"#fff\"}},\"Are you sure you'd like to proceed with this purchase?\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"If you're sure you'd like to proceed with this purchase, please click the button below to intialize the subscription process/flow & we will then process your request!\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Button,{className:\"btn-square-success\",color:\"success-2x\",style:{width:\"100%\"},outline:true,onClick:()=>subscribeToMembership(selectedSubscription)},\"Subscribe To This Membership!\")))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},calculateTierDetails(selectedSubscription)))),/*#__PURE__*/React.createElement(CardFooter,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Subscribing to one of our 'Premium Tiers' is an \",/*#__PURE__*/React.createElement(\"strong\",null,\"excellent\"),\" way to improve your odds of success and boost your visibility throughout our custom platform/marketplace. You will recieve numerous advantages listed in the previous selection page..\")))))))),/*#__PURE__*/React.createElement(Sheet.Backdrop,null)));};export default SubscribeToMembershipConfirmationHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/subscriptions/selectMembership/helpers/panes/subscribeSheet.js"],"names":["React","Fragment","useState","Sheet","Container","Row","Col","Card","CardBody","Button","CardHeader","CardFooter","ListGroup","ListGroupItem","NotificationManager","Breadcrumb","confirmAlert","axios","SubscribeToMembershipConfirmationHelper","userData","selectedSubscription","confirmationPane","setConfirmationPaneState","calculateTier","tier","calculateCost","calculateTierDetails","handleRequest","console","log","configuration","signedinID","uniqueId","signedinAccountType","accountType","post","process","env","REACT_APP_BASE_URL","then","res","data","message","success","warning","error","catch","err","subscribeToMembership","title","buttons","label","onClick","width","color","textDecorationLine"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, CardFooter, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport { NotificationManager } from 'react-notifications';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport { confirmAlert } from 'react-confirm-alert';\nimport axios from \"axios\";\n\n\nconst SubscribeToMembershipConfirmationHelper = ({ userData, selectedSubscription, confirmationPane, setConfirmationPaneState }) => {\n\n\n    const calculateTier = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"Tier ONE\";\n                break;\n            case \"tier-2\":\n                return \"Tier TWO\";\n                break;\n            case \"tier-3\":\n                return \"Tier THREE\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateCost = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"$25.00/Month\";\n                break;\n            case \"tier-2\":\n                return \"$35.00/Month\";\n                break;\n            case \"tier-3\":\n                return \"$45.00/Month\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateTierDetails = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return (\n                    <Fragment>\n                        <h2 className='benifits-text'>Benifit's of this particular tier/subscription</h2>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem>{\"25 Free Tokens Each Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"Access to 'premier' or 'VIP' areas\"}</ListGroupItem>\n                            <ListGroupItem>{\"1 Profile Boost Per Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"1 Ticket To A Restricted Event Per Month\"}</ListGroupItem>\n                        </ListGroup>\n                    </Fragment>\n                );\n                break;\n            case \"tier-2\":\n                return (\n                    <Fragment>\n                        <h2 className='benifits-text'>Benifit's of this particular tier/subscription</h2>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem>{\"40 Free Tokens Each Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"Access to 'premier' or 'VIP' areas\"}</ListGroupItem>\n                            <ListGroupItem>{\"3 Profile Boost(s) Per Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"2 Tickets To A Restricted Event Per Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"Earn 1.5x Experience Per Every 1x Earned\"}</ListGroupItem>\n                        </ListGroup>\n                    </Fragment>\n                );\n                break;\n            case \"tier-3\":\n                return (\n                    <Fragment>\n                        <h2 className='benifits-text'>Benifit's of this particular tier/subscription</h2>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem>{\"60 Free Tokens Each Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"Access to 'premier' or 'VIP' areas\"}</ListGroupItem>\n                            <ListGroupItem>{\"5 Profile Boost(s) Per Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"3 Tickets To A Restricted Event Per Month\"}</ListGroupItem>\n                            <ListGroupItem>{\"Earn 1.5x Experience Per Every 1x Earned\"}</ListGroupItem>\n                        </ListGroup>\n                    </Fragment>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    const handleRequest = (tier) => {\n        console.log(\"handleRequest\", tier);\n\n        const configuration = {\n            signedinID: userData.uniqueId,\n            signedinAccountType: userData.accountType,\n            tier\n        }\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/subscribe/membership/both/account/types`, configuration).then((res) => {\n            if (res.data.message === \"Subscribed successfully!\") {\n                console.log(res.data);\n    \n                NotificationManager.success(\"We've successfully charged your account & activated your subscription & benifits! Token's, 'boosts' and other cooresponding 'addons' were added to your account successfully and are now ACTIVE!\", \"Purchase successful, ACCOUNT MODIFIED W/BENIFITS!\", 4750);\n    \n            } else if (res.data.message === \"Have NOT completed onboarding flow..\") {\n                NotificationManager.warning(\"You MUST complete the account 'onboarding-flow' BEFORE attempting to make any purchases or any other related payment logic - please complete the onboarding flow & try this action again!\", \"MUST complete 'onboarding flow' BEFORE making this request!\", 4750);\n            } else {\n                console.log(\"Err\", res.data);\n    \n                NotificationManager.error(\"An unknown error has occurred while attempting 'subscribe' to the appropriate 'tier', no changes were made! Contact support if the problem persists over a period of time..\", \"Unknown error has occurred!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(\"Critical errror...:\", err);\n    \n            NotificationManager.error(\"An unknown error has occurred while attempting 'subscribe' to the appropriate 'tier', no changes were made! Contact support if the problem persists over a period of time..\", \"Unknown error has occurred!\", 4750);\n        })\n    }\n    const subscribeToMembership = (tier) => {\n        setConfirmationPaneState(false);\n        confirmAlert({\n            title: `Are you sure you'd like to subscribe?`,\n            message: `You're about to subscribe to this membership UNTIL cancelled, are you sure you'd like to do this? You can manage your active subscriptions in your 'account acccess' section..`,\n            buttons: [\n              {\n                label: 'Yes, Sign Me Up!',\n                onClick: () => {\n                    handleRequest(tier);\n                }\n              },\n              {\n                label: 'No, Cancel..',\n                onClick: () => {\n\n                }\n              }\n            ]\n        });\n    }\n    return (\n        <Fragment>\n            <Sheet isOpen={confirmationPane} onClose={() => setConfirmationPaneState(false)}>\n                <Sheet.Container>\n                    <Sheet.Header>\n                        <div className='marginized-header'>\n                            <Button className='btn-square-danger' color={\"danger-2x\"} style={{ width: \"100%\" }} outline onClick={() => setConfirmationPaneState(false)}>Cancel/Close Pane</Button>\n                        </div>\n                    </Sheet.Header>\n                        <div className='inner-container-invite'>\n                            <Sheet.Content>\n                            <Breadcrumb parent=\"Subscribe To One Of Our Premium Memberships!\" title=\"Subscribe To A Membership For Premium Benifits & Advantage's..\" />\n                                <Container fluid={true}>\n                                    <Col lg=\"12 box-col-12\" xl=\"12 xl-100\" md=\"12\">\n                                        <Card className={\"card-shadow-messaging-initialize\"}>\n                                            <CardHeader className={\"b-l-primary b-r-primary\"}>\n                                                <h3>You've selected <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{calculateTier(selectedSubscription)}</strong> for your selected 'subscription'! You will recieve multiple benifits that coorelate to the cooresponding tier.. This will cost you approx. <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>{calculateCost(selectedSubscription)}</strong> but we assure you it is <strong>WELL</strong> worth it!</h3>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <Row>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        <Card className=\"card-absolute\">\n                                                            <CardHeader className=\"bg-secondary\">\n                                                                <h5 style={{ color: \"#fff\" }}>Are you sure you'd like to proceed with this purchase?</h5>\n                                                            </CardHeader>\n                                                            <CardBody>\n                                                                <p>If you're sure you'd like to proceed with this purchase, please click the button below to intialize the subscription process/flow & we will then process your request!</p>\n                                                                <hr />\n                                                                <Button className='btn-square-success' color={\"success-2x\"} style={{ width: \"100%\" }} outline onClick={() => subscribeToMembership(selectedSubscription)}>Subscribe To This Membership!</Button>\n                                                            </CardBody>\n                                                        </Card>\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                        {calculateTierDetails(selectedSubscription)}\n                                                    </Col>\n                                                </Row>\n                                            </CardBody>\n                                            <CardFooter className={\"b-l-primary b-r-primary\"}>\n                                                <p className='lead'>Subscribing to one of our 'Premium Tiers' is an <strong>excellent</strong> way to improve your odds of success and boost your visibility throughout our custom platform/marketplace. You will recieve numerous advantages listed in the previous selection page..</p>\n                                            </CardFooter>\n                                        </Card>\n                                    </Col>\n                                </Container>\n                            </Sheet.Content>\n                        </div>\n                    </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </Fragment>\n    );\n}\n\nexport default SubscribeToMembershipConfirmationHelper;"]},"metadata":{},"sourceType":"module"}