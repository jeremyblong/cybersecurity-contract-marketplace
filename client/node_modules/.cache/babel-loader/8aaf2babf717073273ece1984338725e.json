{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ButtonGroup, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText, Media } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams, useHistory } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport Tour from 'reactour';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveApplicationDetailsProgress } from \"../../../../../redux/actions/hackers/applyToEmployerListing/applicationInfo.js\";\nimport { NotificationManager } from \"react-notifications\";\nimport uuid from 'react-uuid';\nimport { confirmAlert } from 'react-confirm-alert';\nconst {\n  TimelineHelper,\n  SheetPaneSubmittingDataHelper,\n  HelperRadioButtons,\n  renderMountedLogic,\n  handleDeletionLink,\n  handleLinkAddition,\n  SheetDisplayFilesFileManagerHelper\n} = helpers; // react-hook-form helpers\n\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\nconst participateInBettingWagers = MainHooksCustomHelpers().participateInBettingWagers;\nconst amountWillingToCompleteJob = MainHooksCustomHelpers().amountWillingToCompleteJob;\nconst tourStepsOptions = [{\n  selector: '#tour-col-custom',\n  content: 'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!'\n}];\n\nconst ApplyAsHackerEmployerListingHelper = _ref => {\n  let {\n    previousFiles,\n    userData,\n    shiftCoreStyles,\n    location,\n    saveApplicationDetailsProgress,\n    previous\n  } = _ref;\n  const history = useHistory(); // ref's\n\n  const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n  const participateInBettingWagersRef = useRef(null);\n  const scrollToTourWrapper = useRef(null); // get URL ID from string\n\n  const {\n    id\n  } = useParams(); // initialize state items...\n\n  const [alreadyAdded, setAlreadyAddedState] = useState(null);\n  const [filesSheetOpen, setFileSheetOpenState] = useState(false);\n  const [showMore, setShowMoreState] = useState(false);\n  const [linkInput, setLinkInput] = useState(\"\");\n  const [isTourOpen, setIsTourOpenState] = useState(false);\n  const [disabledDays, setDisabledDaysState] = useState([]);\n  const [physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState] = useState([]);\n  const [sheetIsOpen, setSheetOpenState] = useState(false);\n  const [currentUserData, setCurrentUserData] = useState(null);\n  const [ready, setReadyGlobal] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [listingReady, setListingReady] = useState(false);\n  const [listingData, setListingData] = useState(null);\n  const [dateRanges, setDateRanges] = useState(null);\n  const [datesReady, setDatesReady] = useState(false);\n  const [selectedLinks, setSelectedLinks] = useState([]);\n  const [maxDate, setMaxDate] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    resetField,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n  const gatheredValues = getValues();\n\n  const handleDateSelection = ranges => {\n    const {\n      startDate,\n      endDate\n    } = ranges.selection;\n\n    const datesAreOnSameDay = (first, second) => first.getFullYear() === second.getFullYear() && first.getMonth() === second.getMonth() && first.getDate() === second.getDate();\n\n    const gatherDayInfo = date => moment(date).format(\"MM-DD-YYYY\");\n\n    if (datesAreOnSameDay(startDate, endDate)) {\n      const formattedDate = {\n        startDate,\n        endDate,\n        key: 'selection',\n        formattedStartDate: gatherDayInfo(startDate),\n        formattedEndDate: gatherDayInfo(endDate),\n        uniqueId: uuid()\n      };\n\n      if (_.has(gatheredValues, \"selectedTestDates\") && typeof gatheredValues.selectedTestDates !== \"undefined\") {\n        if (gatheredValues.selectedTestDates.length === 0) {\n          // update state...\n          setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], {\n            shouldValidate: false\n          }); // clear related error data\n\n          clearErrors([\"selectedTestDates\"]);\n        } else {\n          if (gatheredValues.selectedTestDates.filter(x => x.formattedStartDate === formattedDate.formattedStartDate).length > 0) {\n            NotificationManager.warning(\"You cannot select the SAME date TWICE - Please select UNIQUE dates when selecting various physical 'hack dates'...\", \"Date is ALREADY selected!\", 4750);\n          } else {\n            // update state...\n            setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], {\n              shouldValidate: false\n            }); // clear related error data\n\n            clearErrors([\"selectedTestDates\"]);\n          }\n        }\n      }\n    }\n  }; // deconstruct redux-state items...\n\n\n  const {\n    username,\n    firstName,\n    lastName,\n    registrationDate,\n    completedJobs\n  } = userData; // component mounted.\n\n  useEffect(() => {\n    // set default unavailiable state - selectedTestDates\n    setValue(\"selectedTestDates\", []);\n    setValue(\"referenceLinks\", []); // set global config obj's for api-requests\n\n    const globalConfig = {\n      config: {\n        params: {\n          uniqueId: userData.uniqueId\n        }\n      },\n      configuration: {\n        params: {\n          listingId: id\n        }\n      }\n    };\n    renderMountedLogic(setMaxDate, globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady); // gather core anonymous user information\n\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setCurrentUserData(user);\n        setReadyGlobal(true);\n      } else {\n        console.log('err', res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // render custom sentence instead of DRY repeating\n\n  const renderSentence = (actual, type, val) => {\n    // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n    if (ready === true && currentUserData !== null) {\n      // ready to display\n      if (currentUserData.hasOwnProperty(actual)) {\n        // return proper/desired \"right\" filled out data\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 24\n          }\n        }, \"Your \", type, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: currentUserData.hasOwnProperty(actual) ? {\n            color: \"#dc3545\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          } : {\n            color: \"#a927f9\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 90\n          }\n        }, val), \" will be submitted to the employer...\");\n      } else {\n        // throw error warning user\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom override-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 24\n          }\n        }, \"You have NOT filled out the required field of \", /*#__PURE__*/React.createElement(\"em\", {\n          style: {\n            textDecorationLine: \"underline\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 137\n          }\n        }, type), \", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile/settings/edit\",\n          className: \"linky\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 299\n          }\n        }, \"your profile settings page\"), \" and edit the appropriate sections, then come back and try again!\");\n      }\n    } else {\n      // return loading \"data\"\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1 listitem-sub-text-custom-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 20\n        }\n      }, \"Still loading your data/content...!\");\n    }\n  }; // view more fields in PANE\n\n\n  const viewRemainderOfIncludedFields = alreadyIncludedArray => {\n    // already shown items *(HIGHLIGHT)*\n    setAlreadyAddedState(alreadyIncludedArray); // shift \"lock\" styles to prevent scrolling and clicking\n\n    shiftCoreStyles(true); // open modal - change modal state to OPEN\n\n    setSheetOpenState(true); // set delay to allow load\n\n    setTimeout(() => {\n      // select outter body classname to pause/freeze\n      const target = document.querySelector(\".enact-nonclick\"); // DISABLE body scroll entirely\n\n      disableBodyScroll(target);\n    }, 500);\n  };\n\n  const showButtonOrNot = () => {\n    if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const clearInput = () => {\n    resetField(\"referenceLink\");\n  }; //  TOUR related LOCK SCREEN functions - DISABLE body scrolling\n\n\n  const disableBodyAndScroll = target => {\n    // disable body scroll\n    disableBodyScroll(target);\n  };\n\n  const enableBody = target => clearAllBodyScrollLocks();\n\n  const handleDirectionChangeTour = () => {\n    // DISABLE clicking background\n    shiftCoreStyles(true); // scroll to target and LOCK SCREEN until closed.\n\n    scrollToTourWrapper.current.scrollIntoView(); // alter slightly to account for top-NAV\n\n    setTimeout(() => {\n      window.scrollBy(0, -175);\n    }, 750); // lock after appropriate position change\n\n    setTimeout(() => {\n      // select MAIN WRAPPER class\n      const select = document.querySelector(\".enact-nonclick\"); // disable selected class (movement, clicks, etc...);\n\n      disableBodyScroll(select);\n      setIsTourOpenState(true);\n    }, 1000);\n  };\n\n  const handleTourClosingAction = () => {\n    // allow background clicking again\n    shiftCoreStyles(false); // clear body scroll locks\n\n    clearAllBodyScrollLocks(); // close tour state\n\n    setIsTourOpenState(false);\n  };\n\n  const onErrorMainForm = (errors, e) => {\n    console.log(\"errors : \", errors); // selectAttachments\n\n    if (_.has(previous, \"files\") && previous.files.length > 0) {\n      clearErrors([\"selectAttachments\"]);\n    } else {\n      setError(\"selectAttachments\", {\n        type: \"manual\",\n        message: \"You MUST select AT least ONE(1) attachments (CL, Resume, Image, etc...) before proceeding with the submission of this form\"\n      });\n    }\n\n    if (!gatheredValues.selectedTestDates.length > 0) {\n      setError(\"selectedTestDates\", {\n        type: \"manual\",\n        message: \"You MUST select a calendar time to 'attempt' your 'physical' hack to try to infiltrate this employer's company. Select a date (one day MIN) to continue!\"\n      });\n    }\n  };\n\n  const onFormSubmit = values => {\n    console.log(\"values\", values); // deconstruct files from attached-files section-redux\n\n    const attachedFiles = previousFiles.applicationDetails.applicationDetails.files; // deconstruct core information from bio-profile section\n\n    const {\n      username,\n      firstName,\n      lastName,\n      completedJobs,\n      registrationDate,\n      aboutMe,\n      title,\n      reviews,\n      fullyVerified,\n      points,\n      yearsOfExperience\n    } = currentUserData; // deconstruct form-redux values on-submit\n\n    const {\n      coverLetterText,\n      messageToEmployer,\n      amountOfMoneyUponCompletion,\n      physicalOrDigitalOrBoth,\n      referenceLinks,\n      selectedTestDates,\n      technicalApproachToHack\n    } = values;\n    const myID = userData.uniqueId;\n    const generatedID = uuid();\n    const addApplicantData = {\n      applicantID: myID,\n      listingID: listingData.uniqueId,\n      employerId: listingData.postedBy,\n      employerPostedJobId: listingData.uniqueId,\n      userData,\n      generatedID,\n      applicationData: {\n        generatedID,\n        attachedFiles,\n        coverLetterText,\n        messageToEmployer,\n        applicantId: userData.uniqueId,\n        responses: [],\n        hired: false,\n        applicantName: `${userData.firstName} ${userData.lastName}`,\n        likes: 0,\n        dislikes: 0,\n        applicantId: myID,\n        dateApplied: new Date(),\n        legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n        amountOfMoneyUponCompletion,\n        physicalOrDigitalOrBoth,\n        referenceLinks,\n        selectedTestDates,\n        technicalApproachToHack\n      }\n    };\n    const finalResult = {\n      uniqueId: myID,\n      employerId: listingData.postedBy,\n      employerPostedJobId: listingData.uniqueId,\n      applicationData: {\n        generatedID,\n        attachedFiles,\n        coverLetterText,\n        messageToEmployer,\n        applicantId: userData.uniqueId,\n        responses: [],\n        hired: false,\n        applicantName: `${userData.firstName} ${userData.lastName}`,\n        likes: 0,\n        dislikes: 0,\n        employerPostedJobId: listingData.uniqueId,\n        employerPosterId: listingData.postedBy,\n        applicantId: myID,\n        dateApplied: new Date(),\n        legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n        amountOfMoneyUponCompletion,\n        physicalOrDigitalOrBoth,\n        referenceLinks,\n        selectedTestDates,\n        technicalApproachToHack,\n        submittedUserData: {\n          username,\n          firstName,\n          lastName,\n          completedJobs,\n          registrationDate,\n          aboutMe,\n          title,\n          reviews,\n          fullyVerified,\n          points,\n          yearsOfExperience\n        }\n      }\n    }; // View ALL included fields...\n\n    const requiredKeys = [\"username\", \"firstName\", \"lastName\", \"completedJobs\", \"registrationDate\", \"aboutMe\", \"title\", \"reviews\", \"fullyVerified\", \"points\", \"yearsOfExperience\"]; // figure out length of requiredKeys     \n\n    const requiredLength = requiredKeys.length; // run boolean check\n\n    const doesIncludeFailures = requiredKeys.map((key, i) => {\n      if (typeof currentUserData[key] !== \"undefined\") {\n        // includes!\n        return true;\n      } else {\n        // doesnt include & notify!\n        NotificationManager.warning(`You're missing a REQUIRED submission input field of '${key}' - please go to your bio/profile section and submit this key of '${key}' before proceeding!`, `You are MISSING a key/field of the value '${key}'...!`, 4750); // return value to check at end for api-request running or not afterwards\n\n        return false;\n      }\n    });\n\n    if (doesIncludeFailures.includes(false)) {\n      // do nothing - NOT ready yet missing information\n      NotificationManager.error(`We experienced an ERROR while attempting to run our pre-upload checks & you're missing some required information...`, `MISSING data - Required BEFORE continuing!`, 4750);\n    } else {\n      // RUN FINAL REQUEST! all information is properly filled out...!\n      // SAVE-DATA api-request run!\n      axios.post(`${process.env.REACT_APP_BASE_URL}/apply/employer/listing/submit/live/data/last`, finalResult).then(res => {\n        if (res.data.message === \"Successfully applied to listing/employer & updated your 'hacker' account as well!\") {\n          axios.post(`${process.env.REACT_APP_BASE_URL}/success/application/save/applicant/info/employerlisting`, addApplicantData).then(res => {\n            if (res.data.message === \"Successfully updated employer listing data!\") {\n              console.log(\"EVERYTHING WENT WELL....!! : \", res.data);\n              NotificationManager.success(\"You've successfully applied to this employer's listing & we've notified them of your application!\", \"Successfully applied to gig/job!\", 4000);\n              setTimeout(() => {\n                history.push(\"/dashboard/hacker\");\n              }, 4000);\n            } else {\n              console.log(\"Errorr :\", res.data);\n              NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n            }\n          }).catch(err => {\n            console.log(err);\n            NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n          });\n        } else {\n          console.log(\"Errorr :\", res.data);\n          NotificationManager.error(res.data.message, \"An error occurred while attempting to apply to this listing!\", 4500);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const handleFinalSubmissionFiles = () => {\n    // DISABLE clicking background\n    shiftCoreStyles(true); // set sheet open\n\n    setFileSheetOpenState(true); // lock after appropriate position change\n\n    setTimeout(() => {\n      // select MAIN-WRAPPER div class\n      const select = document.querySelector(\".enact-nonclick\"); // finally - disable while pane is open!\n\n      disableBodyScroll(select);\n    }, 450);\n  };\n\n  const watchSelectedTestDates = watch([\"selectedTestDates\"]);\n  console.log(\"current!!!!!\", gatheredValues);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 7,\n    progress: progress,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SheetPaneSubmittingDataHelper, {\n    ready: ready,\n    shiftCoreStyles: shiftCoreStyles,\n    alreadyAdded: alreadyAdded,\n    currentUserData: currentUserData,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    userData: userData,\n    sheetIsOpen: sheetIsOpen,\n    setSheetOpenState: setSheetOpenState,\n    renderSentence: renderSentence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SheetDisplayFilesFileManagerHelper, {\n    saveApplicationDetailsProgress: saveApplicationDetailsProgress,\n    previousFiles: previousFiles,\n    setProgress: setProgress,\n    filesSheetOpen: filesSheetOpen,\n    setFileSheetOpenState: setFileSheetOpenState,\n    shiftCoreStyles: shiftCoreStyles,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: `Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`,\n    title: \"Review job requirements & details + apply to position/listing!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tour, {\n    steps: tourStepsOptions,\n    isOpen: isTourOpen,\n    onAfterOpen: disableBodyAndScroll,\n    onBeforeClose: enableBody,\n    onRequestClose: handleTourClosingAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute-position-bottom-right-fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redirect-fixed-bottom-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"p-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"media-body-customized-fixed\",\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, showMore === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-0 mega-title-badge custom-mega-title-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 33\n    }\n  }, \"Are you ready to submit your application?! \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info pull-right digits custom-pull-right-digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 138\n    }\n  }, \"SHOW ME HOW TO SUBMIT APP!\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 33\n    }\n  }, \"Are you \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 44\n    }\n  }, \"READY TO SUBMIT YOUR APPLICATION\"), \" to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 208\n    }\n  }, \"'Submit Application'\"), \" button to proceed forwards...\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 33\n    }\n  })) : null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"m-t-15 custom-radio-ml\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox checkbox-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onClick: () => {\n      setShowMoreState(!showMore);\n    },\n    checked: showMore === true ? true : false,\n    id: \"checkbox-primary-show-more\",\n    type: \"checkbox\",\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"checkbox-primary-show-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 41\n    }\n  }, \"Show \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#a927f9\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 86\n    }\n  }, showMore === true ? \"LESS\" : \"MORE\"), \" helpful/related info...\")))), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDirectionChangeTour,\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 29\n    }\n  }, \"Show me the 'submission' button!\"))))), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-default\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation validateClass`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onFormSubmit, (errors, e) => {\n      setTimeout(() => {\n        return onErrorMainForm(errors, e);\n      }, 250);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"customized-row-apply\",\n    style: {\n      paddingTop: \"25px \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner customized-top-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 37\n    }\n  }, \"Type of hack (physical location or digital asset)\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 37\n    }\n  }, \"This is the \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 84\n    }\n  }, \"TYPE\"), \" of hack this \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 111\n    }\n  }, \"specific listing\"), \" requires from its participants. These selected options have absolutely \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 208\n    }\n  }, \"NO LIENENCY\"), \" and any disregard to platform rules will result in \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 288\n    }\n  }, \"IMMEDIATE PERMENANT BANNING\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(HelperRadioButtons, {\n    listingReady: listingReady,\n    listingData: listingData,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 49\n    }\n  }, coverLetterChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, coverLetterChecks.check(setError, register, clearErrors, \"coverLetterText\"), {\n    placeholder: coverLetterChecks.placeholder,\n    onChange: e => {\n      return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n    },\n    name: coverLetterChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 49\n    }\n  })), errors.coverLetterText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 75\n    }\n  }, errors.coverLetterText.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 49\n    }\n  }, physicalOrDigitalChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: physicalOrDigitalChecks.name\n  }, physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        autoBlur: true,\n        defaultValue: null,\n        ref: physicalOrDigitalOrBothGeneratedRef,\n        value: gatheredValues.physicalOrDigitalOrBoth,\n        placeholder: physicalOrDigitalChecks.placeholder,\n        onChange: selectedOption => {\n          console.log(\"changed!!!!\");\n          setTimeout(() => {\n            // clear error after proper selection\n            if (typeof selectedOption !== \"undefined\" && Object.keys(selectedOption).length > 0) {\n              // set selected value\n              setValue(physicalOrDigitalChecks.name, selectedOption, {\n                shouldValidate: false\n              }); // clear relevant error\n\n              clearErrors(physicalOrDigitalChecks.name);\n            } else {\n              // set error as nothing was selected (blank 'click-off' selection of selector)\n              setError(physicalOrDigitalChecks.name, {\n                type: \"manual\",\n                message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\"\n              });\n            }\n          }, 50);\n        },\n        onMenuClose: () => {\n          physicalOrDigitalOrBothGeneratedRef.current.blur();\n        },\n        options: physicalOrDigitalHackOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 57\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 49\n    }\n  })), errors.physicalOrDigitalOrBoth ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 83\n    }\n  }, errors.physicalOrDigitalOrBoth.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 49\n    }\n  }, participateInBettingWagers.label), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 53\n    }\n  }, amountWillingToCompleteJob.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, amountWillingToCompleteJob.check(setError, register, clearErrors, setValue, \"amountOfMoneyUponCompletion\"), {\n    value: gatheredValues.amountOfMoneyUponCompletion,\n    placeholder: amountWillingToCompleteJob.placeholder,\n    onChange: e => {\n      return amountWillingToCompleteJob.onChange(e, \"amountOfMoneyUponCompletion\", setValue);\n    },\n    name: amountWillingToCompleteJob.name,\n    type: \"number\",\n    className: \"form-control input-air-primary\",\n    pattern: /\\d+/g,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 53\n    }\n  }))), errors.amountOfMoneyUponCompletion ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 87\n    }\n  }, errors.amountOfMoneyUponCompletion.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 49\n    }\n  }, \"Message To Employer (Direct to employer)\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\"), {\n    placeholder: messageToEmployerChecks.placeholder,\n    onChange: e => {\n      return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n    },\n    name: messageToEmployerChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 49\n    }\n  })), errors.messageToEmployer ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 77\n    }\n  }, errors.messageToEmployer.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 49\n    }\n  }, approachToSuccessfullyHackCo.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\"), {\n    placeholder: approachToSuccessfullyHackCo.placeholder,\n    onChange: e => {\n      return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n    },\n    name: approachToSuccessfullyHackCo.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 49\n    }\n  })), errors.technicalApproachToHack ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 83\n    }\n  }, errors.technicalApproachToHack.message) : null))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-bottom-across\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 57\n    }\n  }, \"Attachments\"), \" to be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 92\n    }\n  }, \"sent\"), \" to the employer of this listing\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 53\n    }\n  }, \"These attachments can be anything from a \\\"Cover Letter\\\" or \\\"Resume\\\" & these files will be sent \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 183\n    }\n  }, \"directly\"), \" to the employer for consideration of your application for this listing or job/gig.\")), errors.selectAttachments ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 77\n    }\n  }, errors.selectAttachments.message) : null, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-success\",\n    onClick: () => {\n      // open pane slider up from bottom\n      handleFinalSubmissionFiles();\n    },\n    outline: true,\n    color: \"success-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 53\n    }\n  }, \"Upload & Manage Attachments (To-be sent directly to employer)\"))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 37\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 37\n    }\n  }, \"This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 45\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 106\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 45\n    }\n  }), renderSentence(\"username\", \"Username\", username)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 45\n    }\n  }, \"First Name & Last Name (Together)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 131\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 45\n    }\n  }), renderSentence(\"firstName\" || \"lastName\", \"Full Name\", `${firstName} ${lastName}`)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 45\n    }\n  }, \"Completed Job Count\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 117\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 45\n    }\n  }), renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 45\n    }\n  }, \"Created Account (from ago...)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 127\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 45\n    }\n  }), renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    onClick: () => {\n      viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n    },\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 45\n    }\n  }, \"View all included fields (including above mentioned)\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 41\n    }\n  }, \"REQUIRED\"), \" data to be completed/filled-out\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 45\n    }\n  }, \"Reference a link (blog, website, etc... made by \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 124\n    }\n  }, \"you\"), \")\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 86\n    }\n  }, \"http(s)://\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\"), {\n    onChange: e => urlEnteredLinkData.onChange(e, \"referenceLink\", setValue),\n    className: \"form-control\",\n    type: \"text\",\n    name: \"referenceLink\",\n    placeholder: \"Enter a link to your work (website, blog, etc...)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 49\n    }\n  })), showButtonOrNot() ? /*#__PURE__*/React.createElement(InputGroupAddon, {\n    onClick: () => {\n      handleLinkAddition(setSelectedLinks, gatheredValues.referenceLinks, clearInput, setValue, gatheredValues.referenceLink);\n    },\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 70\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 71\n    }\n  }, \"Submit\")) : null), errors.referenceLink ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 69\n    }\n  }, errors.referenceLink.message) : null), selectedLinks.map((link, index) => {\n    console.log(\"link\", link);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"12.5px\",\n        marginBottom: \"12.5px\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: e => {\n        e.preventDefault();\n      },\n      className: \"list-group-item custom-list-group-item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: \"25px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 112\n      }\n    }), link.url, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        // handle deletion\n        handleDeletionLink(link, setSelectedLinks);\n      },\n      id: \"float-trash-right\",\n      className: \"icon-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 162\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 45\n    }\n  }, \"Available dates to select (Physical 'Hack'ing Dates - you may need to click a date TWICE as this calendar can be finicky)\"), datesReady === true ? /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: dateRanges,\n    onChange: handleDateSelection,\n    onDatesChange: () => console.log(\"onDatesChange\") // minDate={new Date()}\n    ,\n    shownDate: new Date(),\n    className: \"custom-date-range-picker\",\n    showMonthAndYearPickers: false,\n    disabledDates: disabledDays,\n    staticRanges: [],\n    maxDate: maxDate,\n    direction: \"horizontal\",\n    showMonthArrow: true,\n    months: 2,\n    showDateDisplay: false,\n    inputRanges: [],\n    scroll: {\n      enabled: true\n    },\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 68\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 41\n    }\n  }), errors.selectedTestDates ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 69\n    }\n  }, errors.selectedTestDates.message) : null, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 41\n    }\n  }, typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 151\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 182\n    }\n  }, \"Currently\"), \" selected dates to apply \\\"physical\\\" hacks/hacking (\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 259\n    }\n  }, \"CLICK DATE\"), \" to disregard selected date)\") : null, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"listgroup-mapped-dates-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 45\n    }\n  }, typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? gatheredValues.selectedTestDates.map((date, idx) => {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: idx,\n      style: {\n        fontWeight: \"bold\"\n      },\n      className: \"list-group-item-action list-item-dates-mapped\",\n      onClick: () => {\n        const filtered = gatheredValues.selectedTestDates.filter((dateee, idxxxx) => {\n          if (dateee.uniqueId !== date.uniqueId) {\n            return true;\n          }\n        });\n        console.log(\"filtered\", filtered);\n        setValue(\"selectedTestDates\", filtered, {\n          shouldValidate: false\n        });\n      },\n      active: idx % 2 === 0 ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 60\n      }\n    }, \"You've selected a date of...: \", moment(date.startDate).format(\"MM/DD/YYYY\"));\n  }) : null))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollToTourWrapper,\n    id: \"tour-col-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 41\n    }\n  }, \"Have you filled out \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 65\n    }\n  }, \"ALL OF THE REQUIRED DATA/INFO\"), \" and you're now \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 127\n    }\n  }, \"READY\"), \" to apply and continue with your application?!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 41\n    }\n  }, \"Click the button below to proceed forward & \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 88\n    }\n  }, \"apply to this listing\"), \" and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 45\n    }\n  }, \"SUBMIT APPLICATION INFORMATION\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimelineHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previousFiles: _.has(state.applicationDetails, \"applicationDetails\") && _.has(state.applicationDetails.applicationDetails, \"files\") ? {\n      applicationDetails: {\n        applicationDetails: {\n          files: state.applicationDetails.applicationDetails.files\n        }\n      }\n    } : {\n      applicationDetails: {\n        applicationDetails: {\n          files: []\n        }\n      }\n    },\n    previous: _.has(state.applicationDetails, \"applicationDetails\") ? state.applicationDetails.applicationDetails : {}\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles,\n  saveApplicationDetailsProgress\n})(withRouter(ApplyAsHackerEmployerListingHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ButtonGroup","ListGroup","FormGroup","Label","Input","InputGroupAddon","Form","InputGroup","InputGroupText","Media","helpers","connect","moment","shiftCoreStyles","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","axios","_","Link","withRouter","useParams","useHistory","Select","DateRangePicker","useForm","Controller","MainHooksCustomHelpers","Tour","LoadingBar","saveApplicationDetailsProgress","NotificationManager","uuid","confirmAlert","TimelineHelper","SheetPaneSubmittingDataHelper","HelperRadioButtons","renderMountedLogic","handleDeletionLink","handleLinkAddition","SheetDisplayFilesFileManagerHelper","urlEnteredLinkData","coverLetterChecks","messageToEmployerChecks","physicalOrDigitalChecks","approachToSuccessfullyHackCo","participateInBettingWagers","amountWillingToCompleteJob","tourStepsOptions","selector","content","ApplyAsHackerEmployerListingHelper","previousFiles","userData","location","previous","history","physicalOrDigitalOrBothGeneratedRef","participateInBettingWagersRef","scrollToTourWrapper","id","alreadyAdded","setAlreadyAddedState","filesSheetOpen","setFileSheetOpenState","showMore","setShowMoreState","linkInput","setLinkInput","isTourOpen","setIsTourOpenState","disabledDays","setDisabledDaysState","physicalOrDigitalHackOptions","setPhysicalOrDigitalHackOptionsState","sheetIsOpen","setSheetOpenState","currentUserData","setCurrentUserData","ready","setReadyGlobal","progress","setProgress","listingReady","setListingReady","listingData","setListingData","dateRanges","setDateRanges","datesReady","setDatesReady","selectedLinks","setSelectedLinks","maxDate","setMaxDate","register","handleSubmit","control","resetField","getValues","setValue","setError","clearErrors","watch","formState","errors","mode","reValidateMode","gatheredValues","handleDateSelection","ranges","startDate","endDate","selection","datesAreOnSameDay","first","second","getFullYear","getMonth","getDate","gatherDayInfo","date","format","formattedDate","key","formattedStartDate","formattedEndDate","uniqueId","has","selectedTestDates","length","shouldValidate","filter","x","warning","username","firstName","lastName","registrationDate","completedJobs","globalConfig","config","params","configuration","listingId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","user","catch","err","renderSentence","actual","type","val","hasOwnProperty","color","fontSize","fontWeight","textDecorationLine","viewRemainderOfIncludedFields","alreadyIncludedArray","setTimeout","target","document","querySelector","showButtonOrNot","referenceLink","clearInput","disableBodyAndScroll","enableBody","handleDirectionChangeTour","current","scrollIntoView","window","scrollBy","select","handleTourClosingAction","onErrorMainForm","e","files","onFormSubmit","values","attachedFiles","applicationDetails","aboutMe","title","reviews","fullyVerified","points","yearsOfExperience","coverLetterText","messageToEmployer","amountOfMoneyUponCompletion","physicalOrDigitalOrBoth","referenceLinks","technicalApproachToHack","myID","generatedID","addApplicantData","applicantID","listingID","employerId","postedBy","employerPostedJobId","applicationData","applicantId","responses","hired","applicantName","likes","dislikes","dateApplied","Date","legibleDateApplied","finalResult","employerPosterId","submittedUserData","requiredKeys","requiredLength","doesIncludeFailures","map","i","includes","error","post","success","push","handleFinalSubmissionFiles","watchSelectedTestDates","REACT_APP_CRYPTO_TOKEN_NAME","width","paddingTop","label","check","placeholder","onChange","name","field","selectedOption","Object","keys","blur","selectAttachments","fromNow","marginTop","link","index","marginBottom","preventDefault","paddingRight","url","enabled","idx","filtered","dateee","idxxxx","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8CC,MAA9C,EAAsDC,UAAtD,EAAkEC,aAAlE,EAAiFC,WAAjF,EAA8FC,SAA9F,EAAyGC,SAAzG,EAAoHC,KAApH,EAA2HC,KAA3H,EAAkIC,eAAlI,EAAmJC,IAAnJ,EAAyJC,UAAzJ,EAAqKC,cAArK,EAAqLC,KAArL,QAAkM,YAAlM;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,iDAAhC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,uBAA9C,QAA6E,kBAA7E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,kBAAxD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,8BAAT,QAA+C,gFAA/C;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,6BAAlB;AAAiDC,EAAAA,kBAAjD;AAAqEC,EAAAA,kBAArE;AAAyFC,EAAAA,kBAAzF;AAA6GC,EAAAA,kBAA7G;AAAiIC,EAAAA;AAAjI,IAAwK9B,OAA9K,C,CAEA;;AACA,MAAM+B,kBAAkB,GAAGd,sBAAsB,GAAGc,kBAApD;AACA,MAAMC,iBAAiB,GAAGf,sBAAsB,GAAGe,iBAAnD;AACA,MAAMC,uBAAuB,GAAGhB,sBAAsB,GAAGgB,uBAAzD;AACA,MAAMC,uBAAuB,GAAGjB,sBAAsB,GAAGiB,uBAAzD;AACA,MAAMC,4BAA4B,GAAGlB,sBAAsB,GAAGkB,4BAA9D;AACA,MAAMC,0BAA0B,GAAGnB,sBAAsB,GAAGmB,0BAA5D;AACA,MAAMC,0BAA0B,GAAGpB,sBAAsB,GAAGoB,0BAA5D;AAGA,MAAMC,gBAAgB,GAAG,CACrB;AACEC,EAAAA,QAAQ,EAAE,kBADZ;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADqB,CAAzB;;AAOA,MAAMC,kCAAkC,GAAG,QAAsG;AAAA,MAArG;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BxC,IAAAA,eAA3B;AAA4CyC,IAAAA,QAA5C;AAAsDxB,IAAAA,8BAAtD;AAAsFyB,IAAAA;AAAtF,GAAqG;AAE7I,QAAMC,OAAO,GAAGlC,UAAU,EAA1B,CAF6I,CAG7I;;AACA,QAAMmC,mCAAmC,GAAGnE,MAAM,CAAC,IAAD,CAAlD;AACA,QAAMoE,6BAA6B,GAAGpE,MAAM,CAAC,IAAD,CAA5C;AACA,QAAMqE,mBAAmB,GAAGrE,MAAM,CAAC,IAAD,CAAlC,CAN6I,CAO7I;;AACA,QAAM;AAAEsE,IAAAA;AAAF,MAASvC,SAAS,EAAxB,CAR6I,CAS7I;;AACA,QAAM,CAAEwC,YAAF,EAAgBC,oBAAhB,IAAyC1E,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAAE2E,cAAF,EAAkBC,qBAAlB,IAA4C5E,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAE6E,QAAF,EAAYC,gBAAZ,IAAiC9E,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAAE+E,SAAF,EAAaC,YAAb,IAA8BhF,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEiF,UAAF,EAAcC,kBAAd,IAAqClF,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEmF,YAAF,EAAgBC,oBAAhB,IAAyCpF,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAAEqF,4BAAF,EAAgCC,oCAAhC,IAAyEtF,QAAQ,CAAC,EAAD,CAAvF;AACA,QAAM,CAAEuF,WAAF,EAAeC,iBAAf,IAAqCxF,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEyF,eAAF,EAAmBC,kBAAnB,IAA0C1F,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAE2F,KAAF,EAASC,cAAT,IAA4B5F,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAE6F,QAAF,EAAYC,WAAZ,IAA4B9F,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAE+F,YAAF,EAAgBC,eAAhB,IAAoChG,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEiG,WAAF,EAAeC,cAAf,IAAkClG,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAEmG,UAAF,EAAcC,aAAd,IAAgCpG,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAEqG,UAAF,EAAcC,aAAd,IAAgCtG,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEuG,aAAF,EAAiBC,gBAAjB,IAAsCxG,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAEyG,OAAF,EAAWC,UAAX,IAA0B1G,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAAE2G,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,UAAnC;AAA+CC,IAAAA,SAA/C;AAA0DC,IAAAA,QAA1D;AAAoEC,IAAAA,QAApE;AAA8EC,IAAAA,WAA9E;AAA2FC,IAAAA,KAA3F;AAAkGC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA7G,MAA2HhF,OAAO,CAAC;AACrIiF,IAAAA,IAAI,EAAE,WAD+H;AAErIC,IAAAA,cAAc,EAAE,QAFqH,CAGrI;;AAHqI,GAAD,CAAxI;AAMA,QAAMC,cAAc,GAAGT,SAAS,EAAhC;;AAEA,QAAMU,mBAAmB,GAAIC,MAAD,IAAY;AACpC,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBF,MAAM,CAACG,SAAtC;;AAEA,UAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACE,WAAN,OAAwBD,MAAM,CAACC,WAAP,EAAxB,IAAgDF,KAAK,CAACG,QAAN,OAAqBF,MAAM,CAACE,QAAP,EAArE,IAA0FH,KAAK,CAACI,OAAN,OAAoBH,MAAM,CAACG,OAAP,EAA3J;;AAEA,UAAMC,aAAa,GAAIC,IAAD,IAAU7G,MAAM,CAAC6G,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAhC;;AAEA,QAAIR,iBAAiB,CAACH,SAAD,EAAYC,OAAZ,CAArB,EAA2C;AACvC,YAAMW,aAAa,GAAG;AAClBZ,QAAAA,SADkB;AAElBC,QAAAA,OAFkB;AAGlBY,QAAAA,GAAG,EAAE,WAHa;AAIlBC,QAAAA,kBAAkB,EAAEL,aAAa,CAACT,SAAD,CAJf;AAKlBe,QAAAA,gBAAgB,EAAEN,aAAa,CAACR,OAAD,CALb;AAMlBe,QAAAA,QAAQ,EAAE/F,IAAI;AANI,OAAtB;;AASA,UAAId,CAAC,CAAC8G,GAAF,CAAMpB,cAAN,EAAsB,mBAAtB,KAA8C,OAAOA,cAAc,CAACqB,iBAAtB,KAA4C,WAA9F,EAA2G;AACvG,YAAIrB,cAAc,CAACqB,iBAAf,CAAiCC,MAAjC,KAA4C,CAAhD,EAAmD;AAC/C;AACA9B,UAAAA,QAAQ,CAAC,mBAAD,EAAsB,CAAC,GAAGQ,cAAc,CAACqB,iBAAnB,EAAsCN,aAAtC,CAAtB,EAA4E;AAAEQ,YAAAA,cAAc,EAAE;AAAlB,WAA5E,CAAR,CAF+C,CAG/C;;AACA7B,UAAAA,WAAW,CAAC,CAAC,mBAAD,CAAD,CAAX;AACH,SALD,MAKO;AACH,cAAKM,cAAc,CAACqB,iBAAf,CAAiCG,MAAjC,CAAwCC,CAAC,IAAIA,CAAC,CAACR,kBAAF,KAAyBF,aAAa,CAACE,kBAApF,CAAD,CAA0GK,MAA1G,GAAmH,CAAvH,EAA0H;AACtHnG,YAAAA,mBAAmB,CAACuG,OAApB,CAA4B,oHAA5B,EAAkJ,2BAAlJ,EAA+K,IAA/K;AACH,WAFD,MAEO;AACH;AACAlC,YAAAA,QAAQ,CAAC,mBAAD,EAAsB,CAAC,GAAGQ,cAAc,CAACqB,iBAAnB,EAAsCN,aAAtC,CAAtB,EAA4E;AAAEQ,cAAAA,cAAc,EAAE;AAAlB,aAA5E,CAAR,CAFG,CAGH;;AACA7B,YAAAA,WAAW,CAAC,CAAC,mBAAD,CAAD,CAAX;AACH;AACJ;AACJ;AACJ;AACJ,GAnCD,CApC6I,CAwE7I;;;AACA,QAAM;AAAEiC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,gBAAjC;AAAmDC,IAAAA;AAAnD,MAAqEtF,QAA3E,CAzE6I,CA2E7I;;AACAhE,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA+G,IAAAA,QAAQ,CAAC,mBAAD,EAAsB,EAAtB,CAAR;AACAA,IAAAA,QAAQ,CAAC,gBAAD,EAAmB,EAAnB,CAAR,CAJY,CAKZ;;AACA,UAAMwC,YAAY,GAAG;AACjBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJf,UAAAA,QAAQ,EAAE1E,QAAQ,CAAC0E;AADf;AADJ,OADS;AAMjBgB,MAAAA,aAAa,EAAE;AACXD,QAAAA,MAAM,EAAE;AACJE,UAAAA,SAAS,EAAEpF;AADP;AADG;AANE,KAArB;AAYAvB,IAAAA,kBAAkB,CAACyD,UAAD,EAAa8C,YAAb,EAA2BlE,oCAA3B,EAAiEY,cAAjE,EAAiFI,aAAjF,EAAgGF,aAAhG,EAA+GhB,oBAA/G,EAAqIY,eAArI,CAAlB,CAlBY,CAmBZ;;AACAnE,IAAAA,KAAK,CAACgI,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,kCAA5C,EAA+ER,YAAY,CAACC,MAA5F,EAAoGQ,IAApG,CAA0GC,GAAD,IAAS;AAC9G,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,8CAAzB,EAAyE;AACrEC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB;AAEA,cAAM;AAAEI,UAAAA;AAAF,YAAWL,GAAG,CAACC,IAArB;AAEAzE,QAAAA,kBAAkB,CAAC6E,IAAD,CAAlB;AACA3E,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAPD,MAOO;AACHyE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAG,CAACC,IAAvB;AACH;AACJ,KAXD,EAWGK,KAXH,CAWUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KAbD;AAcH,GAlCQ,EAkCN,EAlCM,CAAT,CA5E6I,CAgH7I;;AACA,QAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,GAAf,KAAuB;AAC1C;AACA,QAAIlF,KAAK,KAAK,IAAV,IAAkBF,eAAe,KAAK,IAA1C,EAAgD;AAC5C;AACA,UAAIA,eAAe,CAACqF,cAAhB,CAA+BH,MAA/B,CAAJ,EAA4C;AACxC;AACA,4BAAO;AAAG,UAAA,SAAS,EAAE,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4DC,IAA5D,oBAAkE;AAAQ,UAAA,KAAK,EAAEnF,eAAe,CAACqF,cAAhB,CAA+BH,MAA/B,IAAyC;AAAEI,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE,UAA9B;AAA0CC,YAAAA,UAAU,EAAE;AAAtD,WAAzC,GAAuG;AAAEF,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE,UAA9B;AAA0CC,YAAAA,UAAU,EAAE;AAAtD,WAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoLJ,GAApL,CAAlE,0CAAP;AACH,OAHD,MAGO;AACH;AACA,4BAAO;AAAG,UAAA,SAAS,EAAE,mDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAAiH;AAAI,UAAA,KAAK,EAAE;AAAEK,YAAAA,kBAAkB,EAAE;AAAtB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDN,IAAjD,CAAjH,0HAAmR,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,wBAAV;AAAoC,UAAA,SAAS,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAnR,sEAAP;AACH;AACJ,KATD,MASO;AACH;AACA,0BAAO;AAAG,QAAA,SAAS,EAAE,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH;AACJ,GAfD,CAjH6I,CAiI7I;;;AACA,QAAMO,6BAA6B,GAAIC,oBAAD,IAA0B;AAC5D;AACA1G,IAAAA,oBAAoB,CAAC0G,oBAAD,CAApB,CAF4D,CAG5D;;AACA3J,IAAAA,eAAe,CAAC,IAAD,CAAf,CAJ4D,CAK5D;;AACA+D,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAN4D,CAO5D;;AACA6F,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACA9J,MAAAA,iBAAiB,CAAC4J,MAAD,CAAjB;AACH,KALS,EAKN,GALM,CAAV;AAMH,GAdD;;AAeA,QAAMG,eAAe,GAAG,MAAM;AAC1B,QAAI,CAAC3J,CAAC,CAAC8G,GAAF,CAAMvB,MAAN,EAAc,eAAd,CAAD,IAAmC,CAACA,MAAM,CAACqE,aAA3C,IAA4D,OAAOlE,cAAc,CAACkE,aAAtB,KAAwC,WAApG,IAAmHlE,cAAc,CAACkE,aAAf,CAA6B5C,MAA7B,GAAsC,CAA7J,EAAgK;AAC5J,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAND;;AAOA,QAAM6C,UAAU,GAAG,MAAM;AACrB7E,IAAAA,UAAU,CAAC,eAAD,CAAV;AACH,GAFD,CAxJ6I,CA2J7I;;;AACA,QAAM8E,oBAAoB,GAAGN,MAAM,IAAI;AACnC;AACA5J,IAAAA,iBAAiB,CAAC4J,MAAD,CAAjB;AACH,GAHD;;AAIA,QAAMO,UAAU,GAAGP,MAAM,IAAI1J,uBAAuB,EAApD;;AAEA,QAAMkK,yBAAyB,GAAG,MAAM;AACpC;AACArK,IAAAA,eAAe,CAAC,IAAD,CAAf,CAFoC,CAGpC;;AACA8C,IAAAA,mBAAmB,CAACwH,OAApB,CAA4BC,cAA5B,GAJoC,CAKpC;;AACAX,IAAAA,UAAU,CAAC,MAAM;AACbY,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAC,GAApB;AACH,KAFS,EAEP,GAFO,CAAV,CANoC,CASpC;;AACAb,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMc,MAAM,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACA9J,MAAAA,iBAAiB,CAACyK,MAAD,CAAjB;AAEAjH,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAPS,EAOP,IAPO,CAAV;AAQH,GAlBD;;AAmBA,QAAMkH,uBAAuB,GAAG,MAAM;AAClC;AACA3K,IAAAA,eAAe,CAAC,KAAD,CAAf,CAFkC,CAGlC;;AACAG,IAAAA,uBAAuB,GAJW,CAKlC;;AACAsD,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAPD;;AAQA,QAAMmH,eAAe,GAAG,CAAChF,MAAD,EAASiF,CAAT,KAAe;AACnCjC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjD,MAAzB,EADmC,CACD;;AAElC,QAAIvF,CAAC,CAAC8G,GAAF,CAAMzE,QAAN,EAAgB,OAAhB,KAA4BA,QAAQ,CAACoI,KAAT,CAAezD,MAAf,GAAwB,CAAxD,EAA2D;AACvD5B,MAAAA,WAAW,CAAC,CAAC,mBAAD,CAAD,CAAX;AACH,KAFD,MAEO;AACHD,MAAAA,QAAQ,CAAC,mBAAD,EAAsB;AAC1B2D,QAAAA,IAAI,EAAE,QADoB;AAE1BR,QAAAA,OAAO,EAAE;AAFiB,OAAtB,CAAR;AAIH;;AAED,QAAI,CAAC5C,cAAc,CAACqB,iBAAf,CAAiCC,MAAlC,GAA2C,CAA/C,EAAkD;AAC9C7B,MAAAA,QAAQ,CAAC,mBAAD,EAAsB;AAC1B2D,QAAAA,IAAI,EAAE,QADoB;AAE1BR,QAAAA,OAAO,EAAE;AAFiB,OAAtB,CAAR;AAIH;AACJ,GAlBD;;AAmBA,QAAMoC,YAAY,GAAIC,MAAD,IAAY;AAC7BpC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBmC,MAAtB,EAD6B,CAE7B;;AACA,UAAMC,aAAa,GAAG1I,aAAa,CAAC2I,kBAAd,CAAiCA,kBAAjC,CAAoDJ,KAA1E,CAH6B,CAI7B;;AACA,UAAM;AAAEpD,MAAAA,QAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,QAAvB;AAAiCE,MAAAA,aAAjC;AAAgDD,MAAAA,gBAAhD;AAAkEsD,MAAAA,OAAlE;AAA2EC,MAAAA,KAA3E;AAAkFC,MAAAA,OAAlF;AAA2FC,MAAAA,aAA3F;AAA0GC,MAAAA,MAA1G;AAAkHC,MAAAA;AAAlH,QAAwIxH,eAA9I,CAL6B,CAM7B;;AACA,UAAM;AAAEyH,MAAAA,eAAF;AAAmBC,MAAAA,iBAAnB;AAAsCC,MAAAA,2BAAtC;AAAmEC,MAAAA,uBAAnE;AAA4FC,MAAAA,cAA5F;AAA4GzE,MAAAA,iBAA5G;AAA+H0E,MAAAA;AAA/H,QAA2Jd,MAAjK;AAEA,UAAMe,IAAI,GAAGvJ,QAAQ,CAAC0E,QAAtB;AACA,UAAM8E,WAAW,GAAG7K,IAAI,EAAxB;AAEA,UAAM8K,gBAAgB,GAAG;AACrBC,MAAAA,WAAW,EAAEH,IADQ;AAErBI,MAAAA,SAAS,EAAE3H,WAAW,CAAC0C,QAFF;AAGrBkF,MAAAA,UAAU,EAAE5H,WAAW,CAAC6H,QAHH;AAIrBC,MAAAA,mBAAmB,EAAE9H,WAAW,CAAC0C,QAJZ;AAKrB1E,MAAAA,QALqB;AAMrBwJ,MAAAA,WANqB;AAOrBO,MAAAA,eAAe,EAAE;AACbP,QAAAA,WADa;AAEbf,QAAAA,aAFa;AAGbQ,QAAAA,eAHa;AAIbC,QAAAA,iBAJa;AAKbc,QAAAA,WAAW,EAAEhK,QAAQ,CAAC0E,QALT;AAMbuF,QAAAA,SAAS,EAAE,EANE;AAObC,QAAAA,KAAK,EAAE,KAPM;AAQbC,QAAAA,aAAa,EAAG,GAAEnK,QAAQ,CAACmF,SAAU,IAAGnF,QAAQ,CAACoF,QAAS,EAR7C;AASbgF,QAAAA,KAAK,EAAE,CATM;AAUbC,QAAAA,QAAQ,EAAE,CAVG;AAWbL,QAAAA,WAAW,EAAET,IAXA;AAYbe,QAAAA,WAAW,EAAE,IAAIC,IAAJ,EAZA;AAabC,QAAAA,kBAAkB,EAAEjN,MAAM,CAAC,IAAIgN,IAAJ,EAAD,CAAN,CAAmBlG,MAAnB,CAA0B,uBAA1B,CAbP;AAcb8E,QAAAA,2BAda;AAebC,QAAAA,uBAfa;AAgBbC,QAAAA,cAhBa;AAiBbzE,QAAAA,iBAjBa;AAkBb0E,QAAAA;AAlBa;AAPI,KAAzB;AA6BA,UAAMmB,WAAW,GAAG;AAChB/F,MAAAA,QAAQ,EAAE6E,IADM;AAEhBK,MAAAA,UAAU,EAAE5H,WAAW,CAAC6H,QAFR;AAGhBC,MAAAA,mBAAmB,EAAE9H,WAAW,CAAC0C,QAHjB;AAIhBqF,MAAAA,eAAe,EAAE;AACbP,QAAAA,WADa;AAEbf,QAAAA,aAFa;AAGbQ,QAAAA,eAHa;AAIbC,QAAAA,iBAJa;AAKbc,QAAAA,WAAW,EAAEhK,QAAQ,CAAC0E,QALT;AAMbuF,QAAAA,SAAS,EAAE,EANE;AAObC,QAAAA,KAAK,EAAE,KAPM;AAQbC,QAAAA,aAAa,EAAG,GAAEnK,QAAQ,CAACmF,SAAU,IAAGnF,QAAQ,CAACoF,QAAS,EAR7C;AASbgF,QAAAA,KAAK,EAAE,CATM;AAUbC,QAAAA,QAAQ,EAAE,CAVG;AAWbP,QAAAA,mBAAmB,EAAE9H,WAAW,CAAC0C,QAXpB;AAYbgG,QAAAA,gBAAgB,EAAE1I,WAAW,CAAC6H,QAZjB;AAabG,QAAAA,WAAW,EAAET,IAbA;AAcbe,QAAAA,WAAW,EAAE,IAAIC,IAAJ,EAdA;AAebC,QAAAA,kBAAkB,EAAEjN,MAAM,CAAC,IAAIgN,IAAJ,EAAD,CAAN,CAAmBlG,MAAnB,CAA0B,uBAA1B,CAfP;AAgBb8E,QAAAA,2BAhBa;AAiBbC,QAAAA,uBAjBa;AAkBbC,QAAAA,cAlBa;AAmBbzE,QAAAA,iBAnBa;AAoBb0E,QAAAA,uBApBa;AAqBbqB,QAAAA,iBAAiB,EAAE;AACfzF,UAAAA,QADe;AAEfC,UAAAA,SAFe;AAGfC,UAAAA,QAHe;AAIfE,UAAAA,aAJe;AAKfD,UAAAA,gBALe;AAMfsD,UAAAA,OANe;AAOfC,UAAAA,KAPe;AAQfC,UAAAA,OARe;AASfC,UAAAA,aATe;AAUfC,UAAAA,MAVe;AAWfC,UAAAA;AAXe;AArBN;AAJD,KAApB,CAzC6B,CAkF7B;;AACA,UAAM4B,YAAY,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,eAAtC,EAAuD,kBAAvD,EAA2E,SAA3E,EAAsF,OAAtF,EAA+F,SAA/F,EAA0G,eAA1G,EAA2H,QAA3H,EAAqI,mBAArI,CAArB,CAnF6B,CAoF7B;;AACA,UAAMC,cAAc,GAAGD,YAAY,CAAC/F,MAApC,CArF6B,CAsF7B;;AACA,UAAMiG,mBAAmB,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACxG,GAAD,EAAMyG,CAAN,KAAY;AACrD,UAAI,OAAOxJ,eAAe,CAAC+C,GAAD,CAAtB,KAAgC,WAApC,EAAiD;AAC7C;AACA,eAAO,IAAP;AACH,OAHD,MAGO;AACH;AACA7F,QAAAA,mBAAmB,CAACuG,OAApB,CAA6B,wDAAuDV,GAAI,qEAAoEA,GAAI,sBAAhK,EAAwL,6CAA4CA,GAAI,OAAxO,EAAgP,IAAhP,EAFG,CAGH;;AACA,eAAO,KAAP;AACH;AACJ,KAV2B,CAA5B;;AAYA,QAAIuG,mBAAmB,CAACG,QAApB,CAA6B,KAA7B,CAAJ,EAAyC;AACrC;AAEAvM,MAAAA,mBAAmB,CAACwM,KAApB,CAA2B,qHAA3B,EAAkJ,4CAAlJ,EAA+L,IAA/L;AACH,KAJD,MAIO;AACH;AAEA;AACAtN,MAAAA,KAAK,CAACuN,IAAN,CAAY,GAAEtF,OAAO,CAACC,GAAR,CAAYC,kBAAmB,+CAA7C,EAA6F0E,WAA7F,EAA0GzE,IAA1G,CAAgHC,GAAD,IAAS;AACpH,YAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,mFAAzB,EAA8G;AAE1GvI,UAAAA,KAAK,CAACuN,IAAN,CAAY,GAAEtF,OAAO,CAACC,GAAR,CAAYC,kBAAmB,0DAA7C,EAAwG0D,gBAAxG,EAA0HzD,IAA1H,CAAgIC,GAAD,IAAS;AACpI,gBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,6CAAzB,EAAwE;AACpEC,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CJ,GAAG,CAACC,IAAjD;AAEAxH,cAAAA,mBAAmB,CAAC0M,OAApB,CAA4B,mGAA5B,EAAiI,kCAAjI,EAAqK,IAArK;AAEAhE,cAAAA,UAAU,CAAC,MAAM;AACbjH,gBAAAA,OAAO,CAACkL,IAAR,CAAa,mBAAb;AACH,eAFS,EAEN,IAFM,CAAV;AAGH,aARD,MAQO;AACHjF,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,GAAG,CAACC,IAA5B;AAEAxH,cAAAA,mBAAmB,CAACwM,KAApB,CAA0B,iLAA1B,EAA6M,8BAA7M,EAA6O,IAA7O;AACH;AACJ,WAdD,EAcG3E,KAdH,CAcUC,GAAD,IAAS;AACdJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAEA9H,YAAAA,mBAAmB,CAACwM,KAApB,CAA0B,iLAA1B,EAA6M,8BAA7M,EAA6O,IAA7O;AACH,WAlBD;AAmBH,SArBD,MAqBO;AACH9E,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,GAAG,CAACC,IAA5B;AAEAxH,UAAAA,mBAAmB,CAACwM,KAApB,CAA0BjF,GAAG,CAACC,IAAJ,CAASC,OAAnC,EAA4C,8DAA5C,EAA4G,IAA5G;AACH;AACJ,OA3BD,EA2BGI,KA3BH,CA2BUC,GAAD,IAAS;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,OA7BD;AA8BH;AACJ,GA1ID;;AA2IA,QAAM8E,0BAA0B,GAAG,MAAM;AACrC;AACA9N,IAAAA,eAAe,CAAC,IAAD,CAAf,CAFqC,CAGrC;;AACAmD,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CAJqC,CAKrC;;AACAyG,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMc,MAAM,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACA9J,MAAAA,iBAAiB,CAACyK,MAAD,CAAjB;AACH,KALS,EAKP,GALO,CAAV;AAMH,GAZD;;AAaA,QAAMqD,sBAAsB,GAAGrI,KAAK,CAAC,CAAC,mBAAD,CAAD,CAApC;AAEAkD,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9C,cAA5B;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,MAAM,EAAE,CAFZ;AAGI,IAAA,QAAQ,EAAE3B,QAHd;AAII,IAAA,gBAAgB,EAAE,MAAM;AACpBC,MAAAA,WAAW,CAAC,CAAD,CAAX;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,6BAAD;AAA+B,IAAA,KAAK,EAAEH,KAAtC;AAA6C,IAAA,eAAe,EAAElE,eAA9D;AAA+E,IAAA,YAAY,EAAEgD,YAA7F;AAA2G,IAAA,eAAe,EAAEgB,eAA5H;AAA6I,IAAA,uBAAuB,EAAE7D,uBAAtK;AAA+L,IAAA,QAAQ,EAAEqC,QAAzM;AAAmN,IAAA,WAAW,EAAEsB,WAAhO;AAA6O,IAAA,iBAAiB,EAAEC,iBAAhQ;AAAmR,IAAA,cAAc,EAAEkF,cAAnS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI,oBAAC,kCAAD;AAAoC,IAAA,8BAA8B,EAAEhI,8BAApE;AAAoG,IAAA,aAAa,EAAEsB,aAAnH;AAAkI,IAAA,WAAW,EAAE8B,WAA/I;AAA4J,IAAA,cAAc,EAAEnB,cAA5K;AAA4L,IAAA,qBAAqB,EAAEC,qBAAnN;AAA0O,IAAA,eAAe,EAAEnD,eAA3P;AAA4Q,IAAA,uBAAuB,EAAEG,uBAArS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAE,yBAA7B;AAAwD,IAAA,MAAM,EAAG,wBAAuBkI,OAAO,CAACC,GAAR,CAAY0F,2BAA4B,gCAAhI;AAAiK,IAAA,KAAK,EAAE,gEAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE7L,gBADX;AAEI,IAAA,MAAM,EAAEqB,UAFZ;AAGI,IAAA,WAAW,EAAE2G,oBAHjB;AAII,IAAA,aAAa,EAAEC,UAJnB;AAKI,IAAA,cAAc,EAAEO,uBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAmBI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,6BAAjB;AAA+C,IAAA,IAAI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvH,QAAQ,KAAK,IAAb,gBAAoB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjB;AAAI,IAAA,SAAS,EAAC,+CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAAyG;AAAM,IAAA,SAAS,EAAC,6DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+E,4BAA/E,CAAzG,CADiB,eAEjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAX,sIAA+K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA/K,mCAFiB,eAGjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHiB,eAIjB;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJiB,CAApB,GAKa,IANlB,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAM;AAClBC,MAAAA,gBAAgB,CAAC,CAACD,QAAF,CAAhB;AACH,KAFD;AAEG,IAAA,OAAO,EAAEA,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,KAFvC;AAE8C,IAAA,EAAE,EAAC,4BAFjD;AAE8E,IAAA,IAAI,EAAC,UAFnF;AAE8F,IAAA,cAAc,MAF5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6C;AAAQ,IAAA,KAAK,EAAE;AAAEqG,MAAAA,kBAAkB,EAAE,WAAtB;AAAmCH,MAAAA,KAAK,EAAE;AAA1C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuElG,QAAQ,KAAK,IAAb,GAAoB,MAApB,GAA6B,MAApG,CAA7C,6BAJJ,CADJ,CADJ,CAPJ,eAiBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEiH,yBAAjB;AAA4C,IAAA,KAAK,EAAE;AAAE4D,MAAAA,KAAK,EAAE;AAAT,KAAnD;AAAsE,IAAA,SAAS,EAAC,yBAAhF;AAA0G,IAAA,OAAO,MAAjH;AAAkH,IAAA,KAAK,EAAC,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAjBJ,CADJ,CADJ,CADJ,CAnBJ,eA4CI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAyC,IAAA,KAAK,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,mDAAlB;AAAsE,IAAA,UAAU,EAAC,EAAjF;AAAoF,IAAA,QAAQ,EAAE9I,YAAY,CAAC4F,YAAD,EAAe,CAACnF,MAAD,EAASiF,CAAT,KAAe;AACpIjB,MAAAA,UAAU,CAAC,MAAM;AACb,eAAOgB,eAAe,CAAChF,MAAD,EAASiF,CAAT,CAAtB;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAJyG,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEqD,MAAAA,UAAU,EAAE;AAAd,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/C,iCAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA1E,2FAA2K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3K,uEAA2P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA3P,CAFJ,CADJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,YAAY,EAAE5J,YAAlC;AAAgD,IAAA,WAAW,EAAEE,WAA7D;AAA0E,IAAA,EAAE,EAAEzB,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAAEmL,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrM,iBAAiB,CAACsM,KAAlD,CADJ,eAEI,oBAAC,KAAD,oBAAWtM,iBAAiB,CAACuM,KAAlB,CAAwB5I,QAAxB,EAAkCN,QAAlC,EAA4CO,WAA5C,EAAyD,iBAAzD,CAAX;AAAwF,IAAA,WAAW,EAAE5D,iBAAiB,CAACwM,WAAvH;AAAoI,IAAA,QAAQ,EAAGxD,CAAD,IAAO;AACjJ,aAAOhJ,iBAAiB,CAACyM,QAAlB,CAA2BzD,CAA3B,EAA8B,iBAA9B,EAAiDtF,QAAjD,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAE1D,iBAAiB,CAAC0M,IAF3B;AAEiC,IAAA,IAAI,EAAC,UAFtC;AAEiD,IAAA,SAAS,EAAC,gCAF3D;AAE4F,IAAA,IAAI,EAAE,GAFlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKK3I,MAAM,CAAC6F,eAAP,gBAAyB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7F,MAAM,CAAC6F,eAAP,CAAuB9C,OAAvD,CAAzB,GAAkG,IALvG,CADJ,eASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ5G,uBAAuB,CAACoM,KAAhC,CADJ,eAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAE/I,OADb;AAEI,IAAA,IAAI,EAAErD,uBAAuB,CAACwM;AAFlC,KAGQxM,uBAAuB,CAACqM,KAAxB,CAA8BrM,uBAAuB,CAACwM,IAAtD,EAA4DrJ,QAA5D,CAHR;AAII,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEsJ,QAAAA;AAAF,OAAD;AAAA,0BACJ,oBAAC,MAAD,oBACQA,KADR;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,YAAY,EAAE,IAHlB;AAII,QAAA,GAAG,EAAE5L,mCAJT;AAKI,QAAA,KAAK,EAAEmD,cAAc,CAAC6F,uBAL1B;AAMI,QAAA,WAAW,EAAE7J,uBAAuB,CAACsM,WANzC;AAOI,QAAA,QAAQ,EAAGI,cAAD,IAAoB;AAC1B7F,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEAe,UAAAA,UAAU,CAAC,MAAM;AACb;AACA,gBAAK,OAAO6E,cAAP,KAA0B,WAA3B,IAA4CC,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BpH,MAA5B,GAAqC,CAArF,EAAyF;AACrF;AACA9B,cAAAA,QAAQ,CAACxD,uBAAuB,CAACwM,IAAzB,EAA+BE,cAA/B,EAA+C;AAAEnH,gBAAAA,cAAc,EAAE;AAAlB,eAA/C,CAAR,CAFqF,CAGrF;;AACA7B,cAAAA,WAAW,CAAC1D,uBAAuB,CAACwM,IAAzB,CAAX;AACH,aALD,MAKO;AACH;AACA/I,cAAAA,QAAQ,CAACzD,uBAAuB,CAACwM,IAAzB,EAA+B;AACnCpF,gBAAAA,IAAI,EAAE,QAD6B;AAEnCR,gBAAAA,OAAO,EAAE;AAF0B,eAA/B,CAAR;AAIH;AACJ,WAdS,EAcP,EAdO,CAAV;AAeH,SAzBL;AA0BI,QAAA,WAAW,EAAE,MAAM;AACf/F,UAAAA,mCAAmC,CAAC0H,OAApC,CAA4CsE,IAA5C;AACH,SA5BL;AA6BI,QAAA,OAAO,EAAEhL,4BA7Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADI;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAwCKgC,MAAM,CAACgG,uBAAP,gBAAiC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgChG,MAAM,CAACgG,uBAAP,CAA+BjD,OAA/D,CAAjC,GAAkH,IAxCvH,CATJ,eAmDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ1G,0BAA0B,CAACkM,KAAnC,CADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjM,0BAA0B,CAACiM,KAA3D,CADJ,eAEI,oBAAC,KAAD,oBAAWjM,0BAA0B,CAACkM,KAA3B,CAAiC5I,QAAjC,EAA2CN,QAA3C,EAAqDO,WAArD,EAAkEF,QAAlE,EAA4E,6BAA5E,CAAX;AAAuH,IAAA,KAAK,EAAEQ,cAAc,CAAC4F,2BAA7I;AAA0K,IAAA,WAAW,EAAEzJ,0BAA0B,CAACmM,WAAlN;AAA+N,IAAA,QAAQ,EAAGxD,CAAD,IAAO;AAC5O,aAAO3I,0BAA0B,CAACoM,QAA3B,CAAoCzD,CAApC,EAAuC,6BAAvC,EAAsEtF,QAAtE,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAErD,0BAA0B,CAACqM,IAFpC;AAE0C,IAAA,IAAI,EAAC,QAF/C;AAEwD,IAAA,SAAS,EAAC,gCAFlE;AAEmG,IAAA,OAAO,EAAE,MAF5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CAFJ,EAQK3I,MAAM,CAAC+F,2BAAP,gBAAqC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC/F,MAAM,CAAC+F,2BAAP,CAAmChD,OAAnE,CAArC,GAA0H,IAR/H,CAnDJ,CADJ,eA+DI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,eAEI,oBAAC,KAAD,oBAAW7G,uBAAuB,CAACsM,KAAxB,CAA8B5I,QAA9B,EAAwCN,QAAxC,EAAkDO,WAAlD,EAA+DF,QAA/D,EAAyE,mBAAzE,CAAX;AAA0G,IAAA,WAAW,EAAEzD,uBAAuB,CAACuM,WAA/I;AAA4J,IAAA,QAAQ,EAAGxD,CAAD,IAAO;AACzK,aAAO/I,uBAAuB,CAACwM,QAAxB,CAAiCzD,CAAjC,EAAoC,mBAApC,EAAyDtF,QAAzD,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAEzD,uBAAuB,CAACyM,IAFjC;AAEuC,IAAA,IAAI,EAAC,UAF5C;AAEuD,IAAA,SAAS,EAAC,gCAFjE;AAEkG,IAAA,IAAI,EAAE,GAFxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKK3I,MAAM,CAAC8F,iBAAP,gBAA2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC9F,MAAM,CAAC8F,iBAAP,CAAyB/C,OAAzD,CAA3B,GAAsG,IAL3G,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC3G,4BAA4B,CAACmM,KAA7D,CADJ,eAEI,oBAAC,KAAD,oBAAWnM,4BAA4B,CAACoM,KAA7B,CAAmC5I,QAAnC,EAA6CN,QAA7C,EAAuDO,WAAvD,EAAoE,yBAApE,CAAX;AAA2G,IAAA,WAAW,EAAEzD,4BAA4B,CAACqM,WAArJ;AAAkK,IAAA,QAAQ,EAAGxD,CAAD,IAAO;AAC/K,aAAO7I,4BAA4B,CAACsM,QAA7B,CAAsCzD,CAAtC,EAAyC,yBAAzC,EAAoEtF,QAApE,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAEvD,4BAA4B,CAACuM,IAFtC;AAE4C,IAAA,IAAI,EAAC,UAFjD;AAE4D,IAAA,SAAS,EAAC,gCAFtE;AAEuG,IAAA,IAAI,EAAE,GAF7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKK3I,MAAM,CAACkG,uBAAP,gBAAiC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClG,MAAM,CAACkG,uBAAP,CAA+BnD,OAA/D,CAAjC,GAAkH,IALvH,CARJ,CA/DJ,CAJJ,eAoFI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,0BAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvC,qCADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAAEuF,MAAAA,UAAU,EAAE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAAkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlI,wFAFJ,CADJ,EAKKtI,MAAM,CAACiJ,iBAAP,gBAA2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjJ,MAAM,CAACiJ,iBAAP,CAAyBlG,OAAzD,CAA3B,GAAsG,IAL3G,eAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEsF,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,SAAS,EAAE,4BAA7C;AAA2E,IAAA,OAAO,EAAE,MAAM;AACtF;AACAH,MAAAA,0BAA0B;AAC7B,KAHD;AAGG,IAAA,OAAO,MAHV;AAGW,IAAA,KAAK,EAAC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADJ,CANJ,CADJ,CADJ,CApFJ,CALJ,CADJ,CADJ,CALJ,eAqHI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gMAHJ,CADJ,eAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,UAA7C,CADA,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CAD7D,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKK7E,cAAc,CAAC,UAAD,EAAa,UAAb,EAAyBvB,QAAzB,CALnB,CADJ,eAQI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,mCAA7C,CADA,eACsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADtF,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKuB,cAAc,CAAC,eAAe,UAAhB,EAA4B,WAA5B,EAA0C,GAAEtB,SAAU,IAAGC,QAAS,EAAlE,CALnB,CARJ,eAeI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,qBAA7C,CADA,eACwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADxE,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKqB,cAAc,CAAC,kBAAD,EAAqB,sBAArB,EAA6ClJ,MAAM,CAAC8H,gBAAD,CAAN,CAAyBiH,OAAzB,EAA7C,CALnB,CAfJ,eAsBI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,+BAA7C,CADA,eACkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADlF,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKK7F,cAAc,CAAC,eAAD,EAAkB,qBAAlB,EAAyCnB,aAAzC,CALnB,CAtBJ,eA6BI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEmG,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,SAAS,EAAE,yBAA7C;AAAwE,IAAA,OAAO,EAAE,MAAM;AACnFvE,MAAAA,6BAA6B,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,kBAAzB,EAA6C,eAA7C,CAAD,CAA7B;AACH,KAFD;AAEG,IAAA,OAAO,MAFV;AAEW,IAAA,KAAK,EAAC,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,CA7BJ,CADJ,CANJ,CADJ,CADJ,eA+CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,qCADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEqF,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAA2C,IAAA,SAAS,EAAC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAA+E;AAAI,IAAA,KAAK,EAAE;AAAEtF,MAAAA,kBAAkB,EAAE;AAAtB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA/E,MADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoD,YAApD,CAArC,CADJ,eAEI,oBAAC,KAAD,oBAAW7H,kBAAkB,CAACwM,KAAnB,CAAyB5I,QAAzB,EAAmCN,QAAnC,EAA6CO,WAA7C,EAA0DF,QAA1D,EAAoEK,MAApE,EAA4E,eAA5E,CAAX;AAAyG,IAAA,QAAQ,EAAGiF,CAAD,IAAOjJ,kBAAkB,CAAC0M,QAAnB,CAA4BzD,CAA5B,EAA+B,eAA/B,EAAgDtF,QAAhD,CAA1H;AAAqL,IAAA,SAAS,EAAC,cAA/L;AAA8M,IAAA,IAAI,EAAC,MAAnN;AAA0N,IAAA,IAAI,EAAC,eAA/N;AAA+O,IAAA,WAAW,EAAE,mDAA5P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGKyE,eAAe,kBAAK,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAAM;AACjDtI,MAAAA,kBAAkB,CAACqD,gBAAD,EAAmBgB,cAAc,CAAC8F,cAAlC,EAAkD3B,UAAlD,EAA8D3E,QAA9D,EAAwEQ,cAAc,CAACkE,aAAvF,CAAlB;AACH,KAFoB;AAElB,IAAA,SAAS,EAAC,QAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD,QAAhD,CAFD,CAAL,GAEqG,IALzH,CAFJ,EASKrE,MAAM,CAACqE,aAAP,gBAAuB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrE,MAAM,CAACqE,aAAP,CAAqBtB,OAArD,CAAvB,GAA8F,IATnG,CAFJ,EAaK7D,aAAa,CAACyI,GAAd,CAAkB,CAACyB,IAAD,EAAOC,KAAP,KAAiB;AAChCrG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBmG,IAApB;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAED,QAAAA,SAAS,EAAE,QAAb;AAAuBG,QAAAA,YAAY,EAAE;AAArC,OAAZ;AAA6D,MAAA,GAAG,EAAED,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAGpE,CAAD,IAAO;AAC3BA,QAAAA,CAAC,CAACsE,cAAF;AACH,OAFD;AAEG,MAAA,SAAS,EAAC,6CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAE2D;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3D,EAEoGJ,IAAI,CAACK,GAFzG,eAE6G;AAAG,MAAA,OAAO,EAAE,MAAM;AAC3H;AACA5N,QAAAA,kBAAkB,CAACuN,IAAD,EAAOjK,gBAAP,CAAlB;AACH,OAH4G;AAG1G,MAAA,EAAE,EAAE,mBAHsG;AAGjF,MAAA,SAAS,EAAC,YAHuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7G,CADJ,CADJ;AAUH,GAZA,CAbL,eA0BI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIADJ,EAEKH,UAAU,KAAK,IAAf,gBAAsB,oBAAC,eAAD;AACnB,IAAA,MAAM,EAAEF,UADW;AAEnB,IAAA,QAAQ,EAAEsB,mBAFS;AAGnB,IAAA,aAAa,EAAE,MAAM4C,OAAO,CAACC,GAAR,CAAY,eAAZ,CAHF,CAInB;AAJmB;AAKnB,IAAA,SAAS,EAAE,IAAIkE,IAAJ,EALQ;AAMnB,IAAA,SAAS,EAAE,0BANQ;AAOnB,IAAA,uBAAuB,EAAE,KAPN;AAQnB,IAAA,aAAa,EAAErJ,YARI;AASnB,IAAA,YAAY,EAAE,EATK;AAUnB,IAAA,OAAO,EAAEsB,OAVU;AAWnB,IAAA,SAAS,EAAE,YAXQ;AAYnB,IAAA,cAAc,EAAE,IAZG;AAanB,IAAA,MAAM,EAAE,CAbW;AAcnB,IAAA,eAAe,EAAE,KAdE;AAenB,IAAA,WAAW,EAAE,EAfM;AAgBnB,IAAA,MAAM,EAAE;AAAEsK,MAAAA,OAAO,EAAE;AAAX,KAhBW;AAiBnB,IAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAjBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAkBI,IApBT,CA1BJ,eAgDI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDJ,EAiDK1J,MAAM,CAACwB,iBAAP,gBAA2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCxB,MAAM,CAACwB,iBAAP,CAAyBuB,OAAzD,CAA3B,GAAsG,IAjD3G,eAkDI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEoG,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAqC,IAAA,EAAE,EAAC,IAAxC;AAA6C,IAAA,EAAE,EAAC,IAAhD;AAAqD,IAAA,EAAE,EAAC,IAAxD;AAA6D,IAAA,EAAE,EAAC,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,OAAOhJ,cAAc,CAACqB,iBAAtB,KAA4C,WAA5C,IAA2DrB,cAAc,CAACqB,iBAAf,CAAiCC,MAAjC,GAA0C,CAArG,gBAAyG,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/B,wEAA4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5G,iCAAzG,GAAuR,IAD5R,eAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,OAAOtB,cAAc,CAACqB,iBAAtB,KAA4C,WAA5C,IAA2DrB,cAAc,CAACqB,iBAAf,CAAiCC,MAAjC,GAA0C,CAArG,GAAyGtB,cAAc,CAACqB,iBAAf,CAAiCmG,GAAjC,CAAqC,CAAC3G,IAAD,EAAO2I,GAAP,KAAe;AAC1J,wBAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,GAApB;AAAyB,MAAA,KAAK,EAAE;AAAE/F,QAAAA,UAAU,EAAE;AAAd,OAAhC;AAAwD,MAAA,SAAS,EAAC,+CAAlE;AAAkH,MAAA,OAAO,EAAE,MAAM;AACpI,cAAMgG,QAAQ,GAAGzJ,cAAc,CAACqB,iBAAf,CAAiCG,MAAjC,CAAwC,CAACkI,MAAD,EAASC,MAAT,KAAoB;AACzE,cAAID,MAAM,CAACvI,QAAP,KAAoBN,IAAI,CAACM,QAA7B,EAAuC;AACnC,mBAAO,IAAP;AACH;AACJ,SAJgB,CAAjB;AAMA0B,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB2G,QAAxB;AAEAjK,QAAAA,QAAQ,CAAC,mBAAD,EAAsBiK,QAAtB,EAAgC;AAAElI,UAAAA,cAAc,EAAE;AAAlB,SAAhC,CAAR;AACH,OAVM;AAUJ,MAAA,MAAM,EAAEiI,GAAG,GAAG,CAAN,KAAY,CAAZ,GAAgB,IAAhB,GAAuB,KAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAUiExP,MAAM,CAAC6G,IAAI,CAACV,SAAN,CAAN,CAAuBW,MAAvB,CAA8B,YAA9B,CAVjE,CAAP;AAWH,GAZyG,CAAzG,GAYI,IAbT,CAFJ,CAlDJ,CADJ,CAJJ,CADJ,CA/CJ,CArHJ,eAmPI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAE/D,mBAAV;AAA+B,IAAA,EAAE,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAxB,mCAAsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtF,mDADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA/C,8JADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEmL,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,IAAI,EAAE,QAAxC;AAAkD,IAAA,SAAS,EAAC,yBAA5D;AAAsF,IAAA,OAAO,MAA7F;AAA8F,IAAA,KAAK,EAAC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANR,eAOI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAJJ,CADJ,CADJ,CADJ,CAnPJ,eAwQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAxQJ,CADJ,CA5CJ,CADJ;AA+TH,CA1qBD;;AA2qBA,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpN,IAAAA,QAAQ,EAAEoN,KAAK,CAACC,IAAN,CAAWnH,IADlB;AAEHnG,IAAAA,aAAa,EAAElC,CAAC,CAAC8G,GAAF,CAAMyI,KAAK,CAAC1E,kBAAZ,EAAgC,oBAAhC,KAAyD7K,CAAC,CAAC8G,GAAF,CAAMyI,KAAK,CAAC1E,kBAAN,CAAyBA,kBAA/B,EAAmD,OAAnD,CAAzD,GAAuH;AAClIA,MAAAA,kBAAkB,EAAE;AAChBA,QAAAA,kBAAkB,EAAE;AAChBJ,UAAAA,KAAK,EAAE8E,KAAK,CAAC1E,kBAAN,CAAyBA,kBAAzB,CAA4CJ;AADnC;AADJ;AAD8G,KAAvH,GAMX;AACAI,MAAAA,kBAAkB,EAAE;AAChBA,QAAAA,kBAAkB,EAAE;AAChBJ,UAAAA,KAAK,EAAE;AADS;AADJ;AADpB,KARD;AAeHpI,IAAAA,QAAQ,EAAErC,CAAC,CAAC8G,GAAF,CAAMyI,KAAK,CAAC1E,kBAAZ,EAAgC,oBAAhC,IAAwD0E,KAAK,CAAC1E,kBAAN,CAAyBA,kBAAjF,GAAsG;AAf7G,GAAP;AAiBH,CAlBD;;AAmBA,eAAepL,OAAO,CAAC6P,eAAD,EAAkB;AAAE3P,EAAAA,eAAF;AAAmBiB,EAAAA;AAAnB,CAAlB,CAAP,CAA8EV,UAAU,CAAC+B,kCAAD,CAAxF,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ButtonGroup, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText, Media } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams, useHistory } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport Tour from 'reactour';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveApplicationDetailsProgress } from \"../../../../../redux/actions/hackers/applyToEmployerListing/applicationInfo.js\";\nimport { NotificationManager } from \"react-notifications\";\nimport uuid from 'react-uuid';\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst { TimelineHelper, SheetPaneSubmittingDataHelper, HelperRadioButtons, renderMountedLogic, handleDeletionLink, handleLinkAddition, SheetDisplayFilesFileManagerHelper } = helpers;\n\n// react-hook-form helpers\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\nconst participateInBettingWagers = MainHooksCustomHelpers().participateInBettingWagers;\nconst amountWillingToCompleteJob = MainHooksCustomHelpers().amountWillingToCompleteJob;\n\n\nconst tourStepsOptions = [\n    {\n      selector: '#tour-col-custom',\n      content: 'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!',\n    }\n];\n\nconst ApplyAsHackerEmployerListingHelper = ({ previousFiles, userData, shiftCoreStyles, location, saveApplicationDetailsProgress, previous }) => {\n\n    const history = useHistory();\n    // ref's\n    const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n    const participateInBettingWagersRef = useRef(null);\n    const scrollToTourWrapper = useRef(null);\n    // get URL ID from string\n    const { id } = useParams();\n    // initialize state items...\n    const [ alreadyAdded, setAlreadyAddedState ] = useState(null);\n    const [ filesSheetOpen, setFileSheetOpenState ] = useState(false);\n    const [ showMore, setShowMoreState ] = useState(false);\n    const [ linkInput, setLinkInput ] = useState(\"\"); \n    const [ isTourOpen, setIsTourOpenState ] = useState(false);\n    const [ disabledDays, setDisabledDaysState ] = useState([]);\n    const [ physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState ] = useState([]);\n    const [ sheetIsOpen, setSheetOpenState ] = useState(false);\n    const [ currentUserData, setCurrentUserData ] = useState(null);\n    const [ ready, setReadyGlobal ] = useState(false);\n    const [ progress, setProgress ] = useState(0);\n    const [ listingReady, setListingReady ] = useState(false);\n    const [ listingData, setListingData ] = useState(null);\n    const [ dateRanges, setDateRanges ] = useState(null);\n    const [ datesReady, setDatesReady ] = useState(false);\n    const [ selectedLinks, setSelectedLinks ] = useState([]);\n    const [ maxDate, setMaxDate ] = useState(null);\n\n    const { register, handleSubmit, control, resetField, getValues, setValue, setError, clearErrors, watch, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n    \n    const gatheredValues = getValues();\n\n    const handleDateSelection = (ranges) => {\n        const { startDate, endDate } = ranges.selection;\n\n        const datesAreOnSameDay = (first, second) => first.getFullYear() === second.getFullYear() && first.getMonth() === second.getMonth() && first.getDate() === second.getDate();\n\n        const gatherDayInfo = (date) => moment(date).format(\"MM-DD-YYYY\");\n\n        if (datesAreOnSameDay(startDate, endDate)) {\n            const formattedDate = {\n                startDate,\n                endDate,\n                key: 'selection',\n                formattedStartDate: gatherDayInfo(startDate),\n                formattedEndDate: gatherDayInfo(endDate),\n                uniqueId: uuid()\n            }\n\n            if (_.has(gatheredValues, \"selectedTestDates\") && typeof gatheredValues.selectedTestDates !== \"undefined\") {\n                if (gatheredValues.selectedTestDates.length === 0) {\n                    // update state...\n                    setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], { shouldValidate: false });\n                    // clear related error data\n                    clearErrors([\"selectedTestDates\"]);\n                } else {\n                    if ((gatheredValues.selectedTestDates.filter(x => x.formattedStartDate === formattedDate.formattedStartDate)).length > 0) {\n                        NotificationManager.warning(\"You cannot select the SAME date TWICE - Please select UNIQUE dates when selecting various physical 'hack dates'...\", \"Date is ALREADY selected!\", 4750);  \n                    } else {\n                        // update state...\n                        setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], { shouldValidate: false });\n                        // clear related error data\n                        clearErrors([\"selectedTestDates\"]);\n                    }\n                }\n            } \n        }\n    }\n    // deconstruct redux-state items...\n    const { username, firstName, lastName, registrationDate, completedJobs } = userData;\n\n    // component mounted.\n    useEffect(() => {\n\n        // set default unavailiable state - selectedTestDates\n        setValue(\"selectedTestDates\", []);\n        setValue(\"referenceLinks\", []);\n        // set global config obj's for api-requests\n        const globalConfig = {\n            config: {\n                params: {\n                    uniqueId: userData.uniqueId\n                }\n            },\n            configuration: {\n                params: {\n                    listingId: id\n                }\n            }\n        }\n        renderMountedLogic(setMaxDate, globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady);\n        // gather core anonymous user information\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setCurrentUserData(user);\n                setReadyGlobal(true);\n            } else {\n                console.log('err', res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // render custom sentence instead of DRY repeating\n    const renderSentence = (actual, type, val) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(actual)) {\n                // return proper/desired \"right\" filled out data\n                return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Your {type} <strong style={currentUserData.hasOwnProperty(actual) ? { color: \"#dc3545\", fontSize: \"1.005rem\", fontWeight: 500 } : { color: \"#a927f9\", fontSize: \"1.005rem\", fontWeight: 500 }}>{val}</strong> will be submitted to the employer...</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom-custom override-red\"}>You have NOT filled out the required field of <em style={{ textDecorationLine: \"underline\" }}>{type}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    // view more fields in PANE\n    const viewRemainderOfIncludedFields = (alreadyIncludedArray) => {\n        // already shown items *(HIGHLIGHT)*\n        setAlreadyAddedState(alreadyIncludedArray);\n        // shift \"lock\" styles to prevent scrolling and clicking\n        shiftCoreStyles(true);\n        // open modal - change modal state to OPEN\n        setSheetOpenState(true);\n        // set delay to allow load\n        setTimeout(() => {\n            // select outter body classname to pause/freeze\n            const target = document.querySelector(\".enact-nonclick\");\n            // DISABLE body scroll entirely\n            disableBodyScroll(target);\n        },  500);\n    }\n    const showButtonOrNot = () => {\n        if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const clearInput = () => {\n        resetField(\"referenceLink\");\n    }\n    //  TOUR related LOCK SCREEN functions - DISABLE body scrolling\n    const disableBodyAndScroll = target => {\n        // disable body scroll\n        disableBodyScroll(target);\n    };\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const handleDirectionChangeTour = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // scroll to target and LOCK SCREEN until closed.\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly to account for top-NAV\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 750);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN WRAPPER class\n            const select = document.querySelector(\".enact-nonclick\");\n            // disable selected class (movement, clicks, etc...);\n            disableBodyScroll(select);\n\n            setIsTourOpenState(true);\n        }, 1000)\n    }\n    const handleTourClosingAction = () => {\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // clear body scroll locks\n        clearAllBodyScrollLocks();\n        // close tour state\n        setIsTourOpenState(false);\n    }\n    const onErrorMainForm = (errors, e) => {\n        console.log(\"errors : \", errors); // selectAttachments\n\n        if (_.has(previous, \"files\") && previous.files.length > 0) {\n            clearErrors([\"selectAttachments\"]);\n        } else {\n            setError(\"selectAttachments\", {\n                type: \"manual\",\n                message: \"You MUST select AT least ONE(1) attachments (CL, Resume, Image, etc...) before proceeding with the submission of this form\",\n            });\n        }\n\n        if (!gatheredValues.selectedTestDates.length > 0) {\n            setError(\"selectedTestDates\", {\n                type: \"manual\",\n                message: \"You MUST select a calendar time to 'attempt' your 'physical' hack to try to infiltrate this employer's company. Select a date (one day MIN) to continue!\",\n            });\n        } \n    }\n    const onFormSubmit = (values) => {\n        console.log(\"values\", values);\n        // deconstruct files from attached-files section-redux\n        const attachedFiles = previousFiles.applicationDetails.applicationDetails.files;\n        // deconstruct core information from bio-profile section\n        const { username, firstName, lastName, completedJobs, registrationDate, aboutMe, title, reviews, fullyVerified, points, yearsOfExperience } = currentUserData;\n        // deconstruct form-redux values on-submit\n        const { coverLetterText, messageToEmployer, amountOfMoneyUponCompletion, physicalOrDigitalOrBoth, referenceLinks, selectedTestDates, technicalApproachToHack } = values;\n\n        const myID = userData.uniqueId;\n        const generatedID = uuid();\n\n        const addApplicantData = {\n            applicantID: myID,\n            listingID: listingData.uniqueId,\n            employerId: listingData.postedBy,\n            employerPostedJobId: listingData.uniqueId,\n            userData,\n            generatedID,\n            applicationData: {\n                generatedID,\n                attachedFiles,\n                coverLetterText, \n                messageToEmployer, \n                applicantId: userData.uniqueId,\n                responses: [],\n                hired: false,\n                applicantName: `${userData.firstName} ${userData.lastName}`,\n                likes: 0,\n                dislikes: 0,\n                applicantId: myID,\n                dateApplied: new Date(),\n                legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                amountOfMoneyUponCompletion, \n                physicalOrDigitalOrBoth, \n                referenceLinks, \n                selectedTestDates, \n                technicalApproachToHack\n            }\n        }\n\n        const finalResult = {\n            uniqueId: myID,\n            employerId: listingData.postedBy,\n            employerPostedJobId: listingData.uniqueId,\n            applicationData: {\n                generatedID,\n                attachedFiles,\n                coverLetterText, \n                messageToEmployer, \n                applicantId: userData.uniqueId,\n                responses: [],\n                hired: false,\n                applicantName: `${userData.firstName} ${userData.lastName}`,\n                likes: 0,\n                dislikes: 0,\n                employerPostedJobId: listingData.uniqueId,\n                employerPosterId: listingData.postedBy,\n                applicantId: myID,\n                dateApplied: new Date(),\n                legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                amountOfMoneyUponCompletion, \n                physicalOrDigitalOrBoth, \n                referenceLinks, \n                selectedTestDates, \n                technicalApproachToHack, \n                submittedUserData: {\n                    username, \n                    firstName, \n                    lastName, \n                    completedJobs, \n                    registrationDate, \n                    aboutMe, \n                    title, \n                    reviews, \n                    fullyVerified, \n                    points, \n                    yearsOfExperience \n                }\n            }\n        };\n\n        // View ALL included fields...\n        const requiredKeys = [\"username\", \"firstName\", \"lastName\", \"completedJobs\", \"registrationDate\", \"aboutMe\", \"title\", \"reviews\", \"fullyVerified\", \"points\", \"yearsOfExperience\"];\n        // figure out length of requiredKeys     \n        const requiredLength = requiredKeys.length;\n        // run boolean check\n        const doesIncludeFailures = requiredKeys.map((key, i) => {\n            if (typeof currentUserData[key] !== \"undefined\") {\n                // includes!\n                return true;\n            } else {\n                // doesnt include & notify!\n                NotificationManager.warning(`You're missing a REQUIRED submission input field of '${key}' - please go to your bio/profile section and submit this key of '${key}' before proceeding!`, `You are MISSING a key/field of the value '${key}'...!`, 4750);\n                // return value to check at end for api-request running or not afterwards\n                return false;\n            }\n        })\n\n        if (doesIncludeFailures.includes(false)) {\n            // do nothing - NOT ready yet missing information\n\n            NotificationManager.error(`We experienced an ERROR while attempting to run our pre-upload checks & you're missing some required information...`, `MISSING data - Required BEFORE continuing!`, 4750);\n        } else {\n            // RUN FINAL REQUEST! all information is properly filled out...!\n\n            // SAVE-DATA api-request run!\n            axios.post(`${process.env.REACT_APP_BASE_URL}/apply/employer/listing/submit/live/data/last`, finalResult).then((res) => {\n                if (res.data.message === \"Successfully applied to listing/employer & updated your 'hacker' account as well!\") {\n\n                    axios.post(`${process.env.REACT_APP_BASE_URL}/success/application/save/applicant/info/employerlisting`, addApplicantData).then((res) => {\n                        if (res.data.message === \"Successfully updated employer listing data!\") {\n                            console.log(\"EVERYTHING WENT WELL....!! : \", res.data);\n        \n                            NotificationManager.success(\"You've successfully applied to this employer's listing & we've notified them of your application!\", \"Successfully applied to gig/job!\", 4000);\n        \n                            setTimeout(() => {\n                                history.push(\"/dashboard/hacker\")\n                            },  4000);\n                        } else {\n                            console.log(\"Errorr :\", res.data);\n        \n                            NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n                        }\n                    }).catch((err) => {\n                        console.log(err);\n\n                        NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n                    })\n                } else {\n                    console.log(\"Errorr :\", res.data);\n\n                    NotificationManager.error(res.data.message, \"An error occurred while attempting to apply to this listing!\", 4500);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n    const handleFinalSubmissionFiles = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // set sheet open\n        setFileSheetOpenState(true);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN-WRAPPER div class\n            const select = document.querySelector(\".enact-nonclick\");\n            // finally - disable while pane is open!\n            disableBodyScroll(select);\n        }, 450);\n    }\n    const watchSelectedTestDates = watch([\"selectedTestDates\"]);\n\n    console.log(\"current!!!!!\", gatheredValues);\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={7}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <SheetPaneSubmittingDataHelper ready={ready} shiftCoreStyles={shiftCoreStyles} alreadyAdded={alreadyAdded} currentUserData={currentUserData} clearAllBodyScrollLocks={clearAllBodyScrollLocks} userData={userData} sheetIsOpen={sheetIsOpen} setSheetOpenState={setSheetOpenState} renderSentence={renderSentence} />\n            <SheetDisplayFilesFileManagerHelper saveApplicationDetailsProgress={saveApplicationDetailsProgress} previousFiles={previousFiles} setProgress={setProgress} filesSheetOpen={filesSheetOpen} setFileSheetOpenState={setFileSheetOpenState} shiftCoreStyles={shiftCoreStyles} clearAllBodyScrollLocks={clearAllBodyScrollLocks} />\n            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n            <Tour\n                steps={tourStepsOptions}\n                isOpen={isTourOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={handleTourClosingAction} \n            />\n            <div className=\"absolute-position-bottom-right-fixed\">\n                <Card className=\"redirect-fixed-bottom-right\">\n                    <Media className=\"p-20\">\n                        <Media className=\"media-body-customized-fixed\" body>\n                            {showMore === true ? <Fragment>\n                                <h6 className=\"mt-0 mega-title-badge custom-mega-title-badge\">Are you ready to submit your application?! <span className=\"badge badge-info pull-right digits custom-pull-right-digits\">{\"SHOW ME HOW TO SUBMIT APP!\"}</span></h6>\n                                <p>Are you <strong>READY TO SUBMIT YOUR APPLICATION</strong> to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the <strong>'Submit Application'</strong> button to proceed forwards...</p>\n                                <hr />\n                                <div className=\"natural-sm-spacer\" />\n                            </Fragment> : null}\n                            <Row>\n                                <FormGroup className=\"m-t-15 custom-radio-ml\">\n                                    <div className=\"checkbox checkbox-primary\">\n                                        <Input onClick={() => {\n                                            setShowMoreState(!showMore);\n                                        }} checked={showMore === true ? true : false} id=\"checkbox-primary-show-more\" type=\"checkbox\" defaultChecked/>\n                                        <Label for=\"checkbox-primary-show-more\">Show <strong style={{ textDecorationLine: \"underline\", color: \"#a927f9\" }}>{showMore === true ? \"LESS\" : \"MORE\"}</strong> helpful/related info...</Label>\n                                    </div>\n                                </FormGroup>\n                            </Row>\n                            <Button onClick={handleDirectionChangeTour} style={{ width: \"100%\" }} className=\"btn-square btn-air-info\" outline color=\"info-2x\">Show me the 'submission' button!</Button>\n                        </Media>\n                    </Media>\n                </Card>\n            </div>\n            <Container className=\"container-default\" fluid={true}>\n                <Form className={`needs-validation tooltip-validation validateClass`} noValidate=\"\" onSubmit={handleSubmit(onFormSubmit, (errors, e) => {\n                    setTimeout(() => {\n                        return onErrorMainForm(errors, e);\n                    }, 250)\n                })}>\n                    <Row className=\"customized-row-apply\" style={{ paddingTop: \"25px \" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"custom-card-inner customized-top-card\">\n                                <CardHeader className=\"b-l-primary\">\n                                    <h5>Type of hack (physical location or digital asset)</h5>\n                                    <p style={{ paddingTop: \"7.5px\" }}>This is the <em>TYPE</em> of hack this <em>specific listing</em> requires from its participants. These selected options have absolutely <strong>NO LIENENCY</strong> and any disregard to platform rules will result in <strong>IMMEDIATE PERMENANT BANNING</strong></p>\n                                </CardHeader>\n                                <CardBody>\n                                    <HelperRadioButtons listingReady={listingReady} listingData={listingData} id={id} />\n                                    <div style={{ paddingTop: \"15px\" }} />\n                                    <hr />{/*  listingVisibility */}\n                                    <Row>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{coverLetterChecks.label}</Label>\n                                                <Input {...coverLetterChecks.check(setError, register, clearErrors, \"coverLetterText\")} placeholder={coverLetterChecks.placeholder} onChange={(e) => {\n                                                    return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n                                                }} name={coverLetterChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.coverLetterText ? <span className=\"span-tooltip\">{errors.coverLetterText.message}</span> : null}\n                                                {/*  */}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label>{physicalOrDigitalChecks.label}</Label>\n                                                <Controller\n                                                    control={control} \n                                                    name={physicalOrDigitalChecks.name}\n                                                    {...physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register)}\n                                                    render={({ field }) => (\n                                                        <Select\n                                                            {...field}\n                                                            autoBlur={true}\n                                                            defaultValue={null}\n                                                            ref={physicalOrDigitalOrBothGeneratedRef}\n                                                            value={gatheredValues.physicalOrDigitalOrBoth}\n                                                            placeholder={physicalOrDigitalChecks.placeholder}\n                                                            onChange={(selectedOption) => {\n                                                                console.log(\"changed!!!!\");\n\n                                                                setTimeout(() => {\n                                                                    // clear error after proper selection\n                                                                    if ((typeof selectedOption !== \"undefined\") && (Object.keys(selectedOption).length > 0)) {\n                                                                        // set selected value\n                                                                        setValue(physicalOrDigitalChecks.name, selectedOption, { shouldValidate: false });\n                                                                        // clear relevant error\n                                                                        clearErrors(physicalOrDigitalChecks.name);\n                                                                    } else {\n                                                                        // set error as nothing was selected (blank 'click-off' selection of selector)\n                                                                        setError(physicalOrDigitalChecks.name, {\n                                                                            type: \"manual\",\n                                                                            message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\",\n                                                                        });\n                                                                    }\n                                                                }, 50);\n                                                            }}\n                                                            onMenuClose={() => {\n                                                                physicalOrDigitalOrBothGeneratedRef.current.blur();\n                                                            }}\n                                                            options={physicalOrDigitalHackOptions}\n                                                        />\n                                                    )}\n                                                />\n                                                {errors.physicalOrDigitalOrBoth ? <span className=\"span-tooltip\">{errors.physicalOrDigitalOrBoth.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label>{participateInBettingWagers.label}</Label>\n                                                <FormGroup>\n                                                    <Label className=\"heavy-label\">{amountWillingToCompleteJob.label}</Label>\n                                                    <Input {...amountWillingToCompleteJob.check(setError, register, clearErrors, setValue, \"amountOfMoneyUponCompletion\")} value={gatheredValues.amountOfMoneyUponCompletion} placeholder={amountWillingToCompleteJob.placeholder} onChange={(e) => {\n                                                        return amountWillingToCompleteJob.onChange(e, \"amountOfMoneyUponCompletion\", setValue);\n                                                    }} name={amountWillingToCompleteJob.name} type=\"number\" className=\"form-control input-air-primary\" pattern={/\\d+/g} />\n                                                </FormGroup>\n                                                {errors.amountOfMoneyUponCompletion ? <span className=\"span-tooltip\">{errors.amountOfMoneyUponCompletion.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">Message To Employer (Direct to employer)</Label>\n                                                <Input {...messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\")} placeholder={messageToEmployerChecks.placeholder} onChange={(e) => {\n                                                    return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n                                                }} name={messageToEmployerChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.messageToEmployer ? <span className=\"span-tooltip\">{errors.messageToEmployer.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{approachToSuccessfullyHackCo.label}</Label>\n                                                <Input {...approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\")} placeholder={approachToSuccessfullyHackCo.placeholder} onChange={(e) => {\n                                                    return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n                                                }} name={approachToSuccessfullyHackCo.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.technicalApproachToHack ? <span className=\"span-tooltip\">{errors.technicalApproachToHack.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Card className=\"custom-card-inner custom-card-bottom-across\">\n                                                <CardHeader className=\"b-l-info\">\n                                                    <h5><strong>Attachments</strong> to be <strong>sent</strong> to the employer of this listing</h5>\n                                                    <p style={{ paddingTop: \"7.5px\" }}>These attachments can be anything from a \"Cover Letter\" or \"Resume\" & these files will be sent <strong>directly</strong> to the employer for consideration of your application for this listing or job/gig.</p>\n                                                </CardHeader>\n                                                {errors.selectAttachments ? <span className=\"span-tooltip\">{errors.selectAttachments.message}</span> : null}\n                                                <CardBody>\n                                                    <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-success\"} onClick={() => {\n                                                        // open pane slider up from bottom\n                                                        handleFinalSubmissionFiles() \n                                                    }} outline color=\"success-2x\">Upload & Manage Attachments (To-be sent directly to employer)</Button>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5>Type Of Data That'll Be Automatically Submitted</h5>\n                                    <hr />\n                                    <p>This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...</p>\n                                </CardHeader>\n                                <CardBody>\n                                    <ListGroup>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"username\", \"Username\", username)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"firstName\" || \"lastName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-info\"} onClick={() => {\n                                                viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n                                            }} outline color=\"info-2x\">View all included fields (including above mentioned)</Button>\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5><strong>REQUIRED</strong> data to be completed/filled-out</h5>\n                                </CardHeader>\n                                <CardBody> \n                                    <Form>  \n                                        {/* links go here... */}\n                                        <FormGroup style={{ marginTop: \"17.5px\" }} className=\" m-form__group\">\n                                            <Label className=\"heavy-label\">Reference a link (blog, website, etc... made by <em style={{ textDecorationLine: \"underline\" }}>you</em>)</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText className=\"group-addon-custom-two\">{\"http(s)://\"}</InputGroupText></InputGroupAddon>\n                                                <Input {...urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\")} onChange={(e) => urlEnteredLinkData.onChange(e, \"referenceLink\", setValue)} className=\"form-control\" type=\"text\" name=\"referenceLink\" placeholder={\"Enter a link to your work (website, blog, etc...)\"} />\n                                                {showButtonOrNot() ? <InputGroupAddon onClick={() => {\n                                                    handleLinkAddition(setSelectedLinks, gatheredValues.referenceLinks, clearInput, setValue, gatheredValues.referenceLink);\n                                                }} addonType=\"append\"><InputGroupText className=\"group-addon-custom\">{\"Submit\"}</InputGroupText></InputGroupAddon> : null}\n                                            </InputGroup>\n                                            {errors.referenceLink ? <span className=\"span-tooltip\">{errors.referenceLink.message}</span> : null}\n                                        </FormGroup>\n                                        {selectedLinks.map((link, index) => {\n                                            console.log(\"link\", link);\n                                            return (\n                                                <div style={{ marginTop: \"12.5px\", marginBottom: \"12.5px\" }} key={index}>\n                                                    <ListGroupItem onClick={(e) => {\n                                                        e.preventDefault();\n                                                    }} className=\"list-group-item custom-list-group-item-text\"><div style={{ paddingRight: \"25px\" }} />{link.url}<i onClick={() => {\n                                                        // handle deletion\n                                                        handleDeletionLink(link, setSelectedLinks);\n                                                    }} id={\"float-trash-right\"} className=\"icon-trash\"></i></ListGroupItem>\n                                                </div>\n                                            );\n                                        })}\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Label className=\"heavy-label\">Available dates to select (Physical 'Hack'ing Dates - you may need to click a date TWICE as this calendar can be finicky)</Label>\n                                            {datesReady === true ? <DateRangePicker\n                                                ranges={dateRanges}\n                                                onChange={handleDateSelection}\n                                                onDatesChange={() => console.log(\"onDatesChange\")}\n                                                // minDate={new Date()}\n                                                shownDate={new Date()}\n                                                className={\"custom-date-range-picker\"}\n                                                showMonthAndYearPickers={false}\n                                                disabledDates={disabledDays}\n                                                staticRanges={[]}\n                                                maxDate={maxDate}\n                                                direction={\"horizontal\"}\n                                                showMonthArrow={true}\n                                                months={2}\n                                                showDateDisplay={false}\n                                                inputRanges={[]}\n                                                scroll={{ enabled: true }}\n                                                rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                            /> : null}\n                                        </Col>\n                                        <div className=\"natural-sm-spacer\" />\n                                        {errors.selectedTestDates ? <span className=\"span-tooltip\">{errors.selectedTestDates.message}</span> : null}\n                                        <Col style={{ marginTop: \"17.5px\" }} sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            {typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? <Label className=\"heavy-label\"><strong>Currently</strong> selected dates to apply \"physical\" hacks/hacking (<strong>CLICK DATE</strong> to disregard selected date)</Label> : null}\n                                            <ListGroup className=\"listgroup-mapped-dates-wrapper\">\n                                                {typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? gatheredValues.selectedTestDates.map((date, idx) => {\n                                                    return <ListGroupItem key={idx} style={{ fontWeight: \"bold\" }} className=\"list-group-item-action list-item-dates-mapped\" onClick={() => {\n                                                        const filtered = gatheredValues.selectedTestDates.filter((dateee, idxxxx) => {\n                                                            if (dateee.uniqueId !== date.uniqueId) {\n                                                                return true;\n                                                            }\n                                                        })\n                                                        \n                                                        console.log(\"filtered\", filtered);\n\n                                                        setValue(\"selectedTestDates\", filtered, { shouldValidate: false });\n                                                    }} active={idx % 2 === 0 ? true : false}>You've selected a date of...: {moment(date.startDate).format(\"MM/DD/YYYY\")}</ListGroupItem>;\n                                                }) : null}\n                                            </ListGroup>\n                                        </Col>\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                            <div ref={scrollToTourWrapper} id=\"tour-col-custom\">\n                                <Card className=\"shadow-lg\">\n                                    <CardHeader>\n                                        <h5>Have you filled out <strong>ALL OF THE REQUIRED DATA/INFO</strong> and you're now <strong>READY</strong> to apply and continue with your application?!</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <p>Click the button below to proceed forward & <strong>apply to this listing</strong> and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!</p>\n                                        <hr />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                            <Button style={{ width: \"100%\" }} type={\"submit\"} className=\"btn-square btn-air-info\" outline color=\"info-2x\">SUBMIT APPLICATION INFORMATION</Button>\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <TimelineHelper />\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previousFiles: _.has(state.applicationDetails, \"applicationDetails\") && _.has(state.applicationDetails.applicationDetails, \"files\") ? {\n            applicationDetails: {\n                applicationDetails: {\n                    files: state.applicationDetails.applicationDetails.files\n                }\n            }\n        } : {\n            applicationDetails: {\n                applicationDetails: {\n                    files: []\n                }\n            }\n        },\n        previous: _.has(state.applicationDetails, \"applicationDetails\") ? state.applicationDetails.applicationDetails : {}\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, saveApplicationDetailsProgress })(withRouter(ApplyAsHackerEmployerListingHelper));\n"]},"metadata":{},"sourceType":"module"}