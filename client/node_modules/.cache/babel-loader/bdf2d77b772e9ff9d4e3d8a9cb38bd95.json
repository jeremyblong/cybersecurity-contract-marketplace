{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/route/protected/protectedRoute.js\";\nimport React, { useContext, createContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport ReactLoading from 'react-loading';\n\nclass ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  render() {\n    console.log(\"props!\", this.props);\n    const {\n      component: Component,\n      ...rest\n    } = this.props;\n\n    if (this.state.isLoading) {\n      return /*#__PURE__*/React.createElement(ReactLoading, {\n        type: \"cubes\",\n        color: \"#00acee\",\n        height: 350,\n        width: 650,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    } else {\n      if (!_.isEmpty(this.props.userData)) {\n        return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n          render: props => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 62\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/sign-in\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"State protected... :\", state);\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ProtectedRoute);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/route/protected/protectedRoute.js"],"names":["React","useContext","createContext","Route","Redirect","connect","_","ReactLoading","ProtectedRoute","Component","constructor","props","state","isLoading","render","console","log","component","rest","isEmpty","userData","mapStateToProps","auth","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AACGC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKL,KAA3B;AAEA,UAAM;AAAEM,MAAAA,SAAS,EAAER,SAAb;AAAwB,SAAGS;AAA3B,QAAoC,KAAKP,KAA/C;;AAEA,QAAG,KAAKC,KAAL,CAAWC,SAAd,EAAyB;AACrB,0BAAO,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,OAApB;AAA6B,QAAA,KAAK,EAAE,SAApC;AAA+C,QAAA,MAAM,EAAE,GAAvD;AAA4D,QAAA,KAAK,EAAE,GAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,UAAG,CAACP,CAAC,CAACa,OAAF,CAAU,KAAKR,KAAL,CAAWS,QAArB,CAAJ,EAAmC;AAC/B,4BAAQ,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,UAAA,MAAM,EAAGP,KAAD,iBAAY,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AACH,OAFD,MAEO;AACH,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ;AACJ;;AAtBwC;;AAwB7C,MAAMU,eAAe,GAAIT,KAAD,IAAW;AAC/BG,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,KAApC;AACA,SAAO;AACLQ,IAAAA,QAAQ,EAAER,KAAK,CAACU,IAAN,CAAWC;AADhB,GAAP;AAGH,CALD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,EAAkB,EAAlB,CAAP,CAA8Bb,cAA9B,CAAf","sourcesContent":["import React, { useContext, createContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport ReactLoading from 'react-loading';\n\nclass ProtectedRoute extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: true\n    }\n}\n    render() {\n        console.log(\"props!\", this.props);\n\n        const { component: Component, ...rest } = this.props;\n\n        if(this.state.isLoading) {\n            return <ReactLoading type={\"cubes\"} color={\"#00acee\"} height={350} width={650} />;\n        } else {\n            if(!_.isEmpty(this.props.userData)){\n                return (<Route {...rest} render={(props) => (<Component {...props}/>)} />);\n            } else {\n                return <Redirect to='/sign-in' />;\n            }\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(\"State protected... :\", state);\n    return {\n      userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ProtectedRoute);"]},"metadata":{},"sourceType":"module"}