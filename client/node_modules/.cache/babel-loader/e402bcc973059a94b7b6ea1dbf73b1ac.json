{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/forums/createNewForumPost/createNewForumPost.js\";\nimport React, { Fragment, useState, useEffect, useRef, memo } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { CardBody, CardHeader, Card, Col, Container, Label, Row, Button, Form } from \"reactstrap\";\nimport \"./styles.css\";\nimport Select from \"react-dropdown-select\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { useForm, Controller } from 'react-hook-form';\nimport formHelpers from \"./helpers/reduxFormHelpers/helperReduxForm.js\";\nconst mainDescriptionChecker = formHelpers().mainDescriptionChecker;\nconst options = [{\n  label: \"c/BlackHat\",\n  value: \"c/BlackHat\",\n  memberCount: \"17,556\"\n}, {\n  label: \"c/CryptoCurrency\",\n  value: \"c/CryptoCurrency\",\n  memberCount: \"37,875\"\n}, {\n  label: \"c/JavaScriptGalore\",\n  value: \"c/JavaScriptGalore\",\n  memberCount: \"106,887\"\n}, {\n  label: \"c/CodingCompeitions\",\n  value: \"c/CodingCompeitions\",\n  memberCount: \"90,017\"\n}, {\n  label: \"c/ShowerThoughts\",\n  value: \"c/ShowerThoughts\",\n  memberCount: \"45,786\"\n}, {\n  label: \"c/RedditThoughtsRandomized\",\n  value: \"c/RedditThoughtsRandomized\",\n  memberCount: \"7,886\"\n}, {\n  label: \"c/HackingTechniques\",\n  value: \"c/HackingTechniques\",\n  memberCount: \"3,677\"\n}];\n\nconst CreateNewForumPostingHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [lineCursor, setLineAndCursor] = useState(null);\n  const editorRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }); // get form-redux values\n\n  const currentValues = getValues();\n  console.log(\"errors\", errors);\n\n  const customDropdownRenderer = _ref2 => {\n    let {\n      props,\n      state,\n      methods\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-and-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"h6-forum-option-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Your Communities\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, selectedGroup === null ? options.slice(0, 6).map((option, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options-mapped-div\",\n        key: index,\n        onClick: () => {\n          console.log(\"clicked.\");\n          setSelectedGroup(option);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../../../../assets/icons/reddit-${index + 1}.png`),\n        className: \"community-icon-forum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option-list-item-wrapper-forum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, option.label), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"membercount-forum-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, option.memberCount, \" Member's\")));\n    }) : null, selectedGroup !== null ? /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"selected-forum-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 43\n      }\n    }, \"You've Selected The \", /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#f73164\",\n        textDecorationLine: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 101\n      }\n    }, selectedGroup.label), \" community, \", /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => setSelectedGroup(null),\n      href: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 213\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        color: \"#7366ff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 267\n      }\n    }, \"Click here\"), \" to re-select another/different community\")) : null));\n  };\n\n  const renderFormError = (e, errors) => {\n    console.log(\"errrror form logic...:\", e, errors);\n  };\n\n  const handleForumSubmission = (data, other) => {\n    console.log(\"Success!\", data, other);\n  }; // const getLineAndCursorCallback = (position) => {\n  //     setLineAndCursor(position);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-forum-creation\",\n    style: {\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Create a new forum post (Must be associated with a \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"create-forum-post-a\",\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 88\n    }\n  }, \"community\"), \")\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"needs-validation streaming-start-form-wrapper\",\n    noValidate: \"\",\n    onSubmit: handleSubmit(handleForumSubmission, (e, errors) => renderFormError(e, errors)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Search for a related 'community' to post in...\",\n    dropdownRenderer: customDropdownRenderer,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }), selectedGroup !== null ? /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"selected-forum-option-non-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 63\n    }\n  }, \"You've selected to post in the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 145\n    }\n  }, selectedGroup.label), \" community/group!\") : null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"create-forum-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, mainDescriptionChecker.label), /*#__PURE__*/React.createElement(SimpleMDE, Object.assign({}, mainDescriptionChecker.check(setError, register), {\n    id: \"Ref_container\",\n    ref: editorRef,\n    key: \"custom-description\",\n    onChange: value => {\n      console.log(\"value\", value);\n      mainDescriptionChecker.onChange(value, setValue);\n    },\n    value: currentValues.mainDescription,\n    onBlur: e => memo(mainDescriptionChecker.onBlur(e, clearErrors, mainDescriptionChecker.name, setError)),\n    placeholder: mainDescriptionChecker.placeholder,\n    options: {\n      autofocus: true,\n      spellChecker: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  })), errors.mainDescription ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 63\n    }\n  }, errors.mainDescription.message) : null, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"27.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-info\",\n    color: \"info-2x\",\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, \"Submit New Form Post Details\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(CreateNewForumPostingHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/forums/createNewForumPost/createNewForumPost.js"],"names":["React","Fragment","useState","useEffect","useRef","memo","axios","connect","CardBody","CardHeader","Card","Col","Container","Label","Row","Button","Form","Select","SimpleMDE","useForm","Controller","formHelpers","mainDescriptionChecker","options","label","value","memberCount","CreateNewForumPostingHelper","userData","selectedGroup","setSelectedGroup","lineCursor","setLineAndCursor","editorRef","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","console","log","customDropdownRenderer","props","state","methods","slice","map","option","index","require","color","textDecorationLine","renderFormError","e","handleForumSubmission","data","other","marginTop","check","onChange","mainDescription","onBlur","name","placeholder","autofocus","spellChecker","message","width","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, memo } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { CardBody, CardHeader, Card, Col, Container, Label, Row, Button, Form } from \"reactstrap\";\nimport \"./styles.css\";\nimport Select from \"react-dropdown-select\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { useForm, Controller } from 'react-hook-form';\nimport formHelpers from \"./helpers/reduxFormHelpers/helperReduxForm.js\";\n\nconst mainDescriptionChecker = formHelpers().mainDescriptionChecker;\n\nconst options = [{\n    label: \"c/BlackHat\",\n    value: \"c/BlackHat\",\n    memberCount: \"17,556\"\n}, {\n    label: \"c/CryptoCurrency\",\n    value: \"c/CryptoCurrency\",\n    memberCount: \"37,875\"\n}, {\n    label: \"c/JavaScriptGalore\",\n    value: \"c/JavaScriptGalore\",\n    memberCount: \"106,887\"\n}, {\n    label: \"c/CodingCompeitions\",\n    value: \"c/CodingCompeitions\",\n    memberCount: \"90,017\"\n}, {\n    label: \"c/ShowerThoughts\",\n    value: \"c/ShowerThoughts\",\n    memberCount: \"45,786\"\n}, {\n    label: \"c/RedditThoughtsRandomized\",\n    value: \"c/RedditThoughtsRandomized\",\n    memberCount: \"7,886\"\n}, {\n    label: \"c/HackingTechniques\",\n    value: \"c/HackingTechniques\",\n    memberCount: \"3,677\"\n}]\n\nconst CreateNewForumPostingHelper = ({ userData }) => {\n\n    const [ selectedGroup, setSelectedGroup ] = useState(null);\n    const [ lineCursor, setLineAndCursor ] = useState(null);\n    const editorRef = useRef(null);\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    // get form-redux values\n    const currentValues = getValues();\n\n    console.log(\"errors\", errors);\n\n    const customDropdownRenderer = ({ props, state, methods }) => {\n        return (\n          <div>\n            <div className=\"search-and-toggle\">\n              <h6 className=\"h6-forum-option-header\">Your Communities</h6>\n            </div>\n            <div className=\"items-items\">\n              {selectedGroup === null ? options.slice(0, 6).map((option, index) => {\n                  return (\n                    <div\n                        className={\"options-mapped-div\"}\n                        key={index}\n                        onClick={() => {\n                            console.log(\"clicked.\");\n\n                            setSelectedGroup(option);\n                        }}>\n                        <img src={require(`../../../../assets/icons/reddit-${index + 1}.png`)} className={\"community-icon-forum\"} />\n                        <div className=\"option-list-item-wrapper-forum\">\n                            <h5>{option.label}</h5>\n                            <p className=\"membercount-forum-option\">{option.memberCount} Member's</p>\n                        </div>\n                    </div>\n                  );\n                }) : null}\n                {selectedGroup !== null ? <h4 className=\"selected-forum-option\">You've Selected The <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{selectedGroup.label}</strong> community, <a onClick={() => setSelectedGroup(null)} href={null}><strong style={{ color: \"#7366ff\" }}>Click here</strong> to re-select another/different community</a></h4> : null}\n            </div>\n          </div>\n        );\n    };\n    const renderFormError = (e, errors) => {\n        console.log(\"errrror form logic...:\", e, errors);\n    }\n    const handleForumSubmission = (data, other) => {\n        console.log(\"Success!\", data, other);\n    }\n    // const getLineAndCursorCallback = (position) => {\n    //     setLineAndCursor(position);\n    // };\n    return (\n        <Fragment>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className=\"card-forum-creation\" style={{ marginTop: \"50px\" }}>\n                            <CardHeader className=\"b-l-info b-r-info\">\n                                <h3>Create a new forum post (Must be associated with a <a className=\"create-forum-post-a\" href={null}>community</a>)</h3>\n                            </CardHeader>\n                            <CardBody>\n                                <Form className=\"needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(handleForumSubmission, (e, errors) => renderFormError(e, errors))}>\n                                    <Select placeholder={\"Search for a related 'community' to post in...\"} dropdownRenderer={customDropdownRenderer} options={options} />\n                                    {selectedGroup !== null ? <h6 className=\"selected-forum-option-non-dropdown\">You've selected to post in the <strong style={{ color: \"#f73164\", textDecorationLine: \"underline\" }}>{selectedGroup.label}</strong> community/group!</h6> : null}\n                                    <hr />\n                                    <Label className=\"create-forum-label\">{mainDescriptionChecker.label}</Label>\n                                    <SimpleMDE\n                                        {...mainDescriptionChecker.check(setError, register)} \n                                        id=\"Ref_container\"\n                                        ref={editorRef}\n                                        key={\"custom-description\"}\n                                        onChange={(value) => {\n                                            console.log(\"value\", value);\n\n                                            mainDescriptionChecker.onChange(value, setValue)\n                                        \n                                        }}\n                                        value={currentValues.mainDescription}\n                                        onBlur={(e) => memo(mainDescriptionChecker.onBlur(e, clearErrors, mainDescriptionChecker.name, setError))}\n                                        placeholder={mainDescriptionChecker.placeholder} \n                                        options={{\n                                            autofocus: true,\n                                            spellChecker: false\n                                        }}\n                                    />\n                                    {errors.mainDescription ? <span className=\"span-tooltip\">{errors.mainDescription.message}</span> : null}\n                                    <Row style={{ marginTop: \"27.5px\" }}>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Button className={\"btn-square-info\"} color={\"info-2x\"} outline style={{ width: \"100%\" }} type={\"submit\"}>Submit New Form Post Details</Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, {  })(CreateNewForumPostingHelper); "]},"metadata":{},"sourceType":"module"}