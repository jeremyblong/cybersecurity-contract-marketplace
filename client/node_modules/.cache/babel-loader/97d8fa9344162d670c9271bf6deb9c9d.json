{"ast":null,"code":"import React,{Fragment,useState,Component}from'react';import{Media,Popover,PopoverHeader,PopoverBody,ListGroup,ListGroupItem}from'reactstrap';import moment from\"moment\";import start_conversion from'../../../../../../../assets/images/start-conversion.jpg';class RenderMessagListStreaming extends Component{constructor(props){super(props);this.handleMessageClickPopover=(item,index)=>{console.log(\"handleMessageClickPopover item/index\",item,index);const{channel}=this.props;if(channel!==null){console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");this.setState({[\"popoverCustom\".concat(channel.url).concat(index)]:true});}};this.closeMessagePopover=(item,index)=>{console.log(\"closeMessagePopover item/index\",item,index);const{channel}=this.props;if(channel!==null){console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");this.setState({[\"popoverCustom\".concat(channel.url).concat(index)]:false});}};this.state={};}render(){const{messageList,channel,userData,index}=this.props;console.log(\"userData in DISPLAY MESSAGING\",userData);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"ul\",{className:\"ul-messages-custom\"},messageList.length>0?messageList.map((item,index)=>{console.log(\"item/message - :\",item);{/* const participators = allMembers.chats.find(x => x.id === item.sender); */}return/*#__PURE__*/React.createElement(\"li\",{key:index,className:\"clearfix\"},/*#__PURE__*/React.createElement(\"div\",{id:\"popoverCustom\".concat(channel.url).concat(index),onClick:()=>this.handleMessageClickPopover(item,index),className:\"message add-hover-message-convo-individual my-message \".concat(item._sender.userId!==userData.uniqueId?'':'float-right')},/*#__PURE__*/React.createElement(Popover,{className:\"custom-chat-popover\",isOpen:this.state[\"popoverCustom\".concat(channel.url).concat(index)],toggle:()=>this.closeMessagePopover(item,index),placement:\"bottom\",target:\"popoverCustom\".concat(channel.url).concat(index)},/*#__PURE__*/React.createElement(\"div\",{onMouseLeave:()=>{this.closeMessagePopover(item,index);}},/*#__PURE__*/React.createElement(PopoverHeader,null,\" ~ Message Actions/Modification's ~ \"),/*#__PURE__*/React.createElement(PopoverBody,null,/*#__PURE__*/React.createElement(ListGroup,null,/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action custom-message-action-listgroup\",onClick:()=>null,active:true},\"DELETE This Message (Permanently Remove)\"),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action custom-message-action-listgroup\",onClick:()=>null},\"PIN This Message (Note MSG As IMPORTANT)\"),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action custom-message-action-listgroup\",onClick:()=>null,active:true},\"MARK As Read (Show You've Seen It)\"),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action custom-message-action-listgroup\",onClick:()=>null},\"ADD Extra Data To Existing MSG (MODIFY Message)\"))))),/*#__PURE__*/React.createElement(Media,{src:item._sender.plainProfileUrl,className:\"rounded-circle \".concat(item._sender.userId!==userData.uniqueId?'float-left':'float-right',\" chat-user-img custom-chat-user-image img-30\"),alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"message-data text-right\"},/*#__PURE__*/React.createElement(\"span\",{className:item._sender.userId!==userData.uniqueId?\"message-data-time message-data-time-custom-left float-left\":\"message-data-time message-data-time-custom-right float-right\"},moment(item.createdAt).format(\"MM/DD, h:mm a\"),\" by \",item._sender.nickname.length>0?item._sender.nickname:\"Unknown Participant.\")),item.message,/*#__PURE__*/React.createElement(\"div\",{className:item._sender.userId!==userData.uniqueId?\"delivery-status-wrapper-right\":\"delivery-status-wrapper-left\"},/*#__PURE__*/React.createElement(\"p\",{className:item._sender.userId!==userData.uniqueId?\"delivery-confirmation-right\":\"delivery-confirmation-left\"},item.sendingStatus===\"succeeded\"?\"Delivered!\":\"Pending Delivery...\"))));}):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Media,{className:\"img-fluid\",src:start_conversion,alt:\"start conversion \"}))));}}export default{RenderMessagListStreaming};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/helpers/displayMessages/displayMessages.js"],"names":["React","Fragment","useState","Component","Media","Popover","PopoverHeader","PopoverBody","ListGroup","ListGroupItem","moment","start_conversion","RenderMessagListStreaming","constructor","props","handleMessageClickPopover","item","index","console","log","channel","setState","url","closeMessagePopover","state","render","messageList","userData","length","map","_sender","userId","uniqueId","plainProfileUrl","createdAt","format","nickname","message","sendingStatus"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, Component } from 'react';\nimport { Media, Popover, PopoverHeader, PopoverBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport moment from \"moment\";\nimport start_conversion from '../../../../../../../assets/images/start-conversion.jpg';\n\n\nclass RenderMessagListStreaming extends Component {\n    constructor (props) {\n        super(props);\n    \n        this.state = {\n    \n        }\n    }\n    handleMessageClickPopover = (item, index) => {\n        console.log(\"handleMessageClickPopover item/index\", item, index);\n\n        const { channel } = this.props;\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL handleMessageClickPopover ~ ...\");\n\n            this.setState({\n                [`popoverCustom${channel.url}${index}`]: true\n            }) \n        } \n    }\n\n    closeMessagePopover = (item, index) => {\n        console.log(\"closeMessagePopover item/index\", item, index);\n\n        const { channel } = this.props;\n\n        if (channel !== null) {\n\n            console.log(\"CHANNEL ISNT NULL closeMessagePopover ~ ...\");\n\n            this.setState({\n                [`popoverCustom${channel.url}${index}`]: false\n            })   \n        } \n    }\n    render () {\n        const { messageList, channel, userData, index } = this.props;\n\n        console.log(\"userData in DISPLAY MESSAGING\", userData);\n        return (\n            <Fragment>\n                <ul className={\"ul-messages-custom\"}>\n                    {messageList.length > 0 ? messageList.map((item, index) => {\n                        console.log(\"item/message - :\", item);\n                        {/* const participators = allMembers.chats.find(x => x.id === item.sender); */}\n                        return (\n                            <li key={index} className=\"clearfix\">\n                                <div id={`popoverCustom${channel.url}${index}`} onClick={() => this.handleMessageClickPopover(item, index)} className={`message add-hover-message-convo-individual my-message ${item._sender.userId !== userData.uniqueId ? '' : 'float-right'}`}>\n                                    <Popover className={\"custom-chat-popover\"} isOpen={this.state[`popoverCustom${channel.url}${index}`]} toggle={() => this.closeMessagePopover(item, index)} placement=\"bottom\" target={`popoverCustom${channel.url}${index}`}>\n                                        <div onMouseLeave={() => {\n                                            this.closeMessagePopover(item, index)\n                                        }}>\n                                            <PopoverHeader> ~ Message Actions/Modification's ~ </PopoverHeader>\n                                            <PopoverBody>\n                                                <ListGroup>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null} active>{\"DELETE This Message (Permanently Remove)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null}>{\"PIN This Message (Note MSG As IMPORTANT)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null} active>{\"MARK As Read (Show You've Seen It)\"}</ListGroupItem>\n                                                    <ListGroupItem className=\"list-group-item-action custom-message-action-listgroup\" onClick={() => null}>{\"ADD Extra Data To Existing MSG (MODIFY Message)\"}</ListGroupItem>\n                                                </ListGroup>\n                                            </PopoverBody>\n                                        </div>\n                                    </Popover>\n                                    <Media src={item._sender.plainProfileUrl}\n                                        className={`rounded-circle ${item._sender.userId !== userData.uniqueId ? 'float-left' : 'float-right'} chat-user-img custom-chat-user-image img-30`} alt=\"\" />\n                                    <div className=\"message-data text-right\">\n                                        <span className={item._sender.userId !== userData.uniqueId ? \"message-data-time message-data-time-custom-left float-left\" : \"message-data-time message-data-time-custom-right float-right\"}>{moment(item.createdAt).format(\"MM/DD, h:mm a\")} by {item._sender.nickname.length > 0 ? item._sender.nickname : \"Unknown Participant.\"}</span>\n                                    </div>\n                                    {item.message}\n                                    <div className={item._sender.userId !== userData.uniqueId ? \"delivery-status-wrapper-right\" : \"delivery-status-wrapper-left\"}>\n                                        <p className={item._sender.userId !== userData.uniqueId ? \"delivery-confirmation-right\" : \"delivery-confirmation-left\"}>{item.sendingStatus === \"succeeded\" ? \"Delivered!\" : \"Pending Delivery...\"}</p>\n                                    </div>\n                                </div>\n                            </li>\n                        );\n                    }) : <div>\n                        <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                    </div>}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nexport default {\n    RenderMessagListStreaming\n};\n"]},"metadata":{},"sourceType":"module"}