{"ast":null,"code":"import React,{Fragment,useState,useEffect,useRef}from'react';import Breadcrumb from'../../../../../layout/breadcrumb';import{Container,Row,Col,Card,CardHeader,CardBody,Form,FormGroup,Input,Button,Link,NavLink,Nav,NavItem,TabPane,TabContent,Media,Label}from'reactstrap';import{Database,Grid,Upload,Code}from'react-feather';import axios from\"axios\";import\"./styles.css\";import _ from\"lodash\";import{connect}from\"react-redux\";import{NotificationManager}from\"react-notifications\";import{useForm,Controller}from'react-hook-form';import hookFormHelpers from\"./helpers/helperFunctions.js\";import Select from\"react-select\";import nonFormHelpers from\"./helpers/nonFormHelpers.js\";import ReactHlsPlayer from'react-hls-player';import{saveStreamPreFilledData}from\"../../../../../redux/actions/streaming/creation/createNewStreamData.js\";import{useHistory}from\"react-router-dom\";import uuid from\"react-uuid\";// redux-form-hook helpers\nconst handleSubcategoryCheckerChange=hookFormHelpers().handleSubcategoryCheckerChange;const subcategoryChecker=hookFormHelpers().subcategoryChecker;const listingTitleChecker=hookFormHelpers().listingTitleChecker;const mainDescriptionChecker=hookFormHelpers().mainDescriptionChecker;// NON-form helper functions\nconst{HashtagHelper,languageList}=nonFormHelpers;const subcategoryOptions=[{value:'spear-phishing-attacks',label:'Spear Phishing Attacks'},{value:'phishing',label:'Phishing Related'},{value:\"ransomware\",label:\"Ransomware Related\"},{value:\"drive-by-attack\",label:\"Drive-by Attack\"},{value:\"trojan-horses\",label:\"Trojan Horses\"},{value:\"password-attack\",label:\"Password Attack\"},{value:\"phone-call-text-related\",label:\"Phone-Call/Text-Related\"},{value:\"eavesdropping-attack\",label:\"Eavesdropping Attack\"},{value:\"clickjacking-ui-redress\",label:\"Clickjacking/UI Redress\"},{value:\"dns-spoofing\",label:\"DNS Spoofing\"},{value:\"watering-hole-attack\",label:\"Watering Hole Attack\"},{value:\"keylogger-attack\",label:\"Keylogger Attack\"},{value:\"bruteforce-attack\",label:\"Brute-Force Attack\"},{value:\"dictionary-attack\",label:\"Dictionary Attack\"},{value:\"credential-reuse\",label:\"Credential Reuse\"},{value:'sql-injection-attack',label:'SQL Injection Attack'},{value:\"fake-wap\",label:\"Fake WAP\"},{value:\"bait-and-switch\",label:\"Bait & Switch\"},{value:\"browser-locker\",label:\"Browser Locker\"},{value:\"birthday-attack\",label:\"Birthday attack\"},{value:\"insider-threat\",label:\"Insider Threat\"},{value:\"ai-powered-attack\",label:\"AI-Powered Attacks\"}];const CreateNewLiveStreamAsHackerHelper=_ref=>{let{saveStreamPreFilledData,userData,SBData}=_ref;// create history redirect abliity\nconst history=useHistory();// refs initialization\nconst subCategoryRefSelector=useRef(null);const codingLanguageSelectRef=useRef(null);// initialize state obj's\nconst[searchTerm,setSearchTerm]=useState(\"\");const[tabbedPaneActive,setTabbedPaneActive]=useState(\"1\");const[streamKey,setStreamKey]=useState(null);const[hideStream,setStreamHidden]=useState(true);const[streamInfo,setStreamInfo]=useState(null);const[playbackStream,setPlaybackStream]=useState(null);const[visibility,setVisibility]=useState(null);const[languageOptionsState,setLanguageSelectorOptions]=useState(null);const[selectedMainCategory,setSelectedMainCategoryState]=useState(\"none-selected\");// react-hook-form logic - initialization\nconst{register,handleSubmit,control,watch,setValue,getValues,setError,values,clearErrors,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"});useEffect(()=>{// component mounted\nconst languagePromise=new Promise((resolve,reject)=>{const newLanguageReformattedArray=[];for(let index=0;index<languageList.length;index++){const language=languageList[index];newLanguageReformattedArray.push({label:language.name,value:language.name});if(languageList.length-1===index){resolve(newLanguageReformattedArray);}}});languagePromise.then(array=>{setLanguageSelectorOptions(array);});},[]);const handleChange=event=>{event.preventDefault();setSearchTerm(event.target.value);};const handleLiveStreamStart=()=>{console.log(\"handleLiveStream start...\");axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/create/live/stream/stream/key\")).then(res=>{if(res.data.message===\"We've generated your stream key!\"){console.log(res.data);// pull off streamKey\nconst{streamKey,result}=res.data;const playbackID=\"https://stream.mux.com/\".concat(result.playback_ids[0].id,\".m3u8 \");setPlaybackStream(playbackID);navigator.clipboard.writeText(streamKey);NotificationManager.success(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\",'COPIED STREAM KEY TO CLIPBOARD!',4750);setStreamKey(streamKey);setStreamInfo(result);}else{console.log(\"err\",res.data);}}).catch(err=>{console.log(err);});};const renderFormError=(e,errors)=>{console.log(e,errors);};const renderBeforeReadyLogic=()=>{const currentValues=getValues();const renderSelection=languageOptions=>{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Label,null,\"Primary Language(Coding) Used During Stream\"),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:\"codingLanguage\"},register(\"codingLanguage\",{required:{value:true,message:\"You MUST select a streaming primary coding language before proceeding\"},onBlur:e=>{// deconstruct desired value\nconst value=e.target.value;// set delay to allow previous changes to complete (state changes) - doesnt need to be long\nsetTimeout(()=>{// clear error after proper selection\nif(typeof value!==\"undefined\"&&Object.keys(value).length>0){clearErrors(\"codingLanguage\");}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(\"codingLanguage\",{type:\"manual\",message:\"You MUST select a streaming primary coding language before proceeding\"});}},100);}}),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:codingLanguageSelectRef,autoBlur:true,defaultValue:null,onMenuClose:()=>{},value:currentValues.codingLanguage,onChange:selectedOption=>{console.log(\"selected\",selectedOption);// update redux-form state\nsetTimeout(()=>{setValue('codingLanguage',selectedOption,{shouldValidate:false});// blur input in case it doesn't\ncodingLanguageSelectRef.current.blur();},100);},options:languageOptions}));}})),errors.codingLanguage?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.codingLanguage.message):null);};console.log(\"currentValues currentValues :\",currentValues);watch([\"mainDescription\",\"streamHashtags\",\"subCategory\",\"listingTitle\"]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"shadow-medium-custom\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary border-3\"},/*#__PURE__*/React.createElement(\"h5\",null,\"You have \",/*#__PURE__*/React.createElement(\"strong\",null,\"not\"),\" officially started/initalized your live stream yet...Manage your settings BEFORE going live using the options below\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,tabbedPaneActive===\"2\"?\"General Settings Adjustment's & Modifications\":\"Visibility Setting's & Viewability\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Nav,{className:\"nav-dark\"},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{href:null,className:tabbedPaneActive==='1'?'active':'',onClick:()=>setTabbedPaneActive('1')},/*#__PURE__*/React.createElement(\"i\",{className:\"icofont icofont-ui-home\"}),\"VISIBILITY\")),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{disabled:visibility!==null?false:true,href:null,className:tabbedPaneActive==='2'?'active':'',onClick:()=>setTabbedPaneActive('2')},/*#__PURE__*/React.createElement(\"i\",{className:\"icofont icofont-man-in-glasses\"}),\"GENERAL SETTINGS (title, desc, etc...)\"))),/*#__PURE__*/React.createElement(TabContent,{activeTab:tabbedPaneActive},/*#__PURE__*/React.createElement(TabPane,{className:\"fade show custom-tab-pane-streaming\",tabId:\"1\"},/*#__PURE__*/React.createElement(Form,{className:\"mega-inline\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mega-title-custom-streaming\"},\"Select Visibility - Dicate \",/*#__PURE__*/React.createElement(\"strong\",null,\"WHO\"),\" can see/view your live stream in action\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-showcase-custom\"},/*#__PURE__*/React.createElement(Media,{className:\"p-20\"},/*#__PURE__*/React.createElement(\"div\",{className:\"radio radio-primary mr-3\"},/*#__PURE__*/React.createElement(Input,{onClick:()=>{setVisibility({visibility:\"public/anyone\",accountType:null});setTabbedPaneActive(\"2\");},checked:visibility!==null&&visibility.visibility===\"public/anyone\"?true:false,id:\"radio30\",type:\"radio\",name:\"radio1\",value:\"option1\"}),/*#__PURE__*/React.createElement(Label,{for:\"radio30\"})),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"mt-0 mega-title-badge mega-title-badge-streaming-custom\"},\"PUBLIC/ANYONE\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-primary pull-right digits custom-digits-streaming\"},\"PUBLIC/ANYONE (On/Off Platform)\")),/*#__PURE__*/React.createElement(\"p\",null,\"Public/anyone meaning ANYONE (employer's & hacker accounts alike) can both view your live stream AS WELL as anyone NOT registered on the \".concat(process.env.REACT_APP_APPLICATION_NAME,\" platform...\")))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-showcase-custom\"},/*#__PURE__*/React.createElement(Media,{className:\"p-20\"},/*#__PURE__*/React.createElement(\"div\",{className:\"radio radio-secondary mr-3\"},/*#__PURE__*/React.createElement(Input,{onClick:()=>{setVisibility({visibility:\"only-platform-users\",accountType:null});setTabbedPaneActive(\"2\");},checked:visibility!==null&&visibility.visibility===\"only-platform-users\"?true:false,id:\"radio31\",type:\"radio\",name:\"radio1\",value:\"option1\"}),/*#__PURE__*/React.createElement(Label,{for:\"radio31\"})),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"mt-0 mega-title-badge mega-title-badge-streaming-custom\"},\"PUBLIC/ANYONE ON \",process.env.REACT_APP_APPLICATION_NAME,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary pull-right digits custom-digits-streaming\"},\"Anyone on \".concat(process.env.REACT_APP_APPLICATION_NAME))),/*#__PURE__*/React.createElement(\"p\",null,\"Anyone on our platform (\".concat(process.env.REACT_APP_APPLICATION_NAME,\") will be able to view your live stream HOWEVER people that're NOT REGISTERED on our platform will NOT be able to view your live stream until they login & identifiy themselves...\"))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-showcase-custom\"},/*#__PURE__*/React.createElement(Media,{className:\"p-20\"},/*#__PURE__*/React.createElement(\"div\",{className:\"radio radio-success mr-3\"},/*#__PURE__*/React.createElement(Input,{onClick:()=>{setVisibility({visibility:\"specific-group\",accountType:\"employers\"});setTabbedPaneActive(\"2\");},checked:visibility!==null&&visibility.visibility===\"specific-group\"&&visibility.accountType===\"employers\"?true:false,id:\"radio32\",type:\"radio\",name:\"radio1\",value:\"option1\"}),/*#__PURE__*/React.createElement(Label,{for:\"radio32\"})),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"mt-0 mega-title-badge mega-title-badge-streaming-custom\"},\"ONLY EMPLOYERS'S CAN VIEW\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success pull-right digits custom-digits-streaming\"},\"ONLY EMPLOYERS'S\")),/*#__PURE__*/React.createElement(\"p\",null,\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects EMPLOYER'S GROUP.\"))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-showcase-custom\"},/*#__PURE__*/React.createElement(Media,{className:\"p-20\"},/*#__PURE__*/React.createElement(\"div\",{className:\"radio radio-info mr-3\"},/*#__PURE__*/React.createElement(Input,{onClick:()=>{setVisibility({visibility:\"specific-group\",accountType:\"hackers\"});setTabbedPaneActive(\"2\");},checked:visibility!==null&&visibility.visibility===\"specific-group\"&&visibility.accountType===\"hackers\"?true:false,id:\"radio33\",type:\"radio\",name:\"radio1\",value:\"option1\"}),/*#__PURE__*/React.createElement(Label,{for:\"radio33\"})),/*#__PURE__*/React.createElement(Media,{body:true},/*#__PURE__*/React.createElement(\"h6\",{className:\"mt-0 mega-title-badge mega-title-badge-streaming-custom\"},\"ONLY HACKER'S CAN VIEW\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-info pull-right digits custom-digits-streaming\"},\"ONLY HACKER'S\")),/*#__PURE__*/React.createElement(\"p\",null,\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects HACKER GROUP.\"))))))))),/*#__PURE__*/React.createElement(TabPane,{className:\"custom-tab-pane-streaming\",tabId:\"2\"},/*#__PURE__*/React.createElement(Form,{className:\"needs-validation streaming-start-form-wrapper\",noValidate:\"\",onSubmit:handleSubmit(handleLiveStreamStart,(e,errors)=>renderFormError(e,errors))},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{md:\"4 mb-3 custom-col-streaming-one\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"validationCustom01\"},listingTitleChecker.label),/*#__PURE__*/React.createElement(Input,Object.assign({},listingTitleChecker.check(setError,register,values,errors,\"subCategory\",clearErrors),{value:currentValues.listingTitle,onChange:e=>listingTitleChecker.onChange(e,setValue),className:\"form-control\",name:listingTitleChecker.name,type:listingTitleChecker.type,placeholder:listingTitleChecker.placeholder})),errors.listingTitle?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.listingTitle.message):null),/*#__PURE__*/React.createElement(Col,{md:\"4 mb-3 custom-col-streaming-two\"},/*#__PURE__*/React.createElement(Label,null,subcategoryChecker.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:subcategoryChecker.name},subcategoryChecker.check(setError,register,values,errors,\"subCategory\",clearErrors),{render:_ref3=>{let{field}=_ref3;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{ref:subCategoryRefSelector,autoBlur:true,placeholder:subcategoryChecker.placeholder,defaultValue:null,onMenuClose:()=>{},value:currentValues.subCategory,onChange:selectedOption=>handleSubcategoryCheckerChange(selectedOption,setValue,subCategoryRefSelector),options:subcategoryOptions}));}})),errors.subCategory?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.subCategory.message):null),/*#__PURE__*/React.createElement(Col,{md:\"4 mb-3 custom-col-streaming-three\"},languageOptionsState!==null?renderSelection(languageOptionsState):null)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(HashtagHelper,{setError:setError,register:register,values:currentValues,errors:errors,setValue:setValue,clearErrors:clearErrors,control:control,errors:errors}))),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:\"12.5px\"},className:\"form-row\"},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Label,null,mainDescriptionChecker.label),/*#__PURE__*/React.createElement(Input,Object.assign({},mainDescriptionChecker.check(setError,register,values,errors,\"subCategory\",clearErrors),{value:currentValues.mainDescription,onChange:e=>mainDescriptionChecker.onChange(e.target.value,setValue),name:mainDescriptionChecker.name,onBlur:e=>mainDescriptionChecker.onBlur(e,clearErrors,mainDescriptionChecker.name,setError),type:mainDescriptionChecker.type,rows:8,placeholder:mainDescriptionChecker.placeholder})),errors.mainDescription?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.mainDescription.message):null)),/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\",marginTop:\"17.5px\"},outline:true,className:\"btn-square-info\",color:\"info-2x\"},\"Submit Data & REQUEST Streaming Key/Data!\"))))))));};const calculateLatestImage=user=>{const reversed=user.profilePicsVideos.reverse();for(let index=0;index<reversed.length;index++){const item=reversed[index];if(item.type.includes(\"image\")){return\"\".concat(process.env.REACT_APP_ASSET_LINK,\"/\").concat(item.link);break;}};};const handleFinalSubmissionAfterStreamStart=()=>{console.log(\"handleFinalSubmissionAfterStreamStart clicked.\");// gather form values\nconst currentValues=getValues();// redux-hook-form values completed!\nconst{mainDescription,streamHashtags,subCategory,listingTitle,codingLanguage}=currentValues;// assign MAIN category\nconst mainCategory=selectedMainCategory;// visibility \nconst streamVisibility=visibility;const timeoutCount=5500;const handleNotificationClick=timeout=>{clearTimeout(timeout);history.push(\"/view/all/live/streams/general\");};if(streamInfo!==null){const streamInformationCustomized={streamVisibility,streamMainCategory:mainCategory,streamMainDescription:mainDescription,streamHashtags,streamSubCategory:subCategory,listingTitle,streamCodingLanguage:codingLanguage,id:uuid()};// create variables for params below...\nconst coverURL=calculateLatestImage(userData);const title=\"Live Stream - \".concat(streamInformationCustomized.id,\" - by \").concat(userData.firstName,\" \").concat(userData.lastName);const params=new SBData.OpenChannelParams();// params logic\nparams.name=title;params.coverUrlOrImage=coverURL;params.operatorUserIds=[userData.uniqueId];// Or .operators(Array<User>)\n// params.data = DATA;\nparams.customType=\"public\";SBData.OpenChannel.createChannel(params,(openChannel,error)=>{if(error){// Handle error.\nconsole.log(\"error OpenChannel.createChannel - \",error);}else{const channelUrl=openChannel.url;console.log(\"channel OPEN - : \",openChannel,channelUrl);const config={streamID:streamInfo.id,streamInformationCustomized,posterID:userData.uniqueId,posterName:\"\".concat(userData.firstName,\" \").concat(userData.lastName),posterUsername:userData.username,streamKey,channelUrl:channelUrl};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/check/live/stream/active\"),config).then(res=>{if(res.data.message===\"STREAM IS ACTIVATED & LIVE!\"){// render checks for completed (fully) form data and stream started...\nif(typeof codingLanguage!==\"undefined\"&&Object.keys(codingLanguage).length>0&&typeof listingTitle!==\"undefined\"&&listingTitle.length>=15&&listingTitle.length<=75&&typeof mainDescription!==\"undefined\"&&mainDescription.length>=50&&mainDescription.length<=1000&&typeof streamHashtags!==\"undefined\"&&streamHashtags.length>=5&&typeof subCategory!==\"undefined\"&&Object.keys(subCategory).length>0&&typeof streamVisibility!==\"undefined\"&&streamVisibility!==null){// make sure user selects a MAIN CATEGORY before proceeding...\nif(selectedMainCategory===\"none-selected\"){// THROW WARNING Notification\nNotificationManager.warning(\"You have COMPLETED 'most' of the required data for this listing, however you forgot to select a 'Main Category' for your stream (top-left selection button's) - please select this value before proceeding & you'll be all set!\",\"LAST STEP - Select a 'MAIN Category'!\",5250);}else{// SUCCESS ! - use redux to save data for next \"Review\" page...\nsaveStreamPreFilledData(streamInformationCustomized);const timeout=setTimeout(()=>{history.push(\"/view/all/live/streams/general\");},timeoutCount);NotificationManager.success(\"Successfully saved your data & you will now be redirect to your LIVE stream in 5 seconds or click me to immediately redirect!\",\"SUCCESSFULLY INITIATED LIVE STREAM!\",timeoutCount,()=>{handleNotificationClick(timeout);});}}else{// THROW ERROR Notification\nNotificationManager.error(\"You MUST complete the required data in 'visibility' & 'general settings' before attempting to proceed and start your live stream...\",\"ALL required data is NOT provided yet!\",5250);}}else if(res.data.message===\"Stream is currently IDLE - NOT live yet...\"){NotificationManager.warning(\"Your stream is currently in an 'IDLE' state which means you have NOT offically started the live stream yet - you still need to connect w/your STREAM-KEY & SERVER URL (via broadcasting software)\",\"Stream is NOT live yet!\",5000);}else{console.log(\"STREAM NOT ACTIVE.... : \",res.data);NotificationManager.error(\"We've determined that your stream is in fact NOT live YET, You must START your stream & verify you can view it on this page before proceeding to the 'review page'...\",\"Stream is NOT live yet!\",5000);}}).catch(err=>{console.log(err);NotificationManager.error(\"An unknown error occurred while trying to fetch your live stream & determine whether or not it's already live... Please TRY AGAIN.\",\"Stream is NOT live yet!\",5000);});}});}else{NotificationManager.error(\"You MUST complete ALL of the required data in 'visibility' & 'general settings' before attempting to proceed and start your live stream...\",\"ALL required data is NOT provided yet!\",5250);}};// const currentValues = getValues();\nconsole.log(streamKey,streamInfo);// console.log(\"PRE-CHECKS... : \", currentValues, selectedMainCategory, visibility);\nreturn/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Live streaming creation\",title:\"Create a new 'live hacking-stream' now!\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:\"3\",className:\"box-col-6 pr-0 file-spacing\"},/*#__PURE__*/React.createElement(\"div\",{className:\"file-sidebar\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-medium-custom\"},/*#__PURE__*/React.createElement(CardBody,null,\"   \",/*#__PURE__*/React.createElement(\"h6\",{className:\"mb-3\"},\"Select a category of your live hacking stream before being able to start your stream & go public!\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"none-selected\"),className:selectedMainCategory===\"none-selected\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" NONE SELECTED - N/A\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"api-testing\"),className:selectedMainCategory===\"api-testing\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" API-Endpoint Testing/Hacking\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"malware-exploit\"),className:selectedMainCategory===\"malware-exploit\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Malware\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"phishing-exploit\"),className:selectedMainCategory===\"phishing-exploit\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Phishing\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"sql-injection-attack\"),className:selectedMainCategory===\"sql-injection-attack\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" SQL-Injection Attack\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"cross-site-scripting-xss\"),className:selectedMainCategory===\"cross-site-scripting-xss\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Cross-Site Scripting (XSS)\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"denial-of-service\"),className:selectedMainCategory===\"denial-of-service\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Denial-of-Service (DoS)\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"session-hijacking-man-in-middle\"),className:selectedMainCategory===\"session-hijacking-man-in-middle\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Session Hijacking / Man-in-middle\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{onClick:()=>setSelectedMainCategoryState(\"credential-reuse\"),className:selectedMainCategory===\"credential-reuse\"?\"btn btn-info\":\"btn btn-light\"},/*#__PURE__*/React.createElement(Code,null),\" Credential Reuse\"))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-outline-primary\"},/*#__PURE__*/React.createElement(Database,null),Storage),/*#__PURE__*/React.createElement(\"div\",{className:\"m-t-15\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress sm-progress-bar mb-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar bg-primary\",role:\"progressbar\",style:{width:\"25%\"},\"aria-valuenow\":\"25\",\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"})),/*#__PURE__*/React.createElement(\"p\",null,\"25 GB of 100 GB used\")))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-outline-primary\"},/*#__PURE__*/React.createElement(Grid,null),\"Pricing for subscription (premium membership)\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"pricing-plan\"},/*#__PURE__*/React.createElement(\"h6\",null,\"Trial \\\"Tier-Hacker\\\" Account \"),/*#__PURE__*/React.createElement(\"h5\",null,\"FREE (limited-time)\"),/*#__PURE__*/React.createElement(\"p\",null,\"Signup for our FREE 'tier-hacker' account which is basically a super-bonus version of a regular account. This includes many restricted features/functionality and give's you a better stance on our platform.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-outline-success btn-md\"},\"Already a member\"),/*#__PURE__*/React.createElement(\"img\",{className:\"bg-img\",src:require(\"../../../../../assets/images/dashboard/folder.png\"),alt:\"\"}))),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"pricing-plan\"},/*#__PURE__*/React.createElement(\"h6\",null,\"Premium Live Streaming\"),/*#__PURE__*/React.createElement(\"h5\",null,\"$25/month\"),/*#__PURE__*/React.createElement(\"p\",null,\" \",\"Placed on homepage at top of list and shown BEFORE all other listings that're NOT boosted/promoted as well...\"),/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-outline-primary btn-md\"},\"Upgrade Now!\"),/*#__PURE__*/React.createElement(\"img\",{className:\"bg-img\",src:require(\"../../../../../assets/images/dashboard/folder1.png\"),alt:\"\"})))))))),/*#__PURE__*/React.createElement(Col,{xl:\"9\",md:\"12\",className:\"box-col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"file-content\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-medium-custom\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-secondary border-3\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Live Streaming Key\"),/*#__PURE__*/React.createElement(\"p\",{style:{marginTop:\"7.5px\"}},streamKey===null?\"You can't create a 'stream-key' YET because you need to configure your listing first & fill out the required data before proceeding...\":\"This will allow you to <strong>START</strong> your live stream (enter your copied 'stream key' to start stream)\")),/*#__PURE__*/React.createElement(CardBody,null,streamKey===null?/*#__PURE__*/React.createElement(\"p\",{className:\"before-text-streamkey\"},\"Once you \\\"start\\\" your live stream process by clicking \\\"Start a live stream!\\\" above to initialize your \\\"stream key\\\" to go to the next-step of the process of starting and initalizing a publically viewable live stream... However, \",/*#__PURE__*/React.createElement(\"strong\",null,\"FIRST\"),\" you \",/*#__PURE__*/React.createElement(\"strong\",null,\"must\"),\" complete the \\\"visibility\\\" & \\\"general-settings\\\" details before proceeding forward.\"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Your stream key is below, Click the button below to \",/*#__PURE__*/React.createElement(\"strong\",null,\"\\\"Copy\\\"\"),\" the stream key to your clipboard.\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Button,{id:\"no-border-button-custom\",style:{width:\"100%\"},outline:true,color:\"secondary-2x\",className:\"btn-squared-secondary ml-1\",onClick:()=>{navigator.clipboard.writeText(streamKey);NotificationManager.info(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\",'COPIED STREAM KEY TO CLIPBOARD!',4750);}},\"Copy your STREAM KEY ~ \".concat(streamKey)),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Button,{id:\"no-border-button-custom\",style:{width:\"100%\"},outline:true,color:\"primary-2x\",className:\"btn-squared-primary ml-1\",onClick:()=>{navigator.clipboard.writeText(\"rtmps://global-live.mux.com:443/app\");NotificationManager.info(\"Successfully copied 'Server URL' to 'Clipboard' & it is now ready to be pasted!\",'COPIED SERVER URL TO CLIPBOARD!',4750);}},\"Copy Server URL ~ rtmps://global-live.mux.com:443/app\")))),/*#__PURE__*/React.createElement(Card,{className:\"shadow-medium-custom\",style:{marginBottom:\"37.5px\"}},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",xl:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},outline:true,color:\"secondary-2x\",className:\"btn-squared-secondary ml-1\",onClick:handleFinalSubmissionAfterStreamStart},\"Submit Stream & Go LIVE/PUBLIC! (All pre-work is done)\")))))),/*#__PURE__*/React.createElement(Card,{className:\"shadow-medium-custom\"},/*#__PURE__*/React.createElement(CardBody,{className:\"custom-cardbody-streaming-start\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-3\"},\"Upload/start a new LIVE stream (live streams of live hack's)\"),/*#__PURE__*/React.createElement(\"h6\",null,\"Start a stream of a LIVE \",/*#__PURE__*/React.createElement(\"strong\",null,\"AUTHORIZED\"),\" hack (digital asset's \",/*#__PURE__*/React.createElement(\"strong\",null,\"ONLY\"),\") and \",/*#__PURE__*/React.createElement(\"strong\",null,\"EARN MONEY\"),\" via \\\"Gifts\\\", \\\"Kudo's\\\" and other various incentives/prizes while hacking away! You'll earn more money if you have more followers/viewers so try to grow your audience!\"),/*#__PURE__*/React.createElement(\"hr\",null),streamKey!==null?/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\",marginBottom:\"22.5px\"},outline:true,color:\"success-2x\",className:\"btn-squared-success ml-1\",onClick:()=>{setStreamHidden(!hideStream);}},hideStream===false?\"Hide Stream & Reload Stream...\":\"Show Stream & Reload Stream!\"):null,playbackStream!==null&&hideStream===false?/*#__PURE__*/React.createElement(ReactHlsPlayer,{src:playbackStream,autoPlay:true,controls:true,width:\"100%\",height:\"auto\"}):null,playbackStream!==null?null:renderBeforeReadyLogic())))))));};const mapStateToProps=state=>{return{userData:state.auth.data,SBData:state.sendbirdInitData.sendbirdInitData};};export default connect(mapStateToProps,{saveStreamPreFilledData})(CreateNewLiveStreamAsHackerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/streamingLiveHacks/createLiveStream/createNewStream/createNewLiveStreamMain.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Input","Button","Link","NavLink","Nav","NavItem","TabPane","TabContent","Media","Label","Database","Grid","Upload","Code","axios","_","connect","NotificationManager","useForm","Controller","hookFormHelpers","Select","nonFormHelpers","ReactHlsPlayer","saveStreamPreFilledData","useHistory","uuid","handleSubcategoryCheckerChange","subcategoryChecker","listingTitleChecker","mainDescriptionChecker","HashtagHelper","languageList","subcategoryOptions","value","label","CreateNewLiveStreamAsHackerHelper","userData","SBData","history","subCategoryRefSelector","codingLanguageSelectRef","searchTerm","setSearchTerm","tabbedPaneActive","setTabbedPaneActive","streamKey","setStreamKey","hideStream","setStreamHidden","streamInfo","setStreamInfo","playbackStream","setPlaybackStream","visibility","setVisibility","languageOptionsState","setLanguageSelectorOptions","selectedMainCategory","setSelectedMainCategoryState","register","handleSubmit","control","watch","setValue","getValues","setError","values","clearErrors","formState","errors","mode","reValidateMode","languagePromise","Promise","resolve","reject","newLanguageReformattedArray","index","length","language","push","name","then","array","handleChange","event","preventDefault","target","handleLiveStreamStart","console","log","get","process","env","REACT_APP_BASE_URL","res","data","message","result","playbackID","playback_ids","id","navigator","clipboard","writeText","success","catch","err","renderFormError","e","renderBeforeReadyLogic","currentValues","renderSelection","languageOptions","required","onBlur","setTimeout","Object","keys","type","field","codingLanguage","selectedOption","shouldValidate","current","blur","accountType","REACT_APP_APPLICATION_NAME","check","listingTitle","onChange","placeholder","subCategory","marginTop","mainDescription","width","calculateLatestImage","user","reversed","profilePicsVideos","reverse","item","includes","REACT_APP_ASSET_LINK","link","handleFinalSubmissionAfterStreamStart","streamHashtags","mainCategory","streamVisibility","timeoutCount","handleNotificationClick","timeout","clearTimeout","streamInformationCustomized","streamMainCategory","streamMainDescription","streamSubCategory","streamCodingLanguage","coverURL","title","firstName","lastName","params","OpenChannelParams","coverUrlOrImage","operatorUserIds","uniqueId","customType","OpenChannel","createChannel","openChannel","error","channelUrl","url","config","streamID","posterID","posterName","posterUsername","username","post","warning","Storage","require","info","marginBottom","mapStateToProps","state","auth","sendbirdInitData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,CAA+CC,MAA/C,KAA6D,OAA7D,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8BC,IAA9B,CAAoCC,UAApC,CAAgDC,QAAhD,CAA0DC,IAA1D,CAAgEC,SAAhE,CAA2EC,KAA3E,CAAkFC,MAAlF,CAA0FC,IAA1F,CAAgGC,OAAhG,CAAyGC,GAAzG,CAA8GC,OAA9G,CAAuHC,OAAvH,CAAgIC,UAAhI,CAA4IC,KAA5I,CAAmJC,KAAnJ,KAAgK,YAAhK,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,MAAzB,CAAiCC,IAAjC,KAA6C,eAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,uBAAT,KAAwC,wEAAxC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CAEA;AACA,KAAMC,CAAAA,8BAA8B,CAAGP,eAAe,GAAGO,8BAAzD,CACA,KAAMC,CAAAA,kBAAkB,CAAGR,eAAe,GAAGQ,kBAA7C,CACA,KAAMC,CAAAA,mBAAmB,CAAGT,eAAe,GAAGS,mBAA9C,CACA,KAAMC,CAAAA,sBAAsB,CAAGV,eAAe,GAAGU,sBAAjD,CACA;AACA,KAAM,CAAEC,aAAF,CAAiBC,YAAjB,EAAkCV,cAAxC,CAGA,KAAMW,CAAAA,kBAAkB,CAAG,CACvB,CAAEC,KAAK,CAAE,wBAAT,CAAmCC,KAAK,CAAE,wBAA1C,CADuB,CAEvB,CAAED,KAAK,CAAE,UAAT,CAAqBC,KAAK,CAAE,kBAA5B,CAFuB,CAGvB,CAAED,KAAK,CAAE,YAAT,CAAuBC,KAAK,CAAE,oBAA9B,CAHuB,CAIvB,CAAED,KAAK,CAAE,iBAAT,CAA4BC,KAAK,CAAE,iBAAnC,CAJuB,CAKvB,CAAED,KAAK,CAAE,eAAT,CAA0BC,KAAK,CAAE,eAAjC,CALuB,CAMvB,CAAED,KAAK,CAAE,iBAAT,CAA4BC,KAAK,CAAE,iBAAnC,CANuB,CAOvB,CAAED,KAAK,CAAE,yBAAT,CAAoCC,KAAK,CAAE,yBAA3C,CAPuB,CAQvB,CAAED,KAAK,CAAE,sBAAT,CAAiCC,KAAK,CAAE,sBAAxC,CARuB,CASvB,CAAED,KAAK,CAAE,yBAAT,CAAoCC,KAAK,CAAE,yBAA3C,CATuB,CAUvB,CAAED,KAAK,CAAE,cAAT,CAAyBC,KAAK,CAAE,cAAhC,CAVuB,CAWvB,CAAED,KAAK,CAAE,sBAAT,CAAiCC,KAAK,CAAE,sBAAxC,CAXuB,CAYvB,CAAED,KAAK,CAAE,kBAAT,CAA6BC,KAAK,CAAE,kBAApC,CAZuB,CAavB,CAAED,KAAK,CAAE,mBAAT,CAA8BC,KAAK,CAAE,oBAArC,CAbuB,CAcvB,CAAED,KAAK,CAAE,mBAAT,CAA8BC,KAAK,CAAE,mBAArC,CAduB,CAevB,CAAED,KAAK,CAAE,kBAAT,CAA6BC,KAAK,CAAE,kBAApC,CAfuB,CAgBvB,CAAED,KAAK,CAAE,sBAAT,CAAiCC,KAAK,CAAE,sBAAxC,CAhBuB,CAiBvB,CAAED,KAAK,CAAE,UAAT,CAAqBC,KAAK,CAAE,UAA5B,CAjBuB,CAkBvB,CAAED,KAAK,CAAE,iBAAT,CAA4BC,KAAK,CAAE,eAAnC,CAlBuB,CAmBvB,CAAED,KAAK,CAAE,gBAAT,CAA2BC,KAAK,CAAE,gBAAlC,CAnBuB,CAoBvB,CAAED,KAAK,CAAE,iBAAT,CAA4BC,KAAK,CAAE,iBAAnC,CApBuB,CAqBvB,CAAED,KAAK,CAAE,gBAAT,CAA2BC,KAAK,CAAE,gBAAlC,CArBuB,CAsBvB,CAAED,KAAK,CAAE,mBAAT,CAA8BC,KAAK,CAAE,oBAArC,CAtBuB,CAA3B,CAwBA,KAAMC,CAAAA,iCAAiC,CAAG,MAAmD,IAAlD,CAAEZ,uBAAF,CAA2Ba,QAA3B,CAAqCC,MAArC,CAAkD,MACzF;AACA,KAAMC,CAAAA,OAAO,CAAGd,UAAU,EAA1B,CACA;AACA,KAAMe,CAAAA,sBAAsB,CAAGlD,MAAM,CAAC,IAAD,CAArC,CACA,KAAMmD,CAAAA,uBAAuB,CAAGnD,MAAM,CAAC,IAAD,CAAtC,CACA;AACA,KAAM,CAACoD,UAAD,CAAaC,aAAb,EAA8BvD,QAAQ,CAAC,EAAD,CAA5C,CACA,KAAM,CAAEwD,gBAAF,CAAoBC,mBAApB,EAA4CzD,QAAQ,CAAC,GAAD,CAA1D,CACA,KAAM,CAAE0D,SAAF,CAAaC,YAAb,EAA8B3D,QAAQ,CAAC,IAAD,CAA5C,CACA,KAAM,CAAE4D,UAAF,CAAcC,eAAd,EAAkC7D,QAAQ,CAAC,IAAD,CAAhD,CACA,KAAM,CAAE8D,UAAF,CAAcC,aAAd,EAAgC/D,QAAQ,CAAC,IAAD,CAA9C,CACA,KAAM,CAAEgE,cAAF,CAAkBC,iBAAlB,EAAwCjE,QAAQ,CAAC,IAAD,CAAtD,CACA,KAAM,CAAEkE,UAAF,CAAcC,aAAd,EAAgCnE,QAAQ,CAAC,IAAD,CAA9C,CACA,KAAM,CAAEoE,oBAAF,CAAwBC,0BAAxB,EAAuDrE,QAAQ,CAAC,IAAD,CAArE,CACA,KAAM,CAAEsE,oBAAF,CAAwBC,4BAAxB,EAAyDvE,QAAQ,CAAC,eAAD,CAAvE,CAGA;AACA,KAAM,CAAEwE,QAAF,CAAYC,YAAZ,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CAAoDC,SAApD,CAA+DC,QAA/D,CAAyEC,MAAzE,CAAiFC,WAAjF,CAA8FC,SAAS,CAAE,CAAEC,MAAF,CAAzG,EAAuHpD,OAAO,CAAC,CACjIqD,IAAI,CAAE,WAD2H,CAEjIC,cAAc,CAAE,QAFiH,CAAD,CAApI,CAKAnF,SAAS,CAAC,IAAM,CACZ;AACA,KAAMoF,CAAAA,eAAe,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACrD,KAAMC,CAAAA,2BAA2B,CAAG,EAApC,CAEA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAG9C,YAAY,CAAC+C,MAAzC,CAAiDD,KAAK,EAAtD,CAA0D,CACtD,KAAME,CAAAA,QAAQ,CAAGhD,YAAY,CAAC8C,KAAD,CAA7B,CAEAD,2BAA2B,CAACI,IAA5B,CAAiC,CAC7B9C,KAAK,CAAE6C,QAAQ,CAACE,IADa,CAE7BhD,KAAK,CAAE8C,QAAQ,CAACE,IAFa,CAAjC,EAIA,GAAKlD,YAAY,CAAC+C,MAAb,CAAsB,CAAvB,GAA8BD,KAAlC,CAAyC,CACrCH,OAAO,CAACE,2BAAD,CAAP,CACH,CACJ,CACJ,CAduB,CAAxB,CAgBAJ,eAAe,CAACU,IAAhB,CAAsBC,KAAD,EAAW,CAC5B3B,0BAA0B,CAAC2B,KAAD,CAA1B,CACH,CAFD,EAGH,CArBQ,CAqBP,EArBO,CAAT,CAuBA,KAAMC,CAAAA,YAAY,CAAGC,KAAK,EAAI,CAC1BA,KAAK,CAACC,cAAN,GACA5C,aAAa,CAAC2C,KAAK,CAACE,MAAN,CAAatD,KAAd,CAAb,CACH,CAHD,CAIA,KAAMuD,CAAAA,qBAAqB,CAAG,IAAM,CAChCC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAEA7E,KAAK,CAAC8E,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,kBAAzB,oCAA6EZ,IAA7E,CAAmFa,GAAD,EAAS,CACvF,GAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,GAAqB,kCAAzB,CAA6D,CACzDR,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB,EACA;AACA,KAAM,CAAEnD,SAAF,CAAaqD,MAAb,EAAwBH,GAAG,CAACC,IAAlC,CAEA,KAAMG,CAAAA,UAAU,kCAA6BD,MAAM,CAACE,YAAP,CAAoB,CAApB,EAAuBC,EAApD,UAAhB,CAEAjD,iBAAiB,CAAC+C,UAAD,CAAjB,CAEAG,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B3D,SAA9B,EAEA7B,mBAAmB,CAACyF,OAApB,CAA4B,iFAA5B,CAA+G,iCAA/G,CAAkJ,IAAlJ,EAEA3D,YAAY,CAACD,SAAD,CAAZ,CACAK,aAAa,CAACgD,MAAD,CAAb,CACH,CAfD,IAeO,CACHT,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBK,GAAG,CAACC,IAAvB,EACH,CACJ,CAnBD,EAmBGU,KAnBH,CAmBUC,GAAD,EAAS,CACdlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,EACH,CArBD,EAsBH,CAzBD,CA0BA,KAAMC,CAAAA,eAAe,CAAG,CAACC,CAAD,CAAIxC,MAAJ,GAAe,CACnCoB,OAAO,CAACC,GAAR,CAAYmB,CAAZ,CAAexC,MAAf,EACH,CAFD,CAGA,KAAMyC,CAAAA,sBAAsB,CAAG,IAAM,CACjC,KAAMC,CAAAA,aAAa,CAAG/C,SAAS,EAA/B,CAEA,KAAMgD,CAAAA,eAAe,CAAIC,eAAD,EAAqB,CACzC,mBACI,oBAAC,QAAD,mBACI,oBAAC,KAAD,oDADJ,cAEQ,oBAAC,UAAD,gBACI,OAAO,CAAEpD,OADb,CAEI,IAAI,CAAC,gBAFT,EAGQF,QAAQ,CAAC,gBAAD,CAAmB,CAAEuD,QAAQ,CAAE,CACnCjF,KAAK,CAAE,IAD4B,CAEnCgE,OAAO,CAAE,uEAF0B,CAAZ,CAGxBkB,MAAM,CAAGN,CAAD,EAAO,CACd;AACA,KAAM5E,CAAAA,KAAK,CAAG4E,CAAC,CAACtB,MAAF,CAAStD,KAAvB,CACA;AACAmF,UAAU,CAAC,IAAM,CACb;AACA,GAAK,MAAOnF,CAAAA,KAAP,GAAiB,WAAlB,EAAmCoF,MAAM,CAACC,IAAP,CAAYrF,KAAZ,EAAmB6C,MAAnB,CAA4B,CAAnE,CAAuE,CACnEX,WAAW,CAAC,gBAAD,CAAX,CACH,CAFD,IAEO,CACP;AACAF,QAAQ,CAAC,gBAAD,CAAmB,CACvBsD,IAAI,CAAE,QADiB,CAEvBtB,OAAO,CAAE,uEAFc,CAAnB,CAAR,CAIH,CACJ,CAXa,CAWX,GAXW,CAAV,CAYP,CAnB8B,CAAnB,CAHhB,EAuBI,MAAM,CAAE,WAAC,CAAEuB,KAAF,CAAD,0BACJ,oBAAC,MAAD,kBACQA,KADR,EAEI,GAAG,CAAEhF,uBAFT,CAGI,QAAQ,CAAE,IAHd,CAII,YAAY,CAAE,IAJlB,CAKI,WAAW,CAAE,IAAM,CAAE,CALzB,CAMI,KAAK,CAAEuE,aAAa,CAACU,cANzB,CAOI,QAAQ,CAAGC,cAAD,EAAoB,CAC1BjC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBgC,cAAxB,EACA;AACAN,UAAU,CAAC,IAAM,CACbrD,QAAQ,CAAC,gBAAD,CAAmB2D,cAAnB,CAAmC,CAAEC,cAAc,CAAE,KAAlB,CAAnC,CAAR,CACA;AACAnF,uBAAuB,CAACoF,OAAxB,CAAgCC,IAAhC,GACH,CAJS,CAIP,GAJO,CAAV,CAKH,CAfL,CAgBI,OAAO,CAAEZ,eAhBb,GADI,EAvBZ,GAFR,CA8CS5C,MAAM,CAACoD,cAAP,cAAwB,4BAAM,SAAS,CAAC,cAAhB,EAAgCpD,MAAM,CAACoD,cAAP,CAAsBxB,OAAtD,CAAxB,CAAgG,IA9CzG,CADJ,CAkDH,CAnDD,CAoDAR,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAA6CqB,aAA7C,EAEAjD,KAAK,CAAC,CAAC,iBAAD,CAAoB,gBAApB,CAAsC,aAAtC,CAAqD,cAArD,CAAD,CAAL,CACA,mBACI,oBAAC,QAAD,mBACI,oBAAC,IAAD,EAAM,SAAS,CAAE,sBAAjB,eACI,oBAAC,UAAD,EAAY,SAAS,CAAC,sBAAtB,eACI,uDAAa,wCAAb,wHADJ,CADJ,cAII,oBAAC,QAAD,mBACA,oBAAC,UAAD,mBACI,8BAAKnB,gBAAgB,GAAK,GAArB,CAA2B,+CAA3B,CAA6E,oCAAlF,CADJ,CADA,cAIA,oBAAC,QAAD,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAC,UAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,OAAD,EAAS,IAAI,CAAE,IAAf,CAAqB,SAAS,CAAEA,gBAAgB,GAAK,GAArB,CAA2B,QAA3B,CAAsC,EAAtE,CAA0E,OAAO,CAAE,IAAMC,mBAAmB,CAAC,GAAD,CAA5G,eAAmH,yBAAG,SAAS,CAAC,yBAAb,EAAnH,cADJ,CADJ,cAII,oBAAC,OAAD,mBACI,oBAAC,OAAD,EAAS,QAAQ,CAAES,UAAU,GAAK,IAAf,CAAsB,KAAtB,CAA8B,IAAjD,CAAuD,IAAI,CAAE,IAA7D,CAAmE,SAAS,CAAEV,gBAAgB,GAAK,GAArB,CAA2B,QAA3B,CAAsC,EAApH,CAAwH,OAAO,CAAE,IAAMC,mBAAmB,CAAC,GAAD,CAA1J,eAAiK,yBAAG,SAAS,CAAC,gCAAb,EAAjK,0CADJ,CAJJ,CADJ,cASI,oBAAC,UAAD,EAAY,SAAS,CAAED,gBAAvB,eACI,oBAAC,OAAD,EAAS,SAAS,CAAE,qCAApB,CAA2D,KAAK,CAAC,GAAjE,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,aAAhB,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,yBAAG,SAAS,CAAC,6BAAb,6CAAsE,wCAAtE,4CADJ,CADJ,CADJ,cAMI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,IAAD,EAAM,SAAS,CAAE,wBAAjB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,eACI,2BAAK,SAAS,CAAC,0BAAf,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,IAAM,CAClBW,aAAa,CAAC,CACVD,UAAU,CAAE,eADF,CAEVyE,WAAW,CAAE,IAFH,CAAD,CAAb,CAIAlF,mBAAmB,CAAC,GAAD,CAAnB,CACH,CAND,CAMG,OAAO,CAAES,UAAU,GAAK,IAAf,EAAuBA,UAAU,CAACA,UAAX,GAA0B,eAAjD,CAAmE,IAAnE,CAA0E,KANtF,CAM6F,EAAE,CAAC,SANhG,CAM0G,IAAI,CAAC,OAN/G,CAMuH,IAAI,CAAC,QAN5H,CAMqI,KAAK,CAAC,SAN3I,EADJ,cAQI,oBAAC,KAAD,EAAO,GAAG,CAAC,SAAX,EARJ,CADJ,cAWI,oBAAC,KAAD,EAAO,IAAI,KAAX,eACI,0BAAI,SAAS,CAAC,yDAAd,+BAAqF,4BAAM,SAAS,CAAC,+DAAhB,EAAiF,iCAAjF,CAArF,CADJ,cAEI,gLAAgJuC,OAAO,CAACC,GAAR,CAAYkC,0BAA5J,iBAFJ,CAXJ,CADJ,CADJ,CADJ,cAqBI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,IAAD,EAAM,SAAS,CAAE,wBAAjB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,eACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,IAAM,CAClBzE,aAAa,CAAC,CACVD,UAAU,CAAE,qBADF,CAEVyE,WAAW,CAAE,IAFH,CAAD,CAAb,CAIAlF,mBAAmB,CAAC,GAAD,CAAnB,CACH,CAND,CAMG,OAAO,CAAES,UAAU,GAAK,IAAf,EAAuBA,UAAU,CAACA,UAAX,GAA0B,qBAAjD,CAAyE,IAAzE,CAAgF,KAN5F,CAMmG,EAAE,CAAC,SANtG,CAMgH,IAAI,CAAC,OANrH,CAM6H,IAAI,CAAC,QANlI,CAM2I,KAAK,CAAC,SANjJ,EADJ,cAQI,oBAAC,KAAD,EAAO,GAAG,CAAC,SAAX,EARJ,CADJ,cAWI,oBAAC,KAAD,EAAO,IAAI,KAAX,eACI,0BAAI,SAAS,CAAC,yDAAd,sBAA0FuC,OAAO,CAACC,GAAR,CAAYkC,0BAAtG,kBAAkI,4BAAM,SAAS,CAAC,iEAAhB,sBAAgGnC,OAAO,CAACC,GAAR,CAAYkC,0BAA5G,EAAlI,CADJ,cAEI,+DAA+BnC,OAAO,CAACC,GAAR,CAAYkC,0BAA3C,uLAFJ,CAXJ,CADJ,CADJ,CArBJ,CANJ,cAiDI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,IAAD,EAAM,SAAS,CAAE,wBAAjB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,eACI,2BAAK,SAAS,CAAC,0BAAf,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,IAAM,CAClBzE,aAAa,CAAC,CACVD,UAAU,CAAE,gBADF,CAEVyE,WAAW,CAAE,WAFH,CAAD,CAAb,CAIAlF,mBAAmB,CAAC,GAAD,CAAnB,CACH,CAND,CAMG,OAAO,CAAES,UAAU,GAAK,IAAf,EAAuBA,UAAU,CAACA,UAAX,GAA0B,gBAAjD,EAAqEA,UAAU,CAACyE,WAAX,GAA2B,WAAhG,CAA8G,IAA9G,CAAqH,KANjI,CAMwI,EAAE,CAAC,SAN3I,CAMqJ,IAAI,CAAC,OAN1J,CAMkK,IAAI,CAAC,QANvK,CAMgL,KAAK,CAAC,SANtL,EADJ,cAQI,oBAAC,KAAD,EAAO,GAAG,CAAC,SAAX,EARJ,CADJ,cAWI,oBAAC,KAAD,EAAO,IAAI,KAAX,eACI,0BAAI,SAAS,CAAC,yDAAd,2CAAiG,4BAAM,SAAS,CAAC,+DAAhB,EAAiF,kBAAjF,CAAjG,CADJ,cAEI,6BAAI,mVAAJ,CAFJ,CAXJ,CADJ,CADJ,CADJ,cAqBI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACI,oBAAC,IAAD,EAAM,SAAS,CAAE,wBAAjB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,eACI,2BAAK,SAAS,CAAC,uBAAf,eACI,oBAAC,KAAD,EAAO,OAAO,CAAE,IAAM,CAClBxE,aAAa,CAAC,CACVD,UAAU,CAAE,gBADF,CAEVyE,WAAW,CAAE,SAFH,CAAD,CAAb,CAIAlF,mBAAmB,CAAC,GAAD,CAAnB,CACH,CAND,CAMG,OAAO,CAAES,UAAU,GAAK,IAAf,EAAuBA,UAAU,CAACA,UAAX,GAA0B,gBAAjD,EAAqEA,UAAU,CAACyE,WAAX,GAA2B,SAAhG,CAA4G,IAA5G,CAAmH,KAN/H,CAMsI,EAAE,CAAC,SANzI,CAMmJ,IAAI,CAAC,OANxJ,CAMgK,IAAI,CAAC,QANrK,CAM8K,KAAK,CAAC,SANpL,EADJ,cAQI,oBAAC,KAAD,EAAO,GAAG,CAAC,SAAX,EARJ,CADJ,cAWI,oBAAC,KAAD,EAAO,IAAI,KAAX,eACI,0BAAI,SAAS,CAAC,yDAAd,wCAA8F,4BAAM,SAAS,CAAC,4DAAhB,EAA8E,eAA9E,CAA9F,CADJ,cAEI,6BAAI,+UAAJ,CAFJ,CAXJ,CADJ,CADJ,CArBJ,CAjDJ,CADJ,CADJ,CADJ,cAiGI,oBAAC,OAAD,EAAS,SAAS,CAAE,2BAApB,CAAiD,KAAK,CAAC,GAAvD,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,+CAAhB,CAAgE,UAAU,CAAC,EAA3E,CAA8E,QAAQ,CAAElE,YAAY,CAAC4B,qBAAD,CAAwB,CAACqB,CAAD,CAAIxC,MAAJ,GAAeuC,eAAe,CAACC,CAAD,CAAIxC,MAAJ,CAAtD,CAApG,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,iCAAR,eACI,oBAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,EAAqCzC,mBAAmB,CAACM,KAAzD,CADJ,cAEI,oBAAC,KAAD,kBAAWN,mBAAmB,CAACoG,KAApB,CAA0B/D,QAA1B,CAAoCN,QAApC,CAA8CO,MAA9C,CAAsDG,MAAtD,CAA8D,aAA9D,CAA6EF,WAA7E,CAAX,EAAsG,KAAK,CAAE4C,aAAa,CAACkB,YAA3H,CAAyI,QAAQ,CAAGpB,CAAD,EAAOjF,mBAAmB,CAACsG,QAApB,CAA6BrB,CAA7B,CAAgC9C,QAAhC,CAA1J,CAAqM,SAAS,CAAC,cAA/M,CAA8N,IAAI,CAAEnC,mBAAmB,CAACqD,IAAxP,CAA8P,IAAI,CAAErD,mBAAmB,CAAC2F,IAAxR,CAA8R,WAAW,CAAE3F,mBAAmB,CAACuG,WAA/T,GAFJ,CAGK9D,MAAM,CAAC4D,YAAP,cAAsB,4BAAM,SAAS,CAAC,cAAhB,EAAgC5D,MAAM,CAAC4D,YAAP,CAAoBhC,OAApD,CAAtB,CAA4F,IAHjG,CADJ,cAMI,oBAAC,GAAD,EAAK,EAAE,CAAC,iCAAR,eACI,oBAAC,KAAD,MAAQtE,kBAAkB,CAACO,KAA3B,CADJ,cAEI,oBAAC,UAAD,gBACI,OAAO,CAAE2B,OADb,CAEI,IAAI,CAAElC,kBAAkB,CAACsD,IAF7B,EAGQtD,kBAAkB,CAACqG,KAAnB,CAAyB/D,QAAzB,CAAmCN,QAAnC,CAA6CO,MAA7C,CAAqDG,MAArD,CAA6D,aAA7D,CAA4EF,WAA5E,CAHR,EAII,MAAM,CAAE,WAAC,CAAEqD,KAAF,CAAD,0BACJ,oBAAC,MAAD,kBACQA,KADR,EAEI,GAAG,CAAEjF,sBAFT,CAGI,QAAQ,CAAE,IAHd,CAII,WAAW,CAAEZ,kBAAkB,CAACwG,WAJpC,CAKI,YAAY,CAAE,IALlB,CAMI,WAAW,CAAE,IAAM,CAAE,CANzB,CAOI,KAAK,CAAEpB,aAAa,CAACqB,WAPzB,CAQI,QAAQ,CAAGV,cAAD,EAAoBhG,8BAA8B,CAACgG,cAAD,CAAiB3D,QAAjB,CAA2BxB,sBAA3B,CARhE,CASI,OAAO,CAAEP,kBATb,GADI,EAJZ,GAFJ,CAoBKqC,MAAM,CAAC+D,WAAP,cAAqB,4BAAM,SAAS,CAAC,cAAhB,EAAgC/D,MAAM,CAAC+D,WAAP,CAAmBnC,OAAnD,CAArB,CAA0F,IApB/F,CANJ,cA4BI,oBAAC,GAAD,EAAK,EAAE,CAAC,mCAAR,EACK1C,oBAAoB,GAAK,IAAzB,CAAgCyD,eAAe,CAACzD,oBAAD,CAA/C,CAAwE,IAD7E,CA5BJ,CADJ,cAiCI,2BAAK,SAAS,CAAC,UAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,oBAAC,aAAD,EAAe,QAAQ,CAAEU,QAAzB,CAAmC,QAAQ,CAAEN,QAA7C,CAAuD,MAAM,CAAEoD,aAA/D,CAA8E,MAAM,CAAE1C,MAAtF,CAA8F,QAAQ,CAAEN,QAAxG,CAAkH,WAAW,CAAEI,WAA/H,CAA4I,OAAO,CAAEN,OAArJ,CAA8J,MAAM,CAAEQ,MAAtK,EADJ,CADJ,CAjCJ,cAsCI,2BAAK,KAAK,CAAE,CAAEgE,SAAS,CAAE,QAAb,CAAZ,CAAqC,SAAS,CAAC,UAA/C,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,oBAAC,KAAD,MAAQxG,sBAAsB,CAACK,KAA/B,CADJ,cAEI,oBAAC,KAAD,kBACQL,sBAAsB,CAACmG,KAAvB,CAA6B/D,QAA7B,CAAuCN,QAAvC,CAAiDO,MAAjD,CAAyDG,MAAzD,CAAiE,aAAjE,CAAgFF,WAAhF,CADR,EAEI,KAAK,CAAE4C,aAAa,CAACuB,eAFzB,CAGI,QAAQ,CAAGzB,CAAD,EAAOhF,sBAAsB,CAACqG,QAAvB,CAAgCrB,CAAC,CAACtB,MAAF,CAAStD,KAAzC,CAAgD8B,QAAhD,CAHrB,CAII,IAAI,CAAElC,sBAAsB,CAACoD,IAJjC,CAKI,MAAM,CAAG4B,CAAD,EAAOhF,sBAAsB,CAACsF,MAAvB,CAA8BN,CAA9B,CAAiC1C,WAAjC,CAA8CtC,sBAAsB,CAACoD,IAArE,CAA2EhB,QAA3E,CALnB,CAMI,IAAI,CAAEpC,sBAAsB,CAAC0F,IANjC,CAOI,IAAI,CAAE,CAPV,CAQI,WAAW,CAAE1F,sBAAsB,CAACsG,WARxC,GAFJ,CAYK9D,MAAM,CAACiE,eAAP,cAAyB,4BAAM,SAAS,CAAC,cAAhB,EAAgCjE,MAAM,CAACiE,eAAP,CAAuBrC,OAAvD,CAAzB,CAAkG,IAZvG,CADJ,CAtCJ,cAsDI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAEsC,KAAK,CAAE,MAAT,CAAiBF,SAAS,CAAE,QAA5B,CAAf,CAAuD,OAAO,KAA9D,CAA+D,SAAS,CAAE,iBAA1E,CAA6F,KAAK,CAAC,SAAnG,EAA8G,2CAA9G,CAtDJ,CADJ,CAjGJ,CATJ,CAJA,CAJJ,CADJ,CADJ,CAoLH,CA9OD,CA+OA,KAAMG,CAAAA,oBAAoB,CAAIC,IAAD,EAAU,CACnC,KAAMC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,iBAAL,CAAuBC,OAAvB,EAAjB,CAEA,IAAK,GAAI/D,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAG6D,QAAQ,CAAC5D,MAArC,CAA6CD,KAAK,EAAlD,CAAsD,CAClD,KAAMgE,CAAAA,IAAI,CAAGH,QAAQ,CAAC7D,KAAD,CAArB,CACA,GAAIgE,IAAI,CAACtB,IAAL,CAAUuB,QAAV,CAAmB,OAAnB,CAAJ,CAAiC,CAC7B,gBAAUlD,OAAO,CAACC,GAAR,CAAYkD,oBAAtB,aAA8CF,IAAI,CAACG,IAAnD,EACA,MACH,CACJ,EACJ,CAVD,CAWA,KAAMC,CAAAA,qCAAqC,CAAG,IAAM,CAChDxD,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAEA;AACA,KAAMqB,CAAAA,aAAa,CAAG/C,SAAS,EAA/B,CACA;AACA,KAAM,CAAEsE,eAAF,CAAmBY,cAAnB,CAAmCd,WAAnC,CAAgDH,YAAhD,CAA8DR,cAA9D,EAAiFV,aAAvF,CACA;AACA,KAAMoC,CAAAA,YAAY,CAAG1F,oBAArB,CACA;AACA,KAAM2F,CAAAA,gBAAgB,CAAG/F,UAAzB,CAEA,KAAMgG,CAAAA,YAAY,CAAG,IAArB,CAEA,KAAMC,CAAAA,uBAAuB,CAAIC,OAAD,EAAa,CACzCC,YAAY,CAACD,OAAD,CAAZ,CACAjH,OAAO,CAAC0C,IAAR,mCACH,CAHD,CAKA,GAAI/B,UAAU,GAAK,IAAnB,CAAyB,CACrB,KAAMwG,CAAAA,2BAA2B,CAAG,CAChCL,gBADgC,CAEhCM,kBAAkB,CAAEP,YAFY,CAGhCQ,qBAAqB,CAAErB,eAHS,CAIhCY,cAJgC,CAKhCU,iBAAiB,CAAExB,WALa,CAMhCH,YANgC,CAOhC4B,oBAAoB,CAAEpC,cAPU,CAQhCpB,EAAE,CAAE5E,IAAI,EARwB,CAApC,CAUA;AACA,KAAMqI,CAAAA,QAAQ,CAAGtB,oBAAoB,CAACpG,QAAD,CAArC,CACA,KAAM2H,CAAAA,KAAK,yBAAoBN,2BAA2B,CAACpD,EAAhD,kBAA2DjE,QAAQ,CAAC4H,SAApE,aAAiF5H,QAAQ,CAAC6H,QAA1F,CAAX,CAEA,KAAMC,CAAAA,MAAM,CAAG,GAAI7H,CAAAA,MAAM,CAAC8H,iBAAX,EAAf,CACA;AACAD,MAAM,CAACjF,IAAP,CAAc8E,KAAd,CACAG,MAAM,CAACE,eAAP,CAAyBN,QAAzB,CACAI,MAAM,CAACG,eAAP,CAAyB,CAACjI,QAAQ,CAACkI,QAAV,CAAzB,CAA8C;AAC9C;AACAJ,MAAM,CAACK,UAAP,CAAoB,QAApB,CAEAlI,MAAM,CAACmI,WAAP,CAAmBC,aAAnB,CAAiCP,MAAjC,CAAyC,CAACQ,WAAD,CAAcC,KAAd,GAAwB,CAC7D,GAAIA,KAAJ,CAAW,CACP;AACAlF,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAAkDiF,KAAlD,EACH,CAHD,IAGO,CACH,KAAMC,CAAAA,UAAU,CAAGF,WAAW,CAACG,GAA/B,CAEApF,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCgF,WAAjC,CAA8CE,UAA9C,EAEA,KAAME,CAAAA,MAAM,CAAG,CACXC,QAAQ,CAAE9H,UAAU,CAACoD,EADV,CAEXoD,2BAFW,CAGXuB,QAAQ,CAAE5I,QAAQ,CAACkI,QAHR,CAIXW,UAAU,WAAK7I,QAAQ,CAAC4H,SAAd,aAA2B5H,QAAQ,CAAC6H,QAApC,CAJC,CAKXiB,cAAc,CAAE9I,QAAQ,CAAC+I,QALd,CAMXtI,SANW,CAOX+H,UAAU,CAAEA,UAPD,CAAf,CASA/J,KAAK,CAACuK,IAAN,WAAcxF,OAAO,CAACC,GAAR,CAAYC,kBAA1B,8BAAyEgF,MAAzE,EAAiF5F,IAAjF,CAAuFa,GAAD,EAAS,CAC3F,GAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,GAAqB,6BAAzB,CAAwD,CACpD;AACA,GAAK,MAAOwB,CAAAA,cAAP,GAA0B,WAA1B,EAAyCJ,MAAM,CAACC,IAAP,CAAYG,cAAZ,EAA4B3C,MAA5B,CAAqC,CAA/E,EAAsF,MAAOmD,CAAAA,YAAP,GAAwB,WAAxB,EAAwCA,YAAY,CAACnD,MAAb,EAAuB,EAAvB,EAA6BmD,YAAY,CAACnD,MAAb,EAAuB,EAAlL,EAA2L,MAAOwD,CAAAA,eAAP,GAA2B,WAA3B,EAA2CA,eAAe,CAACxD,MAAhB,EAA0B,EAA1B,EAAgCwD,eAAe,CAACxD,MAAhB,EAA0B,IAAhS,EAA2S,MAAOoE,CAAAA,cAAP,GAA0B,WAA1B,EAAyCA,cAAc,CAACpE,MAAf,EAAyB,CAA7W,EAAoX,MAAOsD,CAAAA,WAAP,GAAuB,WAAvB,EAAsCf,MAAM,CAACC,IAAP,CAAYc,WAAZ,EAAyBtD,MAAzB,CAAkC,CAA5b,EAAmc,MAAOsE,CAAAA,gBAAP,GAA4B,WAA5B,EAA2CA,gBAAgB,GAAK,IAAvgB,CAA8gB,CAC1gB;AACA,GAAI3F,oBAAoB,GAAK,eAA7B,CAA8C,CAC1C;AACAzC,mBAAmB,CAACqK,OAApB,CAA4B,iOAA5B,CAA+P,uCAA/P,CAAwS,IAAxS,EACH,CAHD,IAGO,CACH;AACA9J,uBAAuB,CAACkI,2BAAD,CAAvB,CAEA,KAAMF,CAAAA,OAAO,CAAGnC,UAAU,CAAC,IAAM,CAC7B9E,OAAO,CAAC0C,IAAR,mCACH,CAFyB,CAEvBqE,YAFuB,CAA1B,CAIArI,mBAAmB,CAACyF,OAApB,iIAA6J,qCAA7J,CAAoM4C,YAApM,CAAkN,IAAM,CACpNC,uBAAuB,CAACC,OAAD,CAAvB,CACH,CAFD,EAGH,CACJ,CAjBD,IAiBO,CACH;AACAvI,mBAAmB,CAAC2J,KAApB,CAA0B,qIAA1B,CAAiK,wCAAjK,CAA2M,IAA3M,EACH,CACJ,CAvBD,IAuBO,IAAI5E,GAAG,CAACC,IAAJ,CAASC,OAAT,GAAqB,4CAAzB,CAAuE,CAC1EjF,mBAAmB,CAACqK,OAApB,CAA4B,mMAA5B,CAAiO,yBAAjO,CAA4P,IAA5P,EACH,CAFM,IAEA,CACH5F,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCK,GAAG,CAACC,IAA5C,EAEAhF,mBAAmB,CAAC2J,KAApB,CAA0B,uKAA1B,CAAmM,yBAAnM,CAA8N,IAA9N,EACH,CACJ,CA/BD,EA+BGjE,KA/BH,CA+BUC,GAAD,EAAS,CACdlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,EAEA3F,mBAAmB,CAAC2J,KAApB,CAA0B,oIAA1B,CAAgK,yBAAhK,CAA2L,IAA3L,EACH,CAnCD,EAoCH,CACJ,CAvDD,EAwDH,CA/ED,IA+EO,CACH3J,mBAAmB,CAAC2J,KAApB,CAA0B,4IAA1B,CAAwK,wCAAxK,CAAkN,IAAlN,EACH,CACJ,CArGD,CAsGA;AACAlF,OAAO,CAACC,GAAR,CAAY7C,SAAZ,CAAuBI,UAAvB,EACA;AACA,mBACI,oBAAC,QAAD,mBACA,oBAAC,UAAD,EAAY,MAAM,CAAC,yBAAnB,CAA6C,KAAK,CAAC,yCAAnD,EADA,cAEA,oBAAC,SAAD,EAAW,KAAK,CAAE,IAAlB,eACI,oBAAC,GAAD,mBACA,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,SAAS,CAAC,6BAAtB,eACI,2BAAK,SAAS,CAAC,cAAf,eACA,oBAAC,IAAD,EAAM,SAAS,CAAE,sBAAjB,eACG,oBAAC,QAAD,yBACC,0BAAI,SAAS,CAAC,MAAd,sGADD,cAEC,2CACI,2CACI,2BAAK,OAAO,CAAE,IAAMS,4BAA4B,CAAC,eAAD,CAAhD,CAAmE,SAAS,CAAED,oBAAoB,GAAK,eAAzB,CAA2C,cAA3C,CAA4D,eAA1I,eAA2J,oBAAC,IAAD,MAA3J,wBADJ,CADJ,cAII,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,aAAD,CAAhD,CAAiE,SAAS,CAAED,oBAAoB,GAAK,aAAzB,CAAyC,cAAzC,CAA0D,eAAtI,eAAuJ,oBAAC,IAAD,MAAvJ,iCADJ,CAJJ,cAOI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,iBAAD,CAAhD,CAAqE,SAAS,CAAED,oBAAoB,GAAK,iBAAzB,CAA6C,cAA7C,CAA8D,eAA9I,eAA+J,oBAAC,IAAD,MAA/J,YADJ,CAPJ,cAUI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,kBAAD,CAAhD,CAAsE,SAAS,CAAED,oBAAoB,GAAK,kBAAzB,CAA8C,cAA9C,CAA+D,eAAhJ,eAAiK,oBAAC,IAAD,MAAjK,aADJ,CAVJ,cAaI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,sBAAD,CAAhD,CAA0E,SAAS,CAAED,oBAAoB,GAAK,sBAAzB,CAAkD,cAAlD,CAAmE,eAAxJ,eAAyK,oBAAC,IAAD,MAAzK,yBADJ,CAbJ,cAgBI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,0BAAD,CAAhD,CAA8E,SAAS,CAAED,oBAAoB,GAAK,0BAAzB,CAAsD,cAAtD,CAAuE,eAAhK,eAAiL,oBAAC,IAAD,MAAjL,+BADJ,CAhBJ,cAmBI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,mBAAD,CAAhD,CAAuE,SAAS,CAAED,oBAAoB,GAAK,mBAAzB,CAA+C,cAA/C,CAAgE,eAAlJ,eAAmK,oBAAC,IAAD,MAAnK,4BADJ,CAnBJ,cAsBI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,iCAAD,CAAhD,CAAqF,SAAS,CAAED,oBAAoB,GAAK,iCAAzB,CAA6D,cAA7D,CAA8E,eAA9K,eAA+L,oBAAC,IAAD,MAA/L,sCADJ,CAtBJ,cAyBI,2CACI,2BAAK,OAAO,CAAE,IAAMC,4BAA4B,CAAC,kBAAD,CAAhD,CAAsE,SAAS,CAAED,oBAAoB,GAAK,kBAAzB,CAA8C,cAA9C,CAA+D,eAAhJ,eAAiK,oBAAC,IAAD,MAAjK,qBADJ,CAzBJ,CAFD,cA+BC,8BA/BD,cAgCC,2CACI,2CACA,2BAAK,SAAS,CAAC,yBAAf,eAAyC,oBAAC,QAAD,MAAzC,CAAsD6H,OAAtD,CADA,cAEA,2BAAK,SAAS,CAAC,QAAf,eACI,2BAAK,SAAS,CAAC,+BAAf,eACA,2BAAK,SAAS,CAAC,yBAAf,CAAyC,IAAI,CAAC,aAA9C,CAA4D,KAAK,CAAE,CAAE/C,KAAK,CAAE,KAAT,CAAnE,CAAqF,gBAAc,IAAnG,CAAwG,gBAAc,GAAtH,CAA0H,gBAAc,KAAxI,EADA,CADJ,cAII,6BAAI,sBAAJ,CAJJ,CAFA,CADJ,CAhCD,cA2CC,8BA3CD,cA4CC,2CACI,2CACA,2BAAK,SAAS,CAAC,yBAAf,eAAyC,oBAAC,IAAD,MAAzC,iDADA,CADJ,cAII,2CACA,2BAAK,SAAS,CAAC,cAAf,eACI,+DADJ,cAEI,oDAFJ,cAGI,6BAAI,+MAAJ,CAHJ,cAII,2BAAK,SAAS,CAAC,gCAAf,EAAiD,kBAAjD,CAJJ,cAKI,2BAAK,SAAS,CAAC,QAAf,CAAwB,GAAG,CAAEgD,OAAO,CAAC,mDAAD,CAApC,CAA2F,GAAG,CAAC,EAA/F,EALJ,CADA,CAJJ,cAaI,2CACA,2BAAK,SAAS,CAAC,cAAf,eACI,uDADJ,cAEI,8BAAK,WAAL,CAFJ,cAGI,iCAAK,+GAAL,CAHJ,cAII,2BAAK,SAAS,CAAC,gCAAf,iBAJJ,cAKI,2BAAK,SAAS,CAAC,QAAf,CAAwB,GAAG,CAAEA,OAAO,CAAC,oDAAD,CAApC,CAA4F,GAAG,CAAC,EAAhG,EALJ,CADA,CAbJ,CA5CD,CADH,CADA,CADJ,CADA,cA2EA,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,CAAoB,SAAS,CAAC,YAA9B,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,oBAAC,IAAD,EAAM,SAAS,CAAE,sBAAjB,eACI,oBAAC,UAAD,EAAY,SAAS,CAAC,wBAAtB,eACI,mDADJ,cAEI,yBAAG,KAAK,CAAE,CAAElD,SAAS,CAAE,OAAb,CAAV,EAAmCxF,SAAS,GAAK,IAAd,CAAqB,wIAArB,CAAgK,iHAAnM,CAFJ,CADJ,cAKI,oBAAC,QAAD,MACKA,SAAS,GAAK,IAAd,cAAqB,yBAAG,SAAS,CAAC,uBAAb,2PAAwQ,0CAAxQ,sBAAmS,yCAAnS,0FAArB,cAAsa,4CACna,iGAAuD,6CAAvD,sCADma,cAEna,8BAFma,cAGna,oBAAC,MAAD,EAAQ,EAAE,CAAE,yBAAZ,CAAuC,KAAK,CAAE,CAAE0F,KAAK,CAAE,MAAT,CAA9C,CAAiE,OAAO,KAAxE,CAAyE,KAAK,CAAE,cAAhF,CAAgG,SAAS,CAAC,4BAA1G,CAAuI,OAAO,CAAE,IAAM,CAClJjC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B3D,SAA9B,EAEA7B,mBAAmB,CAACwK,IAApB,CAAyB,iFAAzB,CAA4G,iCAA5G,CAA+I,IAA/I,EACH,CAJD,mCAI8B3I,SAJ9B,EAHma,cAQna,8BARma,cASna,oBAAC,MAAD,EAAQ,EAAE,CAAE,yBAAZ,CAAuC,KAAK,CAAE,CAAE0F,KAAK,CAAE,MAAT,CAA9C,CAAiE,OAAO,KAAxE,CAAyE,KAAK,CAAE,YAAhF,CAA8F,SAAS,CAAC,0BAAxG,CAAmI,OAAO,CAAE,IAAM,CAC9IjC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B,qCAA9B,EAEAxF,mBAAmB,CAACwK,IAApB,CAAyB,iFAAzB,CAA4G,iCAA5G,CAA+I,IAA/I,EACH,CAJD,0DATma,CAD3a,CALJ,CADJ,cAyBI,oBAAC,IAAD,EAAM,SAAS,CAAE,sBAAjB,CAAyC,KAAK,CAAE,CAAEC,YAAY,CAAE,QAAhB,CAAhD,eACI,oBAAC,QAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,CAAqB,EAAE,CAAC,IAAxB,CAA6B,EAAE,CAAC,IAAhC,eACI,2BAAK,SAAS,CAAE,oBAAhB,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAElD,KAAK,CAAE,MAAT,CAAf,CAAkC,OAAO,KAAzC,CAA0C,KAAK,CAAE,cAAjD,CAAiE,SAAS,CAAC,4BAA3E,CAAwG,OAAO,CAAEU,qCAAjH,2DADJ,CADJ,CADJ,CADJ,CADJ,CAzBJ,cAqCI,oBAAC,IAAD,EAAM,SAAS,CAAE,sBAAjB,eAEI,oBAAC,QAAD,EAAU,SAAS,CAAC,iCAApB,eACI,0BAAI,SAAS,CAAC,MAAd,iEADJ,cAEI,uEAA6B,+CAA7B,wCAA+E,yCAA/E,uBAA0G,+CAA1G,8KAFJ,cAGI,8BAHJ,CAIKpG,SAAS,GAAK,IAAd,cAAqB,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAE0F,KAAK,CAAE,MAAT,CAAiBkD,YAAY,CAAE,QAA/B,CAAf,CAA0D,OAAO,KAAjE,CAAkE,KAAK,CAAE,YAAzE,CAAuF,SAAS,CAAC,0BAAjG,CAA4H,OAAO,CAAE,IAAM,CAC7JzI,eAAe,CAAC,CAACD,UAAF,CAAf,CACH,CAFqB,EAElBA,UAAU,GAAK,KAAf,CAAuB,gCAAvB,CAA0D,8BAFxC,CAArB,CAEwG,IAN7G,CAOKI,cAAc,GAAK,IAAnB,EAA2BJ,UAAU,GAAK,KAA1C,cAAkD,oBAAC,cAAD,EAC/C,GAAG,CAAEI,cAD0C,CAE/C,QAAQ,CAAE,IAFqC,CAG/C,QAAQ,CAAE,IAHqC,CAI/C,KAAK,CAAC,MAJyC,CAK/C,MAAM,CAAC,MALwC,EAAlD,CAMI,IAbT,CAcKA,cAAc,GAAK,IAAnB,CAA0B,IAA1B,CAAiC2D,sBAAsB,EAd5D,CAFJ,CArCJ,CADJ,CA3EA,CADJ,CAFA,CADJ,CA+IH,CAlkBD,CAmkBA,KAAM4E,CAAAA,eAAe,CAAIC,KAAD,EAAW,CAC/B,MAAO,CACHvJ,QAAQ,CAAEuJ,KAAK,CAACC,IAAN,CAAW5F,IADlB,CAEH3D,MAAM,CAAEsJ,KAAK,CAACE,gBAAN,CAAuBA,gBAF5B,CAAP,CAIH,CALD,CAMA,cAAe9K,CAAAA,OAAO,CAAC2K,eAAD,CAAkB,CAAEnK,uBAAF,CAAlB,CAAP,CAAsDY,iCAAtD,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Input, Button, Link, NavLink, Nav, NavItem, TabPane, TabContent, Media, Label } from 'reactstrap'\nimport { Database, Grid, Upload, Code } from 'react-feather';\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { useForm, Controller } from 'react-hook-form';\nimport hookFormHelpers from \"./helpers/helperFunctions.js\";\nimport Select from \"react-select\";\nimport nonFormHelpers from \"./helpers/nonFormHelpers.js\";\nimport ReactHlsPlayer from 'react-hls-player';\nimport { saveStreamPreFilledData } from \"../../../../../redux/actions/streaming/creation/createNewStreamData.js\";\nimport { useHistory } from \"react-router-dom\";\nimport uuid from \"react-uuid\";\n\n// redux-form-hook helpers\nconst handleSubcategoryCheckerChange = hookFormHelpers().handleSubcategoryCheckerChange; \nconst subcategoryChecker = hookFormHelpers().subcategoryChecker;\nconst listingTitleChecker = hookFormHelpers().listingTitleChecker;\nconst mainDescriptionChecker = hookFormHelpers().mainDescriptionChecker;\n// NON-form helper functions\nconst { HashtagHelper, languageList } = nonFormHelpers;\n\n\nconst subcategoryOptions = [\n    { value: 'spear-phishing-attacks', label: 'Spear Phishing Attacks' },\n    { value: 'phishing', label: 'Phishing Related' },\n    { value: \"ransomware\", label: \"Ransomware Related\" },\n    { value: \"drive-by-attack\", label: \"Drive-by Attack\" },\n    { value: \"trojan-horses\", label: \"Trojan Horses\" },\n    { value: \"password-attack\", label: \"Password Attack\" },\n    { value: \"phone-call-text-related\", label: \"Phone-Call/Text-Related\" },\n    { value: \"eavesdropping-attack\", label: \"Eavesdropping Attack\" },\n    { value: \"clickjacking-ui-redress\", label: \"Clickjacking/UI Redress\" },\n    { value: \"dns-spoofing\", label: \"DNS Spoofing\" },\n    { value: \"watering-hole-attack\", label: \"Watering Hole Attack\" },\n    { value: \"keylogger-attack\", label: \"Keylogger Attack\" },\n    { value: \"bruteforce-attack\", label: \"Brute-Force Attack\" },\n    { value: \"dictionary-attack\", label: \"Dictionary Attack\" },\n    { value: \"credential-reuse\", label: \"Credential Reuse\" },\n    { value: 'sql-injection-attack', label: 'SQL Injection Attack' },\n    { value: \"fake-wap\", label: \"Fake WAP\" },\n    { value: \"bait-and-switch\", label: \"Bait & Switch\" },\n    { value: \"browser-locker\", label: \"Browser Locker\" },\n    { value: \"birthday-attack\", label: \"Birthday attack\" },\n    { value: \"insider-threat\", label: \"Insider Threat\" },\n    { value: \"ai-powered-attack\", label: \"AI-Powered Attacks\" }\n];\nconst CreateNewLiveStreamAsHackerHelper = ({ saveStreamPreFilledData, userData, SBData }) => {\n    // create history redirect abliity\n    const history = useHistory();\n    // refs initialization\n    const subCategoryRefSelector = useRef(null);\n    const codingLanguageSelectRef = useRef(null);\n    // initialize state obj's\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [ tabbedPaneActive, setTabbedPaneActive ] = useState(\"1\");\n    const [ streamKey, setStreamKey ] = useState(null);\n    const [ hideStream, setStreamHidden ] = useState(true);\n    const [ streamInfo, setStreamInfo ] = useState(null);\n    const [ playbackStream, setPlaybackStream ] = useState(null);\n    const [ visibility, setVisibility ] = useState(null);\n    const [ languageOptionsState, setLanguageSelectorOptions ] = useState(null);\n    const [ selectedMainCategory, setSelectedMainCategoryState ] = useState(\"none-selected\")\n\n\n    // react-hook-form logic - initialization\n    const { register, handleSubmit, control, watch, setValue, getValues, setError, values, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    useEffect(() => {\n        // component mounted\n        const languagePromise = new Promise((resolve, reject) => {\n            const newLanguageReformattedArray = [];\n\n            for (let index = 0; index < languageList.length; index++) {\n                const language = languageList[index];\n                \n                newLanguageReformattedArray.push({\n                    label: language.name,\n                    value: language.name\n                });\n                if ((languageList.length - 1) === index) {\n                    resolve(newLanguageReformattedArray);\n                }\n            }\n        })\n\n        languagePromise.then((array) => {\n            setLanguageSelectorOptions(array);\n        })\n    },[])\n\n    const handleChange = event => {\n        event.preventDefault();\n        setSearchTerm(event.target.value)\n    };\n    const handleLiveStreamStart = () => {\n        console.log(\"handleLiveStream start...\");\n        \n        axios.get(`${process.env.REACT_APP_BASE_URL}/create/live/stream/stream/key`).then((res) => {\n            if (res.data.message === \"We've generated your stream key!\") {\n                console.log(res.data);\n                // pull off streamKey\n                const { streamKey, result } = res.data;\n\n                const playbackID = `https://stream.mux.com/${result.playback_ids[0].id}.m3u8 `;\n\n                setPlaybackStream(playbackID);\n\n                navigator.clipboard.writeText(streamKey);\n\n                NotificationManager.success(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\", 'COPIED STREAM KEY TO CLIPBOARD!', 4750);\n\n                setStreamKey(streamKey);\n                setStreamInfo(result);\n            } else {\n                console.log(\"err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    const renderFormError = (e, errors) => {\n        console.log(e, errors);\n    }\n    const renderBeforeReadyLogic = () => {\n        const currentValues = getValues();\n\n        const renderSelection = (languageOptions) => {\n            return (\n                <Fragment>\n                    <Label>Primary Language(Coding) Used During Stream</Label>\n                        <Controller\n                            control={control}\n                            name=\"codingLanguage\"\n                            {...register(\"codingLanguage\", { required: {\n                                    value: true,\n                                    message: \"You MUST select a streaming primary coding language before proceeding\"\n                                }, onBlur: (e) => {\n                                    // deconstruct desired value\n                                    const value = e.target.value;\n                                    // set delay to allow previous changes to complete (state changes) - doesnt need to be long\n                                    setTimeout(() => {\n                                        // clear error after proper selection\n                                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                                            clearErrors(\"codingLanguage\");\n                                        } else {\n                                        // set error as nothing was selected (blank 'click-off' selection of selector)\n                                        setError(\"codingLanguage\", {\n                                            type: \"manual\",\n                                            message: \"You MUST select a streaming primary coding language before proceeding\",\n                                        });\n                                    }\n                                }, 100);\n                            }})}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    ref={codingLanguageSelectRef}\n                                    autoBlur={true}\n                                    defaultValue={null}\n                                    onMenuClose={() => {}}\n                                    value={currentValues.codingLanguage}\n                                    onChange={(selectedOption) => {\n                                        console.log(\"selected\", selectedOption)\n                                        // update redux-form state\n                                        setTimeout(() => {\n                                            setValue('codingLanguage', selectedOption, { shouldValidate: false })\n                                            // blur input in case it doesn't\n                                            codingLanguageSelectRef.current.blur();\n                                        }, 100)\n                                    }}\n                                    options={languageOptions}\n                                />\n                            )}\n                        />\n                        {errors.codingLanguage ? <span className=\"span-tooltip\">{errors.codingLanguage.message}</span> : null}\n                </Fragment>\n            );\n        }\n        console.log(\"currentValues currentValues :\", currentValues);\n\n        watch([\"mainDescription\", \"streamHashtags\", \"subCategory\", \"listingTitle\", ])\n        return (\n            <Fragment>\n                <Card className={\"shadow-medium-custom\"}>\n                    <CardHeader className=\"b-l-primary border-3\">\n                        <h5>You have <strong>not</strong> officially started/initalized your live stream yet...Manage your settings BEFORE going live using the options below</h5>\n                    </CardHeader>\n                    <CardBody>\n                    <CardHeader>\n                        <h5>{tabbedPaneActive === \"2\" ? \"General Settings Adjustment's & Modifications\" : \"Visibility Setting's & Viewability\"}</h5>\n                    </CardHeader>\n                    <CardBody>\n                        <Nav className=\"nav-dark\">\n                            <NavItem>\n                                <NavLink href={null} className={tabbedPaneActive === '1' ? 'active' : ''} onClick={() => setTabbedPaneActive('1')}><i className=\"icofont icofont-ui-home\"></i>VISIBILITY</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink disabled={visibility !== null ? false : true} href={null} className={tabbedPaneActive === '2' ? 'active' : ''} onClick={() => setTabbedPaneActive('2')}><i className=\"icofont icofont-man-in-glasses\"></i>GENERAL SETTINGS (title, desc, etc...)</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={tabbedPaneActive}>\n                            <TabPane className={\"fade show custom-tab-pane-streaming\"} tabId=\"1\">\n                                <Form className=\"mega-inline\">\n                                    <Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <p className=\"mega-title-custom-streaming\">Select Visibility - Dicate <strong>WHO</strong> can see/view your live stream in action</p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-primary mr-3\">\n                                                            <Input onClick={() => {\n                                                                setVisibility({\n                                                                    visibility: \"public/anyone\",\n                                                                    accountType: null\n                                                                })\n                                                                setTabbedPaneActive(\"2\")\n                                                            }} checked={visibility !== null && visibility.visibility === \"public/anyone\" ? true : false} id=\"radio30\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio30\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">PUBLIC/ANYONE<span className=\"badge badge-primary pull-right digits custom-digits-streaming\">{\"PUBLIC/ANYONE (On/Off Platform)\"}</span></h6>\n                                                            <p>{`Public/anyone meaning ANYONE (employer's & hacker accounts alike) can both view your live stream AS WELL as anyone NOT registered on the ${process.env.REACT_APP_APPLICATION_NAME} platform...`}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-secondary mr-3\">\n                                                            <Input onClick={() => {\n                                                                setVisibility({\n                                                                    visibility: \"only-platform-users\",\n                                                                    accountType: null\n                                                                })\n                                                                setTabbedPaneActive(\"2\")\n                                                            }} checked={visibility !== null && visibility.visibility === \"only-platform-users\" ? true : false} id=\"radio31\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio31\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">PUBLIC/ANYONE ON {process.env.REACT_APP_APPLICATION_NAME} <span className=\"badge badge-secondary pull-right digits custom-digits-streaming\">{`Anyone on ${process.env.REACT_APP_APPLICATION_NAME}`}</span></h6>\n                                                            <p>{`Anyone on our platform (${process.env.REACT_APP_APPLICATION_NAME}) will be able to view your live stream HOWEVER people that're NOT REGISTERED on our platform will NOT be able to view your live stream until they login & identifiy themselves...`}</p>\n                                                        </Media>\n                                                    </Media>\n                                                    \n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-success mr-3\">\n                                                            <Input onClick={() => {\n                                                                setVisibility({\n                                                                    visibility: \"specific-group\",\n                                                                    accountType: \"employers\"\n                                                                })\n                                                                setTabbedPaneActive(\"2\")\n                                                            }} checked={visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"employers\" ? true : false} id=\"radio32\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio32\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">ONLY EMPLOYERS'S CAN VIEW<span className=\"badge badge-success pull-right digits custom-digits-streaming\">{\"ONLY EMPLOYERS'S\"}</span></h6>\n                                                            <p>{\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects EMPLOYER'S GROUP.\"}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Card className={\"shadow-showcase-custom\"}>\n                                                    <Media className=\"p-20\">\n                                                        <div className=\"radio radio-info mr-3\">\n                                                            <Input onClick={() => {\n                                                                setVisibility({\n                                                                    visibility: \"specific-group\",\n                                                                    accountType: \"hackers\"\n                                                                })\n                                                                setTabbedPaneActive(\"2\")\n                                                            }} checked={visibility !== null && visibility.visibility === \"specific-group\" && visibility.accountType === \"hackers\" ? true : false} id=\"radio33\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                                                            <Label for=\"radio33\"></Label>\n                                                        </div>\n                                                        <Media body>\n                                                            <h6 className=\"mt-0 mega-title-badge mega-title-badge-streaming-custom\">ONLY HACKER'S CAN VIEW<span className=\"badge badge-info pull-right digits custom-digits-streaming\">{\"ONLY HACKER'S\"}</span></h6>\n                                                            <p>{\"This option allows you to change your settings to cater to either 'Employers' OR 'hackers' specifically while excluding the other NON-chosen option. This is useful if you'd like to stream to friends or fellow hacker's without employers being able to judge/guage your skillset for future gigs/jobs... This option selects HACKER GROUP.\"}</p>\n                                                        </Media>\n                                                    </Media>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Row>\n                                </Form>\n                            </TabPane>\n                            <TabPane className={\"custom-tab-pane-streaming\"} tabId=\"2\">\n                                <Form className=\"needs-validation streaming-start-form-wrapper\" noValidate=\"\" onSubmit={handleSubmit(handleLiveStreamStart, (e, errors) => renderFormError(e, errors))}>\n                                    <div className=\"form-row\">\n                                        <Col md=\"4 mb-3 custom-col-streaming-one\">\n                                            <Label htmlFor=\"validationCustom01\">{listingTitleChecker.label}</Label>\n                                            <Input {...listingTitleChecker.check(setError, register, values, errors, \"subCategory\", clearErrors)} value={currentValues.listingTitle} onChange={(e) => listingTitleChecker.onChange(e, setValue)} className=\"form-control\" name={listingTitleChecker.name} type={listingTitleChecker.type} placeholder={listingTitleChecker.placeholder} />\n                                            {errors.listingTitle ? <span className=\"span-tooltip\">{errors.listingTitle.message}</span> : null}\n                                        </Col>\n                                        <Col md=\"4 mb-3 custom-col-streaming-two\">\n                                            <Label>{subcategoryChecker.label}</Label>\n                                            <Controller\n                                                control={control}\n                                                name={subcategoryChecker.name}\n                                                {...subcategoryChecker.check(setError, register, values, errors, \"subCategory\", clearErrors)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        ref={subCategoryRefSelector}\n                                                        autoBlur={true}\n                                                        placeholder={subcategoryChecker.placeholder}\n                                                        defaultValue={null}\n                                                        onMenuClose={() => {}}\n                                                        value={currentValues.subCategory}\n                                                        onChange={(selectedOption) => handleSubcategoryCheckerChange(selectedOption, setValue, subCategoryRefSelector)}\n                                                        options={subcategoryOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.subCategory ? <span className=\"span-tooltip\">{errors.subCategory.message}</span> : null}\n                                        </Col>\n                                        <Col md=\"4 mb-3 custom-col-streaming-three\">\n                                            {languageOptionsState !== null ? renderSelection(languageOptionsState) : null}\n                                        </Col>\n                                    </div>\n                                    <div className=\"form-row\">\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <HashtagHelper setError={setError} register={register} values={currentValues} errors={errors} setValue={setValue} clearErrors={clearErrors} control={control} errors={errors} />\n                                        </Col>\n                                    </div>\n                                    <div style={{ marginTop: \"12.5px\" }} className=\"form-row\">\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Label>{mainDescriptionChecker.label}</Label>\n                                            <Input\n                                                {...mainDescriptionChecker.check(setError, register, values, errors, \"subCategory\", clearErrors)} \n                                                value={currentValues.mainDescription} \n                                                onChange={(e) => mainDescriptionChecker.onChange(e.target.value, setValue)} \n                                                name={mainDescriptionChecker.name} \n                                                onBlur={(e) => mainDescriptionChecker.onBlur(e, clearErrors, mainDescriptionChecker.name, setError)}\n                                                type={mainDescriptionChecker.type} \n                                                rows={8}\n                                                placeholder={mainDescriptionChecker.placeholder} \n                                            />\n                                            {errors.mainDescription ? <span className=\"span-tooltip\">{errors.mainDescription.message}</span> : null}\n                                        </Col>\n                                    </div>\n                                    <Button style={{ width: \"100%\", marginTop: \"17.5px\" }} outline className={\"btn-square-info\"} color=\"info-2x\">{\"Submit Data & REQUEST Streaming Key/Data!\"}</Button>\n                                </Form>\n                            </TabPane>\n                        </TabContent>\n                    </CardBody>\n                    </CardBody>\n                </Card>\n            </Fragment>\n        );\n    }\n    const calculateLatestImage = (user) => {\n        const reversed = user.profilePicsVideos.reverse();\n    \n        for (let index = 0; index < reversed.length; index++) {\n            const item = reversed[index];\n            if (item.type.includes(\"image\")) {\n                return `${process.env.REACT_APP_ASSET_LINK}/${item.link}`;\n                break;\n            }\n        };\n    }\n    const handleFinalSubmissionAfterStreamStart = () => {\n        console.log(\"handleFinalSubmissionAfterStreamStart clicked.\");\n\n        // gather form values\n        const currentValues = getValues();\n        // redux-hook-form values completed!\n        const { mainDescription, streamHashtags, subCategory, listingTitle, codingLanguage } = currentValues;\n        // assign MAIN category\n        const mainCategory = selectedMainCategory;\n        // visibility \n        const streamVisibility = visibility;\n\n        const timeoutCount = 5500;\n\n        const handleNotificationClick = (timeout) => {\n            clearTimeout(timeout);\n            history.push(`/view/all/live/streams/general`);\n        }\n\n        if (streamInfo !== null) {\n            const streamInformationCustomized = {\n                streamVisibility,\n                streamMainCategory: mainCategory,\n                streamMainDescription: mainDescription, \n                streamHashtags, \n                streamSubCategory: subCategory, \n                listingTitle, \n                streamCodingLanguage: codingLanguage,\n                id: uuid()\n            };\n            // create variables for params below...\n            const coverURL = calculateLatestImage(userData);\n            const title = `Live Stream - ${streamInformationCustomized.id} - by ${userData.firstName} ${userData.lastName}`;\n\n            const params = new SBData.OpenChannelParams();\n            // params logic\n            params.name = title;\n            params.coverUrlOrImage = coverURL;\n            params.operatorUserIds = [userData.uniqueId]; // Or .operators(Array<User>)\n            // params.data = DATA;\n            params.customType = \"public\";\n\n            SBData.OpenChannel.createChannel(params, (openChannel, error) => {\n                if (error) {\n                    // Handle error.\n                    console.log(\"error OpenChannel.createChannel - \", error);\n                } else {\n                    const channelUrl = openChannel.url;\n                    \n                    console.log(\"channel OPEN - : \", openChannel, channelUrl);\n\n                    const config = {\n                        streamID: streamInfo.id,\n                        streamInformationCustomized,\n                        posterID: userData.uniqueId,\n                        posterName: `${userData.firstName} ${userData.lastName}`,\n                        posterUsername: userData.username,\n                        streamKey,\n                        channelUrl: channelUrl\n                    };\n                    axios.post(`${process.env.REACT_APP_BASE_URL}/check/live/stream/active`, config).then((res) => {\n                        if (res.data.message === \"STREAM IS ACTIVATED & LIVE!\") {\n                            // render checks for completed (fully) form data and stream started...\n                            if ((typeof codingLanguage !== \"undefined\" && Object.keys(codingLanguage).length > 0) && (typeof listingTitle !== \"undefined\" && (listingTitle.length >= 15 && listingTitle.length <= 75)) && (typeof mainDescription !== \"undefined\" && (mainDescription.length >= 50 && mainDescription.length <= 1000)) && (typeof streamHashtags !== \"undefined\" && streamHashtags.length >= 5) && (typeof subCategory !== \"undefined\" && Object.keys(subCategory).length > 0) && (typeof streamVisibility !== \"undefined\" && streamVisibility !== null)) {\n                                // make sure user selects a MAIN CATEGORY before proceeding...\n                                if (selectedMainCategory === \"none-selected\") {\n                                    // THROW WARNING Notification\n                                    NotificationManager.warning(\"You have COMPLETED 'most' of the required data for this listing, however you forgot to select a 'Main Category' for your stream (top-left selection button's) - please select this value before proceeding & you'll be all set!\", \"LAST STEP - Select a 'MAIN Category'!\", 5250);\n                                } else {\n                                    // SUCCESS ! - use redux to save data for next \"Review\" page...\n                                    saveStreamPreFilledData(streamInformationCustomized) \n            \n                                    const timeout = setTimeout(() => {\n                                        history.push(`/view/all/live/streams/general`);\n                                    }, timeoutCount);\n            \n                                    NotificationManager.success(`Successfully saved your data & you will now be redirect to your LIVE stream in 5 seconds or click me to immediately redirect!`, \"SUCCESSFULLY INITIATED LIVE STREAM!\", timeoutCount, () => {\n                                        handleNotificationClick(timeout);\n                                    });\n                                }\n                            } else {\n                                // THROW ERROR Notification\n                                NotificationManager.error(\"You MUST complete the required data in 'visibility' & 'general settings' before attempting to proceed and start your live stream...\", \"ALL required data is NOT provided yet!\", 5250);\n                            }\n                        } else if (res.data.message === \"Stream is currently IDLE - NOT live yet...\") {\n                            NotificationManager.warning(\"Your stream is currently in an 'IDLE' state which means you have NOT offically started the live stream yet - you still need to connect w/your STREAM-KEY & SERVER URL (via broadcasting software)\", \"Stream is NOT live yet!\", 5000);\n                        } else {\n                            console.log(\"STREAM NOT ACTIVE.... : \", res.data);\n            \n                            NotificationManager.error(\"We've determined that your stream is in fact NOT live YET, You must START your stream & verify you can view it on this page before proceeding to the 'review page'...\", \"Stream is NOT live yet!\", 5000);\n                        }\n                    }).catch((err) => {\n                        console.log(err);\n            \n                        NotificationManager.error(\"An unknown error occurred while trying to fetch your live stream & determine whether or not it's already live... Please TRY AGAIN.\", \"Stream is NOT live yet!\", 5000);\n                    })\n                }\n            });\n        } else {\n            NotificationManager.error(\"You MUST complete ALL of the required data in 'visibility' & 'general settings' before attempting to proceed and start your live stream...\", \"ALL required data is NOT provided yet!\", 5250);\n        }\n    }\n    // const currentValues = getValues();\n    console.log(streamKey, streamInfo);\n    // console.log(\"PRE-CHECKS... : \", currentValues, selectedMainCategory, visibility);\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Live streaming creation\" title=\"Create a new 'live hacking-stream' now!\" />\n        <Container fluid={true}>\n            <Row>\n            <Col xl=\"3\" className=\"box-col-6 pr-0 file-spacing\">\n                <div className=\"file-sidebar\">\n                <Card className={\"shadow-medium-custom\"}>\n                   <CardBody>   {/*  selectedMainCategory, setSelectedMainCategoryState */}\n                    <h6 className=\"mb-3\">Select a category of your live hacking stream before being able to start your stream & go public!</h6>\n                    <ul>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"none-selected\")} className={selectedMainCategory === \"none-selected\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> NONE SELECTED - N/A</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"api-testing\")} className={selectedMainCategory === \"api-testing\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> API-Endpoint Testing/Hacking</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"malware-exploit\")} className={selectedMainCategory === \"malware-exploit\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Malware</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"phishing-exploit\")} className={selectedMainCategory === \"phishing-exploit\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Phishing</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"sql-injection-attack\")} className={selectedMainCategory === \"sql-injection-attack\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> SQL-Injection Attack</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"cross-site-scripting-xss\")} className={selectedMainCategory === \"cross-site-scripting-xss\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Cross-Site Scripting (XSS)</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"denial-of-service\")} className={selectedMainCategory === \"denial-of-service\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Denial-of-Service (DoS)</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"session-hijacking-man-in-middle\")} className={selectedMainCategory === \"session-hijacking-man-in-middle\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Session Hijacking / Man-in-middle</div>\n                        </li>\n                        <li>\n                            <div onClick={() => setSelectedMainCategoryState(\"credential-reuse\")} className={selectedMainCategory === \"credential-reuse\" ? \"btn btn-info\" : \"btn btn-light\"}><Code /> Credential Reuse</div>\n                        </li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        <li>\n                        <div className=\"btn btn-outline-primary\"><Database />{Storage}</div>\n                        <div className=\"m-t-15\">\n                            <div className=\"progress sm-progress-bar mb-1\">\n                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                            <p>{\"25 GB of 100 GB used\"}</p>\n                        </div>\n                        </li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        <li>\n                        <div className=\"btn btn-outline-primary\"><Grid />Pricing for subscription (premium membership)</div>\n                        </li>\n                        <li>\n                        <div className=\"pricing-plan\">\n                            <h6>Trial \"Tier-Hacker\" Account </h6>\n                            <h5>FREE (limited-time)</h5>\n                            <p>{\"Signup for our FREE 'tier-hacker' account which is basically a super-bonus version of a regular account. This includes many restricted features/functionality and give's you a better stance on our platform.\"}</p>\n                            <div className=\"btn btn-outline-success btn-md\">{\"Already a member\"}</div>\n                            <img className=\"bg-img\" src={require(\"../../../../../assets/images/dashboard/folder.png\")} alt=\"\" />\n                        </div>\n                        </li>\n                        <li>\n                        <div className=\"pricing-plan\">\n                            <h6>Premium Live Streaming</h6>\n                            <h5>{\"$25/month\"}</h5>\n                            <p> {\"Placed on homepage at top of list and shown BEFORE all other listings that're NOT boosted/promoted as well...\"}</p>\n                            <div className=\"btn btn-outline-primary btn-md\">Upgrade Now!</div>\n                            <img className=\"bg-img\" src={require(\"../../../../../assets/images/dashboard/folder1.png\")} alt=\"\" />\n                        </div>\n                        </li>\n                    </ul>\n                    </CardBody>\n                </Card>\n                </div>\n            </Col>\n            <Col xl=\"9\" md=\"12\" className=\"box-col-12\">\n                <div className=\"file-content\">\n                    <Card className={\"shadow-medium-custom\"}>\n                        <CardHeader className=\"b-l-secondary border-3\">\n                            <h5>Live Streaming Key</h5>\n                            <p style={{ marginTop: \"7.5px\" }}>{streamKey === null ? \"You can't create a 'stream-key' YET because you need to configure your listing first & fill out the required data before proceeding...\" : \"This will allow you to <strong>START</strong> your live stream (enter your copied 'stream key' to start stream)\"}</p>\n                        </CardHeader>\n                        <CardBody>\n                            {streamKey === null ? <p className=\"before-text-streamkey\">Once you \"start\" your live stream process by clicking \"Start a live stream!\" above to initialize your \"stream key\" to go to the next-step of the process of starting and initalizing a publically viewable live stream... However, <strong>FIRST</strong> you <strong>must</strong> complete the \"visibility\" & \"general-settings\" details before proceeding forward.</p> : <div>\n                                <p>Your stream key is below, Click the button below to <strong>\"Copy\"</strong> the stream key to your clipboard.</p>\n                                <hr />\n                                <Button id={\"no-border-button-custom\"} style={{ width: \"100%\" }} outline color={\"secondary-2x\"} className=\"btn-squared-secondary ml-1\" onClick={() => {\n                                    navigator.clipboard.writeText(streamKey);\n\n                                    NotificationManager.info(\"Successfully copied 'Stream Key' to 'Clipboard' & it is now ready to be pasted!\", 'COPIED STREAM KEY TO CLIPBOARD!', 4750);\n                                }}>{`Copy your STREAM KEY ~ ${streamKey}`}</Button>\n                                <hr />\n                                <Button id={\"no-border-button-custom\"} style={{ width: \"100%\" }} outline color={\"primary-2x\"} className=\"btn-squared-primary ml-1\" onClick={() => {\n                                    navigator.clipboard.writeText(\"rtmps://global-live.mux.com:443/app\");\n\n                                    NotificationManager.info(\"Successfully copied 'Server URL' to 'Clipboard' & it is now ready to be pasted!\", 'COPIED SERVER URL TO CLIPBOARD!', 4750);\n                                }}>{`Copy Server URL ~ rtmps://global-live.mux.com:443/app`}</Button>\n                            </div>}\n                        </CardBody>\n                    </Card>\n                    {/* conditional render BELOW */}\n                    <Card className={\"shadow-medium-custom\"} style={{ marginBottom: \"37.5px\" }}>\n                        <CardBody> \n                            <Row>\n                                <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                                    <div className={\"centered-both-ways\"}>\n                                        <Button style={{ width: \"100%\" }} outline color={\"secondary-2x\"} className=\"btn-squared-secondary ml-1\" onClick={handleFinalSubmissionAfterStreamStart}>Submit Stream & Go LIVE/PUBLIC! (All pre-work is done)</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                    {/* conditional render ABOVE*/}\n                    <Card className={\"shadow-medium-custom\"}>\n\n                        <CardBody className=\"custom-cardbody-streaming-start\">\n                            <h4 className=\"mb-3\">Upload/start a new LIVE stream (live streams of live hack's)</h4>\n                            <h6>Start a stream of a LIVE <strong>AUTHORIZED</strong> hack (digital asset's <strong>ONLY</strong>) and <strong>EARN MONEY</strong> via \"Gifts\", \"Kudo's\" and other various incentives/prizes while hacking away! You'll earn more money if you have more followers/viewers so try to grow your audience!</h6>\n                            <hr />\n                            {streamKey !== null ? <Button style={{ width: \"100%\", marginBottom: \"22.5px\" }} outline color={\"success-2x\"} className=\"btn-squared-success ml-1\" onClick={() => {\n                                setStreamHidden(!hideStream);\n                            }}>{hideStream === false ? \"Hide Stream & Reload Stream...\" : \"Show Stream & Reload Stream!\"}</Button> : null}\n                            {playbackStream !== null && hideStream === false ? <ReactHlsPlayer\n                                src={playbackStream}\n                                autoPlay={true}\n                                controls={true}\n                                width=\"100%\"\n                                height=\"auto\"\n                            /> : null}\n                            {playbackStream !== null ? null : renderBeforeReadyLogic()}\n                        </CardBody>\n                    </Card>\n                </div>\n\n            </Col>\n            </Row>\n        </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        SBData: state.sendbirdInitData.sendbirdInitData\n    }\n}\nexport default connect(mapStateToProps, { saveStreamPreFilledData })(CreateNewLiveStreamAsHackerHelper);"]},"metadata":{},"sourceType":"module"}