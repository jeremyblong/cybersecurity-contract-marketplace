{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/helpers/helperFunctions.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Popover, PopoverHeader, PopoverBody, Row, Col } from \"reactstrap\";\nimport \"../styles.css\";\n\nconst RenderPopoverEmojiLogic = _ref => {\n  let {\n    reactions,\n    targetAndPopState,\n    setPopoverState,\n    popoverState\n  } = _ref;\n  const [emojiStateArr, setEmojiStateArray] = useState([]);\n  const [stateCount, setStateCount] = useState(0);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const emojiArray = [];\n    const alreadyAdded = [];\n    let count = 0;\n\n    for (const key in reactions) {\n      const reactionName = key;\n      const reactionOutcome = reactions[key];\n      console.log(\"emoji looped...:\", reactionName, reactionOutcome); // check if emoji is already added - if not... add it!\n\n      if (reactionOutcome > 0) {\n        count++; // push emoji into array as it doesn't exist yet\n\n        alreadyAdded.push(\"reactionName\"); // create viewable history of likes/emoji responses\n\n        const newItem = {}; // push into array\n\n        emojiArray.push(newItem);\n      }\n    }\n\n    console.log(\"alreadyAdded emojis --- :\", alreadyAdded);\n    setStateCount(count);\n    setEmojiStateArray(emojiArray);\n    setReady(true);\n  }, []);\n  console.log(\"targetAndPopState :\", targetAndPopState);\n  console.log(\"custom pop check --- :\", popoverState[targetAndPopState]);\n\n  const renderMainContentPopover = () => {\n    if (ready === true) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: popoverState[targetAndPopState],\n        target: targetAndPopState,\n        toggle: () => {\n          setPopoverState(prevState => {\n            return { ...prevState,\n              [targetAndPopState]: false\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Current Comment Reaction's (\", stateCount, \" total response's)\"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseLeave: () => {\n          setPopoverState(prevState => {\n            return { ...prevState,\n              [targetAndPopState]: false\n            };\n          });\n        },\n        className: \"mouse-exit-close-popover-emojis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"sunglasses\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/sunglasses.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"steaming\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/steaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"tearsOfJoy\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"vomitting\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/vomitting.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"partying\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/partying.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"screaming\"),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/screaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 45\n        }\n      }))))))));\n    } else {\n      return null;\n    }\n  }; // {typeof emojiStateArr !== \"undefined\" && emojiStateArr.length > 0 ? emojiStateArr.map((emoji, idxxx) => {\n  //     console.log(\"custom emoji rendered...:\", emoji);\n  //     return (\n  //         <Fragment key={idxxx}>\n  //         </Fragment>\n  //     );\n  // }) : null}\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, renderMainContentPopover());\n};\n\nexport default {\n  RenderPopoverEmojiLogic\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/helpers/helperFunctions.js"],"names":["React","Fragment","useEffect","useState","Popover","PopoverHeader","PopoverBody","Row","Col","RenderPopoverEmojiLogic","reactions","targetAndPopState","setPopoverState","popoverState","emojiStateArr","setEmojiStateArray","stateCount","setStateCount","ready","setReady","emojiArray","alreadyAdded","count","key","reactionName","reactionOutcome","console","log","push","newItem","renderMainContentPopover","prevState","handleRespondEmoji","require"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Popover, PopoverHeader, PopoverBody, Row, Col } from \"reactstrap\";\nimport \"../styles.css\";\n\nconst RenderPopoverEmojiLogic = ({ reactions, targetAndPopState, setPopoverState, popoverState }) => {\n\n    const [ emojiStateArr, setEmojiStateArray ] = useState([]);\n    const [ stateCount, setStateCount ] = useState(0);\n    const [ ready, setReady ] = useState(false);\n\n    useEffect(() => {\n\n        const emojiArray = [];\n        const alreadyAdded = [];\n        let count = 0;\n\n        for (const key in reactions) {\n            const reactionName = key;\n            const reactionOutcome = reactions[key];\n\n            console.log(\"emoji looped...:\", reactionName, reactionOutcome);\n        \n            // check if emoji is already added - if not... add it!\n            if (reactionOutcome > 0) {\n                count++;\n                // push emoji into array as it doesn't exist yet\n                alreadyAdded.push(\"reactionName\");\n                // create viewable history of likes/emoji responses\n                const newItem = {};\n                // push into array\n                emojiArray.push(newItem);\n            }\n        }\n        console.log(\"alreadyAdded emojis --- :\", alreadyAdded);\n\n        setStateCount(count);\n        setEmojiStateArray(emojiArray);\n        setReady(true);\n    }, [])\n    console.log(\"targetAndPopState :\", targetAndPopState);\n\n    console.log(\"custom pop check --- :\", popoverState[targetAndPopState]);\n\n    const renderMainContentPopover = () => {\n        if (ready === true) {\n            return (\n                <Fragment>\n                    <Popover placement=\"bottom\" isOpen={popoverState[targetAndPopState]} target={targetAndPopState} toggle={() => {\n                        setPopoverState(prevState => {\n                            return {\n                                ...prevState,\n                                [targetAndPopState]: false\n                            }\n                        });\n                    }}>\n                        <PopoverHeader>Current Comment Reaction's ({stateCount} total response's)</PopoverHeader>\n                        <PopoverBody>\n                            <div onMouseLeave={() => {\n                                setPopoverState(prevState => {\n                                    return {\n                                        ...prevState,\n                                        [targetAndPopState]: false\n                                    }\n                                });\n                            }} className={\"mouse-exit-close-popover-emojis\"}>\n                                <Row>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"sunglasses\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/sunglasses.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"steaming\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/steaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"tearsOfJoy\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"vomitting\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/vomitting.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"partying\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/partying.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"screaming\")} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/screaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </PopoverBody>\n                    </Popover>\n                </Fragment>\n            );\n        } else {\n            return null;\n        }\n    }\n    // {typeof emojiStateArr !== \"undefined\" && emojiStateArr.length > 0 ? emojiStateArr.map((emoji, idxxx) => {\n    //     console.log(\"custom emoji rendered...:\", emoji);\n    //     return (\n    //         <Fragment key={idxxx}>\n\n    //         </Fragment>\n    //     );\n    // }) : null}\n    return (\n        <Fragment>\n            {renderMainContentPopover()}\n        </Fragment>\n    );\n}\n\nexport default {\n    RenderPopoverEmojiLogic\n};"]},"metadata":{},"sourceType":"module"}