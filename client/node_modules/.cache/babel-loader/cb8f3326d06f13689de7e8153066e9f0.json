{"ast":null,"code":"import _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/hackers/individualProfile/following.jsx\";\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Row, Col, Card, CardHeader, Container, CardBody, Button } from 'reactstrap';\nimport moment from \"moment\";\nimport helpers from \"./helpers/followingRelated/following/helpers.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\nvar renderProfilePicVideo = helpers.renderProfilePicVideo;\n\nvar FollowingHackerTab = function FollowingHackerTab(_ref) {\n  var user = _ref.user;\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var redirectToProfile = function redirectToProfile(element) {\n    console.log(\"redirectToHackersProfile ran...\");\n\n    if (element.followingAccountType === \"hackers\") {\n      history.push(\"/hacker/profile/individual/view/\".concat(element.followingID));\n    } else {\n      history.push(\"/employer/individual/profile/main/\".concat(element.followingID));\n    }\n  };\n\n  useEffect(function () {\n    setCards([].concat(_toConsumableArray(user.followingHackers), _toConsumableArray(user.followingCompanies)));\n  }, []);\n  console.log(\"cards\", cards);\n  console.log(\"UUUUSSEERRRRR\", user);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary b-r-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"These are the people that this user is 'following' & actively keeping-up-with!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, cards.map(function (element, i) {\n    if (element.followingAccountType === \"hackers\") {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        className: \"shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: null,\n        \"data-size\": \"1600x950\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 117\n        }\n      }, renderProfilePicVideo(element.latestProfilePicVideo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"caption\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 65\n        }\n      }, element.followingFullName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 65\n        }\n      }, \"Account Type: \", element.followingAccountType), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 65\n        }\n      }, \"Job Title: \", element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 65\n        }\n      }, \"Started Following: \", moment(element.date).fromNow()))), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-square-primary push-bottom-button-profile\",\n        color: \"primary-2x\",\n        outline: true,\n        style: {\n          width: \"100%\"\n        },\n        onClick: function onClick() {\n          return redirectToProfile(element);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 61\n        }\n      }, \"Redirect To Profile\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        className: \"shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"figure\", {\n        className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: null,\n        \"data-size\": \"1600x950\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 117\n        }\n      }, renderProfilePicVideo(element.latestProfilePicVideo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"caption\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 65\n        }\n      }, element.followingFullName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 65\n        }\n      }, \"Account Type: \", element.followingAccountType), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 65\n        }\n      }, \"Job Title: \", element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 65\n        }\n      }, \"Started Following: \", moment(element.date).fromNow()))), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-square-primary push-bottom-button-profile\",\n        color: \"primary-2x\",\n        outline: true,\n        style: {\n          width: \"100%\"\n        },\n        onClick: function onClick() {\n          return redirectToProfile(element);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 61\n        }\n      }, \"Redirect To Profile\")));\n    }\n  })))))))));\n};\n\nexport default FollowingHackerTab;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/hackers/individualProfile/following.jsx"],"names":["React","Fragment","useState","useEffect","Row","Col","Card","CardHeader","Container","CardBody","Button","moment","helpers","_","useHistory","renderProfilePicVideo","FollowingHackerTab","user","history","cards","setCards","redirectToProfile","element","console","log","followingAccountType","push","followingID","followingHackers","followingCompanies","map","i","latestProfilePicVideo","followingFullName","followingJobTitle","date","fromNow","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Row, Col, Card, CardHeader, Container, CardBody, Button } from 'reactstrap';\nimport moment from \"moment\";\nimport helpers from \"./helpers/followingRelated/following/helpers.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst { renderProfilePicVideo } = helpers;\n\nconst FollowingHackerTab = ({ user }) => {\n\n    const history = useHistory();\n\n    const [ cards, setCards ] = useState([]);\n\n\n    const redirectToProfile = (element) => {\n        console.log(\"redirectToHackersProfile ran...\");\n    \n        if (element.followingAccountType === \"hackers\") {\n            history.push(`/hacker/profile/individual/view/${element.followingID}`);\n        } else {\n            history.push(`/employer/individual/profile/main/${element.followingID}`);\n        }\n    }\n\n    useEffect(() => {\n        setCards([...user.followingHackers, ...user.followingCompanies]);\n    }, [])\n\n    console.log(\"cards\", cards);\n\n    console.log(\"UUUUSSEERRRRR\", user);\n\n    return (\n        <Fragment>\n            <Row>\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className='shadow'>\n                                <CardHeader className='b-l-primary b-r-primary'>\n                                    <h3 className='text-left'>These are the people that this user is 'following' & actively keeping-up-with!</h3>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        {cards.map((element, i) => {\n                                            if (element.followingAccountType === \"hackers\") {\n                                                return (\n                                                    <Card key={i} className='shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3'>\n                                                        <figure className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"><a href={null} data-size=\"1600x950\">\n                                                            {renderProfilePicVideo(element.latestProfilePicVideo)}\n                                                            <div className=\"caption\">\n                                                                <h4>{element.followingFullName}</h4>\n                                                                <p>Account Type: {element.followingAccountType}</p>\n                                                                <p>Job Title: {element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"}</p>\n                                                                <p>Started Following: {moment(element.date).fromNow()}</p>\n                                                            </div></a>\n                                                            <Button className='btn-square-primary push-bottom-button-profile' color={\"primary-2x\"} outline style={{ width: \"100%\" }} onClick={() => redirectToProfile(element)}>Redirect To Profile</Button>\n                                                        </figure>\n                                                    </Card>\n                                                );\n                                            } else {\n                                                return (\n                                                    <Card key={i} className='shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3'>\n                                                        <figure className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"><a href={null} data-size=\"1600x950\">\n                                                            {renderProfilePicVideo(element.latestProfilePicVideo)}\n                                                            <div className=\"caption\">\n                                                                <h4>{element.followingFullName}</h4>\n                                                                <p>Account Type: {element.followingAccountType}</p>\n                                                                <p>Job Title: {element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"}</p>\n                                                                <p>Started Following: {moment(element.date).fromNow()}</p>\n                                                            </div></a>\n                                                            <Button className='btn-square-primary push-bottom-button-profile' color={\"primary-2x\"} outline style={{ width: \"100%\" }} onClick={() => redirectToProfile(element)}>Redirect To Profile</Button>\n                                                        </figure>\n                                                    </Card>\n                                                );\n                                            }\n                                        })}\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default FollowingHackerTab;"]},"metadata":{},"sourceType":"module"}