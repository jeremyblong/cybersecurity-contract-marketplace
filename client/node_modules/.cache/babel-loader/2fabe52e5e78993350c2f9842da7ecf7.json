{"ast":null,"code":"import React,{Fragment,useRef,useState,useEffect}from\"react\";import\"./styles.css\";import Dropzone from'react-dropzone-uploader';import axios from\"axios\";import{NotificationManager}from'react-notifications';import FileViewer from'react-file-viewer';import _ from\"lodash\";import{Button,Container,Row,Col,Card,CardBody,CardHeader}from'reactstrap';import LoadingBar from'react-top-loading-bar';import Breadcrumb from'../../../../../layout/breadcrumb';import{connect}from\"react-redux\";const IntroVideoEmployerAccountHelper=_ref=>{let{userData}=_ref;const dropzoneRef=useRef(null);// start of state logic...\nconst[fileReady,setFileReadyStatus]=useState(false);const[currentFileSelectedUpload,setCurrentUploadFileStatus]=useState(null);const[fileMetaData,setMetaFileData]=useState(null);const[progress,setProgress]=useState(0);const[changeOptions,setChangeOptions]=useState(null);const[filePathData,setCurrentFilePathData]=useState(null);const[alreadyUploaded,setAlreadyUploaded]=useState(false);useEffect(()=>{axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/general/user/data\"),{params:{id:userData.uniqueId,accountType:userData.accountType}}).then(res=>{if(res.data.message===\"Gathered user!\"){console.log(\"gathered!\",res.data);const{user}=res.data;if(_.has(user,\"companyIntroductionVideo\")){setAlreadyUploaded(true);}}else{console.log(\"Err\",res.data);}});},[]);const renderPreviewOfFile=(data,fileReady,filePathData)=>{const file=data.fileWithMeta.file;// return preview data via FileViewer (to not exclude documents such as .docx and such...);\nif(fileReady===true){return/*#__PURE__*/React.createElement(\"div\",{className:\"filereader-preview-dropzone\"},/*#__PURE__*/React.createElement(FileViewer,{fileType:calculateFileType(file.type),filePath:filePathData,onError:err=>NotificationManager.warning(\"Error 'loading' your recently selected 'preview' file - please select another file & try again...\",'File loading error!',4500),key:file.id}));}else{return null;}};const calculateFileType=type=>{switch(type){case\"video/mp4\":return\"mp4\";break;case\"image/png\":return\"png\";break;case\"image/jpeg\":return\"jpeg\";break;case\"image/jpg\":return\"jpg\";break;case\"image/gif\":return\"gif\";break;case\"image/bmp\":return\"bmp\";break;case\"application/pdf\":return\"pdf\";break;case\"text/csv\":return\"csv\";break;case\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":return\"xlsx\";break;case\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":return\"docx\";break;case\"video/webm\":return\"webm\";break;case\"audio/mpeg\":return\"mp3\";break;default:break;}};const CustomInputHelper=(accept,onFiles,setCurrentFilePathData,setCurrentUploadFileStatus,setFileReadyStatus)=>{const text=\"Drop a file OR select to browse local data\";return/*#__PURE__*/React.createElement(\"label\",{className:\"custom-input-dropzone-copy\",style:{backgroundColor:'#007bff',color:'#fff',cursor:'pointer',padding:15,borderRadius:3}},text,/*#__PURE__*/React.createElement(\"input\",{style:{display:'none'},type:\"file\",accept:accept,multiple:false,className:\"custom-dropzone-input-actual-input\",onChange:e=>{const file=e.target.files[0];// set current file path to convert to readable URL later\nsetCurrentFilePathData(URL.createObjectURL(file));// set status update for current file\nsetCurrentUploadFileStatus(file);// mark file as READY \nsetFileReadyStatus(true);// update \"Dropzone\" component state (NOT this react component state).\nonFiles([file]);}}));};const handleSubmit=runSubmit=>{console.log(\"handleSubmit\");// upload file to aws S3\nconst data=new FormData();data.append(\"file\",currentFileSelectedUpload);data.append(\"meta\",fileMetaData);data.append(\"uniqueId\",userData.uniqueId);const config={onUploadProgress:progressEvent=>{let percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);},headers:{'Content-Type':'multipart/form-data'}};axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/upload/file/intro/video/employer/save/data\"),data,config).then(res=>{if(res.data.message===\"Successfully uploaded file!\"){console.log(res.data);const{file}=res.data;setAlreadyUploaded(true);NotificationManager.success(\"We've successfully uploaded your file! You've now successfully update your 'company video' and it is now active & live! Check your profile to see the reflected changes..\",'Successfully uploaded file!',4500);clearData();runSubmit();}else{console.log(\"Err\",res.data);clearData();NotificationManager.error(res.data.message,'An error occurred while uploading file!',4500);runSubmit();}}).catch(err=>{console.log(err);clearData();NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\",'An error occurred while uploading file!',4500);runSubmit();});};const clearData=()=>{setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);setCurrentFilePathData(null);};const renderCustomButtonDropzone=(data,e)=>{const{meta}=data.files[0];console.log(\"meta\",meta);if(currentFileSelectedUpload===null){return null;}else{if(fileReady===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{e.preventDefault();// file meta data for next action\nsetMetaFileData(meta);// set file status as ready or prepared.\nsetFileReadyStatus(false);const runSubmit=data.onSubmit;handleSubmit(runSubmit);},className:\"btn-air-secondary\",color:\"secondary\",size:\"md\"},\"Submit & Upload New File!\"));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:()=>{NotificationManager.warning(\"File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.\",'Still preparing!',4500);},className:\"btn-air-light\",color:\"light\",size:\"md\"},\"Submit & Upload New File!\"));}}};const onSubmitHelper=(files,allFiles)=>{allFiles.forEach(file=>{file.remove();});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(LoadingBar,{color:'#51bb25',height:9,progress:progress,onLoaderFinished:()=>{setProgress(0);}}),/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Upload A 'Introductory' Company Video\",title:\"Upload A Video Accurately Depicting Your Company\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",xl:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-secondary b-r-secondary\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"upload-video-header\"},\"Upload a company 'introductory video' explaining your company & what you do!\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Upload a video (up-to 7 1/2 minutes in length) accurately \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#f73164\",fontWeight:\"bold\"}},\"depicting you, your company, your goals, aspirations or really whatever you'd like to tell potential contractors (hackers) BEFORE\"),\" they apply to your listings/jobs so they have a better understanding of what they're getting themselves into. This is \",/*#__PURE__*/React.createElement(\"strong\",null,\"NOT\"),\" mandatory, however it is \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#f73164\"}},\"HIGHLY SUGGESTED.\"))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},filePathData!==null&&currentFileSelectedUpload!==null?/*#__PURE__*/React.createElement(\"div\",{className:\"file-viewer-uploadedvideo\"},/*#__PURE__*/React.createElement(FileViewer,{fileType:calculateFileType(currentFileSelectedUpload.type),filePath:filePathData,onError:err=>NotificationManager.warning(\"Error 'loading' your recently selected 'preview' file - please select another file & try again...\",'File loading error!',4500)})):alreadyUploaded===false?/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../assets/images/not-uploaded.png\"),className:\"stretch-both-ways-upload-employer\"}):/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../../assets/images/updated-company-video.png\"),className:\"stretch-both-ways-upload-employer\"})),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dz-message needsclick\"},/*#__PURE__*/React.createElement(Dropzone,{ref:dropzoneRef,PreviewComponent:data=>renderPreviewOfFile(data,fileReady,filePathData),maxFiles:1,autoUpload:true,onChangeStatus:functions=>{setChangeOptions(functions);},submitButtonDisabled:false,InputComponent:_ref2=>{let{accept,onFiles}=_ref2;return CustomInputHelper(accept,onFiles,setCurrentFilePathData,setCurrentUploadFileStatus,setFileReadyStatus);},onSubmit:onSubmitHelper,SubmitButtonComponent:(data,e)=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"absolutely-position-submit-btn\"},renderCustomButtonDropzone(data,e));},accept:\"video/*\",multiple:false,canCancel:false,styles:{dropzone:{height:525,minWidth:\"100%\"},dropzoneActive:{borderColor:'green'}}})),fileReady===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"hr\",{className:\"secondary-hr\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"centered-both-ways\"},/*#__PURE__*/React.createElement(Button,{style:{marginTop:\"25px\"},onClick:e=>{setMetaFileData(null);setFileReadyStatus(false);setCurrentUploadFileStatus(null);setCurrentFilePathData(null);// remove selected\nchangeOptions.remove();},className:\"btn-air-danger cancel-button-upload\",color:\"danger\",size:\"md\"},\"Cancel Current/Pending Upload\"))):null))))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(IntroVideoEmployerAccountHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/employer/introduction/introVideo.js"],"names":["React","Fragment","useRef","useState","useEffect","Dropzone","axios","NotificationManager","FileViewer","_","Button","Container","Row","Col","Card","CardBody","CardHeader","LoadingBar","Breadcrumb","connect","IntroVideoEmployerAccountHelper","userData","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","progress","setProgress","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","alreadyUploaded","setAlreadyUploaded","get","process","env","REACT_APP_BASE_URL","params","id","uniqueId","accountType","then","res","data","message","console","log","user","has","renderPreviewOfFile","file","fileWithMeta","calculateFileType","type","err","warning","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","URL","createObjectURL","handleSubmit","runSubmit","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","success","clearData","error","catch","renderCustomButtonDropzone","meta","marginTop","preventDefault","onSubmit","onSubmitHelper","allFiles","forEach","remove","fontWeight","require","functions","dropzone","height","minWidth","dropzoneActive","borderColor","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport FileViewer from 'react-file-viewer';\nimport _ from \"lodash\";\nimport { Button, Container, Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport LoadingBar from 'react-top-loading-bar';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\n\nconst IntroVideoEmployerAccountHelper = ({ userData }) => {\n\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ progress, setProgress ] = useState(0);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ alreadyUploaded, setAlreadyUploaded ] = useState(false);\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(\"gathered!\", res.data);\n\n                const { user } = res.data;\n\n                if (_.has(user, \"companyIntroductionVideo\")) {\n                    setAlreadyUploaded(true);\n                }\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        })\n    }, [])\n\n    const renderPreviewOfFile = (data, fileReady, filePathData) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    const calculateFileType = (type) => {\n        switch (type) {\n            case \"video/mp4\":\n                return \"mp4\";\n                break;\n            case \"image/png\":\n                return \"png\";\n                break;\n            case \"image/jpeg\":\n                return \"jpeg\";\n                break;\n            case \"image/jpg\":\n                return \"jpg\";\n                break;\n            case \"image/gif\":\n                return \"gif\";\n                break;\n            case \"image/bmp\":\n                return \"bmp\";\n                break;\n            case \"application/pdf\":\n                return \"pdf\";\n                break;\n            case \"text/csv\":\n                return \"csv\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n                return \"xlsx\";\n                break;\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n                return \"docx\";\n                break;\n            case \"video/webm\":\n                return \"webm\";\n                break;\n            case \"audio/mpeg\":\n                return \"mp3\";\n                break;\n            default:\n                break;\n        }\n    }\n    const CustomInputHelper = (accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus) => {\n\n        const text = \"Drop a file OR select to browse local data\";\n\n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                {text}\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleSubmit = (runSubmit) => {\n        console.log(\"handleSubmit\");\n\n        // upload file to aws S3\n        const data = new FormData();\n\n        data.append(\"file\", currentFileSelectedUpload);\n        data.append(\"meta\", fileMetaData);\n        data.append(\"uniqueId\", userData.uniqueId);\n\n        const config = {\n            onUploadProgress: (progressEvent) => {\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                setProgress(percentCompleted);\n            },\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/upload/file/intro/video/employer/save/data`, data, config).then((res) => {\n            if (res.data.message === \"Successfully uploaded file!\") {\n                console.log(res.data);\n\n                const { file } = res.data;\n\n                setAlreadyUploaded(true);\n\n                NotificationManager.success(`We've successfully uploaded your file! You've now successfully update your 'company video' and it is now active & live! Check your profile to see the reflected changes..`, 'Successfully uploaded file!', 4500);\n\n                clearData();\n\n                runSubmit();\n            } else {\n                console.log(\"Err\", res.data);\n\n                clearData();\n\n                NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n\n                runSubmit();\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            clearData();\n\n            NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n\n            runSubmit();\n        })\n    }\n    const clearData = () => {\n        setMetaFileData(null);\n        setFileReadyStatus(false);\n        setCurrentUploadFileStatus(null);\n        setCurrentFilePathData(null);\n    }\n    const renderCustomButtonDropzone = (data, e) => {\n\n        const { meta } = data.files[0];\n\n        console.log(\"meta\", meta);\n\n        if (currentFileSelectedUpload === null) {\n            return null;\n        } else {\n            if (fileReady === true) {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                            e.preventDefault();\n                            // file meta data for next action\n                            setMetaFileData(meta);\n                            // set file status as ready or prepared.\n                            setFileReadyStatus(false);\n\n                            const runSubmit = data.onSubmit;\n\n                            handleSubmit(runSubmit);\n                        }} className=\"btn-air-secondary\" color=\"secondary\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Button style={{ marginTop: \"25px\" }} onClick={() => {\n                            NotificationManager.warning(`File is NOT ready to upload yet! Please wait for the preparation steps to complete before submitting.`, 'Still preparing!', 4500);\n                        }} className=\"btn-air-light\" color=\"light\" size=\"md\">Submit & Upload New File!</Button>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    const onSubmitHelper = (files, allFiles) => {\n        allFiles.forEach((file) => {\n            file.remove();\n        })\n    }\n    return (\n        <Fragment>\n            <LoadingBar\n                color={'#51bb25'}\n                height={9}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Breadcrumb parent=\"Upload A 'Introductory' Company Video\" title=\"Upload A Video Accurately Depicting Your Company\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Upload a company 'introductory video' explaining your company & what you do!</h2>\n                                <p className=\"lead\">Upload a video (up-to 7 1/2 minutes in length) accurately <span style={{ color: \"#f73164\", fontWeight: \"bold\" }}>depicting you, your company, your goals, aspirations or really whatever you'd like to tell potential contractors (hackers) BEFORE</span> they apply to your listings/jobs so they have a better understanding of what they're getting themselves into. This is <strong>NOT</strong> mandatory, however it is <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGESTED.</strong></p>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        {filePathData !== null && currentFileSelectedUpload !== null ? <div className={\"file-viewer-uploadedvideo\"}>\n                                            <FileViewer\n                                                fileType={calculateFileType(currentFileSelectedUpload.type)}\n                                                filePath={filePathData}\n                                                onError={(err) => NotificationManager.warning(`Error 'loading' your recently selected 'preview' file - please select another file & try again...`, 'File loading error!', 4500)}\n                                            />\n                                        </div> : alreadyUploaded === false ? <img src={require(\"../../../../../assets/images/not-uploaded.png\")} className={\"stretch-both-ways-upload-employer\"} /> : <img src={require(\"../../../../../assets/images/updated-company-video.png\")} className={\"stretch-both-ways-upload-employer\"} />}\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"dz-message needsclick\">\n                                            <Dropzone\n                                                ref={dropzoneRef}\n                                                PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                maxFiles={1}\n                                                autoUpload={true}\n                                                onChangeStatus={(functions) => {\n                                                    setChangeOptions(functions);\n                                                }}\n                                                submitButtonDisabled={false}\n                                                InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                onSubmit={onSubmitHelper}\n                                                SubmitButtonComponent={(data, e) => {\n                                                    return (\n                                                        <div className=\"absolutely-position-submit-btn\">\n                                                            {renderCustomButtonDropzone(data, e)}\n                                                        </div>\n                                                    );\n                                                }}\n                                                accept={\"video/*\"}\n                                                multiple={false}\n                                                canCancel={false}\n                                                styles={{\n                                                    dropzone: { height: 525, minWidth: \"100%\" },\n                                                    dropzoneActive: { borderColor: 'green' },\n                                                }}\n                                            />\n                                        </div>\n                                        {fileReady === true ? <Fragment>\n                                            <hr className=\"secondary-hr\" />\n                                            <div className=\"centered-both-ways\">\n                                                <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                    setMetaFileData(null);\n                                                    setFileReadyStatus(false);\n                                                    setCurrentUploadFileStatus(null);\n                                                    setCurrentFilePathData(null);\n\n                                                    // remove selected\n                                                    changeOptions.remove();\n                                                }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                            </div>\n                                        </Fragment> : null}\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(IntroVideoEmployerAccountHelper); "]},"metadata":{},"sourceType":"module"}