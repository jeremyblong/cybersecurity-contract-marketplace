{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/leaderboards/homepage/index.js\";\nimport React, { Fragment, useMemo, useCallback, useState, useEffect } from 'react';\nimport { useTable, useExpanded } from 'react-table';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport axios from \"axios\";\n\nconst TableHelper = _ref => {\n  let {\n    columns: userColumns,\n    data,\n    renderRowSubComponent\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    visibleColumns,\n    state: {\n      expanded\n    }\n  } = useTable({\n    columns: userColumns,\n    data\n  }, useExpanded);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"View/Manage Leaderboard Data & Statistics!\",\n    title: \"These Are 'The Top' Ranked User's On Our Marketplace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    id: \"full-stretch-table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return (\n      /*#__PURE__*/\n      // Use a React.Fragment here so the table markup is still valid\n      React.createElement(React.Fragment, Object.assign({}, row.getRowProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, row.cells.map(cell => {\n        return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 41\n          }\n        }), cell.render('Cell'));\n      })), row.isExpanded ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: visibleColumns.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, renderRowSubComponent({\n        row\n      }))) : null)\n    );\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Showing the first 20 results of \", rows.length, \" rows\"));\n};\n\nconst RenderReviewLength = _ref2 => {\n  let {\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  } = _ref2;\n  // Calculate the min and max\n  console.log(\"preFilteredRows\", preFilteredRows);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  });\n};\n\nconst LeaderboardHomepageHelper = props => {\n  const [hackers, setHackers] = useState([]);\n  const columns = useMemo(() => [{\n    Header: () => null,\n    // No header\n    id: 'expander',\n    // It needs an ID\n    Cell: _ref3 => {\n      let {\n        row\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰');\n    }\n  }, {\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Unique Profile View(s)',\n      accessor: 'totalUniqueViews'\n    }, {\n      Header: 'Review(s) Total',\n      accessor: 'reviews',\n      Filter: RenderReviewLength,\n      filter: \"between\"\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  console.log(\"hackers\", hackers);\n  useEffect(() => {\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/hackers/random/general\")).then(res => {\n      if (res.data.message === \"Successfully gathered hackers!\") {\n        console.log(res.data);\n        const {\n          hackers\n        } = res.data;\n        setHackers(hackers);\n      } else {\n        console.log(\"Err\", res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const data = useMemo(() => [{\n    firstName: \"Jeremy\",\n    lastName: \"Blong\"\n  }], []); // Create a function that will render our row sub components\n\n  const renderRowSubComponent = useCallback(_ref4 => {\n    let {\n      row\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        fontSize: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, JSON.stringify({\n      values: row.values\n    }, null, 2)));\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHelper, {\n    columns: columns,\n    data: hackers,\n    renderRowSubComponent: renderRowSubComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default LeaderboardHomepageHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/leaderboards/homepage/index.js"],"names":["React","Fragment","useMemo","useCallback","useState","useEffect","useTable","useExpanded","Breadcrumb","axios","TableHelper","columns","userColumns","data","renderRowSubComponent","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","visibleColumns","state","expanded","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","isExpanded","length","RenderReviewLength","filterValue","setFilter","preFilteredRows","id","console","log","LeaderboardHomepageHelper","props","hackers","setHackers","Header","Cell","getToggleRowExpandedProps","accessor","Filter","filter","get","process","env","REACT_APP_BASE_URL","then","res","message","catch","err","firstName","lastName","fontSize","JSON","stringify","values"],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo, useCallback, useState, useEffect } from 'react';\nimport { useTable, useExpanded } from 'react-table'\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport axios from \"axios\";\n\nconst TableHelper = ({ columns: userColumns, data, renderRowSubComponent }) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        visibleColumns,\n        state: { expanded }\n    } = useTable(\n    {\n        columns: userColumns,\n        data,\n    },\n        useExpanded\n    )\n\n    return (\n    <>\n        <Breadcrumb parent=\"View/Manage Leaderboard Data & Statistics!\" title=\"These Are 'The Top' Ranked User's On Our Marketplace\" />\n        <table id={\"full-stretch-table\"} {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        // Use a React.Fragment here so the table markup is still valid\n                        <React.Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    )\n                                })}\n                            </tr>\n                            {/*\n                                If the row is in an expanded state, render a row with a\n                                column that fills the entire length of the table.\n                                */}\n                            {row.isExpanded ? (\n                                <tr>\n                                <td colSpan={visibleColumns.length}>\n                                    {/*\n                                        Inside it, call our renderRowSubComponent function. In reality,\n                                        you could pass whatever you want as props to\n                                        a component like this, including the entire\n                                        table instance. But for this example, we'll just\n                                        pass the row\n                                    */}\n                                    {renderRowSubComponent({ row })}\n                                </td>\n                            </tr>\n                        ) : null}\n                        </React.Fragment>\n                    )\n                })}\n            </tbody>\n        </table>\n        <br />\n        <div className='text-left'>Showing the first 20 results of {rows.length} rows</div>\n    </>\n    )\n}\nconst RenderReviewLength = ({\n    column: { filterValue, setFilter, preFilteredRows, id },\n}) => {\n    // Calculate the min and max\n    console.log(\"preFilteredRows\", preFilteredRows);\n  \n    return (\n      <div>\n          \n      </div>\n    )\n}\n\nconst LeaderboardHomepageHelper = (props) => {\n\n    const [ hackers, setHackers ] = useState([]);\n\n    const columns = useMemo(() => [\n        {\n            Header: () => null, // No header\n            id: 'expander', // It needs an ID\n            Cell: ({ row }) => (\n                <span {...row.getToggleRowExpandedProps()}>\n                    {row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\n                </span>\n            ),\n        },\n        {\n            Header: 'Name',\n            columns: [\n            {\n                Header: 'First Name',\n                accessor: 'firstName',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'lastName',\n            },\n            ],\n        },\n        {\n            Header: 'Info',\n            columns: [\n            {\n                Header: 'Unique Profile View(s)',\n                accessor: 'totalUniqueViews',\n            },\n            {\n                Header: 'Review(s) Total',\n                accessor: 'reviews',\n                Filter: RenderReviewLength,\n                filter: \"between\"\n            },\n            {\n                Header: 'Status',\n                accessor: 'status',\n            },\n            {\n                Header: 'Profile Progress',\n                accessor: 'progress',\n            },\n            ],\n        },\n        ],\n        []\n    );\n\n    console.log(\"hackers\", hackers);\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/hackers/random/general`).then((res) => {\n            if (res.data.message === \"Successfully gathered hackers!\") {\n                console.log(res.data);\n\n                const { hackers } = res.data;\n\n                setHackers(hackers);\n            } else {\n                console.log(\"Err\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    const data = useMemo(() => [{\n        firstName: \"Jeremy\",\n        lastName: \"Blong\"\n    }], [])\n    \n    // Create a function that will render our row sub components\n    const renderRowSubComponent = useCallback(\n        ({ row }) => (\n        <pre\n            style={{\n                fontSize: '10px',\n            }}\n        >\n            <code>{JSON.stringify({ values: row.values }, null, 2)}</code>\n        </pre>\n        ),\n        []\n    );\n    return (\n        <Fragment>\n            <TableHelper\n                columns={columns}\n                data={hackers}\n                renderRowSubComponent={renderRowSubComponent}\n            />\n        </Fragment>\n    );\n}\n\nexport default LeaderboardHomepageHelper;"]},"metadata":{},"sourceType":"module"}