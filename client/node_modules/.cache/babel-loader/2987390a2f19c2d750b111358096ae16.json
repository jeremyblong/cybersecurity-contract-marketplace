{"ast":null,"code":"import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport { useForm, Controller } from 'react-hook-form';\nconst {\n  register,\n  handleSubmit,\n  control,\n  reset,\n  getValues,\n  setValue,\n  setError,\n  clearErrors,\n  formState: {\n    errors\n  }\n} = useForm({\n  mode: \"onTouched\",\n  reValidateMode: \"onBlur\"\n});\nconst startBidCheck = {\n  check: { ...register(\"demoURL\", {\n      required: false,\n      minLength: {\n        value: 15,\n        message: \"You must enter AT Least 15 characters\"\n      },\n      maxLength: {\n        value: 75,\n        message: \"You may ONLY enter 75 characters or less\"\n      },\n      onBlur: e => {// check if valid url in helper file.\n      }\n    })\n  },\n  name: \"startBid\",\n  placeholder: \"Enter a starting bid...\",\n  type: \"text\",\n  label: \"Starting Bid\"\n};\nexport default {\n  // function exports go here\n  startBidCheck\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["React","useState","useRef","useEffect","Fragment","useForm","Controller","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","startBidCheck","check","required","minLength","value","message","maxLength","onBlur","e","name","placeholder","type","label"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAO,cAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AAGA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,SAA1C;AAAqDC,EAAAA,QAArD;AAA+DC,EAAAA,QAA/D;AAAyEC,EAAAA,WAAzE;AAAsFC,EAAAA,SAAS,EAAE;AAAEC,IAAAA;AAAF;AAAjG,IAA+GX,OAAO,CAAC;AACzHY,EAAAA,IAAI,EAAE,WADmH;AAEzHC,EAAAA,cAAc,EAAE;AAFyG,CAAD,CAA5H;AAMA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EAAC,GAAGb,QAAQ,CAAC,SAAD,EAAY;AAAEc,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,SAAS,EAAE;AACzDC,QAAAA,KAAK,EAAE,EADkD;AAEzDC,QAAAA,OAAO,EAAE;AAFgD,OAA9B;AAG5BC,MAAAA,SAAS,EAAE;AACVF,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAHiB;AAM5BE,MAAAA,MAAM,EAAGC,CAAD,IAAO,CACd;AAEH;AAT8B,KAAZ;AAAZ,GADW;AAWlBC,EAAAA,IAAI,EAAE,UAXY;AAYlBC,EAAAA,WAAW,EAAE,yBAZK;AAalBC,EAAAA,IAAI,EAAE,MAbY;AAclBC,EAAAA,KAAK,EAAE;AAdW,CAAtB;AAkBA,eAAe;AACX;AACAZ,EAAAA;AAFW,CAAf","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport { useForm, Controller } from 'react-hook-form';\n\n\nconst { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n});\n\n\nconst startBidCheck = {\n    check: {...register(\"demoURL\", { required: false, minLength: {\n        value: 15,\n        message: \"You must enter AT Least 15 characters\"\n    }, maxLength: {\n        value: 75,\n        message: \"You may ONLY enter 75 characters or less\"\n    }, onBlur: (e) => {\n        // check if valid url in helper file.\n        \n    }})},\n    name: \"startBid\",\n    placeholder: \"Enter a starting bid...\",\n    type: \"text\",\n    label: \"Starting Bid\"\n};\n\n\nexport default {\n    // function exports go here\n    startBidCheck\n};"]},"metadata":{},"sourceType":"module"}