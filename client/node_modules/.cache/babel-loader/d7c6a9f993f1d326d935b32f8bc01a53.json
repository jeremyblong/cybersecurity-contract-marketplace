{"ast":null,"code":"import radialimage from '../../../../assets/images/dashboard-2/radial-image.png';\nimport configDB from '../../../../data/customizer/config';\nconst primary = localStorage.getItem('default_color') || configDB.data.color.primary_color;\nconst secondary = localStorage.getItem('secondary_color') || configDB.data.color.secondary_color; // Defaut\n\nconst graphEmployerHackerInformation = (approvedOrTransfers, pendingOrIntents, accountType) => {\n  if (accountType === \"employers\") {\n    const Currentlysale = {\n      series: [{\n        name: 'Pending Transactions (USD-$)',\n        data: pendingOrIntents\n      }, {\n        name: 'Completed Transactions (USD-$)',\n        data: approvedOrTransfers\n      }],\n      options: {\n        chart: {\n          height: 240,\n          width: \"100%\",\n          type: 'numeric',\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'area',\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          // categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          strokeWidth: 3,\n          colors: \"#ffffff\",\n          strokeColors: [primary, secondary],\n          hover: {\n            size: 6\n          }\n        },\n        yaxis: {\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: true\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          }\n        },\n        grid: {\n          show: false,\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: -15,\n            top: -40\n          }\n        },\n        colors: [primary, secondary],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.5,\n            stops: [0, 80, 100]\n          }\n        },\n        legend: {\n          show: false\n        },\n        tooltip: {\n          x: {\n            format: 'MM'\n          }\n        }\n      }\n    };\n    return Currentlysale;\n  } else if (accountType === \"hackers\") {\n    const Currentlysale = {\n      series: [{\n        name: 'Pending Payments (Intents... USD-$)',\n        data: pendingOrIntents\n      }, {\n        name: 'Completed Transfers (USD-$)',\n        data: approvedOrTransfers\n      }],\n      options: {\n        chart: {\n          height: 240,\n          width: \"100%\",\n          type: 'datetime',\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'datetime',\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          // categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: true\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        markers: {\n          strokeWidth: 3,\n          colors: \"#ffffff\",\n          strokeColors: [primary, secondary],\n          hover: {\n            size: 6\n          }\n        },\n        yaxis: {\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false\n          }\n        },\n        grid: {\n          show: false,\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: -15,\n            top: -40\n          }\n        },\n        colors: [primary, secondary],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.5,\n            stops: [0, 80, 100]\n          }\n        },\n        legend: {\n          show: true\n        }\n      }\n    };\n    return Currentlysale;\n  }\n};\n\nconst graphHackerInformation = (pending, finished) => {\n  const Currentlysale = {\n    series: [{\n      name: 'series1',\n      data: [6, 20, 15, 40, 18, 20, 18, 23, 18, 35, 30, 55, 0]\n    }, {\n      name: 'series2',\n      data: [2, 22, 35, 32, 40, 25, 50, 38, 42, 28, 20, 45, 0]\n    }],\n    options: {\n      chart: {\n        height: 240,\n        type: 'area',\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        type: 'category',\n        low: 0,\n        offsetX: 0,\n        offsetY: 0,\n        show: false,\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n        labels: {\n          low: 0,\n          offsetX: 0,\n          show: false\n        },\n        axisBorder: {\n          low: 0,\n          offsetX: 0,\n          show: false\n        },\n        axisTicks: {\n          show: false\n        }\n      },\n      markers: {\n        strokeWidth: 3,\n        colors: \"#ffffff\",\n        strokeColors: [primary, secondary],\n        hover: {\n          size: 6\n        }\n      },\n      yaxis: {\n        low: 0,\n        offsetX: 0,\n        offsetY: 0,\n        show: false,\n        labels: {\n          low: 0,\n          offsetX: 0,\n          show: false\n        },\n        axisBorder: {\n          low: 0,\n          offsetX: 0,\n          show: false\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0,\n          bottom: -15,\n          top: -40\n        }\n      },\n      colors: [primary, secondary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0.5,\n          stops: [0, 80, 100]\n        }\n      },\n      legend: {\n        show: false\n      },\n      tooltip: {\n        x: {\n          format: 'MM'\n        }\n      }\n    }\n  };\n  return Currentlysale;\n};\n\nconst MarketValueOption = {\n  series: [{\n    name: 'Market value',\n    data: [20, 100, 40, 30, 50, 80, 33]\n  }],\n  options: {\n    chart: {\n      type: 'radar',\n      toolbar: {\n        show: false\n      }\n    },\n    stroke: {\n      width: 3,\n      curve: 'smooth'\n    },\n    labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    plotOptions: {\n      radar: {\n        size: 140,\n        polygons: {\n          fill: {\n            colors: ['#fcf8ff', '#f7eeff']\n          }\n        }\n      }\n    },\n    colors: [primary],\n    markers: {\n      size: 6,\n      colors: ['#fff'],\n      strokeColor: primary,\n      strokeWidth: 3\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val;\n        }\n      }\n    },\n    yaxis: {\n      tickAmount: 7,\n      labels: {\n        formatter: function (val, i) {\n          if (i % 2 === 0) {\n            return val;\n          } else {\n            return '';\n          }\n        }\n      }\n    }\n  }\n}; // Ecommerce\n\nconst Monthlysales = {\n  series: [{\n    name: 'series1',\n    data: [280, 170, 440, 170, 270, 130]\n  }, {\n    name: 'series2',\n    data: [150, 500, 300, 250, 420, 350]\n  }, {\n    name: 'series3',\n    data: [450, 150, 320, 500, 280, 100]\n  }],\n  options: {\n    chart: {\n      height: 150,\n      type: 'area',\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 0\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\"]\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        format: 'dd/MM/yy HH:mm'\n      }\n    },\n    legend: {\n      show: false\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -50,\n        bottom: -40\n      }\n    },\n    fill: {\n      type: 'gradient',\n      opacity: [1, 0.4, 0.25],\n      gradient: {\n        shade: 'light',\n        type: 'horizontal',\n        shadeIntensity: 1,\n        gradientToColors: ['#a26cf8', '#a927f9', primary],\n        opacityFrom: [1, 0.4, 0.25],\n        opacityTo: [1, 0.4, 0.25],\n        stops: [30, 100],\n        colorStops: []\n      },\n      colors: [primary, primary, primary]\n    },\n    colors: [primary, secondary, secondary]\n  }\n};\nconst columnCharts = {\n  series: [{\n    name: 'Inflation',\n    data: [2.3, 5.1, 3.0, 9.1, 2.0, 4.6, 2.2, 9.3, 5.4, 4.8, 3.5, 5.2]\n  }],\n  options: {\n    chart: {\n      height: 105,\n      type: 'bar',\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: 'top' // top, center, bottom\n\n        },\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false,\n      formatter: function (val) {\n        return val + \"%\";\n      },\n      offsetY: -10,\n      style: {\n        fontSize: '12px',\n        colors: [primary]\n      }\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      position: 'bottom',\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      crosshairs: {\n        fill: {\n          type: 'gradient',\n          gradient: {\n            colorFrom: '#7366ff',\n            colorTo: '#c481ec',\n            stops: [0, 100],\n            opacityFrom: 0.4,\n            opacityTo: 0.5\n          }\n        }\n      },\n      tooltip: {\n        enabled: true\n      },\n      labels: {\n        show: false\n      }\n    },\n    yaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        formatter: function (val) {\n          return val + \"%\";\n        }\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        top: -35,\n        right: -45,\n        bottom: -20,\n        left: -10\n      }\n    },\n    colors: [primary]\n  }\n};\nconst totalearning = {\n  series: [{\n    name: 'Daily',\n    data: [0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35, 1.40, 1.45, 1.50, 1.55, 1.50, 1.45, 1.40, 1.35, 1.30, 1.25, 1.20, 1.15, 1.10, 1.05, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.55, 0.50, 0.45, 0.40, 0.35]\n  }, {\n    name: 'Weekly',\n    data: [-0.40, -0.50, -0.60, -0.70, -0.80, -0.90, -1.10, -1.15, -1.20, -1.25, -1.30, -1.35, -1.40, -1.45, -1.50, -1.55, -1.50, -1.45, -1.40, -1.35, -1.30, -1.25, -1.20, -1.15, -1.10, -1.05, -0.90, -0.85, -0.80, -0.75, -0.70, -0.65, -0.60, -0.55, -0.50, -0.45, -0.40, -0.35]\n  }, {\n    name: 'Monthly',\n    data: [-1.35, -1.45, -1.55, -1.65, -1.75, -1.85, -1.95, -2.15, -2.25, -2.35, -2.45, -2.55, -2.65, -2.75, -2.85, -2.95, -3.00, -3.10, -3.20, -3.25, -3.10, -3.00, -2.95, -2.85, -2.75, -2.65, -2.55, -2.45, -2.35, -2.25, -2.15, -1.95, -1.85, -1.75, -1.65, -1.55, -1.45, -1.35]\n  }, {\n    name: 'Yearly',\n    data: [1.35, 1.45, 1.55, 1.65, 1.75, 1.85, 1.95, 2.15, 2.25, 2.35, 2.45, 2.55, 2.65, 2.75, 2.85, 2.95, 3.00, 3.10, 3.20, 3.25, 3.10, 3.00, 2.95, 2.85, 2.75, 2.65, 2.55, 2.45, 2.35, 2.25, 2.15, 1.95, 1.85, 1.75, 1.65, 1.55, 1.45, 1.35]\n  }],\n  options: {\n    chart: {\n      type: 'bar',\n      height: 320,\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: [primary, primary, primary, primary],\n    plotOptions: {\n      bar: {\n        vertical: true,\n        columnWidth: '40%',\n        barHeight: '80%',\n        startingShape: 'rounded',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 0\n    },\n    legend: {\n      show: false\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    yaxis: {\n      min: -5,\n      max: 5,\n      show: false,\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      labels: {\n        show: true\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    fill: {\n      opacity: [0.8, 0.8, 0.2, 0.2],\n      colors: [function (_ref) {\n        let {\n          value,\n          seriesIndex,\n          w\n        } = _ref;\n\n        if (value < 0.75) {\n          return \"#a26cf8\";\n        } else {\n          return primary;\n        }\n      }]\n    }\n  }\n};\nconst Riskfactorchart = {\n  series: [70],\n  options: {\n    chart: {\n      height: 350,\n      type: 'radialBar',\n      offsetY: -10\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 135,\n        inverseOrder: true,\n        hollow: {\n          margin: 5,\n          size: '60%',\n          image: radialimage,\n          imageWidth: 140,\n          imageHeight: 140,\n          imageClipped: false\n        },\n        track: {\n          opacity: 0.4,\n          colors: primary\n        },\n        dataLabels: {\n          enabled: false,\n          enabledOnSeries: undefined,\n          formatter: function (val, opts) {\n            return val + \"%\";\n          },\n          textAnchor: 'middle',\n          distributed: false,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            fontSize: '14px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fill: ['#2b2b2b']\n          }\n        }\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'light',\n        shadeIntensity: 0.15,\n        inverseColors: false,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100],\n        gradientToColors: ['#a927f9'],\n        type: 'horizontal'\n      }\n    },\n    stroke: {\n      dashArray: 15,\n      strokecolor: ['#ffffff']\n    },\n    labels: ['Selling rate'],\n    colors: [primary]\n  }\n};\nexport default {\n  graphEmployerHackerInformation,\n  graphHackerInformation,\n  Riskfactorchart,\n  totalearning,\n  MarketValueOption,\n  Monthlysales,\n  columnCharts\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/homepage/chartsData/apex-charts-data.jsx"],"names":["radialimage","configDB","primary","localStorage","getItem","data","color","primary_color","secondary","secondary_color","graphEmployerHackerInformation","approvedOrTransfers","pendingOrIntents","accountType","Currentlysale","series","name","options","chart","height","width","type","toolbar","show","dataLabels","enabled","stroke","curve","xaxis","low","offsetX","offsetY","labels","axisBorder","axisTicks","markers","strokeWidth","colors","strokeColors","hover","size","yaxis","grid","padding","left","right","bottom","top","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","legend","tooltip","x","format","graphHackerInformation","pending","finished","categories","MarketValueOption","plotOptions","radar","polygons","strokeColor","y","formatter","val","tickAmount","i","Monthlysales","opacity","shade","gradientToColors","colorStops","columnCharts","stacked","bar","position","columnWidth","startingShape","endingShape","style","fontSize","crosshairs","colorFrom","colorTo","totalearning","vertical","barHeight","lines","min","max","value","seriesIndex","w","Riskfactorchart","radialBar","startAngle","endAngle","inverseOrder","hollow","margin","image","imageWidth","imageHeight","imageClipped","track","enabledOnSeries","undefined","opts","textAnchor","distributed","fontFamily","inverseColors","dashArray","strokecolor"],"mappings":"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","sourcesContent":["import radialimage from '../../../../assets/images/dashboard-2/radial-image.png';\nimport configDB from '../../../../data/customizer/config';\n\nconst primary = localStorage.getItem('default_color') || configDB.data.color.primary_color;\nconst secondary = localStorage.getItem('secondary_color') || configDB.data.color.secondary_color;\n\n// Defaut\nconst graphEmployerHackerInformation = (approvedOrTransfers, pendingOrIntents, accountType) => {\n\n  if (accountType === \"employers\") {\n    const Currentlysale = {\n      series: [{\n        name: 'Pending Transactions (USD-$)',\n        data: pendingOrIntents\n      }, {\n        name: 'Completed Transactions (USD-$)',\n        data: approvedOrTransfers\n      }],\n      options: {\n        chart: {\n          height: 240,\n          width: \"100%\",\n          type: 'numeric',\n          toolbar: {\n            show: false\n          },\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'area',\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          // categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n        markers: {\n          strokeWidth: 3,\n          colors: \"#ffffff\",\n          strokeColors: [primary, secondary],\n          hover: {\n            size: 6,\n          }\n        },\n        yaxis: {\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: true,\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: -15,\n            top: -40\n          }\n        },\n        colors: [primary, secondary],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.5,\n            stops: [0, 80, 100]\n          }\n        },\n        legend: {\n          show: false,\n        },\n        tooltip: {\n          x: {\n            format: 'MM'\n          },\n        },\n      }\n    }\n    return Currentlysale;\n\n  } else if (accountType === \"hackers\") {\n    const Currentlysale = {\n      series: [{\n        name: 'Pending Payments (Intents... USD-$)',\n        data: pendingOrIntents\n      }, {\n        name: 'Completed Transfers (USD-$)',\n        data: approvedOrTransfers\n      }],\n      options: {\n        chart: {\n          height: 240,\n          width: \"100%\",\n          type: 'datetime',\n          toolbar: {\n            show: false\n          },\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'datetime',\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          // categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: true,\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n        markers: {\n          strokeWidth: 3,\n          colors: \"#ffffff\",\n          strokeColors: [primary, secondary],\n          hover: {\n            size: 6,\n          }\n        },\n        yaxis: {\n          low: 0,\n          offsetX: 0,\n          offsetY: 0,\n          show: false,\n          labels: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n          axisBorder: {\n            low: 0,\n            offsetX: 0,\n            show: false,\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: -15,\n            top: -40\n          }\n        },\n        colors: [primary, secondary],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.5,\n            stops: [0, 80, 100]\n          }\n        },\n        legend: {\n          show: true,\n        }\n      }\n    }\n    return Currentlysale;\n  }\n} \n\nconst graphHackerInformation = (pending, finished) => {\n  const Currentlysale = {\n    series: [{\n      name: 'series1',\n      data: [6, 20, 15, 40, 18, 20, 18, 23, 18, 35, 30, 55, 0]\n    }, {\n      name: 'series2',\n      data: [2, 22, 35, 32, 40, 25, 50, 38, 42, 28, 20, 45, 0]\n    }],\n    options: {\n      chart: {\n        height: 240,\n        type: 'area',\n        toolbar: {\n          show: false\n        },\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        type: 'category',\n        low: 0,\n        offsetX: 0,\n        offsetY: 0,\n        show: false,\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\"],\n        labels: {\n          low: 0,\n          offsetX: 0,\n          show: false,\n        },\n        axisBorder: {\n          low: 0,\n          offsetX: 0,\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n      },\n      markers: {\n        strokeWidth: 3,\n        colors: \"#ffffff\",\n        strokeColors: [primary, secondary],\n        hover: {\n          size: 6,\n        }\n      },\n      yaxis: {\n        low: 0,\n        offsetX: 0,\n        offsetY: 0,\n        show: false,\n        labels: {\n          low: 0,\n          offsetX: 0,\n          show: false,\n        },\n        axisBorder: {\n          low: 0,\n          offsetX: 0,\n          show: false,\n        },\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0,\n          bottom: -15,\n          top: -40\n        }\n      },\n      colors: [primary, secondary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0.5,\n          stops: [0, 80, 100]\n        }\n      },\n      legend: {\n        show: false,\n      },\n      tooltip: {\n        x: {\n          format: 'MM'\n        },\n      },\n    }\n  }\n  return Currentlysale;\n} \n\nconst MarketValueOption = {\n  series: [{\n    name: 'Market value',\n    data: [20, 100, 40, 30, 50, 80, 33],\n  }],\n  options: {\n    chart: {\n      type: 'radar',\n      toolbar: {\n        show: false\n      },\n    },\n\n    stroke: {\n      width: 3,\n      curve: 'smooth',\n    },\n    labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    plotOptions: {\n      radar: {\n        size: 140,\n        polygons: {\n          fill: {\n            colors: ['#fcf8ff', '#f7eeff']\n          },\n\n        }\n      }\n    },\n    colors: [primary],\n\n    markers: {\n      size: 6,\n      colors: ['#fff'],\n      strokeColor: primary,\n      strokeWidth: 3,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val\n        }\n      }\n    },\n    yaxis: {\n      tickAmount: 7,\n      labels: {\n        formatter: function (val, i) {\n          if (i % 2 === 0) {\n            return val\n          } else {\n            return ''\n          }\n        }\n      }\n    }\n  }\n}\n\n// Ecommerce\nconst Monthlysales = {\n  series: [{\n    name: 'series1',\n    data: [280, 170, 440, 170, 270, 130]\n\n  }, {\n    name: 'series2',\n    data: [150, 500, 300, 250, 420, 350]\n\n  }, {\n    name: 'series3',\n    data: [450, 150, 320, 500, 280, 100]\n\n  }],\n\n  options: {\n    chart: {\n      height: 150,\n      type: 'area',\n      toolbar: {\n        show: false\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 0\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\"]\n\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        format: 'dd/MM/yy HH:mm'\n      },\n    },\n    legend: {\n      show: false,\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -50,\n        bottom: -40,\n      }\n    },\n    fill: {\n      type: 'gradient',\n      opacity: [1, 0.4, 0.25],\n      gradient: {\n        shade: 'light',\n        type: 'horizontal',\n        shadeIntensity: 1,\n        gradientToColors: ['#a26cf8', '#a927f9', primary],\n        opacityFrom: [1, 0.4, 0.25],\n        opacityTo: [1, 0.4, 0.25],\n        stops: [30, 100],\n        colorStops: []\n      },\n      colors: [primary, primary, primary],\n    },\n    colors: [primary, secondary, secondary],\n  }\n}\nconst columnCharts = {\n  series: [{\n    name: 'Inflation',\n    data: [2.3, 5.1, 3.0, 9.1, 2.0, 4.6, 2.2, 9.3, 5.4, 4.8, 3.5, 5.2]\n  }],\n  options: {\n    chart: {\n      height: 105,\n      type: 'bar',\n      stacked: true,\n      toolbar: {\n        show: false\n      },\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: 'top', // top, center, bottom\n        },\n\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false,\n\n      formatter: function (val) {\n        return val + \"%\";\n      },\n      offsetY: -10,\n      style: {\n        fontSize: '12px',\n        colors: [primary]\n      }\n    },\n\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      position: 'bottom',\n\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      crosshairs: {\n        fill: {\n          type: 'gradient',\n          gradient: {\n            colorFrom: '#7366ff',\n            colorTo: '#c481ec',\n            stops: [0, 100],\n            opacityFrom: 0.4,\n            opacityTo: 0.5,\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n      },\n      labels: {\n        show: false\n      }\n\n    },\n    yaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false,\n      },\n      labels: {\n        show: false,\n        formatter: function (val) {\n          return val + \"%\";\n        }\n      }\n\n    },\n    grid: {\n      show: false,\n      padding: {\n        top: -35,\n        right: -45,\n        bottom: -20,\n        left: -10\n      },\n    },\n    colors: [primary],\n  }\n}\n\nconst totalearning = {\n  series: [{\n    name: 'Daily',\n    data: [0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35, 1.40, 1.45, 1.50,\n      1.55, 1.50, 1.45, 1.40, 1.35, 1.30, 1.25, 1.20, 1.15, 1.10, 1.05, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.55, 0.50, 0.45, 0.40, 0.35\n    ]\n  },\n  {\n    name: 'Weekly',\n    data: [-0.40, -0.50, -0.60, -0.70, -0.80, -0.90, -1.10, -1.15, -1.20, -1.25, -1.30, -1.35, -1.40, -1.45, -1.50,\n    -1.55, -1.50, -1.45, -1.40, -1.35, -1.30, -1.25, -1.20, -1.15, -1.10, -1.05, -0.90, -0.85, -0.80, -0.75, -0.70, -0.65, -0.60, -0.55, -0.50, -0.45, -0.40, -0.35\n    ]\n  },\n  {\n    name: 'Monthly',\n    data: [-1.35, -1.45, -1.55, -1.65, -1.75, -1.85, -1.95, -2.15, -2.25, -2.35, -2.45, -2.55, -2.65, -2.75, -2.85,\n    -2.95, -3.00, -3.10, -3.20, -3.25, -3.10, -3.00, -2.95, -2.85, -2.75, -2.65, -2.55, -2.45, -2.35, -2.25, -2.15, -1.95, -1.85, -1.75, -1.65, -1.55, -1.45, -1.35\n    ]\n  },\n  {\n    name: 'Yearly',\n    data: [1.35, 1.45, 1.55, 1.65, 1.75, 1.85, 1.95, 2.15, 2.25, 2.35, 2.45, 2.55, 2.65, 2.75, 2.85,\n      2.95, 3.00, 3.10, 3.20, 3.25, 3.10, 3.00, 2.95, 2.85, 2.75, 2.65, 2.55, 2.45, 2.35, 2.25, 2.15, 1.95, 1.85, 1.75, 1.65, 1.55, 1.45, 1.35\n    ]\n  }\n  ],\n  options: {\n    chart: {\n      type: 'bar',\n      height: 320,\n      stacked: true,\n      toolbar: {\n        show: false\n      },\n    },\n    colors: [primary, primary, primary, primary],\n    plotOptions: {\n      bar: {\n        vertical: true,\n        columnWidth: '40%',\n        barHeight: '80%',\n        startingShape: 'rounded',\n        endingShape: 'rounded'\n      },\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 0\n\n    },\n    legend: {\n      show: false,\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n    },\n    yaxis: {\n      min: -5,\n      max: 5,\n      show: false,\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug',\n        'Sep', 'Oct', 'Nov', 'Dec'\n      ],\n      labels: {\n        show: true\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n\n    },\n\n    fill: {\n      opacity: [0.8, 0.8, 0.2, 0.2],\n      colors: [function ({ value, seriesIndex, w }) {\n        if (value < 0.75) {\n          return \"#a26cf8\"\n        } else {\n          return primary\n        }\n      }]\n    }\n  }\n}\n\nconst Riskfactorchart = {\n  series: [70],\n  options: {\n    chart: {\n      height: 350,\n      type: 'radialBar',\n      offsetY: -10,\n    },\n\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 135,\n        inverseOrder: true,\n        hollow: {\n          margin: 5,\n          size: '60%',\n          image: radialimage,\n          imageWidth: 140,\n          imageHeight: 140,\n          imageClipped: false,\n        },\n        track: {\n          opacity: 0.4,\n          colors: primary\n        },\n        dataLabels: {\n          enabled: false,\n          enabledOnSeries: undefined,\n          formatter: function (val, opts) {\n            return val + \"%\"\n          },\n          textAnchor: 'middle',\n          distributed: false,\n          offsetX: 0,\n          offsetY: 0,\n\n          style: {\n            fontSize: '14px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fill: ['#2b2b2b'],\n\n          },\n        },\n      }\n    },\n\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'light',\n        shadeIntensity: 0.15,\n        inverseColors: false,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100],\n        gradientToColors: ['#a927f9'],\n        type: 'horizontal'\n      },\n    },\n    stroke: {\n      dashArray: 15,\n      strokecolor: ['#ffffff']\n    },\n\n    labels: ['Selling rate'],\n    colors: [primary],\n  }\n}\nexport default {\n  graphEmployerHackerInformation,\n  graphHackerInformation,\n  Riskfactorchart,\n  totalearning,\n  MarketValueOption, \n  Monthlysales, \n  columnCharts\n};"]},"metadata":{},"sourceType":"module"}