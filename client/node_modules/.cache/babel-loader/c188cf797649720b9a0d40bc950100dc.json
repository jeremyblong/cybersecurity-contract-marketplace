{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/fileManagerHelperFunctions.js\";\nimport React, { Fragment } from 'react';\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport { Row, Col, Card, CardBody, Button, CardHeader } from 'reactstrap';\n\nconst handleFileDeletionUploadedFiles = (i, setMyFile, setPopoverStates, selected) => {\n  // set files state\n  setMyFile(prevState => {\n    console.log(\"prev\", prevState);\n    return prevState.filter((item, idx) => {\n      if (item.link !== selected.link) {\n        return true;\n      }\n    });\n  }); // close popover\n\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${i}`]: false\n    };\n  });\n};\n\nconst handleDotsClickExpansion = (file, index, setPopoverStates) => {\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${index}`]: true\n    };\n  });\n};\n\nconst bytesToSize = bytes => {\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  if (bytes == 0) return '0 Byte';\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n};\n\nconst calculateFileType = type => {\n  switch (type) {\n    case \"video/mp4\":\n      return \"mp4\";\n      break;\n\n    case \"image/png\":\n      return \"png\";\n      break;\n\n    case \"image/jpeg\":\n      return \"jpeg\";\n      break;\n\n    case \"image/jpg\":\n      return \"jpg\";\n      break;\n\n    case \"image/gif\":\n      return \"gif\";\n      break;\n\n    case \"image/bmp\":\n      return \"bmp\";\n      break;\n\n    case \"application/pdf\":\n      return \"pdf\";\n      break;\n\n    case \"text/csv\":\n      return \"csv\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n      return \"xlsx\";\n      break;\n\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n      return \"docx\";\n      break;\n\n    case \"video/webm\":\n      return \"webm\";\n      break;\n\n    case \"audio/mpeg\":\n      return \"mp3\";\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst closePopoverDynamic = (i, setPopoverStates) => {\n  setPopoverStates(prevState => {\n    return { ...prevState,\n      [`popover${i}`]: false\n    };\n  });\n}; // UPLOAD file via api-call to AWS-S3\n\n\nconst handleFileUploadAnyType = (onSubmit, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setMyFile, currentFileSelectedUpload, metaFileData, setProgress) => {\n  // upload file to aws S3\n  const data = new FormData();\n  data.append(\"file\", currentFileSelectedUpload);\n  data.append(\"meta\", metaFileData);\n  const config = {\n    onUploadProgress: progressEvent => {\n      let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      setProgress(percentCompleted);\n    },\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n    if (res.data.message === \"Successfully uploaded file!\") {\n      console.log(res.data);\n      const {\n        file\n      } = res.data; // update local file array state\n\n      setMyFile(prevState => {\n        return [...prevState, { ...file,\n          icon: \"fa fa-file\"\n        }];\n      });\n      NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      onSubmit();\n    } else {\n      console.log(\"Err\", res.data);\n      NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n      onSubmit();\n    }\n  }).catch(err => {\n    console.log(err);\n    NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n    onSubmit();\n  });\n};\n\nconst handleFilesFinalSubmission = (files, previous, saveApplicationDetailsProgress) => {\n  console.log(\"handleFilesFinalSubmission running...\");\n  saveApplicationDetailsProgress({ ...previous,\n    files\n  });\n  NotificationManager.success(`You've `, 'Successfully uploaded file!', 4500);\n};\n\nconst setConfirmAlert = (myfile, previous, saveApplicationDetailsProgress) => {\n  confirmAlert({\n    customUI: _ref => {\n      let {\n        onClose\n      } = _ref;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"b-l-primary border-3 specific-edit-border-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, \"Are you sure you'd like to submit your \\\"current uploaded\\\" files?!\")), /*#__PURE__*/React.createElement(CardBody, {\n        id: \"modal-button-showcase-cardbody-two\",\n        className: \"btn-group-showcase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"12\",\n        lg: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"button-group-text-above\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, \"You're about to save your \\\"current\\\" uploads to your previously filled out listing information on the main page of this page. We will save this data so when you finally \\\"submit\\\" your final/actual application to this employer - this data will also be \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 325\n        }\n      }, \"automatically included\"), \". Click \\\"Submit!\\\" to submit your selected files & folders...\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"12\",\n        lg: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"secondary-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"centered-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        id: \"button-group-custom-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"set-background-hover\",\n        outline: true,\n        color: \"secondary\",\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 45\n        }\n      }, \"Cancel/Close\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"set-background-hover\",\n        outline: true,\n        color: \"secondary\",\n        onClick: () => {\n          handleFilesFinalSubmission(myfile, previous, saveApplicationDetailsProgress);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 45\n        }\n      }, \"Submit Edits/File's & Folders\"))))))));\n    }\n  });\n};\n\nexport default {\n  handleFileDeletionUploadedFiles,\n  handleDotsClickExpansion,\n  calculateFileType,\n  bytesToSize,\n  setConfirmAlert,\n  handleFileUploadAnyType,\n  closePopoverDynamic\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/fileManagerHelperFunctions.js"],"names":["React","Fragment","axios","NotificationManager","confirmAlert","Row","Col","Card","CardBody","Button","CardHeader","handleFileDeletionUploadedFiles","i","setMyFile","setPopoverStates","selected","prevState","console","log","filter","item","idx","link","handleDotsClickExpansion","file","index","bytesToSize","bytes","sizes","parseInt","Math","floor","round","pow","calculateFileType","type","closePopoverDynamic","handleFileUploadAnyType","onSubmit","setMetaFileData","setFileReadyStatus","setCurrentUploadFileStatus","currentFileSelectedUpload","metaFileData","setProgress","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","icon","success","error","catch","err","handleFilesFinalSubmission","files","previous","saveApplicationDetailsProgress","setConfirmAlert","myfile","customUI","onClose"],"mappings":"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","sourcesContent":["import React, { Fragment} from 'react';\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport { Row, Col, Card, CardBody, Button, CardHeader } from 'reactstrap';\n\n\nconst handleFileDeletionUploadedFiles = (i, setMyFile, setPopoverStates, selected) => {\n    // set files state\n    setMyFile(prevState => {\n        console.log(\"prev\", prevState);\n        return prevState.filter((item, idx) => {\n            if (item.link !== selected.link) {\n                return true;\n            }\n        })\n    });\n    // close popover\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${i}`]: false\n        }\n    });\n}\nconst handleDotsClickExpansion = (file, index, setPopoverStates) => {\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${index}`]: true\n        }\n    });\n}\nconst bytesToSize = (bytes) => {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\nconst calculateFileType = (type) => {\n    switch (type) {\n        case \"video/mp4\":\n            return \"mp4\";\n            break;\n        case \"image/png\":\n            return \"png\";\n            break;\n        case \"image/jpeg\":\n            return \"jpeg\";\n            break;\n        case \"image/jpg\":\n            return \"jpg\";\n            break;\n        case \"image/gif\":\n            return \"gif\";\n            break;\n        case \"image/bmp\":\n            return \"bmp\";\n            break;\n        case \"application/pdf\":\n            return \"pdf\";\n            break;\n        case \"text/csv\":\n            return \"csv\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\n            return \"xlsx\";\n            break;\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n            return \"docx\";\n            break;\n        case \"video/webm\":\n            return \"webm\";\n            break;\n        case \"audio/mpeg\":\n            return \"mp3\";\n            break;\n        default:\n            break;\n    }\n}\nconst closePopoverDynamic = (i, setPopoverStates) => {\n    setPopoverStates(prevState => {\n        return {\n            ...prevState,\n            [`popover${i}`]: false\n        }\n    });\n}\n// UPLOAD file via api-call to AWS-S3\nconst handleFileUploadAnyType = (onSubmit, setMetaFileData, setFileReadyStatus, setCurrentUploadFileStatus, setMyFile, currentFileSelectedUpload, metaFileData, setProgress) => {\n    // upload file to aws S3\n    const data = new FormData();\n\n    data.append(\"file\", currentFileSelectedUpload);\n    data.append(\"meta\", metaFileData);\n\n    const config = {\n        onUploadProgress: (progressEvent) => {\n            let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n            setProgress(percentCompleted);\n        },\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n            console.log(res.data);\n\n            const { file } = res.data;\n\n            // update local file array state\n            setMyFile(prevState => {\n                return [...prevState, {\n                    ...file,\n                    icon: \"fa fa-file\"\n                }]\n            });\n\n            NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out the remaining form data in order to move onto the final page!`, 'Successfully uploaded file!', 4500);\n\n            setMetaFileData(null);\n            setFileReadyStatus(false);\n            setCurrentUploadFileStatus(null);\n\n            onSubmit();\n        } else {\n            console.log(\"Err\", res.data);\n\n            NotificationManager.error(res.data.message, 'An error occurred while uploading file!', 4500);\n\n            onSubmit();\n        }\n    }).catch((err) => {\n        console.log(err);\n\n        NotificationManager.error(\"An unknown error has occurred while uploading your file - please try again or contact support if the issue persists...\", 'An error occurred while uploading file!', 4500);\n\n        onSubmit();\n    })\n}\nconst handleFilesFinalSubmission = (files, previous, saveApplicationDetailsProgress) => {\n    console.log(\"handleFilesFinalSubmission running...\");\n\n    saveApplicationDetailsProgress({\n        ...previous,\n        files\n    });\n\n    NotificationManager.success(`You've `, 'Successfully uploaded file!', 4500);\n} \nconst setConfirmAlert = (myfile, previous, saveApplicationDetailsProgress) => {\n\n    confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <Fragment>\n                    <Card>\n                        <CardHeader className=\"b-l-primary border-3 specific-edit-border-right\">\n                            <h3>Are you sure you'd like to submit your \"current uploaded\" files?!</h3>\n                        </CardHeader>\n                        <CardBody id=\"modal-button-showcase-cardbody-two\" className=\"btn-group-showcase\">\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className=\"button-group-text-above\">You're about to save your \"current\" uploads to your previously filled out listing information on the main page of this page. We will save this data so when you finally \"submit\" your final/actual application to this employer - this data will also be <strong>automatically included</strong>. Click \"Submit!\" to submit your selected files & folders...</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <hr className=\"secondary-hr\" />\n                                    <div className=\"centered-button-container\">\n                                        <ButtonGroup id=\"button-group-custom-secondary\">\n                                            <Button className=\"set-background-hover\" outline color=\"secondary\" onClick={onClose}>Cancel/Close</Button>\n                                            <Button className=\"set-background-hover\" outline color=\"secondary\" onClick={() => {\n                                                handleFilesFinalSubmission(myfile, previous, saveApplicationDetailsProgress);\n                                            }}>Submit Edits/File's & Folders</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Fragment>\n          );\n        }\n    });\n}\nexport default {\n    handleFileDeletionUploadedFiles,\n    handleDotsClickExpansion,\n    calculateFileType,\n    bytesToSize,\n    setConfirmAlert,\n    handleFileUploadAnyType,\n    closePopoverDynamic\n}\n"]},"metadata":{},"sourceType":"module"}