{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js\";\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst PageTwoMainHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [progress, setProgress] = useState(0);\n\n  const getUploadParams = _ref2 => {\n    let {\n      meta\n    } = _ref2;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setProgress(20);\n    }, 2000);\n    setTimeout(() => {\n      setProgress(40);\n    }, 4000);\n    setTimeout(() => {\n      setProgress(60);\n    }, 6000);\n    setTimeout(() => {\n      setProgress(80);\n    }, 8000);\n    setTimeout(() => {\n      setProgress(100);\n    }, 10000);\n  }, []);\n\n  const handleChangeStatus = (_ref3, status) => {\n    let {\n      meta,\n      file\n    } = _ref3;\n    console.log(\"handleChangeStatus : \", meta, file, status);\n\n    if (status === \"done\") {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"meta\", meta);\n      const config = {\n        onUploadProgress: function (progressEvent) {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log(\"percentCompleted\", percentCompleted);\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then(res => {\n        if (res.data.message === \"Successfully uploaded file!\") {\n          console.log(res.data);\n          NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n        } else {\n          console.log(\"Err\", res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, {\n    color: \"#51bb25\",\n    height: 4.25,\n    progress: progress // loaderSpeed={1750}\n    ,\n    onLoaderFinished: () => {\n      setProgress(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Upload related files & attachments\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, \"Select a single supporting file or multiple (Up to 10 files \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 104\n    }\n  }, \"total\"), \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtext-under-label-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 79\n    }\n  }, \"NOTE\"), \": These files will be transfered or \\\"handed over\\\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 343\n    }\n  }, \"downloading\"), \" and viewing.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 1,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Drop a file OR select to browse local data\",\n    styles: {\n      dropzone: {\n        height: 275\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(PageTwoMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageTwo/pageTwoMain.js"],"names":["React","useState","useEffect","useRef","Fragment","Container","Row","Col","Card","CardHeader","CardBody","Form","Label","Dropzone","axios","connect","NotificationManager","LoadingBar","PageTwoMainHelper","userData","progress","setProgress","getUploadParams","meta","url","setTimeout","handleChangeStatus","status","file","console","log","data","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","process","env","REACT_APP_BASE_URL","then","res","message","success","catch","err","color","dropzone","height","dropzoneActive","borderColor","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, Label } from 'reactstrap'\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst PageTwoMainHelper = ({ userData }) => {\n\n    const [ progress, setProgress ] = useState(0); \n\n    const getUploadParams = ({ meta }) => { \n        return { url: 'https://httpbin.org/post' } \n    };\n    useEffect(() => {\n        setTimeout(() => {\n            setProgress(20);\n        },  2000);\n        setTimeout(() => {\n            setProgress(40);\n        },  4000);\n        setTimeout(() => {\n            setProgress(60);\n        },  6000);\n        setTimeout(() => {\n            setProgress(80);\n        },  8000);\n        setTimeout(() => {\n            setProgress(100);\n        },  10000);\n    }, [])\n\n    const handleChangeStatus = ({ meta, file }, status) => {\n        console.log(\"handleChangeStatus : \", meta, file, status);\n\n        if (status === \"done\") {\n            const data = new FormData();\n    \n            data.append(\"file\", file);\n            data.append(\"meta\", meta);\n\n            const config = {\n                onUploadProgress: function(progressEvent) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n\n                    console.log(\"percentCompleted\", percentCompleted);\n\n                    setProgress(percentCompleted);\n                },\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n\n            axios.post(`${process.env.REACT_APP_BASE_URL}/upload/misc/file/softare/listing/sale`, data, config).then((res) => {\n                if (res.data.message === \"Successfully uploaded file!\") {\n                    console.log(res.data);\n\n                    NotificationManager.success(`We've successfully uploaded your file! Please proceed filling out your information or add more files.`, 'Successfully uploaded file!', 4500);\n                } else {\n                    console.log(\"Err\", res.data);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={4.25}\n                progress={progress}\n                // loaderSpeed={1750}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Upload related files & attachments</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <Label>Select a single supporting file or multiple (Up to 10 files <strong>total</strong>)</Label>\n                                    <p className=\"subtext-under-label-upload\"><strong style={{ color: \"blue\" }}>NOTE</strong>: These files will be transfered or \"handed over\" to the winner of your auction (the highest bidder) after the completion of your listing. Please be aware that these are essentially the files that your winner will be <strong>downloading</strong> and viewing.</p>\n                                    <div className=\"dz-message needsclick\">\n                                        <Dropzone\n                                            getUploadParams={getUploadParams}\n                                            onChangeStatus={handleChangeStatus}\n                                            maxFiles={1}\n                                            multiple={false}\n                                            canCancel={false}\n                                            inputContent=\"Drop a file OR select to browse local data\"\n                                            styles={{\n                                                dropzone: { height: 275 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(PageTwoMainHelper);\n"]},"metadata":{},"sourceType":"module"}