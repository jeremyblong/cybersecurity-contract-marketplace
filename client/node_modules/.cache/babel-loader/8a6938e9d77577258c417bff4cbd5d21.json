{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nconst {\n  TimelineHelper,\n  SheetPaneSubmittingDataHelper,\n  HelperRadioButtons,\n  renderMountedLogic,\n  handleDeletionLink,\n  handleLinkAddition\n} = helpers;\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\n\nconst ApplyAsHackerEmployerListingHelper = _ref => {\n  let {\n    userData,\n    shiftCoreStyles,\n    location\n  } = _ref;\n  // ref's\n  const physicalOrDigitalOrBothGeneratedRef = useRef(null); // get URL ID from string\n\n  const {\n    id\n  } = useParams(); // initialize state items...\n\n  const [alreadyAdded, setAlreadyAddedState] = useState(null);\n  const [linkInput, setLinkInput] = useState(\"\");\n  const [disabledDays, setDisabledDaysState] = useState([]);\n  const [physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState] = useState([]);\n  const [sheetIsOpen, setSheetOpenState] = useState(false);\n  const [currentUserData, setCurrentUserData] = useState(null);\n  const [ready, setReadyGlobal] = useState(false);\n  const [listingReady, setListingReady] = useState(false);\n  const [listingData, setListingData] = useState(null);\n  const [dateRanges, setDateRanges] = useState(null);\n  const [datesReady, setDatesReady] = useState(false);\n  const [selectedLinks, setSelectedLinks] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n  const gatheredValues = getValues();\n\n  const handleDateSelection = ranges => {\n    // setDateRanges(ranges);\n    console.log(\"ranges\", ranges);\n  }; // deconstruct redux-state items...\n\n\n  const {\n    username,\n    firstName,\n    lastName,\n    registrationDate,\n    completedJobs\n  } = userData; // component mounted.\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const globalConfig = {\n      config: {\n        params: {\n          uniqueId: userData.uniqueId\n        }\n      },\n      configuration: {\n        params: {\n          listingId: id\n        }\n      }\n    };\n    renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady); // gather core anonymous user information\n\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setCurrentUserData(user);\n        setReadyGlobal(true);\n      } else {\n        console.log('err', res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // render custom sentence instead of DRY repeating\n\n  const renderSentence = (actual, type, val) => {\n    // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n    if (ready === true && currentUserData !== null) {\n      // ready to display\n      if (currentUserData.hasOwnProperty(actual)) {\n        // return proper/desired \"right\" filled out data\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 24\n          }\n        }, \"Your \", type, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: currentUserData.hasOwnProperty(actual) ? {\n            color: \"#dc3545\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          } : {\n            color: \"#a927f9\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 90\n          }\n        }, val), \" will be submitted to the employer...\");\n      } else {\n        // throw error warning user\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom override-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 24\n          }\n        }, \"You have NOT filled out the required field of \", /*#__PURE__*/React.createElement(\"em\", {\n          style: {\n            textDecorationLine: \"underline\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 137\n          }\n        }, type), \", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile/settings/edit\",\n          className: \"linky\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 299\n          }\n        }, \"your profile settings page\"), \" and edit the appropriate sections, then come back and try again!\");\n      }\n    } else {\n      // return loading \"data\"\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1 listitem-sub-text-custom-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      }, \"Still loading your data/content...!\");\n    }\n  }; // view more fields in PANE\n\n\n  const viewRemainderOfIncludedFields = alreadyIncludedArray => {\n    console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray); // already shown items *(HIGHLIGHT)*\n\n    setAlreadyAddedState(alreadyIncludedArray); // shift \"lock\" styles to prevent scrolling and clicking\n\n    shiftCoreStyles(true); // open modal - change modal state to OPEN\n\n    setSheetOpenState(true); // set delay to allow load\n\n    setTimeout(() => {\n      // select outter body classname to pause/freeze\n      const target = document.querySelector(\".enact-nonclick\"); // DISABLE body scroll entirely\n\n      disableBodyScroll(target);\n    }, 500);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(name, value, {\n      shouldValidate: true\n    });\n  };\n\n  const showButtonOrNot = () => {\n    if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const clearInput = () => {\n    setLinkInput(\"\");\n  };\n\n  console.log(\"gatheredValues\", gatheredValues, \"errors\", errors);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SheetPaneSubmittingDataHelper, {\n    ready: ready,\n    shiftCoreStyles: shiftCoreStyles,\n    alreadyAdded: alreadyAdded,\n    currentUserData: currentUserData,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    userData: userData,\n    sheetIsOpen: sheetIsOpen,\n    setSheetOpenState: setSheetOpenState,\n    renderSentence: renderSentence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: `Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`,\n    title: \"Review job requirements & details + apply to position/listing!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-default\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"customized-row-apply\",\n    style: {\n      paddingTop: \"25px \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner customized-top-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Type of hack (physical location or digital asset)\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, \"This is the \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 80\n    }\n  }, \"TYPE\"), \" of hack this \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 107\n    }\n  }, \"specific listing\"), \" requires from its participants. These selected options have absolutely \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 204\n    }\n  }, \"NO LIENENCY\"), \" and any disregard to platform rules will result in \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 284\n    }\n  }, \"IMMEDIATE PERMENANT BANNING\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(HelperRadioButtons, {\n    listingReady: listingReady,\n    listingData: listingData,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }, coverLetterChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, coverLetterChecks.check(setError, register, clearErrors, setValue, \"coverLetterText\"), {\n    value: gatheredValues.coverLetterText,\n    placeholder: coverLetterChecks.placeholder,\n    onChange: e => {\n      return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n    },\n    name: coverLetterChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 45\n    }\n  })), errors.coverLetterText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 71\n    }\n  }, errors.coverLetterText.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 45\n    }\n  }, physicalOrDigitalChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: physicalOrDigitalChecks.name\n  }, physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        autoBlur: true,\n        defaultValue: null,\n        ref: physicalOrDigitalOrBothGeneratedRef,\n        value: gatheredValues.physicalOrDigitalOrBoth,\n        placeholder: physicalOrDigitalChecks.placeholder,\n        onChange: selectedOption => {\n          console.log(\"changed!!!!\");\n          setTimeout(() => {\n            // clear error after proper selection\n            if (typeof selectedOption !== \"undefined\" && Object.keys(selectedOption).length > 0) {\n              // set selected value\n              setValue(physicalOrDigitalChecks.name, selectedOption, {\n                shouldValidate: false\n              }); // clear relevant error\n\n              clearErrors(physicalOrDigitalChecks.name);\n            } else {\n              // set error as nothing was selected (blank 'click-off' selection of selector)\n              setError(physicalOrDigitalChecks.name, {\n                type: \"manual\",\n                message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\"\n              });\n            }\n          }, 50);\n        },\n        onMenuClose: () => {\n          physicalOrDigitalOrBothGeneratedRef.current.blur();\n        },\n        options: physicalOrDigitalHackOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  })), errors.physicalOrDigitalOrBoth ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 79\n    }\n  }, errors.physicalOrDigitalOrBoth.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 45\n    }\n  }, approachToSuccessfullyHackCo.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\"), {\n    placeholder: approachToSuccessfullyHackCo.placeholder,\n    onChange: e => {\n      return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n    },\n    name: approachToSuccessfullyHackCo.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 45\n    }\n  })), errors.technicalApproachToHack ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 79\n    }\n  }, errors.technicalApproachToHack.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, \"Message To Employer (Direct to employer)\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\"), {\n    placeholder: messageToEmployerChecks.placeholder,\n    onChange: e => {\n      return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n    },\n    name: messageToEmployerChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  })), errors.messageToEmployer ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 73\n    }\n  }, errors.messageToEmployer.message) : null))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, \"This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 102\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 41\n    }\n  }), renderSentence(\"username\", \"Username\", username)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 41\n    }\n  }, \"First Name & Last Name (Together)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 127\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 41\n    }\n  }), renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 41\n    }\n  }, \"Completed Job Count\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 113\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 41\n    }\n  }), renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, \"Created Account (from ago...)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 123\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }), renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    onClick: () => {\n      // View ALL included fields...\n      viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n    },\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 41\n    }\n  }, \"View all included fields (including above mentioned)\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, \"REQUIRED\"), \" data to be completed/filled-out\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, \"Reference a link (blog, website, etc... made by \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 120\n    }\n  }, \"you\"), \")\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 82\n    }\n  }, \"http(s)://\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\"), {\n    value: linkInput,\n    onChange: e => {\n      return urlEnteredLinkData.onChange(e, setError, clearErrors, setValue, setLinkInput);\n    },\n    className: \"form-control\",\n    type: \"text\",\n    name: \"referenceLink\",\n    placeholder: \"Enter a link to your work (website, blog, etc...)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }\n  })), showButtonOrNot() ? /*#__PURE__*/React.createElement(InputGroupAddon, {\n    onClick: () => {\n      handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink, clearInput);\n    },\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 67\n    }\n  }, \"Submit\")) : null), errors.referenceLink ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 65\n    }\n  }, errors.referenceLink.message) : null), selectedLinks.map((link, index) => {\n    console.log(\"link\", link);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"12.5px\",\n        marginBottom: \"12.5px\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: e => {\n        e.preventDefault();\n      },\n      className: \"list-group-item custom-list-group-item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: \"25px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 108\n      }\n    }), link.url, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        // handle deletion\n        handleDeletionLink(link, setSelectedLinks);\n      },\n      id: \"float-trash-right\",\n      className: \"icon-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 158\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 37\n    }\n  }, \"Available dates to select (Physical 'Hack'ing Dates)\"), datesReady === true ? /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: dateRanges,\n    onChange: handleDateSelection // onPreviewChange={(value1, value2) => {\n    //     console.log(value1, value2);\n    // }}\n    ,\n    minDate: new Date() // go back MAX 2 WEEKS and start from there\n    // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n    ,\n    disabledDates: disabledDays,\n    scroll: {\n      enabled: true\n    },\n    direction: \"horizontal\" // showMonthAndYearPickers={true}\n    ,\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 60\n    }\n  }) : null))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }, \"Have you filled out \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 57\n    }\n  }, \"ALL OF THE REQUIRED DATA/INFO\"), \" and you're now \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 119\n    }\n  }, \"READY\"), \" to apply and continue with your application?!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, \"Click the button below to proceed forward & \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 80\n    }\n  }, \"apply to this listing\"), \" and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, \"SUBMIT APPLICATION INFORMATION\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimelineHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles\n})(withRouter(ApplyAsHackerEmployerListingHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ListGroup","FormGroup","Label","Input","InputGroupAddon","Form","InputGroup","InputGroupText","helpers","connect","moment","shiftCoreStyles","disableBodyScroll","clearAllBodyScrollLocks","axios","_","Link","withRouter","useParams","Select","DateRangePicker","useForm","Controller","MainHooksCustomHelpers","TimelineHelper","SheetPaneSubmittingDataHelper","HelperRadioButtons","renderMountedLogic","handleDeletionLink","handleLinkAddition","urlEnteredLinkData","coverLetterChecks","messageToEmployerChecks","physicalOrDigitalChecks","approachToSuccessfullyHackCo","ApplyAsHackerEmployerListingHelper","userData","location","physicalOrDigitalOrBothGeneratedRef","id","alreadyAdded","setAlreadyAddedState","linkInput","setLinkInput","disabledDays","setDisabledDaysState","physicalOrDigitalHackOptions","setPhysicalOrDigitalHackOptionsState","sheetIsOpen","setSheetOpenState","currentUserData","setCurrentUserData","ready","setReadyGlobal","listingReady","setListingReady","listingData","setListingData","dateRanges","setDateRanges","datesReady","setDatesReady","selectedLinks","setSelectedLinks","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","gatheredValues","handleDateSelection","ranges","console","log","username","firstName","lastName","registrationDate","completedJobs","window","scrollTo","globalConfig","config","params","uniqueId","configuration","listingId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","user","catch","err","renderSentence","actual","type","val","hasOwnProperty","color","fontSize","fontWeight","textDecorationLine","viewRemainderOfIncludedFields","alreadyIncludedArray","setTimeout","target","document","querySelector","handleInputChange","e","name","value","shouldValidate","showButtonOrNot","has","referenceLink","length","clearInput","REACT_APP_CRYPTO_TOKEN_NAME","paddingTop","label","check","coverLetterText","placeholder","onChange","field","physicalOrDigitalOrBoth","selectedOption","Object","keys","current","blur","technicalApproachToHack","messageToEmployer","fromNow","width","marginTop","map","link","index","marginBottom","preventDefault","paddingRight","url","Date","enabled","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\n\n\nconst { TimelineHelper, SheetPaneSubmittingDataHelper, HelperRadioButtons, renderMountedLogic, handleDeletionLink, handleLinkAddition } = helpers;\n\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\n\n\nconst ApplyAsHackerEmployerListingHelper = ({ userData, shiftCoreStyles, location }) => {\n    \n    // ref's\n    const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n    // get URL ID from string\n    const { id } = useParams();\n    // initialize state items...\n    const [ alreadyAdded, setAlreadyAddedState ] = useState(null);\n    const [ linkInput, setLinkInput ] = useState(\"\"); \n    const [ disabledDays, setDisabledDaysState ] = useState([]);\n    const [ physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState ] = useState([]);\n    const [ sheetIsOpen, setSheetOpenState ] = useState(false);\n    const [ currentUserData, setCurrentUserData ] = useState(null);\n    const [ ready, setReadyGlobal ] = useState(false);\n    const [ listingReady, setListingReady ] = useState(false);\n    const [ listingData, setListingData ] = useState(null);\n    const [ dateRanges, setDateRanges ] = useState(null);\n    const [ datesReady, setDatesReady ] = useState(false);\n    const [ selectedLinks, setSelectedLinks ] = useState([]);\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n    \n    const gatheredValues = getValues();\n\n    const handleDateSelection = (ranges) => {\n        // setDateRanges(ranges);\n        console.log(\"ranges\", ranges);\n    }\n    // deconstruct redux-state items...\n    const { username, firstName, lastName, registrationDate, completedJobs } = userData;\n\n    // component mounted.\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        const globalConfig = {\n            config: {\n                params: {\n                    uniqueId: userData.uniqueId\n                }\n            },\n            configuration: {\n                params: {\n                    listingId: id\n                }\n            }\n        }\n        renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady);\n        // gather core anonymous user information\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setCurrentUserData(user);\n                setReadyGlobal(true);\n            } else {\n                console.log('err', res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // render custom sentence instead of DRY repeating\n    const renderSentence = (actual, type, val) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(actual)) {\n                // return proper/desired \"right\" filled out data\n                return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Your {type} <strong style={currentUserData.hasOwnProperty(actual) ? { color: \"#dc3545\", fontSize: \"1.005rem\", fontWeight: 500 } : { color: \"#a927f9\", fontSize: \"1.005rem\", fontWeight: 500 }}>{val}</strong> will be submitted to the employer...</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom-custom override-red\"}>You have NOT filled out the required field of <em style={{ textDecorationLine: \"underline\" }}>{type}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    // view more fields in PANE\n    const viewRemainderOfIncludedFields = (alreadyIncludedArray) => {\n        console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray);\n\n        // already shown items *(HIGHLIGHT)*\n        setAlreadyAddedState(alreadyIncludedArray);\n        // shift \"lock\" styles to prevent scrolling and clicking\n        shiftCoreStyles(true);\n        // open modal - change modal state to OPEN\n        setSheetOpenState(true);\n        // set delay to allow load\n        setTimeout(() => {\n            // select outter body classname to pause/freeze\n            const target = document.querySelector(\".enact-nonclick\");\n            // DISABLE body scroll entirely\n            disableBodyScroll(target);\n        },  500);\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n    const showButtonOrNot = () => {\n        if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const clearInput = () => {\n        setLinkInput(\"\");\n    }\n    console.log(\"gatheredValues\", gatheredValues, \"errors\", errors);\n    return (\n        <Fragment>\n            <SheetPaneSubmittingDataHelper ready={ready} shiftCoreStyles={shiftCoreStyles} alreadyAdded={alreadyAdded} currentUserData={currentUserData} clearAllBodyScrollLocks={clearAllBodyScrollLocks} userData={userData} sheetIsOpen={sheetIsOpen} setSheetOpenState={setSheetOpenState} renderSentence={renderSentence} />\n            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n            <Container className=\"container-default\" fluid={true}>\n                <Row className=\"customized-row-apply\" style={{ paddingTop: \"25px \" }}>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className=\"custom-card-inner customized-top-card\">\n                            <CardHeader className=\"b-l-primary\">\n                                <h5>Type of hack (physical location or digital asset)</h5>\n                                <p style={{ paddingTop: \"7.5px\" }}>This is the <em>TYPE</em> of hack this <em>specific listing</em> requires from its participants. These selected options have absolutely <strong>NO LIENENCY</strong> and any disregard to platform rules will result in <strong>IMMEDIATE PERMENANT BANNING</strong></p>\n                            </CardHeader>\n                            <CardBody>\n                                <HelperRadioButtons listingReady={listingReady} listingData={listingData} id={id} />\n                                <div style={{ paddingTop: \"15px\" }} />\n                                <hr />{/*  listingVisibility */}\n                                <Row>\n                                    <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">{coverLetterChecks.label}</Label>\n                                            <Input {...coverLetterChecks.check(setError, register, clearErrors, setValue, \"coverLetterText\")} value={gatheredValues.coverLetterText} placeholder={coverLetterChecks.placeholder} onChange={(e) => {\n                                                return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n                                            }} name={coverLetterChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                            {errors.coverLetterText ? <span className=\"span-tooltip\">{errors.coverLetterText.message}</span> : null}\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label>{physicalOrDigitalChecks.label}</Label>\n                                            <Controller\n                                                control={control} \n                                                name={physicalOrDigitalChecks.name}\n                                                {...physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register)}\n                                                render={({ field }) => (\n                                                    <Select\n                                                        {...field}\n                                                        autoBlur={true}\n                                                        defaultValue={null}\n                                                        ref={physicalOrDigitalOrBothGeneratedRef}\n                                                        value={gatheredValues.physicalOrDigitalOrBoth}\n                                                        placeholder={physicalOrDigitalChecks.placeholder}\n                                                        onChange={(selectedOption) => {\n                                                            console.log(\"changed!!!!\");\n\n                                                            setTimeout(() => {\n                                                                // clear error after proper selection\n                                                                if ((typeof selectedOption !== \"undefined\") && (Object.keys(selectedOption).length > 0)) {\n                                                                    // set selected value\n                                                                    setValue(physicalOrDigitalChecks.name, selectedOption, { shouldValidate: false });\n                                                                    // clear relevant error\n                                                                    clearErrors(physicalOrDigitalChecks.name);\n                                                                } else {\n                                                                    // set error as nothing was selected (blank 'click-off' selection of selector)\n                                                                    setError(physicalOrDigitalChecks.name, {\n                                                                        type: \"manual\",\n                                                                        message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\",\n                                                                    });\n                                                                }\n                                                            }, 50);\n                                                        }}\n                                                        onMenuClose={() => {\n                                                            physicalOrDigitalOrBothGeneratedRef.current.blur();\n                                                        }}\n                                                        options={physicalOrDigitalHackOptions}\n                                                    />\n                                                )}\n                                            />\n                                            {errors.physicalOrDigitalOrBoth ? <span className=\"span-tooltip\">{errors.physicalOrDigitalOrBoth.message}</span> : null}\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">{approachToSuccessfullyHackCo.label}</Label>\n                                            <Input {...approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\")} placeholder={approachToSuccessfullyHackCo.placeholder} onChange={(e) => {\n                                                return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n                                            }} name={approachToSuccessfullyHackCo.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"3\"} />\n                                            {errors.technicalApproachToHack ? <span className=\"span-tooltip\">{errors.technicalApproachToHack.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                        <FormGroup>\n                                            <Label className=\"heavy-label\">Message To Employer (Direct to employer)</Label>\n                                            <Input {...messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\")} placeholder={messageToEmployerChecks.placeholder} onChange={(e) => {\n                                                return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n                                            }} name={messageToEmployerChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                            {errors.messageToEmployer ? <span className=\"span-tooltip\">{errors.messageToEmployer.message}</span> : null}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                        <Card className=\"custom-card-inner custom-card-inner-customized\">\n                            <CardHeader className=\"b-l-info\">\n                                <h5>Type Of Data That'll Be Automatically Submitted</h5>\n                                <hr />\n                                <p>This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...</p>\n                            </CardHeader>\n                            <CardBody>\n                                <ListGroup>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"username\", \"Username\", username)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                        </div>\n                                        <hr />\n                                        {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                    </ListGroupItem>\n                                    <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                        <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-info\"} onClick={() => {\n                                            // View ALL included fields...\n                                            viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n                                        }} outline color=\"info-2x\">View all included fields (including above mentioned)</Button>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                        <Card className=\"custom-card-inner custom-card-inner-customized\">\n                            <CardHeader className=\"b-l-info\">\n                                <h5><strong>REQUIRED</strong> data to be completed/filled-out</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>  \n                                    {/* links go here... */}\n                                    <FormGroup style={{ marginTop: \"17.5px\" }} className=\" m-form__group\">\n                                        <Label className=\"heavy-label\">Reference a link (blog, website, etc... made by <em style={{ textDecorationLine: \"underline\" }}>you</em>)</Label>\n                                        <InputGroup>\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText className=\"group-addon-custom-two\">{\"http(s)://\"}</InputGroupText></InputGroupAddon>\n                                            <Input {...urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\")} value={linkInput} onChange={(e) => {\n                                                return urlEnteredLinkData.onChange(e, setError, clearErrors, setValue, setLinkInput);\n                                            }} className=\"form-control\" type=\"text\" name=\"referenceLink\" placeholder={\"Enter a link to your work (website, blog, etc...)\"} />\n                                            {showButtonOrNot() ? <InputGroupAddon onClick={() => {\n                                                handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink, clearInput);\n                                            }} addonType=\"append\"><InputGroupText className=\"group-addon-custom\">{\"Submit\"}</InputGroupText></InputGroupAddon> : null}\n                                        </InputGroup>\n                                        {errors.referenceLink ? <span className=\"span-tooltip\">{errors.referenceLink.message}</span> : null}\n                                    </FormGroup>\n                                    {selectedLinks.map((link, index) => {\n                                        console.log(\"link\", link);\n                                        return (\n                                            <div style={{ marginTop: \"12.5px\", marginBottom: \"12.5px\" }} key={index}>\n                                                <ListGroupItem onClick={(e) => {\n                                                    e.preventDefault();\n                                                }} className=\"list-group-item custom-list-group-item-text\"><div style={{ paddingRight: \"25px\" }} />{link.url}<i onClick={() => {\n                                                    // handle deletion\n                                                    handleDeletionLink(link, setSelectedLinks);\n                                                }} id={\"float-trash-right\"} className=\"icon-trash\"></i></ListGroupItem>\n                                            </div>\n                                        );\n                                    })}\n                                    <Label className=\"heavy-label\">Available dates to select (Physical 'Hack'ing Dates)</Label>\n                                    {datesReady === true ? <DateRangePicker\n                                        ranges={dateRanges}\n                                        onChange={handleDateSelection}\n                                        // onPreviewChange={(value1, value2) => {\n                                        //     console.log(value1, value2);\n                                        // }}\n                                        minDate={new Date()}\n                                        // go back MAX 2 WEEKS and start from there\n                                        // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n                                        disabledDates={disabledDays}\n                                        scroll={{ enabled: true }}\n                                        direction={\"horizontal\"}\n                                        // showMonthAndYearPickers={true}\n                                        rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                    /> : null}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>Have you filled out <strong>ALL OF THE REQUIRED DATA/INFO</strong> and you're now <strong>READY</strong> to apply and continue with your application?!</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p>Click the button below to proceed forward & <strong>apply to this listing</strong> and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!</p>\n                                <hr />\n                                <div className=\"natural-sm-spacer\" />\n                                <div className=\"natural-sm-spacer\" />\n                                <div className=\"natural-sm-spacer\" />\n                                <Button style={{ width: \"100%\" }} className=\"btn-square btn-air-info\" outline color=\"info-2x\">SUBMIT APPLICATION INFORMATION</Button>\n                                <div className=\"natural-sm-spacer\" />\n                                <div className=\"natural-sm-spacer\" />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <TimelineHelper />\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles })(withRouter(ApplyAsHackerEmployerListingHelper));\n"]},"metadata":{},"sourceType":"module"}