{"ast":null,"code":"import React,{Fragment,useState,useEffect,useRef}from'react';import\"./styles.css\";import Breadcrumb from'../../../../../layout/breadcrumb';import{Container,Row,Col,Card,CardBody,Button,CardHeader,ListGroupItem,ButtonGroup,ListGroup,FormGroup,Label,Input,InputGroupAddon,Form,InputGroup,InputGroupText,Media}from'reactstrap';import helpers from\"./helpers/miscFunctions.js\";import{connect}from\"react-redux\";import moment from\"moment\";import{shiftCoreStyles}from\"../../../../../redux/actions/universal/index.js\";import{disableBodyScroll,enableBodyScroll,clearAllBodyScrollLocks}from'body-scroll-lock';import axios from'axios';import _ from\"lodash\";import{Link,withRouter,useParams,useHistory}from\"react-router-dom\";import Select from'react-select';import{DateRangePicker}from'react-date-range';import{useForm,Controller}from'react-hook-form';import MainHooksCustomHelpers from\"./helpers/reactHookFormHelpers.js\";import Tour from'reactour';import LoadingBar from'react-top-loading-bar';import{saveApplicationDetailsProgress}from\"../../../../../redux/actions/hackers/applyToEmployerListing/applicationInfo.js\";import{NotificationManager}from\"react-notifications\";import uuid from'react-uuid';import{confirmAlert}from'react-confirm-alert';const{TimelineHelper,SheetPaneSubmittingDataHelper,HelperRadioButtons,renderMountedLogic,handleDeletionLink,handleLinkAddition,SheetDisplayFilesFileManagerHelper}=helpers;// react-hook-form helpers\nconst urlEnteredLinkData=MainHooksCustomHelpers().urlEnteredLinkData;const coverLetterChecks=MainHooksCustomHelpers().coverLetterChecks;const messageToEmployerChecks=MainHooksCustomHelpers().messageToEmployerChecks;const physicalOrDigitalChecks=MainHooksCustomHelpers().physicalOrDigitalChecks;const approachToSuccessfullyHackCo=MainHooksCustomHelpers().approachToSuccessfullyHackCo;const participateInBettingWagers=MainHooksCustomHelpers().participateInBettingWagers;const amountWillingToCompleteJob=MainHooksCustomHelpers().amountWillingToCompleteJob;const tourStepsOptions=[{selector:'#tour-col-custom',content:'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!'}];const ApplyAsHackerEmployerListingHelper=_ref=>{let{previousFiles,userData,shiftCoreStyles,location,saveApplicationDetailsProgress,previous}=_ref;const history=useHistory();// ref's\nconst physicalOrDigitalOrBothGeneratedRef=useRef(null);const participateInBettingWagersRef=useRef(null);const scrollToTourWrapper=useRef(null);// get URL ID from string\nconst{id}=useParams();// initialize state items...\nconst[alreadyAdded,setAlreadyAddedState]=useState(null);const[filesSheetOpen,setFileSheetOpenState]=useState(false);const[showMore,setShowMoreState]=useState(false);const[linkInput,setLinkInput]=useState(\"\");const[isTourOpen,setIsTourOpenState]=useState(false);const[disabledDays,setDisabledDaysState]=useState([]);const[physicalOrDigitalHackOptions,setPhysicalOrDigitalHackOptionsState]=useState([]);const[sheetIsOpen,setSheetOpenState]=useState(false);const[currentUserData,setCurrentUserData]=useState(null);const[ready,setReadyGlobal]=useState(false);const[progress,setProgress]=useState(0);const[listingReady,setListingReady]=useState(false);const[listingData,setListingData]=useState(null);const[dateRanges,setDateRanges]=useState(null);const[datesReady,setDatesReady]=useState(false);const[selectedLinks,setSelectedLinks]=useState([]);const[maxDate,setMaxDate]=useState(null);const{register,handleSubmit,control,resetField,getValues,setValue,setError,clearErrors,watch,formState:{errors}}=useForm({mode:\"onTouched\",reValidateMode:\"onBlur\"// delayError: 500\n});const gatheredValues=getValues();const handleDateSelection=ranges=>{const{startDate,endDate}=ranges.selection;const datesAreOnSameDay=(first,second)=>first.getFullYear()===second.getFullYear()&&first.getMonth()===second.getMonth()&&first.getDate()===second.getDate();const gatherDayInfo=date=>moment(date).format(\"MM-DD-YYYY\");if(datesAreOnSameDay(startDate,endDate)){const formattedDate={startDate,endDate,key:'selection',formattedStartDate:gatherDayInfo(startDate),formattedEndDate:gatherDayInfo(endDate),uniqueId:uuid()};if(_.has(gatheredValues,\"selectedTestDates\")&&typeof gatheredValues.selectedTestDates!==\"undefined\"){if(gatheredValues.selectedTestDates.length===0){// update state...\nsetValue(\"selectedTestDates\",[...gatheredValues.selectedTestDates,formattedDate],{shouldValidate:false});// clear related error data\nclearErrors([\"selectedTestDates\"]);}else{if(gatheredValues.selectedTestDates.filter(x=>x.formattedStartDate===formattedDate.formattedStartDate).length>0){NotificationManager.warning(\"You cannot select the SAME date TWICE - Please select UNIQUE dates when selecting various physical 'hack dates'...\",\"Date is ALREADY selected!\",4750);}else{// update state...\nsetValue(\"selectedTestDates\",[...gatheredValues.selectedTestDates,formattedDate],{shouldValidate:false});// clear related error data\nclearErrors([\"selectedTestDates\"]);}}}}};// deconstruct redux-state items...\nconst{username,firstName,lastName,registrationDate,completedJobs}=userData;// component mounted.\nuseEffect(()=>{// set default unavailiable state - selectedTestDates\nsetValue(\"selectedTestDates\",[]);setValue(\"referenceLinks\",[]);// set global config obj's for api-requests\nconst globalConfig={config:{params:{uniqueId:userData.uniqueId}},configuration:{params:{listingId:id}}};renderMountedLogic(setMaxDate,globalConfig,setPhysicalOrDigitalHackOptionsState,setListingData,setDatesReady,setDateRanges,setDisabledDaysState,setListingReady);// gather core anonymous user information\naxios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/core/anonymous/user/data\"),globalConfig.config).then(res=>{if(res.data.message===\"Successfully gathered core user information!\"){console.log(res.data);const{user}=res.data;setCurrentUserData(user);setReadyGlobal(true);}else{console.log('err',res.data);}}).catch(err=>{console.log(err);});},[]);// render custom sentence instead of DRY repeating\nconst renderSentence=(actual,type,val)=>{// run conditionals to figure out what to display to user and what to mark as \"incomplete\"\nif(ready===true&&currentUserData!==null){// ready to display\nif(currentUserData.hasOwnProperty(actual)){// return proper/desired \"right\" filled out data\nreturn/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1 listitem-sub-text-custom-custom\"},\"Your \",type,\" \",/*#__PURE__*/React.createElement(\"strong\",{style:currentUserData.hasOwnProperty(actual)?{color:\"#dc3545\",fontSize:\"1.005rem\",fontWeight:500}:{color:\"#a927f9\",fontSize:\"1.005rem\",fontWeight:500}},val),\" will be submitted to the employer...\");}else{// throw error warning user\nreturn/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1 listitem-sub-text-custom-custom override-red\"},\"You have NOT filled out the required field of \",/*#__PURE__*/React.createElement(\"em\",{style:{textDecorationLine:\"underline\"}},type),\", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \",/*#__PURE__*/React.createElement(Link,{to:\"/profile/settings/edit\",className:\"linky\"},\"your profile settings page\"),\" and edit the appropriate sections, then come back and try again!\");}}else{// return loading \"data\"\nreturn/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1 listitem-sub-text-custom-custom\"},\"Still loading your data/content...!\");}};// view more fields in PANE\nconst viewRemainderOfIncludedFields=alreadyIncludedArray=>{// already shown items *(HIGHLIGHT)*\nsetAlreadyAddedState(alreadyIncludedArray);// shift \"lock\" styles to prevent scrolling and clicking\nshiftCoreStyles(true);// open modal - change modal state to OPEN\nsetSheetOpenState(true);// set delay to allow load\nsetTimeout(()=>{// select outter body classname to pause/freeze\nconst target=document.querySelector(\".enact-nonclick\");// DISABLE body scroll entirely\ndisableBodyScroll(target);},500);};const showButtonOrNot=()=>{if(!_.has(errors,\"referenceLink\")&&!errors.referenceLink&&typeof gatheredValues.referenceLink!==\"undefined\"&&gatheredValues.referenceLink.length>0){return true;}else{return false;}};const clearInput=()=>{resetField(\"referenceLink\");};//  TOUR related LOCK SCREEN functions - DISABLE body scrolling\nconst disableBodyAndScroll=target=>{// disable body scroll\ndisableBodyScroll(target);};const enableBody=target=>clearAllBodyScrollLocks();const handleDirectionChangeTour=()=>{// DISABLE clicking background\nshiftCoreStyles(true);// scroll to target and LOCK SCREEN until closed.\nscrollToTourWrapper.current.scrollIntoView();// alter slightly to account for top-NAV\nsetTimeout(()=>{window.scrollBy(0,-175);},750);// lock after appropriate position change\nsetTimeout(()=>{// select MAIN WRAPPER class\nconst select=document.querySelector(\".enact-nonclick\");// disable selected class (movement, clicks, etc...);\ndisableBodyScroll(select);setIsTourOpenState(true);},1000);};const handleTourClosingAction=()=>{// allow background clicking again\nshiftCoreStyles(false);// clear body scroll locks\nclearAllBodyScrollLocks();// close tour state\nsetIsTourOpenState(false);};const onErrorMainForm=(errors,e)=>{console.log(\"errors : \",errors);// selectAttachments\nif(_.has(previous,\"files\")&&previous.files.length>0){clearErrors([\"selectAttachments\"]);}else{setError(\"selectAttachments\",{type:\"manual\",message:\"You MUST select AT least ONE(1) attachments (CL, Resume, Image, etc...) before proceeding with the submission of this form\"});}if(!gatheredValues.selectedTestDates.length>0){setError(\"selectedTestDates\",{type:\"manual\",message:\"You MUST select a calendar time to 'attempt' your 'physical' hack to try to infiltrate this employer's company. Select a date (one day MIN) to continue!\"});}};const onFormSubmit=values=>{console.log(\"values\",values);// deconstruct files from attached-files section-redux\nconst attachedFiles=previousFiles.applicationDetails.applicationDetails.files;// deconstruct core information from bio-profile section\nconst{username,firstName,lastName,completedJobs,registrationDate,aboutMe,title,reviews,fullyVerified,points,yearsOfExperience}=currentUserData;// deconstruct form-redux values on-submit\nconst{coverLetterText,messageToEmployer,amountOfMoneyUponCompletion,physicalOrDigitalOrBoth,referenceLinks,selectedTestDates,technicalApproachToHack}=values;const myID=userData.uniqueId;const generatedID=uuid();const addApplicantData={applicantID:myID,listingID:listingData.uniqueId,employerId:listingData.postedBy,employerPostedJobId:listingData.uniqueId,userData,generatedID,applicationData:{generatedID,attachedFiles,coverLetterText,messageToEmployer,applicantId:userData.uniqueId,responses:[],hired:false,applicantName:\"\".concat(userData.firstName,\" \").concat(userData.lastName),likes:0,dislikes:0,applicantId:myID,dateApplied:new Date(),legibleDateApplied:moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),amountOfMoneyUponCompletion,physicalOrDigitalOrBoth,referenceLinks,selectedTestDates,technicalApproachToHack}};const finalResult={uniqueId:myID,employerId:listingData.postedBy,employerPostedJobId:listingData.uniqueId,applicationData:{generatedID,attachedFiles,coverLetterText,messageToEmployer,applicantId:userData.uniqueId,responses:[],hired:false,applicantName:\"\".concat(userData.firstName,\" \").concat(userData.lastName),likes:0,dislikes:0,employerPostedJobId:listingData.uniqueId,employerPosterId:listingData.postedBy,applicantId:myID,dateApplied:new Date(),legibleDateApplied:moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),amountOfMoneyUponCompletion,physicalOrDigitalOrBoth,referenceLinks,selectedTestDates,technicalApproachToHack,submittedUserData:{username,firstName,lastName,completedJobs,registrationDate,aboutMe,title,reviews,fullyVerified,points,yearsOfExperience}}};// View ALL included fields...\nconst requiredKeys=[\"username\",\"firstName\",\"lastName\",\"completedJobs\",\"registrationDate\",\"aboutMe\",\"title\",\"reviews\",\"fullyVerified\",\"points\",\"yearsOfExperience\"];// figure out length of requiredKeys     \nconst requiredLength=requiredKeys.length;// run boolean check\nconst doesIncludeFailures=requiredKeys.map((key,i)=>{if(typeof currentUserData[key]!==\"undefined\"){// includes!\nreturn true;}else{// doesnt include & notify!\nNotificationManager.warning(\"You're missing a REQUIRED submission input field of '\".concat(key,\"' - please go to your bio/profile section and submit this key of '\").concat(key,\"' before proceeding!\"),\"You are MISSING a key/field of the value '\".concat(key,\"'...!\"),4750);// return value to check at end for api-request running or not afterwards\nreturn false;}});if(doesIncludeFailures.includes(false)){// do nothing - NOT ready yet missing information\nNotificationManager.error(\"We experienced an ERROR while attempting to run our pre-upload checks & you're missing some required information...\",\"MISSING data - Required BEFORE continuing!\",4750);}else{// RUN FINAL REQUEST! all information is properly filled out...!\n// SAVE-DATA api-request run!\naxios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/apply/employer/listing/submit/live/data/last\"),finalResult).then(res=>{if(res.data.message===\"Successfully applied to listing/employer & updated your 'hacker' account as well!\"){axios.post(\"\".concat(process.env.REACT_APP_BASE_URL,\"/success/application/save/applicant/info/employerlisting\"),addApplicantData).then(res=>{if(res.data.message===\"Successfully updated employer listing data!\"){console.log(\"EVERYTHING WENT WELL....!! : \",res.data);NotificationManager.success(\"You've successfully applied to this employer's listing & we've notified them of your application!\",\"Successfully applied to gig/job!\",4000);setTimeout(()=>{history.push(\"/dashboard/hacker\");},4000);}else{console.log(\"Errorr :\",res.data);NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\",\"NO DATA SAVED! TRY AGAIN....\",6250);}}).catch(err=>{console.log(err);NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\",\"NO DATA SAVED! TRY AGAIN....\",6250);});}else{console.log(\"Errorr :\",res.data);NotificationManager.error(res.data.message,\"An error occurred while attempting to apply to this listing!\",4500);}}).catch(err=>{console.log(err);});}};const handleFinalSubmissionFiles=()=>{// DISABLE clicking background\nshiftCoreStyles(true);// set sheet open\nsetFileSheetOpenState(true);// lock after appropriate position change\nsetTimeout(()=>{// select MAIN-WRAPPER div class\nconst select=document.querySelector(\".enact-nonclick\");// finally - disable while pane is open!\ndisableBodyScroll(select);},450);};const watchSelectedTestDates=watch([\"selectedTestDates\"]);console.log(\"current!!!!!\",gatheredValues);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(LoadingBar,{color:\"#51bb25\",height:7,progress:progress,onLoaderFinished:()=>{setProgress(0);}}),/*#__PURE__*/React.createElement(SheetPaneSubmittingDataHelper,{ready:ready,shiftCoreStyles:shiftCoreStyles,alreadyAdded:alreadyAdded,currentUserData:currentUserData,clearAllBodyScrollLocks:clearAllBodyScrollLocks,userData:userData,sheetIsOpen:sheetIsOpen,setSheetOpenState:setSheetOpenState,renderSentence:renderSentence}),/*#__PURE__*/React.createElement(SheetDisplayFilesFileManagerHelper,{saveApplicationDetailsProgress:saveApplicationDetailsProgress,previousFiles:previousFiles,setProgress:setProgress,filesSheetOpen:filesSheetOpen,setFileSheetOpenState:setFileSheetOpenState,shiftCoreStyles:shiftCoreStyles,clearAllBodyScrollLocks:clearAllBodyScrollLocks}),/*#__PURE__*/React.createElement(Breadcrumb,{passedClassname:\"custom-breadcrumb-class\",parent:\"Apply & Work To Earn \".concat(process.env.REACT_APP_CRYPTO_TOKEN_NAME,\" to cashout for REAL ($$$-USD)\"),title:\"Review job requirements & details + apply to position/listing!\"}),/*#__PURE__*/React.createElement(Tour,{steps:tourStepsOptions,isOpen:isTourOpen,onAfterOpen:disableBodyAndScroll,onBeforeClose:enableBody,onRequestClose:handleTourClosingAction}),/*#__PURE__*/React.createElement(\"div\",{className:\"absolute-position-bottom-right-fixed\"},/*#__PURE__*/React.createElement(Card,{className:\"redirect-fixed-bottom-right\"},/*#__PURE__*/React.createElement(Media,{className:\"p-20\"},/*#__PURE__*/React.createElement(Media,{className:\"media-body-customized-fixed\",body:true},showMore===true?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h6\",{className:\"mt-0 mega-title-badge custom-mega-title-badge\"},\"Are you ready to submit your application?! \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-info pull-right digits custom-pull-right-digits\"},\"SHOW ME HOW TO SUBMIT APP!\")),/*#__PURE__*/React.createElement(\"p\",null,\"Are you \",/*#__PURE__*/React.createElement(\"strong\",null,\"READY TO SUBMIT YOUR APPLICATION\"),\" to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the \",/*#__PURE__*/React.createElement(\"strong\",null,\"'Submit Application'\"),\" button to proceed forwards...\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"})):null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"m-t-15 custom-radio-ml\"},/*#__PURE__*/React.createElement(\"div\",{className:\"checkbox checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{onClick:()=>{setShowMoreState(!showMore);},checked:showMore===true?true:false,id:\"checkbox-primary-show-more\",type:\"checkbox\",defaultChecked:true}),/*#__PURE__*/React.createElement(Label,{for:\"checkbox-primary-show-more\"},\"Show \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#a927f9\"}},showMore===true?\"LESS\":\"MORE\"),\" helpful/related info...\")))),/*#__PURE__*/React.createElement(Button,{onClick:handleDirectionChangeTour,style:{width:\"100%\"},className:\"btn-square btn-air-info\",outline:true,color:\"info-2x\"},\"Show me the 'submission' button!\"))))),/*#__PURE__*/React.createElement(Container,{className:\"container-default\",fluid:true},/*#__PURE__*/React.createElement(Form,{className:\"needs-validation tooltip-validation validateClass\",noValidate:\"\",onSubmit:handleSubmit(onFormSubmit,(errors,e)=>{setTimeout(()=>{return onErrorMainForm(errors,e);},250);})},/*#__PURE__*/React.createElement(Row,{className:\"customized-row-apply\",style:{paddingTop:\"25px \"}},/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"custom-card-inner customized-top-card\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Type of hack (physical location or digital asset)\"),/*#__PURE__*/React.createElement(\"p\",{style:{paddingTop:\"7.5px\"}},\"This is the \",/*#__PURE__*/React.createElement(\"em\",null,\"TYPE\"),\" of hack this \",/*#__PURE__*/React.createElement(\"em\",null,\"specific listing\"),\" requires from its participants. These selected options have absolutely \",/*#__PURE__*/React.createElement(\"strong\",null,\"NO LIENENCY\"),\" and any disregard to platform rules will result in \",/*#__PURE__*/React.createElement(\"strong\",null,\"IMMEDIATE PERMENANT BANNING\"))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(HelperRadioButtons,{listingReady:listingReady,listingData:listingData,id:id}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingTop:\"15px\"}}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\",lg:\"6\",xl:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},coverLetterChecks.label),/*#__PURE__*/React.createElement(Input,Object.assign({},coverLetterChecks.check(setError,register,clearErrors,\"coverLetterText\"),{placeholder:coverLetterChecks.placeholder,onChange:e=>{return coverLetterChecks.onChange(e,\"coverLetterText\",setValue);},name:coverLetterChecks.name,type:\"textarea\",className:\"form-control input-air-primary\",rows:\"6\"})),errors.coverLetterText?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.coverLetterText.message):null),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,physicalOrDigitalChecks.label),/*#__PURE__*/React.createElement(Controller,Object.assign({control:control,name:physicalOrDigitalChecks.name},physicalOrDigitalChecks.check(physicalOrDigitalChecks.name,register),{render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/React.createElement(Select,Object.assign({},field,{autoBlur:true,defaultValue:null,ref:physicalOrDigitalOrBothGeneratedRef,value:gatheredValues.physicalOrDigitalOrBoth,placeholder:physicalOrDigitalChecks.placeholder,onChange:selectedOption=>{console.log(\"changed!!!!\");setTimeout(()=>{// clear error after proper selection\nif(typeof selectedOption!==\"undefined\"&&Object.keys(selectedOption).length>0){// set selected value\nsetValue(physicalOrDigitalChecks.name,selectedOption,{shouldValidate:false});// clear relevant error\nclearErrors(physicalOrDigitalChecks.name);}else{// set error as nothing was selected (blank 'click-off' selection of selector)\nsetError(physicalOrDigitalChecks.name,{type:\"manual\",message:\"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\"});}},50);},onMenuClose:()=>{physicalOrDigitalOrBothGeneratedRef.current.blur();},options:physicalOrDigitalHackOptions}));}})),errors.physicalOrDigitalOrBoth?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.physicalOrDigitalOrBoth.message):null),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},amountWillingToCompleteJob.label),/*#__PURE__*/React.createElement(Input,Object.assign({},amountWillingToCompleteJob.check(setError,register,clearErrors,setValue,\"amountOfMoneyUponCompletion\"),{value:gatheredValues.amountOfMoneyUponCompletion,placeholder:amountWillingToCompleteJob.placeholder,onChange:e=>{return amountWillingToCompleteJob.onChange(e,\"amountOfMoneyUponCompletion\",setValue);},name:amountWillingToCompleteJob.name,type:\"number\",className:\"form-control input-air-primary\",pattern:/\\d+/g}))),errors.amountOfMoneyUponCompletion?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.amountOfMoneyUponCompletion.message):null)),/*#__PURE__*/React.createElement(Col,{md:\"6\",lg:\"6\",xl:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},\"Message To Employer (Direct to employer)\"),/*#__PURE__*/React.createElement(Input,Object.assign({},messageToEmployerChecks.check(setError,register,clearErrors,setValue,\"messageToEmployer\"),{placeholder:messageToEmployerChecks.placeholder,onChange:e=>{return messageToEmployerChecks.onChange(e,\"messageToEmployer\",setValue);},name:messageToEmployerChecks.name,type:\"textarea\",className:\"form-control input-air-primary\",rows:\"6\"})),errors.messageToEmployer?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.messageToEmployer.message):null),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},approachToSuccessfullyHackCo.label),/*#__PURE__*/React.createElement(Input,Object.assign({},approachToSuccessfullyHackCo.check(setError,register,clearErrors,\"technicalApproachToHack\"),{placeholder:approachToSuccessfullyHackCo.placeholder,onChange:e=>{return approachToSuccessfullyHackCo.onChange(e,\"technicalApproachToHack\",setValue);},name:approachToSuccessfullyHackCo.name,type:\"textarea\",className:\"form-control input-air-primary\",rows:\"6\"})),errors.technicalApproachToHack?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.technicalApproachToHack.message):null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"custom-card-inner custom-card-bottom-across\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info\"},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Attachments\"),\" to be \",/*#__PURE__*/React.createElement(\"strong\",null,\"sent\"),\" to the employer of this listing\"),/*#__PURE__*/React.createElement(\"p\",{style:{paddingTop:\"7.5px\"}},\"These attachments can be anything from a \\\"Cover Letter\\\" or \\\"Resume\\\" & these files will be sent \",/*#__PURE__*/React.createElement(\"strong\",null,\"directly\"),\" to the employer for consideration of your application for this listing or job/gig.\")),errors.selectAttachments?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.selectAttachments.message):null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},className:\"btn-square btn-air-success\",onClick:()=>{// open pane slider up from bottom\nhandleFinalSubmissionFiles();},outline:true,color:\"success-2x\"},\"Upload & Manage Attachments (To-be sent directly to employer)\"))))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"custom-card-inner custom-card-inner-customized\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Type Of Data That'll Be Automatically Submitted\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,\"This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(ListGroup,null,/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1 listitem-header-custom\"},\"Username\"),/*#__PURE__*/React.createElement(\"small\",null,\"Will be submitted to employer\")),/*#__PURE__*/React.createElement(\"hr\",null),renderSentence(\"username\",\"Username\",username)),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1 listitem-header-custom\"},\"First Name & Last Name (Together)\"),/*#__PURE__*/React.createElement(\"small\",null,\"Will be submitted to employer\")),/*#__PURE__*/React.createElement(\"hr\",null),renderSentence(\"firstName\"||\"lastName\",\"Full Name\",\"\".concat(firstName,\" \").concat(lastName))),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1 listitem-header-custom\"},\"Completed Job Count\"),/*#__PURE__*/React.createElement(\"small\",null,\"Will be submitted to employer\")),/*#__PURE__*/React.createElement(\"hr\",null),renderSentence(\"registrationDate\",\"Registration date of\",moment(registrationDate).fromNow())),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1 listitem-header-custom\"},\"Created Account (from ago...)\"),/*#__PURE__*/React.createElement(\"small\",null,\"Will be submitted to employer\")),/*#__PURE__*/React.createElement(\"hr\",null),renderSentence(\"completedJobs\",\"Completed Job Count\",completedJobs)),/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action flex-column align-items-start\"},/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},className:\"btn-square btn-air-info\",onClick:()=>{viewRemainderOfIncludedFields([\"username\",\"fullName\",\"registrationDate\",\"completedJobs\"]);},outline:true,color:\"info-2x\"},\"View all included fields (including above mentioned)\")))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"6\",lg:\"6\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"custom-card-inner custom-card-inner-customized\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info\"},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"REQUIRED\"),\" data to be completed/filled-out\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,{style:{marginTop:\"17.5px\"},className:\" m-form__group\"},/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},\"Reference a link (blog, website, etc... made by \",/*#__PURE__*/React.createElement(\"em\",{style:{textDecorationLine:\"underline\"}},\"you\"),\")\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,{className:\"group-addon-custom-two\"},\"http(s)://\")),/*#__PURE__*/React.createElement(Input,Object.assign({},urlEnteredLinkData.check(setError,register,clearErrors,setValue,errors,\"referenceLink\"),{onChange:e=>urlEnteredLinkData.onChange(e,\"referenceLink\",setValue),className:\"form-control\",type:\"text\",name:\"referenceLink\",placeholder:\"Enter a link to your work (website, blog, etc...)\"})),showButtonOrNot()?/*#__PURE__*/React.createElement(InputGroupAddon,{onClick:()=>{handleLinkAddition(setSelectedLinks,gatheredValues.referenceLinks,clearInput,setValue,gatheredValues.referenceLink);},addonType:\"append\"},/*#__PURE__*/React.createElement(InputGroupText,{className:\"group-addon-custom\"},\"Submit\")):null),errors.referenceLink?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.referenceLink.message):null),selectedLinks.map((link,index)=>{console.log(\"link\",link);return/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:\"12.5px\",marginBottom:\"12.5px\"},key:index},/*#__PURE__*/React.createElement(ListGroupItem,{onClick:e=>{e.preventDefault();},className:\"list-group-item custom-list-group-item-text\"},/*#__PURE__*/React.createElement(\"div\",{style:{paddingRight:\"25px\"}}),link.url,/*#__PURE__*/React.createElement(\"i\",{onClick:()=>{// handle deletion\nhandleDeletionLink(link,setSelectedLinks);},id:\"float-trash-right\",className:\"icon-trash\"})));}),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},\"Available dates to select (Physical 'Hack'ing Dates - you may need to click a date TWICE as this calendar can be finicky)\"),datesReady===true?/*#__PURE__*/React.createElement(DateRangePicker,{ranges:dateRanges,onChange:handleDateSelection,onDatesChange:()=>console.log(\"onDatesChange\")// minDate={new Date()}\n,shownDate:new Date(),className:\"custom-date-range-picker\",showMonthAndYearPickers:false,disabledDates:disabledDays,staticRanges:[],maxDate:maxDate,direction:\"horizontal\",showMonthArrow:true,months:2,showDateDisplay:false,inputRanges:[],scroll:{enabled:true},rangeColors:[\"#f73164\",\"#a927f9\",\"#f73164\",\"#a927f9\",\"#f73164\",\"#a927f9\"]}):null),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"}),errors.selectedTestDates?/*#__PURE__*/React.createElement(\"span\",{className:\"span-tooltip\"},errors.selectedTestDates.message):null,/*#__PURE__*/React.createElement(Col,{style:{marginTop:\"17.5px\"},sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},typeof gatheredValues.selectedTestDates!==\"undefined\"&&gatheredValues.selectedTestDates.length>0?/*#__PURE__*/React.createElement(Label,{className:\"heavy-label\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Currently\"),\" selected dates to apply \\\"physical\\\" hacks/hacking (\",/*#__PURE__*/React.createElement(\"strong\",null,\"CLICK DATE\"),\" to disregard selected date)\"):null,/*#__PURE__*/React.createElement(ListGroup,{className:\"listgroup-mapped-dates-wrapper\"},typeof gatheredValues.selectedTestDates!==\"undefined\"&&gatheredValues.selectedTestDates.length>0?gatheredValues.selectedTestDates.map((date,idx)=>{return/*#__PURE__*/React.createElement(ListGroupItem,{key:idx,style:{fontWeight:\"bold\"},className:\"list-group-item-action list-item-dates-mapped\",onClick:()=>{const filtered=gatheredValues.selectedTestDates.filter((dateee,idxxxx)=>{if(dateee.uniqueId!==date.uniqueId){return true;}});console.log(\"filtered\",filtered);setValue(\"selectedTestDates\",filtered,{shouldValidate:false});},active:idx%2===0?true:false},\"You've selected a date of...: \",moment(date.startDate).format(\"MM/DD/YYYY\"));}):null))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",xl:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{ref:scrollToTourWrapper,id:\"tour-col-custom\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-lg\"},/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,\"Have you filled out \",/*#__PURE__*/React.createElement(\"strong\",null,\"ALL OF THE REQUIRED DATA/INFO\"),\" and you're now \",/*#__PURE__*/React.createElement(\"strong\",null,\"READY\"),\" to apply and continue with your application?!\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",null,\"Click the button below to proceed forward & \",/*#__PURE__*/React.createElement(\"strong\",null,\"apply to this listing\"),\" and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"}),/*#__PURE__*/React.createElement(Button,{style:{width:\"100%\"},type:\"submit\",className:\"btn-square btn-air-info\",outline:true,color:\"info-2x\"},\"SUBMIT APPLICATION INFORMATION\"),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"natural-sm-spacer\"})))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(TimelineHelper,null))))));};const mapStateToProps=state=>{return{userData:state.auth.data,previousFiles:_.has(state.applicationDetails,\"applicationDetails\")&&_.has(state.applicationDetails.applicationDetails,\"files\")?{applicationDetails:{applicationDetails:{files:state.applicationDetails.applicationDetails.files}}}:{applicationDetails:{applicationDetails:{files:[]}}},previous:_.has(state.applicationDetails,\"applicationDetails\")?state.applicationDetails.applicationDetails:{}};};export default connect(mapStateToProps,{shiftCoreStyles,saveApplicationDetailsProgress})(withRouter(ApplyAsHackerEmployerListingHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ButtonGroup","ListGroup","FormGroup","Label","Input","InputGroupAddon","Form","InputGroup","InputGroupText","Media","helpers","connect","moment","shiftCoreStyles","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","axios","_","Link","withRouter","useParams","useHistory","Select","DateRangePicker","useForm","Controller","MainHooksCustomHelpers","Tour","LoadingBar","saveApplicationDetailsProgress","NotificationManager","uuid","confirmAlert","TimelineHelper","SheetPaneSubmittingDataHelper","HelperRadioButtons","renderMountedLogic","handleDeletionLink","handleLinkAddition","SheetDisplayFilesFileManagerHelper","urlEnteredLinkData","coverLetterChecks","messageToEmployerChecks","physicalOrDigitalChecks","approachToSuccessfullyHackCo","participateInBettingWagers","amountWillingToCompleteJob","tourStepsOptions","selector","content","ApplyAsHackerEmployerListingHelper","previousFiles","userData","location","previous","history","physicalOrDigitalOrBothGeneratedRef","participateInBettingWagersRef","scrollToTourWrapper","id","alreadyAdded","setAlreadyAddedState","filesSheetOpen","setFileSheetOpenState","showMore","setShowMoreState","linkInput","setLinkInput","isTourOpen","setIsTourOpenState","disabledDays","setDisabledDaysState","physicalOrDigitalHackOptions","setPhysicalOrDigitalHackOptionsState","sheetIsOpen","setSheetOpenState","currentUserData","setCurrentUserData","ready","setReadyGlobal","progress","setProgress","listingReady","setListingReady","listingData","setListingData","dateRanges","setDateRanges","datesReady","setDatesReady","selectedLinks","setSelectedLinks","maxDate","setMaxDate","register","handleSubmit","control","resetField","getValues","setValue","setError","clearErrors","watch","formState","errors","mode","reValidateMode","gatheredValues","handleDateSelection","ranges","startDate","endDate","selection","datesAreOnSameDay","first","second","getFullYear","getMonth","getDate","gatherDayInfo","date","format","formattedDate","key","formattedStartDate","formattedEndDate","uniqueId","has","selectedTestDates","length","shouldValidate","filter","x","warning","username","firstName","lastName","registrationDate","completedJobs","globalConfig","config","params","configuration","listingId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","user","catch","err","renderSentence","actual","type","val","hasOwnProperty","color","fontSize","fontWeight","textDecorationLine","viewRemainderOfIncludedFields","alreadyIncludedArray","setTimeout","target","document","querySelector","showButtonOrNot","referenceLink","clearInput","disableBodyAndScroll","enableBody","handleDirectionChangeTour","current","scrollIntoView","window","scrollBy","select","handleTourClosingAction","onErrorMainForm","e","files","onFormSubmit","values","attachedFiles","applicationDetails","aboutMe","title","reviews","fullyVerified","points","yearsOfExperience","coverLetterText","messageToEmployer","amountOfMoneyUponCompletion","physicalOrDigitalOrBoth","referenceLinks","technicalApproachToHack","myID","generatedID","addApplicantData","applicantID","listingID","employerId","postedBy","employerPostedJobId","applicationData","applicantId","responses","hired","applicantName","likes","dislikes","dateApplied","Date","legibleDateApplied","finalResult","employerPosterId","submittedUserData","requiredKeys","requiredLength","doesIncludeFailures","map","i","includes","error","post","success","push","handleFinalSubmissionFiles","watchSelectedTestDates","REACT_APP_CRYPTO_TOKEN_NAME","width","paddingTop","label","check","placeholder","onChange","name","field","selectedOption","Object","keys","blur","selectAttachments","fromNow","marginTop","link","index","marginBottom","preventDefault","paddingRight","url","enabled","idx","filtered","dateee","idxxxx","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ButtonGroup, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText, Media } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams, useHistory } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport Tour from 'reactour';\nimport LoadingBar from 'react-top-loading-bar';\nimport { saveApplicationDetailsProgress } from \"../../../../../redux/actions/hackers/applyToEmployerListing/applicationInfo.js\";\nimport { NotificationManager } from \"react-notifications\";\nimport uuid from 'react-uuid';\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst { TimelineHelper, SheetPaneSubmittingDataHelper, HelperRadioButtons, renderMountedLogic, handleDeletionLink, handleLinkAddition, SheetDisplayFilesFileManagerHelper } = helpers;\n\n// react-hook-form helpers\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\nconst participateInBettingWagers = MainHooksCustomHelpers().participateInBettingWagers;\nconst amountWillingToCompleteJob = MainHooksCustomHelpers().amountWillingToCompleteJob;\n\n\nconst tourStepsOptions = [\n    {\n      selector: '#tour-col-custom',\n      content: 'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!',\n    }\n];\n\nconst ApplyAsHackerEmployerListingHelper = ({ previousFiles, userData, shiftCoreStyles, location, saveApplicationDetailsProgress, previous }) => {\n\n    const history = useHistory();\n    // ref's\n    const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n    const participateInBettingWagersRef = useRef(null);\n    const scrollToTourWrapper = useRef(null);\n    // get URL ID from string\n    const { id } = useParams();\n    // initialize state items...\n    const [ alreadyAdded, setAlreadyAddedState ] = useState(null);\n    const [ filesSheetOpen, setFileSheetOpenState ] = useState(false);\n    const [ showMore, setShowMoreState ] = useState(false);\n    const [ linkInput, setLinkInput ] = useState(\"\"); \n    const [ isTourOpen, setIsTourOpenState ] = useState(false);\n    const [ disabledDays, setDisabledDaysState ] = useState([]);\n    const [ physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState ] = useState([]);\n    const [ sheetIsOpen, setSheetOpenState ] = useState(false);\n    const [ currentUserData, setCurrentUserData ] = useState(null);\n    const [ ready, setReadyGlobal ] = useState(false);\n    const [ progress, setProgress ] = useState(0);\n    const [ listingReady, setListingReady ] = useState(false);\n    const [ listingData, setListingData ] = useState(null);\n    const [ dateRanges, setDateRanges ] = useState(null);\n    const [ datesReady, setDatesReady ] = useState(false);\n    const [ selectedLinks, setSelectedLinks ] = useState([]);\n    const [ maxDate, setMaxDate ] = useState(null);\n\n    const { register, handleSubmit, control, resetField, getValues, setValue, setError, clearErrors, watch, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n    \n    const gatheredValues = getValues();\n\n    const handleDateSelection = (ranges) => {\n        const { startDate, endDate } = ranges.selection;\n\n        const datesAreOnSameDay = (first, second) => first.getFullYear() === second.getFullYear() && first.getMonth() === second.getMonth() && first.getDate() === second.getDate();\n\n        const gatherDayInfo = (date) => moment(date).format(\"MM-DD-YYYY\");\n\n        if (datesAreOnSameDay(startDate, endDate)) {\n            const formattedDate = {\n                startDate,\n                endDate,\n                key: 'selection',\n                formattedStartDate: gatherDayInfo(startDate),\n                formattedEndDate: gatherDayInfo(endDate),\n                uniqueId: uuid()\n            }\n\n            if (_.has(gatheredValues, \"selectedTestDates\") && typeof gatheredValues.selectedTestDates !== \"undefined\") {\n                if (gatheredValues.selectedTestDates.length === 0) {\n                    // update state...\n                    setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], { shouldValidate: false });\n                    // clear related error data\n                    clearErrors([\"selectedTestDates\"]);\n                } else {\n                    if ((gatheredValues.selectedTestDates.filter(x => x.formattedStartDate === formattedDate.formattedStartDate)).length > 0) {\n                        NotificationManager.warning(\"You cannot select the SAME date TWICE - Please select UNIQUE dates when selecting various physical 'hack dates'...\", \"Date is ALREADY selected!\", 4750);  \n                    } else {\n                        // update state...\n                        setValue(\"selectedTestDates\", [...gatheredValues.selectedTestDates, formattedDate], { shouldValidate: false });\n                        // clear related error data\n                        clearErrors([\"selectedTestDates\"]);\n                    }\n                }\n            } \n        }\n    }\n    // deconstruct redux-state items...\n    const { username, firstName, lastName, registrationDate, completedJobs } = userData;\n\n    // component mounted.\n    useEffect(() => {\n\n        // set default unavailiable state - selectedTestDates\n        setValue(\"selectedTestDates\", []);\n        setValue(\"referenceLinks\", []);\n        // set global config obj's for api-requests\n        const globalConfig = {\n            config: {\n                params: {\n                    uniqueId: userData.uniqueId\n                }\n            },\n            configuration: {\n                params: {\n                    listingId: id\n                }\n            }\n        }\n        renderMountedLogic(setMaxDate, globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady);\n        // gather core anonymous user information\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setCurrentUserData(user);\n                setReadyGlobal(true);\n            } else {\n                console.log('err', res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // render custom sentence instead of DRY repeating\n    const renderSentence = (actual, type, val) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(actual)) {\n                // return proper/desired \"right\" filled out data\n                return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Your {type} <strong style={currentUserData.hasOwnProperty(actual) ? { color: \"#dc3545\", fontSize: \"1.005rem\", fontWeight: 500 } : { color: \"#a927f9\", fontSize: \"1.005rem\", fontWeight: 500 }}>{val}</strong> will be submitted to the employer...</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom-custom override-red\"}>You have NOT filled out the required field of <em style={{ textDecorationLine: \"underline\" }}>{type}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    // view more fields in PANE\n    const viewRemainderOfIncludedFields = (alreadyIncludedArray) => {\n        // already shown items *(HIGHLIGHT)*\n        setAlreadyAddedState(alreadyIncludedArray);\n        // shift \"lock\" styles to prevent scrolling and clicking\n        shiftCoreStyles(true);\n        // open modal - change modal state to OPEN\n        setSheetOpenState(true);\n        // set delay to allow load\n        setTimeout(() => {\n            // select outter body classname to pause/freeze\n            const target = document.querySelector(\".enact-nonclick\");\n            // DISABLE body scroll entirely\n            disableBodyScroll(target);\n        },  500);\n    }\n    const showButtonOrNot = () => {\n        if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const clearInput = () => {\n        resetField(\"referenceLink\");\n    }\n    //  TOUR related LOCK SCREEN functions - DISABLE body scrolling\n    const disableBodyAndScroll = target => {\n        // disable body scroll\n        disableBodyScroll(target);\n    };\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const handleDirectionChangeTour = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // scroll to target and LOCK SCREEN until closed.\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly to account for top-NAV\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 750);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN WRAPPER class\n            const select = document.querySelector(\".enact-nonclick\");\n            // disable selected class (movement, clicks, etc...);\n            disableBodyScroll(select);\n\n            setIsTourOpenState(true);\n        }, 1000)\n    }\n    const handleTourClosingAction = () => {\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // clear body scroll locks\n        clearAllBodyScrollLocks();\n        // close tour state\n        setIsTourOpenState(false);\n    }\n    const onErrorMainForm = (errors, e) => {\n        console.log(\"errors : \", errors); // selectAttachments\n\n        if (_.has(previous, \"files\") && previous.files.length > 0) {\n            clearErrors([\"selectAttachments\"]);\n        } else {\n            setError(\"selectAttachments\", {\n                type: \"manual\",\n                message: \"You MUST select AT least ONE(1) attachments (CL, Resume, Image, etc...) before proceeding with the submission of this form\",\n            });\n        }\n\n        if (!gatheredValues.selectedTestDates.length > 0) {\n            setError(\"selectedTestDates\", {\n                type: \"manual\",\n                message: \"You MUST select a calendar time to 'attempt' your 'physical' hack to try to infiltrate this employer's company. Select a date (one day MIN) to continue!\",\n            });\n        } \n    }\n    const onFormSubmit = (values) => {\n        console.log(\"values\", values);\n        // deconstruct files from attached-files section-redux\n        const attachedFiles = previousFiles.applicationDetails.applicationDetails.files;\n        // deconstruct core information from bio-profile section\n        const { username, firstName, lastName, completedJobs, registrationDate, aboutMe, title, reviews, fullyVerified, points, yearsOfExperience } = currentUserData;\n        // deconstruct form-redux values on-submit\n        const { coverLetterText, messageToEmployer, amountOfMoneyUponCompletion, physicalOrDigitalOrBoth, referenceLinks, selectedTestDates, technicalApproachToHack } = values;\n\n        const myID = userData.uniqueId;\n        const generatedID = uuid();\n\n        const addApplicantData = {\n            applicantID: myID,\n            listingID: listingData.uniqueId,\n            employerId: listingData.postedBy,\n            employerPostedJobId: listingData.uniqueId,\n            userData,\n            generatedID,\n            applicationData: {\n                generatedID,\n                attachedFiles,\n                coverLetterText, \n                messageToEmployer, \n                applicantId: userData.uniqueId,\n                responses: [],\n                hired: false,\n                applicantName: `${userData.firstName} ${userData.lastName}`,\n                likes: 0,\n                dislikes: 0,\n                applicantId: myID,\n                dateApplied: new Date(),\n                legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                amountOfMoneyUponCompletion, \n                physicalOrDigitalOrBoth, \n                referenceLinks, \n                selectedTestDates, \n                technicalApproachToHack\n            }\n        }\n\n        const finalResult = {\n            uniqueId: myID,\n            employerId: listingData.postedBy,\n            employerPostedJobId: listingData.uniqueId,\n            applicationData: {\n                generatedID,\n                attachedFiles,\n                coverLetterText, \n                messageToEmployer, \n                applicantId: userData.uniqueId,\n                responses: [],\n                hired: false,\n                applicantName: `${userData.firstName} ${userData.lastName}`,\n                likes: 0,\n                dislikes: 0,\n                employerPostedJobId: listingData.uniqueId,\n                employerPosterId: listingData.postedBy,\n                applicantId: myID,\n                dateApplied: new Date(),\n                legibleDateApplied: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                amountOfMoneyUponCompletion, \n                physicalOrDigitalOrBoth, \n                referenceLinks, \n                selectedTestDates, \n                technicalApproachToHack, \n                submittedUserData: {\n                    username, \n                    firstName, \n                    lastName, \n                    completedJobs, \n                    registrationDate, \n                    aboutMe, \n                    title, \n                    reviews, \n                    fullyVerified, \n                    points, \n                    yearsOfExperience \n                }\n            }\n        };\n\n        // View ALL included fields...\n        const requiredKeys = [\"username\", \"firstName\", \"lastName\", \"completedJobs\", \"registrationDate\", \"aboutMe\", \"title\", \"reviews\", \"fullyVerified\", \"points\", \"yearsOfExperience\"];\n        // figure out length of requiredKeys     \n        const requiredLength = requiredKeys.length;\n        // run boolean check\n        const doesIncludeFailures = requiredKeys.map((key, i) => {\n            if (typeof currentUserData[key] !== \"undefined\") {\n                // includes!\n                return true;\n            } else {\n                // doesnt include & notify!\n                NotificationManager.warning(`You're missing a REQUIRED submission input field of '${key}' - please go to your bio/profile section and submit this key of '${key}' before proceeding!`, `You are MISSING a key/field of the value '${key}'...!`, 4750);\n                // return value to check at end for api-request running or not afterwards\n                return false;\n            }\n        })\n\n        if (doesIncludeFailures.includes(false)) {\n            // do nothing - NOT ready yet missing information\n\n            NotificationManager.error(`We experienced an ERROR while attempting to run our pre-upload checks & you're missing some required information...`, `MISSING data - Required BEFORE continuing!`, 4750);\n        } else {\n            // RUN FINAL REQUEST! all information is properly filled out...!\n\n            // SAVE-DATA api-request run!\n            axios.post(`${process.env.REACT_APP_BASE_URL}/apply/employer/listing/submit/live/data/last`, finalResult).then((res) => {\n                if (res.data.message === \"Successfully applied to listing/employer & updated your 'hacker' account as well!\") {\n\n                    axios.post(`${process.env.REACT_APP_BASE_URL}/success/application/save/applicant/info/employerlisting`, addApplicantData).then((res) => {\n                        if (res.data.message === \"Successfully updated employer listing data!\") {\n                            console.log(\"EVERYTHING WENT WELL....!! : \", res.data);\n        \n                            NotificationManager.success(\"You've successfully applied to this employer's listing & we've notified them of your application!\", \"Successfully applied to gig/job!\", 4000);\n        \n                            setTimeout(() => {\n                                history.push(\"/dashboard/hacker\")\n                            },  4000);\n                        } else {\n                            console.log(\"Errorr :\", res.data);\n        \n                            NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n                        }\n                    }).catch((err) => {\n                        console.log(err);\n\n                        NotificationManager.error(\"Critical error has occurred while updating database - we have deleted any related information regarding this application - please make your attempt again as NO data was saved.\", \"NO DATA SAVED! TRY AGAIN....\", 6250);\n                    })\n                } else {\n                    console.log(\"Errorr :\", res.data);\n\n                    NotificationManager.error(res.data.message, \"An error occurred while attempting to apply to this listing!\", 4500);\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n    const handleFinalSubmissionFiles = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // set sheet open\n        setFileSheetOpenState(true);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN-WRAPPER div class\n            const select = document.querySelector(\".enact-nonclick\");\n            // finally - disable while pane is open!\n            disableBodyScroll(select);\n        }, 450);\n    }\n    const watchSelectedTestDates = watch([\"selectedTestDates\"]);\n\n    console.log(\"current!!!!!\", gatheredValues);\n    return (\n        <Fragment>\n            <LoadingBar\n                color='#51bb25'\n                height={7}\n                progress={progress}\n                onLoaderFinished={() => {\n                    setProgress(0);\n                }}\n            />\n            <SheetPaneSubmittingDataHelper ready={ready} shiftCoreStyles={shiftCoreStyles} alreadyAdded={alreadyAdded} currentUserData={currentUserData} clearAllBodyScrollLocks={clearAllBodyScrollLocks} userData={userData} sheetIsOpen={sheetIsOpen} setSheetOpenState={setSheetOpenState} renderSentence={renderSentence} />\n            <SheetDisplayFilesFileManagerHelper saveApplicationDetailsProgress={saveApplicationDetailsProgress} previousFiles={previousFiles} setProgress={setProgress} filesSheetOpen={filesSheetOpen} setFileSheetOpenState={setFileSheetOpenState} shiftCoreStyles={shiftCoreStyles} clearAllBodyScrollLocks={clearAllBodyScrollLocks} />\n            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n            <Tour\n                steps={tourStepsOptions}\n                isOpen={isTourOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={handleTourClosingAction} \n            />\n            <div className=\"absolute-position-bottom-right-fixed\">\n                <Card className=\"redirect-fixed-bottom-right\">\n                    <Media className=\"p-20\">\n                        <Media className=\"media-body-customized-fixed\" body>\n                            {showMore === true ? <Fragment>\n                                <h6 className=\"mt-0 mega-title-badge custom-mega-title-badge\">Are you ready to submit your application?! <span className=\"badge badge-info pull-right digits custom-pull-right-digits\">{\"SHOW ME HOW TO SUBMIT APP!\"}</span></h6>\n                                <p>Are you <strong>READY TO SUBMIT YOUR APPLICATION</strong> to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the <strong>'Submit Application'</strong> button to proceed forwards...</p>\n                                <hr />\n                                <div className=\"natural-sm-spacer\" />\n                            </Fragment> : null}\n                            <Row>\n                                <FormGroup className=\"m-t-15 custom-radio-ml\">\n                                    <div className=\"checkbox checkbox-primary\">\n                                        <Input onClick={() => {\n                                            setShowMoreState(!showMore);\n                                        }} checked={showMore === true ? true : false} id=\"checkbox-primary-show-more\" type=\"checkbox\" defaultChecked/>\n                                        <Label for=\"checkbox-primary-show-more\">Show <strong style={{ textDecorationLine: \"underline\", color: \"#a927f9\" }}>{showMore === true ? \"LESS\" : \"MORE\"}</strong> helpful/related info...</Label>\n                                    </div>\n                                </FormGroup>\n                            </Row>\n                            <Button onClick={handleDirectionChangeTour} style={{ width: \"100%\" }} className=\"btn-square btn-air-info\" outline color=\"info-2x\">Show me the 'submission' button!</Button>\n                        </Media>\n                    </Media>\n                </Card>\n            </div>\n            <Container className=\"container-default\" fluid={true}>\n                <Form className={`needs-validation tooltip-validation validateClass`} noValidate=\"\" onSubmit={handleSubmit(onFormSubmit, (errors, e) => {\n                    setTimeout(() => {\n                        return onErrorMainForm(errors, e);\n                    }, 250)\n                })}>\n                    <Row className=\"customized-row-apply\" style={{ paddingTop: \"25px \" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"custom-card-inner customized-top-card\">\n                                <CardHeader className=\"b-l-primary\">\n                                    <h5>Type of hack (physical location or digital asset)</h5>\n                                    <p style={{ paddingTop: \"7.5px\" }}>This is the <em>TYPE</em> of hack this <em>specific listing</em> requires from its participants. These selected options have absolutely <strong>NO LIENENCY</strong> and any disregard to platform rules will result in <strong>IMMEDIATE PERMENANT BANNING</strong></p>\n                                </CardHeader>\n                                <CardBody>\n                                    <HelperRadioButtons listingReady={listingReady} listingData={listingData} id={id} />\n                                    <div style={{ paddingTop: \"15px\" }} />\n                                    <hr />{/*  listingVisibility */}\n                                    <Row>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{coverLetterChecks.label}</Label>\n                                                <Input {...coverLetterChecks.check(setError, register, clearErrors, \"coverLetterText\")} placeholder={coverLetterChecks.placeholder} onChange={(e) => {\n                                                    return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n                                                }} name={coverLetterChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.coverLetterText ? <span className=\"span-tooltip\">{errors.coverLetterText.message}</span> : null}\n                                                {/*  */}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label>{physicalOrDigitalChecks.label}</Label>\n                                                <Controller\n                                                    control={control} \n                                                    name={physicalOrDigitalChecks.name}\n                                                    {...physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register)}\n                                                    render={({ field }) => (\n                                                        <Select\n                                                            {...field}\n                                                            autoBlur={true}\n                                                            defaultValue={null}\n                                                            ref={physicalOrDigitalOrBothGeneratedRef}\n                                                            value={gatheredValues.physicalOrDigitalOrBoth}\n                                                            placeholder={physicalOrDigitalChecks.placeholder}\n                                                            onChange={(selectedOption) => {\n                                                                console.log(\"changed!!!!\");\n\n                                                                setTimeout(() => {\n                                                                    // clear error after proper selection\n                                                                    if ((typeof selectedOption !== \"undefined\") && (Object.keys(selectedOption).length > 0)) {\n                                                                        // set selected value\n                                                                        setValue(physicalOrDigitalChecks.name, selectedOption, { shouldValidate: false });\n                                                                        // clear relevant error\n                                                                        clearErrors(physicalOrDigitalChecks.name);\n                                                                    } else {\n                                                                        // set error as nothing was selected (blank 'click-off' selection of selector)\n                                                                        setError(physicalOrDigitalChecks.name, {\n                                                                            type: \"manual\",\n                                                                            message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\",\n                                                                        });\n                                                                    }\n                                                                }, 50);\n                                                            }}\n                                                            onMenuClose={() => {\n                                                                physicalOrDigitalOrBothGeneratedRef.current.blur();\n                                                            }}\n                                                            options={physicalOrDigitalHackOptions}\n                                                        />\n                                                    )}\n                                                />\n                                                {errors.physicalOrDigitalOrBoth ? <span className=\"span-tooltip\">{errors.physicalOrDigitalOrBoth.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormGroup>\n                                                    <Label className=\"heavy-label\">{amountWillingToCompleteJob.label}</Label>\n                                                    <Input {...amountWillingToCompleteJob.check(setError, register, clearErrors, setValue, \"amountOfMoneyUponCompletion\")} value={gatheredValues.amountOfMoneyUponCompletion} placeholder={amountWillingToCompleteJob.placeholder} onChange={(e) => {\n                                                        return amountWillingToCompleteJob.onChange(e, \"amountOfMoneyUponCompletion\", setValue);\n                                                    }} name={amountWillingToCompleteJob.name} type=\"number\" className=\"form-control input-air-primary\" pattern={/\\d+/g} />\n                                                </FormGroup>\n                                                {errors.amountOfMoneyUponCompletion ? <span className=\"span-tooltip\">{errors.amountOfMoneyUponCompletion.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">Message To Employer (Direct to employer)</Label>\n                                                <Input {...messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\")} placeholder={messageToEmployerChecks.placeholder} onChange={(e) => {\n                                                    return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n                                                }} name={messageToEmployerChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.messageToEmployer ? <span className=\"span-tooltip\">{errors.messageToEmployer.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{approachToSuccessfullyHackCo.label}</Label>\n                                                <Input {...approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\")} placeholder={approachToSuccessfullyHackCo.placeholder} onChange={(e) => {\n                                                    return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n                                                }} name={approachToSuccessfullyHackCo.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"6\"} />\n                                                {errors.technicalApproachToHack ? <span className=\"span-tooltip\">{errors.technicalApproachToHack.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Card className=\"custom-card-inner custom-card-bottom-across\">\n                                                <CardHeader className=\"b-l-info\">\n                                                    <h5><strong>Attachments</strong> to be <strong>sent</strong> to the employer of this listing</h5>\n                                                    <p style={{ paddingTop: \"7.5px\" }}>These attachments can be anything from a \"Cover Letter\" or \"Resume\" & these files will be sent <strong>directly</strong> to the employer for consideration of your application for this listing or job/gig.</p>\n                                                </CardHeader>\n                                                {errors.selectAttachments ? <span className=\"span-tooltip\">{errors.selectAttachments.message}</span> : null}\n                                                <CardBody>\n                                                    <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-success\"} onClick={() => {\n                                                        // open pane slider up from bottom\n                                                        handleFinalSubmissionFiles() \n                                                    }} outline color=\"success-2x\">Upload & Manage Attachments (To-be sent directly to employer)</Button>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5>Type Of Data That'll Be Automatically Submitted</h5>\n                                    <hr />\n                                    <p>This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...</p>\n                                </CardHeader>\n                                <CardBody>\n                                    <ListGroup>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"username\", \"Username\", username)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"firstName\" || \"lastName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-info\"} onClick={() => {\n                                                viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n                                            }} outline color=\"info-2x\">View all included fields (including above mentioned)</Button>\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5><strong>REQUIRED</strong> data to be completed/filled-out</h5>\n                                </CardHeader>\n                                <CardBody> \n                                    <Form>  \n                                        {/* links go here... */}\n                                        <FormGroup style={{ marginTop: \"17.5px\" }} className=\" m-form__group\">\n                                            <Label className=\"heavy-label\">Reference a link (blog, website, etc... made by <em style={{ textDecorationLine: \"underline\" }}>you</em>)</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText className=\"group-addon-custom-two\">{\"http(s)://\"}</InputGroupText></InputGroupAddon>\n                                                <Input {...urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\")} onChange={(e) => urlEnteredLinkData.onChange(e, \"referenceLink\", setValue)} className=\"form-control\" type=\"text\" name=\"referenceLink\" placeholder={\"Enter a link to your work (website, blog, etc...)\"} />\n                                                {showButtonOrNot() ? <InputGroupAddon onClick={() => {\n                                                    handleLinkAddition(setSelectedLinks, gatheredValues.referenceLinks, clearInput, setValue, gatheredValues.referenceLink);\n                                                }} addonType=\"append\"><InputGroupText className=\"group-addon-custom\">{\"Submit\"}</InputGroupText></InputGroupAddon> : null}\n                                            </InputGroup>\n                                            {errors.referenceLink ? <span className=\"span-tooltip\">{errors.referenceLink.message}</span> : null}\n                                        </FormGroup>\n                                        {selectedLinks.map((link, index) => {\n                                            console.log(\"link\", link);\n                                            return (\n                                                <div style={{ marginTop: \"12.5px\", marginBottom: \"12.5px\" }} key={index}>\n                                                    <ListGroupItem onClick={(e) => {\n                                                        e.preventDefault();\n                                                    }} className=\"list-group-item custom-list-group-item-text\"><div style={{ paddingRight: \"25px\" }} />{link.url}<i onClick={() => {\n                                                        // handle deletion\n                                                        handleDeletionLink(link, setSelectedLinks);\n                                                    }} id={\"float-trash-right\"} className=\"icon-trash\"></i></ListGroupItem>\n                                                </div>\n                                            );\n                                        })}\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Label className=\"heavy-label\">Available dates to select (Physical 'Hack'ing Dates - you may need to click a date TWICE as this calendar can be finicky)</Label>\n                                            {datesReady === true ? <DateRangePicker\n                                                ranges={dateRanges}\n                                                onChange={handleDateSelection}\n                                                onDatesChange={() => console.log(\"onDatesChange\")}\n                                                // minDate={new Date()}\n                                                shownDate={new Date()}\n                                                className={\"custom-date-range-picker\"}\n                                                showMonthAndYearPickers={false}\n                                                disabledDates={disabledDays}\n                                                staticRanges={[]}\n                                                maxDate={maxDate}\n                                                direction={\"horizontal\"}\n                                                showMonthArrow={true}\n                                                months={2}\n                                                showDateDisplay={false}\n                                                inputRanges={[]}\n                                                scroll={{ enabled: true }}\n                                                rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                            /> : null}\n                                        </Col>\n                                        <div className=\"natural-sm-spacer\" />\n                                        {errors.selectedTestDates ? <span className=\"span-tooltip\">{errors.selectedTestDates.message}</span> : null}\n                                        <Col style={{ marginTop: \"17.5px\" }} sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            {typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? <Label className=\"heavy-label\"><strong>Currently</strong> selected dates to apply \"physical\" hacks/hacking (<strong>CLICK DATE</strong> to disregard selected date)</Label> : null}\n                                            <ListGroup className=\"listgroup-mapped-dates-wrapper\">\n                                                {typeof gatheredValues.selectedTestDates !== \"undefined\" && gatheredValues.selectedTestDates.length > 0 ? gatheredValues.selectedTestDates.map((date, idx) => {\n                                                    return <ListGroupItem key={idx} style={{ fontWeight: \"bold\" }} className=\"list-group-item-action list-item-dates-mapped\" onClick={() => {\n                                                        const filtered = gatheredValues.selectedTestDates.filter((dateee, idxxxx) => {\n                                                            if (dateee.uniqueId !== date.uniqueId) {\n                                                                return true;\n                                                            }\n                                                        })\n                                                        \n                                                        console.log(\"filtered\", filtered);\n\n                                                        setValue(\"selectedTestDates\", filtered, { shouldValidate: false });\n                                                    }} active={idx % 2 === 0 ? true : false}>You've selected a date of...: {moment(date.startDate).format(\"MM/DD/YYYY\")}</ListGroupItem>;\n                                                }) : null}\n                                            </ListGroup>\n                                        </Col>\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                            <div ref={scrollToTourWrapper} id=\"tour-col-custom\">\n                                <Card className=\"shadow-lg\">\n                                    <CardHeader>\n                                        <h5>Have you filled out <strong>ALL OF THE REQUIRED DATA/INFO</strong> and you're now <strong>READY</strong> to apply and continue with your application?!</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <p>Click the button below to proceed forward & <strong>apply to this listing</strong> and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!</p>\n                                        <hr />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                            <Button style={{ width: \"100%\" }} type={\"submit\"} className=\"btn-square btn-air-info\" outline color=\"info-2x\">SUBMIT APPLICATION INFORMATION</Button>\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <TimelineHelper />\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previousFiles: _.has(state.applicationDetails, \"applicationDetails\") && _.has(state.applicationDetails.applicationDetails, \"files\") ? {\n            applicationDetails: {\n                applicationDetails: {\n                    files: state.applicationDetails.applicationDetails.files\n                }\n            }\n        } : {\n            applicationDetails: {\n                applicationDetails: {\n                    files: []\n                }\n            }\n        },\n        previous: _.has(state.applicationDetails, \"applicationDetails\") ? state.applicationDetails.applicationDetails : {}\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, saveApplicationDetailsProgress })(withRouter(ApplyAsHackerEmployerListingHelper));\n"]},"metadata":{},"sourceType":"module"}