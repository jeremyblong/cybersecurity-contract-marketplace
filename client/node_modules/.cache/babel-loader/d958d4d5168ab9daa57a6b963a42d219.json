{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/topOffBal/topoffBalance.js\";\nimport React, { Fragment, useState } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport Slider from 'rc-slider';\nimport { connect } from \"react-redux\";\n\nconst TopOffBalanceHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [percentageToBePaid, setPercentageToBePaid] = useState(50);\n  const [cost, setCost] = useState(0);\n  const [marks, setMarks] = useState({\n    0: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"0%\"\n    },\n    10: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"10%\"\n    },\n    20: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"20%\"\n    },\n    30: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"30%\"\n    },\n    40: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"40%\"\n    },\n    50: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"50%\"\n    },\n    60: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"60%\"\n    },\n    70: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"70%\"\n    },\n    80: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"80%\"\n    },\n    90: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"90%\"\n    },\n    100: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"100%\"\n    }\n  });\n\n  const handleSliderValueChange = percentage => {\n    console.log(\"handleSliderValueChange percentage\", percentage);\n    setPercentageToBePaid(percentage);\n  };\n\n  const onAfterChange = percentage => {\n    console.log(\"onAfterChange percentage\", percentage);\n    const totalCost = 1250;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    setCost(converted);\n  };\n\n  const calculateCurrentSelectedCost = percentage => {\n    const totalCost = 1250;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    return `$${converted.toFixed(2)} selected to be deposited into your account immediately!`;\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Purchase 'In-App' Currency And/Or Deposit Fund's\",\n    title: \"Deposit funds into your account balance (can be withdrawn at later date)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"topoff-balance-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title-deposit-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"Deposit funds into your account and/or top-off your balance with more funding!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"You can deposit fund's into your account to have a positive availiable balance to pay hacker's/contractors, employers, purchase profile boosts, purchase tokens, etc... These funds ARE retreivable and \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 253\n    }\n  }, \"CAN BE WITHDRAWN\"), \" at any point if you wish to clear your current/availiable account balance.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col-two-custom\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 41\n    }\n  }, \"Please select a value that you wish to deposit into your account. \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 111\n    }\n  }, \"drag the slider\"), \" to the appropriate point, select your payment method & make the desired purchase. You'll balance will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 311\n    }\n  }, \"immediately updated!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-slider-adjustment-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, \"Please drag the marker to the appropriate position marking 'how much' you'd like to depsoit on this transaction..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: percentageToBePaid,\n    startPoint: 0,\n    onAfterChange: onAfterChange,\n    onChange: handleSliderValueChange,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"current-selected-cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }\n  }, calculateCurrentSelectedCost(percentageToBePaid))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col-two-custom\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"An account balance allows for specific actions such as 'purchasing tokens', 'profile boosts' and other misc. actions. It is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 177\n    }\n  }, \"recommended\"), \" that you keep a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 222\n    }\n  }, \"minimum\"), \" of $125.00 in your account balance at any given time however this is NOT mandatory, just recommended.\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(TopOffBalanceHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/topOffBal/topoffBalance.js"],"names":["React","Fragment","useState","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Breadcrumb","Slider","connect","TopOffBalanceHelper","userData","percentageToBePaid","setPercentageToBePaid","cost","setCost","marks","setMarks","style","color","label","handleSliderValueChange","percentage","console","log","onAfterChange","totalCost","perc","parseFloat","converted","calculateCurrentSelectedCost","toFixed","textDecorationLine","mapStateToProps","state","auth","data"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport Slider from 'rc-slider';\nimport { connect } from \"react-redux\";\n\nconst TopOffBalanceHelper = ({ userData }) => {\n\n    const [ percentageToBePaid, setPercentageToBePaid ] = useState(50);\n    const [ cost, setCost ] = useState(0);\n    const [ marks, setMarks ] = useState({\n        0: { style: { color: \"blue\" }, label: \"0%\" },\n        10: { style: { color: \"blue\" }, label: \"10%\" },\n        20: { style: { color: \"blue\" }, label: \"20%\" },\n        30: { style: { color: \"blue\" }, label: \"30%\" },\n        40: { style: { color: \"blue\" }, label: \"40%\" },\n        50: { style: { color: \"blue\" }, label: \"50%\" },\n        60: { style: { color: \"blue\" }, label: \"60%\" },\n        70: { style: { color: \"blue\" }, label: \"70%\" },\n        80: { style: { color: \"blue\" }, label: \"80%\" },\n        90: { style: { color: \"blue\" }, label: \"90%\" },\n        100: { style: { color: \"blue\" }, label: \"100%\" }\n    });\n\n    const handleSliderValueChange = (percentage) => {\n        console.log(\"handleSliderValueChange percentage\", percentage);\n\n        setPercentageToBePaid(percentage);\n    }\n    const onAfterChange = (percentage) => {\n        console.log(\"onAfterChange percentage\", percentage);\n\n        const totalCost = 1250;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        setCost(converted);\n    }\n    const calculateCurrentSelectedCost = (percentage) => {\n        const totalCost = 1250;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        return `$${converted.toFixed(2)} selected to be deposited into your account immediately!`;\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Purchase 'In-App' Currency And/Or Deposit Fund's\" title=\"Deposit funds into your account balance (can be withdrawn at later date)\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"topoff-balance-card-wrapper\"}>\n                            <CardHeader className={\"b-l-secondary b-r-secondary\"}>\n                                <h3 className='title-deposit-funds'>Deposit funds into your account and/or top-off your balance with more funding!</h3>\n                                <p className='lead'>You can deposit fund's into your account to have a positive availiable balance to pay hacker's/contractors, employers, purchase profile boosts, purchase tokens, etc... These funds ARE retreivable and <strong>CAN BE WITHDRAWN</strong> at any point if you wish to clear your current/availiable account balance.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-info b-r-info'>\n                                <Row>\n                                    <Col className='dotted-border-col-two-custom' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <h3>Please select a value that you wish to deposit into your account. <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>drag the slider</strong> to the appropriate point, select your payment method & make the desired purchase. You'll balance will be <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>immediately updated!</strong></h3>\n                                        <hr />\n                                        <div className='center-slider-adjustment-bar'>\n                                            <p className='lead'>Please drag the marker to the appropriate position marking 'how much' you'd like to depsoit on this transaction..</p>\n                                            <hr />\n                                            <Slider value={percentageToBePaid} startPoint={0} onAfterChange={onAfterChange} onChange={handleSliderValueChange} marks={marks} />\n                                            <div className='centered-both-ways'>\n                                                <h3 className='current-selected-cost'>{calculateCurrentSelectedCost(percentageToBePaid)}</h3>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                    <Col className='dotted-border-col-two-custom' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <p className='lead'>An account balance allows for specific actions such as 'purchasing tokens', 'profile boosts' and other misc. actions. It is <strong>recommended</strong> that you keep a <strong>minimum</strong> of $125.00 in your account balance at any given time however this is NOT mandatory, just recommended.</p>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(TopOffBalanceHelper);"]},"metadata":{},"sourceType":"module"}