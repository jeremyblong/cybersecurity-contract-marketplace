{"ast":null,"code":"import _classCallCheck from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/verification/initialize/employer/startVerification.js\";\nimport React, { Component, Fragment } from 'react';\nimport VerifyButton from \"@passbase/button/react\";\nimport ReactPlayer from 'react-player';\nimport { Container, Row, Col, Card, CardBody, CardHeader } from \"reactstrap\";\nimport \"../styles.css\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\n\nvar InitializeVerificationProcessEmployerHelper = /*#__PURE__*/function (_Component) {\n  _inherits(InitializeVerificationProcessEmployerHelper, _Component);\n\n  var _super = _createSuper(InitializeVerificationProcessEmployerHelper);\n\n  function InitializeVerificationProcessEmployerHelper(props) {\n    var _this;\n\n    _classCallCheck(this, InitializeVerificationProcessEmployerHelper);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmissionOfVerification = function (identityAccessKey) {\n      console.log(\"handleSubmissionOfVerification ran!\", identityAccessKey);\n      axios.post(\"\".concat(process.env.REACT_APP_BASE_URL, \"/save/identity/access/key/verification/flow\"), {\n        identityAccessKey: identityAccessKey,\n        uniqueId: _this.props.userData.uniqueId,\n        accountType: \"employers\"\n      }).then(function (res) {\n        if (res.data.message === \"Saved verification data!\") {\n          console.log(res.data);\n          var user = res.data.user;\n\n          _this.props.authentication(user);\n\n          NotificationManager.success(\"You've successfully completed the required verification process/flow, we are reviewing your information and will notify you when approved.\", 'Completed Verification Flow!', 4500);\n        } else {\n          console.log(\"err\", res.data);\n          NotificationManager.error(\"We experienced an error while saving your completed verification data...\", 'ERROR saving verification data!', 4500);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(InitializeVerificationProcessEmployerHelper, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        height: \"100vh\",\n        className: \"full-screen-player\",\n        wrapper: \"div\",\n        url: require(\"../../../../../assets/video/verification.mp4\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"centered-container-video-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        md: \"12\",\n        lg: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          paddingTop: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"b-l-secondary border-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, \"Start your verification flow by clicking the button below to get started!\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\", \"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\", \"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\", \"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\", \"unknown printer took a galley of type and scrambled.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(VerifyButton, {\n        apiKey: process.env.REACT_APP_PASSBASE_PUBLISHABLE_API_KEY,\n        onSubmitted: function onSubmitted(identityAccessKey) {\n          console.log(\"onSubmitted - identityAccessKey\", identityAccessKey);\n\n          _this2.handleSubmissionOfVerification(identityAccessKey);\n        },\n        onFinish: function onFinish(identityAccessKey) {\n          console.log(\"onFinish - identityAccessKey\", identityAccessKey);\n        },\n        onError: function onError(errorCode) {\n          console.log(\"errorCode\", errorCode);\n          NotificationManager.error(\"Unfortunately, an error occurred during the verification process and we were unable to complete the verification process/flow.\", 'ERROR Completing Verification!', 4500);\n        },\n        onStart: function onStart() {\n          console.log(\"started flow...!\");\n        },\n        prefillAttributes: {\n          email: this.props.userData.email\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }\n      }))))))));\n    }\n  }]);\n\n  return InitializeVerificationProcessEmployerHelper;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authentication: authentication\n})(InitializeVerificationProcessEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/verification/initialize/employer/startVerification.js"],"names":["React","Component","Fragment","VerifyButton","ReactPlayer","Container","Row","Col","Card","CardBody","CardHeader","connect","axios","NotificationManager","authentication","InitializeVerificationProcessEmployerHelper","props","handleSubmissionOfVerification","identityAccessKey","console","log","post","process","env","REACT_APP_BASE_URL","uniqueId","userData","accountType","then","res","data","message","user","success","error","catch","err","state","require","paddingTop","REACT_APP_PASSBASE_PUBLISHABLE_API_KEY","errorCode","email","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport VerifyButton from \"@passbase/button/react\";\nimport ReactPlayer from 'react-player';\nimport { Container, Row, Col, Card, CardBody, CardHeader } from \"reactstrap\";\nimport \"../styles.css\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { authentication } from \"../../../../../redux/actions/authentication/auth.js\";\n\nclass InitializeVerificationProcessEmployerHelper extends Component {\nconstructor (props) {\n    super(props);\n\n    this.state = {\n        \n    }\n}\n    handleSubmissionOfVerification = (identityAccessKey) => {\n        console.log(\"handleSubmissionOfVerification ran!\", identityAccessKey);\n\n        axios.post(`${process.env.REACT_APP_BASE_URL}/save/identity/access/key/verification/flow`, {\n            identityAccessKey,\n            uniqueId: this.props.userData.uniqueId,\n            accountType: \"employers\"\n        }).then((res) => {\n            if (res.data.message === \"Saved verification data!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                this.props.authentication(user);\n\n                NotificationManager.success(`You've successfully completed the required verification process/flow, we are reviewing your information and will notify you when approved.`, 'Completed Verification Flow!', 4500);\n            } else {\n                console.log(\"err\", res.data);\n\n                NotificationManager.error(\"We experienced an error while saving your completed verification data...\", 'ERROR saving verification data!', 4500);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n    render() {\n        return (\n            <Fragment>\n                <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} height={\"100vh\"} className={\"full-screen-player\"} wrapper={\"div\"} url={require(\"../../../../../assets/video/verification.mp4\")} />\n                <div className=\"centered-container-video-overlay\">\n                    <Container fluid={false}>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card style={{ paddingTop: \"25px\" }}>\n                                    <CardHeader className=\"b-l-secondary border-3\">\n                                        <h5>Start your verification flow by clicking the button below to get started!</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <p>\n                                            {\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\"}\n                                            {\"the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\"}\n                                            {\"of type and scrambled. Lorem Ipsum is simply dummy text of the printing and typesetting\"}\n                                            {\"industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\"}\n                                            {\"unknown printer took a galley of type and scrambled.\"}\n                                        </p>\n                                        <hr />\n                                        <VerifyButton\n                                            apiKey={process.env.REACT_APP_PASSBASE_PUBLISHABLE_API_KEY}\n                                            onSubmitted={(identityAccessKey) => {\n                                                console.log(\"onSubmitted - identityAccessKey\", identityAccessKey);\n\n                                                this.handleSubmissionOfVerification(identityAccessKey);\n                                            }}\n                                            onFinish={(identityAccessKey) => {\n                                                console.log(\"onFinish - identityAccessKey\", identityAccessKey);\n                                            }}\n                                            onError={(errorCode) => {\n                                                console.log(\"errorCode\", errorCode);\n\n                                                NotificationManager.error(\"Unfortunately, an error occurred during the verification process and we were unable to complete the verification process/flow.\", 'ERROR Completing Verification!', 4500);\n                                            }}\n                                            onStart={() => {\n                                                console.log(\"started flow...!\");\n                                            }}\n                                            prefillAttributes={{\n                                                email: this.props.userData.email\n                                            }}\n                                        />\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </Fragment>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { authentication })(InitializeVerificationProcessEmployerHelper);\n\n"]},"metadata":{},"sourceType":"module"}