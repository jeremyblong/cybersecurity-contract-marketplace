{"ast":null,"code":"import React from \"react\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport axios from \"axios\";\n\nconst processPayment = (tokens, userData) => {\n  console.log(\"processTokens\", tokens, userData);\n  const configuration = {\n    tokens,\n    signedinUserID: userData.uniqueId,\n    signedinAccountType: userData.accountType\n  };\n  axios.post(`${process.env.REACT_APP_BASE_URL}/purchase/account/tokens/either/account`, configuration).then(res => {\n    if (res.data.message === \"Purchased tokens successfully!\") {\n      console.log(res.data);\n    } else {\n      console.log(\"Err\", res.data);\n    }\n  }).catch(err => {\n    console.log(\"Critical errror...:\", err);\n  });\n};\n\nconst handleTokenPurchase = (tokens, userData) => {\n  console.log(\"handleTokenPurchase ran/running..\");\n\n  const calculate = () => {\n    switch (tokens) {\n      case 25:\n        return \"$14.99\";\n        break;\n\n      case 50:\n        return \"$24.99\";\n        break;\n\n      case 100:\n        return \"$39.99\";\n        break;\n\n      case 175:\n        return \"$69.99\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  confirmAlert({\n    title: `Purchase ${tokens} token's for ${calculate()}? You cannot undo this action.`,\n    message: `Are you sure you'd like to make this purchase? Once confirmation is received via this prompt/modal, we will bill your primary card accordingly (Your DEFAULT payment method - check your payments to figure out which is primary if you need to or change it)!`,\n    buttons: [{\n      label: 'Yes, Make Purchase!',\n      onClick: () => processPayment(tokens, userData)\n    }, {\n      label: 'No, Cancel.',\n      onClick: () => {}\n    }]\n  });\n};\n\nexport default {\n  handleTokenPurchase\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/subscriptions/selectMembership/helpers/helperFunctions.js"],"names":["React","confirmAlert","axios","processPayment","tokens","userData","console","log","configuration","signedinUserID","uniqueId","signedinAccountType","accountType","post","process","env","REACT_APP_BASE_URL","then","res","data","message","catch","err","handleTokenPurchase","calculate","title","buttons","label","onClick"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAA7B,EAAqCC,QAArC;AAEA,QAAMG,aAAa,GAAG;AAClBJ,IAAAA,MADkB;AAElBK,IAAAA,cAAc,EAAEJ,QAAQ,CAACK,QAFP;AAGlBC,IAAAA,mBAAmB,EAAEN,QAAQ,CAACO;AAHZ,GAAtB;AAKAV,EAAAA,KAAK,CAACW,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,yCAA7C,EAAuFR,aAAvF,EAAsGS,IAAtG,CAA4GC,GAAD,IAAS;AAChH,QAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,gCAAzB,EAA2D;AACvDd,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,IAAhB;AACH,KAFD,MAEO;AACHb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBW,GAAG,CAACC,IAAvB;AACH;AACJ,GAND,EAMGE,KANH,CAMUC,GAAD,IAAS;AACdhB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCe,GAAnC;AACH,GARD;AASH,CAjBD;;AAmBA,MAAMC,mBAAmB,GAAG,CAACnB,MAAD,EAASC,QAAT,KAAsB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AAEA,QAAMiB,SAAS,GAAG,MAAM;AACpB,YAAQpB,MAAR;AACI,WAAK,EAAL;AACI,eAAO,QAAP;AACA;;AACJ,WAAK,EAAL;AACI,eAAO,QAAP;AACA;;AACJ,WAAK,GAAL;AACI,eAAO,QAAP;AACA;;AACJ,WAAK,GAAL;AACI,eAAO,QAAP;AACA;;AACJ;AACI;AAdR;AAgBH,GAjBD;;AAmBAH,EAAAA,YAAY,CAAC;AACTwB,IAAAA,KAAK,EAAG,YAAWrB,MAAO,gBAAeoB,SAAS,EAAG,gCAD5C;AAETJ,IAAAA,OAAO,EAAG,gQAFD;AAGTM,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,qBADT;AAEEC,MAAAA,OAAO,EAAE,MAAMzB,cAAc,CAACC,MAAD,EAASC,QAAT;AAF/B,KADO,EAKP;AACEsB,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,OAAO,EAAE,MAAM,CAEd;AAJH,KALO;AAHA,GAAD,CAAZ;AAgBH,CAtCD;;AAyCA,eAAe;AACXL,EAAAA;AADW,CAAf","sourcesContent":["import React from \"react\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport axios from \"axios\";\n\nconst processPayment = (tokens, userData) => {\n    console.log(\"processTokens\", tokens, userData);\n\n    const configuration = {\n        tokens,\n        signedinUserID: userData.uniqueId,\n        signedinAccountType: userData.accountType\n    }\n    axios.post(`${process.env.REACT_APP_BASE_URL}/purchase/account/tokens/either/account`, configuration).then((res) => {\n        if (res.data.message === \"Purchased tokens successfully!\") {\n            console.log(res.data);\n        } else {\n            console.log(\"Err\", res.data);\n        }\n    }).catch((err) => {\n        console.log(\"Critical errror...:\", err);\n    })\n}\n\nconst handleTokenPurchase = (tokens, userData) => {\n    console.log(\"handleTokenPurchase ran/running..\");\n\n    const calculate = () => {\n        switch (tokens) {\n            case 25:\n                return \"$14.99\";\n                break;\n            case 50:\n                return \"$24.99\";\n                break;\n            case 100:\n                return \"$39.99\";\n                break;\n            case 175:\n                return \"$69.99\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    confirmAlert({\n        title: `Purchase ${tokens} token's for ${calculate()}? You cannot undo this action.`,\n        message: `Are you sure you'd like to make this purchase? Once confirmation is received via this prompt/modal, we will bill your primary card accordingly (Your DEFAULT payment method - check your payments to figure out which is primary if you need to or change it)!`,\n        buttons: [\n          {\n            label: 'Yes, Make Purchase!',\n            onClick: () => processPayment(tokens, userData)\n          },\n          {\n            label: 'No, Cancel.',\n            onClick: () => {\n\n            }\n          }\n        ]\n    });\n}\n\n\nexport default {\n    handleTokenPurchase\n}"]},"metadata":{},"sourceType":"module"}