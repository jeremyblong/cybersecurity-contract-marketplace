{"ast":null,"code":"import _regeneratorRuntime from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/createVideoInterview/createVideoChat.js\";\n\nimport React, { Fragment, useState, useEffect, useRef, useCallback } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\n\nvar CreateVideoChatEmployerHelper = function CreateVideoChatEmployerHelper(_ref) {\n  var userData = _ref.userData;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      videocall = _useState4[0],\n      setVideoCallData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      videoTracks = _useState6[0],\n      setVideoTracks = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      audioTracks = _useState8[0],\n      setAudioTracks = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      room = _useState10[0],\n      setRoom = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      participants = _useState12[0],\n      setParticipants = _useState12[1]; // Create refs for the HTML elements to attach audio and video to in the DOM\n  // For now, set them to null\n\n\n  var videoRef = useRef(null);\n  var audioRef = useRef(null);\n\n  var joinRoomVideoChat = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data, _room, participantConnected, participantDisconnected;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/generate/twilio/access/token\"), {\n                params: {\n                  uniqueId: userData.uniqueId,\n                  accountType: userData.accountType,\n                  generatedRoomID: videocall.roomName\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n\n              if (!response) {\n                _context.next = 18;\n                break;\n              }\n\n              console.log(\"response\", response);\n              data = response.data;\n              _context.next = 9;\n              return twilioConnect(data.token, {\n                name: videocall.roomName,\n                audio: true,\n                video: true\n              });\n\n            case 9:\n              _room = _context.sent;\n              console.log(\"roo\", _room);\n\n              participantConnected = function participantConnected(participant) {\n                setParticipants(function (prevParticipants) {\n                  return [].concat(_toConsumableArray(prevParticipants), [participant]);\n                });\n              };\n\n              participantDisconnected = function participantDisconnected(participant) {\n                setParticipants(function (prevParticipants) {\n                  return prevParticipants.filter(function (p) {\n                    return p !== participant;\n                  });\n                });\n              };\n\n              setRoom(_room);\n\n              _room.on('participantConnected', participantConnected);\n\n              _room.on('participantDisconnected', participantDisconnected);\n\n              _room.participants.forEach(participantConnected);\n\n              setRoom(_room); // if (room) {\n              //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n              // }\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n              if (_context.t0) {\n                NotificationManager.info(\"We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \\\"Try again.\", \"Unable to access video/audio devices!\", 4750);\n              }\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 20]]);\n    }));\n\n    return function joinRoomVideoChat() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleLogout = useCallback(function () {\n    setRoom(function (prevRoom) {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach(function (trackPub) {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n\n      return null;\n    });\n  }, []);\n  console.log(\"room\", room);\n  useEffect(function () {\n    var configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/general/user/data\"), configuration).then(function (res) {\n      if (res.data.message === \"Gathered user!\") {\n        console.log(res.data);\n        var _user = res.data.user;\n        setUser(_user);\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n  console.log(\"videocall\", videocall);\n  useEffect(function () {\n    var videoTrack = videoTracks[0];\n\n    if (videoRef && videoRef.current) {\n      if (videoTrack) {\n        videoTrack.attach(videoRef.current);\n        return function () {\n          videoTrack.detach();\n        };\n      }\n    }\n  }, [videoTracks]);\n  useEffect(function () {\n    var audioTrack = audioTracks[0];\n\n    if (audioRef && audioRef.current) {\n      if (audioTrack) {\n        audioTrack.attach(audioRef.current);\n        return function () {\n          audioTrack.detach();\n        };\n      }\n    }\n  }, [audioTracks]);\n  useEffect(function () {\n    var configuration = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType,\n        videocallID: id\n      }\n    };\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/video/chat/info\"), configuration).then(function (res) {\n      if (res.data.message === \"Gathered info!\") {\n        console.log(res.data);\n        var videoCall = res.data.videoCall;\n        setVideoCallData(videoCall);\n      } else {\n        console.log(\"err gathering user..:\", res.data);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n  var remoteParticipants = participants.map(function (participant) {\n    return /*#__PURE__*/React.createElement(Participant, {\n      key: participant.sid,\n      participant: participant,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Invite Hacker(s) To Video Interview With You!\",\n    title: \"Find, Select & Invite Anyone On Our Platform..\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"upload-video-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, \"We \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 56\n    }\n  }, \"HIGHLY SUGGEST\"), \" video interviewing \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 136\n    }\n  }, \"any\"), \" potential candiates for a contracted gig and/or hacking job, \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#f73164\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 247\n    }\n  }, \"ESPECIALLY\"), \" if testing \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 315\n    }\n  }, \"physical infrastructure\"), \" and other related on-site security.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-success b-r-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, room !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Participant, {\n    key: room.localParticipant.sid,\n    participant: room.localParticipant,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }))) : null, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remote-participants\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, remoteParticipants)))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-success\",\n    outline: true,\n    color: \"success-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: joinRoomVideoChat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, \"Initialize Room\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger-2x\",\n    style: {\n      width: \"100%\"\n    },\n    onClick: handleLogout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, \"Exit/Close Video Call\")))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/video/createVideoInterview/createVideoChat.js"],"names":["React","Fragment","useState","useEffect","useRef","useCallback","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Button","Breadcrumb","connect","reduxConnect","useParams","Video","axios","Participant","twilioConnect","uuid","NotificationManager","CreateVideoChatEmployerHelper","userData","id","user","setUser","videocall","setVideoCallData","videoTracks","setVideoTracks","audioTracks","setAudioTracks","room","setRoom","participants","setParticipants","videoRef","audioRef","joinRoomVideoChat","get","process","env","REACT_APP_BASE_URL","params","uniqueId","accountType","generatedRoomID","roomName","response","console","log","data","token","name","audio","video","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","info","handleLogout","prevRoom","localParticipant","tracks","trackPub","track","stop","disconnect","configuration","then","res","message","catch","err","videoTrack","current","attach","detach","audioTrack","videocallID","videoCall","remoteParticipants","map","sid","color","width","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, useCallback } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Button } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect as reduxConnect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport * as Video from 'twilio-video';\nimport axios from \"axios\";\nimport Participant from \"./participant/participant.js\";\nimport { connect as twilioConnect } from \"twilio-video\";\nimport uuid from \"react-uuid\";\nimport { NotificationManager } from 'react-notifications';\n\n\nconst CreateVideoChatEmployerHelper = ({ userData }) => {\n\n    const { id } = useParams();\n\n    const [ user, setUser ] = useState(null);\n    const [ videocall, setVideoCallData ] = useState(null);\n    const [ videoTracks, setVideoTracks ] = useState([]);\n    const [ audioTracks, setAudioTracks ] = useState([]);\n    const [ room, setRoom ] = useState(null);\n    const [ participants, setParticipants ] = useState([]);\n  \n    // Create refs for the HTML elements to attach audio and video to in the DOM\n    // For now, set them to null\n    const videoRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const joinRoomVideoChat = async () => {\n        try {\n\n            // const generatedRoomID = uuid();\n\n            const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/generate/twilio/access/token`, {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType,\n                    generatedRoomID: videocall.roomName\n                }\n            });\n            if (response) {\n                console.log(\"response\", response);\n\n                const { data } = response;\n\n                const room = await twilioConnect(data.token, {\n                    name: videocall.roomName,\n                    audio: true,\n                    video: true\n                });\n\n                console.log(\"roo\", room);\n\n                const participantConnected = participant => {\n                    setParticipants(prevParticipants => [...prevParticipants, participant]);\n                };\n                const participantDisconnected = participant => {\n                    setParticipants(prevParticipants =>\n                        prevParticipants.filter(p => p !== participant)\n                    );\n                };\n\n                setRoom(room);\n\n                room.on('participantConnected', participantConnected);\n                room.on('participantDisconnected', participantDisconnected);\n                room.participants.forEach(participantConnected);\n\n                setRoom(room);\n                // if (room) {\n                //     history.push(`/start/video/interview/chat/employer`, { roomID: generatedRoomID })\n                // }\n            }\n        } catch(err) {\n            console.log(err);\n\n            if (err) {\n                NotificationManager.info(`We weren't able to access the microphone and/or webcam. Please make sure no other application is currently accessing it, then press \"Try again.`, \"Unable to access video/audio devices!\", 4750);\n            }\n        }\n    }\n\n    const handleLogout = useCallback(() => {\n        setRoom((prevRoom) => {\n          if (prevRoom) {\n            prevRoom.localParticipant.tracks.forEach((trackPub) => {\n              trackPub.track.stop();\n            });\n            prevRoom.disconnect();\n          }\n          return null;\n        });\n    }, []);\n\n    console.log(\"room\", room);\n\n    useEffect(() => {\n\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/general/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Gathered user!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setUser(user);\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    console.log(\"videocall\", videocall);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoRef && videoRef.current) {\n            if (videoTrack) {\n                videoTrack.attach(videoRef.current);\n                return () => {\n                    videoTrack.detach();\n                };\n            }\n        }\n    }, [ videoTracks ]);\n    \n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioRef && audioRef.current) {\n            if (audioTrack) {\n                audioTrack.attach(audioRef.current);\n                return () => {\n                    audioTrack.detach();\n                };\n            }\n        }\n    }, [ audioTracks ]);\n\n    useEffect(() => {\n        const configuration = {\n            params: {\n                id: userData.uniqueId, \n                accountType: userData.accountType,\n                videocallID: id\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/video/chat/info`, configuration).then((res) => {\n            if (res.data.message === \"Gathered info!\") {\n                console.log(res.data);\n\n                const { videoCall } = res.data;\n\n                setVideoCallData(videoCall);\n\n            } else {\n                console.log(\"err gathering user..:\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const remoteParticipants = participants.map((participant) => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n    \n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Invite Hacker(s) To Video Interview With You!\" title=\"Find, Select & Invite Anyone On Our Platform..\" /> \n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader className=\"b-l-secondary b-r-secondary\">\n                                <h2 className=\"upload-video-header\">Initialize a video chat with ANY hacker on our platform (whether you've previously communicated or not!)</h2>\n                                <p className=\"lead\">We <strong style={{ color: \"#f73164\" }}>HIGHLY SUGGEST</strong> video interviewing <strong style={{ color: \"#f73164\" }}>any</strong> potential candiates for a contracted gig and/or hacking job, <strong style={{ color: \"#f73164\" }}>ESPECIALLY</strong> if testing <strong>physical infrastructure</strong> and other related on-site security.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-success b-r-success'>\n                                <Row>\n                                    {room !== null ? <Fragment>\n                                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Participant\n                                                key={room.localParticipant.sid}\n                                                participant={room.localParticipant}\n                                            />\n                                        </Col>\n                                    </Fragment> : null}\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <div className=\"remote-participants\">{remoteParticipants}</div>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-success\"} outline color={\"success-2x\"} style={{ width: \"100%\" }} onClick={joinRoomVideoChat}>Initialize Room</Button>\n                                    </Col>\n                                    <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                        <Button className={\"btn-square-danger\"} outline color={\"danger-2x\"} style={{ width: \"100%\" }} onClick={handleLogout}>Exit/Close Video Call</Button>\n                                    </Col>\n                                </Row>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default reduxConnect(mapStateToProps, {})(CreateVideoChatEmployerHelper);"]},"metadata":{},"sourceType":"module"}