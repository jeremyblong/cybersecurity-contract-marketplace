{"ast":null,"code":"import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst HookHelpers = () => {\n  const startBidCheck = {\n    check: (setError, register) => {\n      return { ...register(\"startBid\", {\n          required: {\n            value: true,\n            message: \"You MUST enter AT least 1 characters to 10 characters\"\n          },\n          minLength: {\n            value: 1,\n            message: \"You must enter AT Least 1 characters\"\n          },\n          maxLength: {\n            value: 10,\n            message: \"You may ONLY enter 10 characters or less\"\n          },\n          onBlur: e => {\n            console.log(\"blurred\", e); // code here...\n\n            setError(\"startBid\", {\n              type: \"manual\",\n              message: \"Enter something at least??\"\n            });\n          }\n        })\n      };\n    },\n    name: \"startBid\",\n    placeholder: \"Enter a starting bid...\",\n    type: \"text\",\n    label: \"Starting Bid\"\n  };\n  return {\n    startBidCheck\n  };\n};\n\nexport default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["React","useState","useRef","useEffect","Fragment","useForm","Controller","HookHelpers","startBidCheck","check","setError","register","required","value","message","minLength","maxLength","onBlur","e","console","log","type","name","placeholder","label"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAMC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,aACI,EAAC,GAAGA,QAAQ,CAAC,UAAD,EAAa;AAAEC,UAAAA,QAAQ,EAAE;AACjCC,YAAAA,KAAK,EAAE,IAD0B;AAEjCC,YAAAA,OAAO,EAAE;AAFwB,WAAZ;AAGtBC,UAAAA,SAAS,EAAE;AACVF,YAAAA,KAAK,EAAE,CADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAHW;AAMtBE,UAAAA,SAAS,EAAE;AACVH,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,OAAO,EAAE;AAFC,WANW;AAStBG,UAAAA,MAAM,EAAGC,CAAD,IAAO;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB,EADc,CAEd;;AACAR,YAAAA,QAAQ,CAAC,UAAD,EAAa;AACjBW,cAAAA,IAAI,EAAE,QADW;AAEjBP,cAAAA,OAAO,EAAE;AAFQ,aAAb,CAAR;AAIH;AAhBwB,SAAb;AAAZ,OADJ;AAmBH,KArBiB;AAsBlBQ,IAAAA,IAAI,EAAE,UAtBY;AAuBlBC,IAAAA,WAAW,EAAE,yBAvBK;AAwBlBF,IAAAA,IAAI,EAAE,MAxBY;AAyBlBG,IAAAA,KAAK,EAAE;AAzBW,GAAtB;AA4BA,SAAO;AACHhB,IAAAA;AADG,GAAP;AAGH,CAjCD;;AAoCA,eAAeD,WAAf","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\n\n\nconst HookHelpers = () => {\n    \n    const startBidCheck = {\n        check: (setError, register) => {\n            return (\n                {...register(\"startBid\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 1 characters to 10 characters\"\n                }, minLength: {\n                    value: 1,\n                    message: \"You must enter AT Least 1 characters\"\n                }, maxLength: {\n                    value: 10,\n                    message: \"You may ONLY enter 10 characters or less\"\n                }, onBlur: (e) => {\n                    console.log(\"blurred\", e);\n                    // code here...\n                    setError(\"startBid\", {\n                        type: \"manual\",\n                        message: \"Enter something at least??\",\n                    });\n                }})}\n            )\n        },\n        name: \"startBid\",\n        placeholder: \"Enter a starting bid...\",\n        type: \"text\",\n        label: \"Starting Bid\"\n    };\n\n    return {\n        startBidCheck\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}