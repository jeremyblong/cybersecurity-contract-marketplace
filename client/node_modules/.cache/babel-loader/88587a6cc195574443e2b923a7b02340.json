{"ast":null,"code":"export const getCroppedImg = (image, crop, fileName) => {\n  const canvas = document.createElement(\"canvas\");\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext(\"2d\");\n  const img = new Image();\n\n  img.onload = function () {\n    console.log(\"onload ran!\");\n    ctx.drawImage(img, scaleX, scaleY);\n  };\n\n  img.src = image; // New lines to be added\n\n  const pixelRatio = window.devicePixelRatio;\n  canvas.width = crop.width * pixelRatio;\n  canvas.height = crop.height * pixelRatio;\n  ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  ctx.imageSmoothingQuality = \"high\";\n  ctx.drawImage(img, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height); // convert to base64\n\n  const base64Image = canvas.toDataURL(\"image/jpeg\");\n  return base64Image;\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/profile/employer/view/generalDetails/helpers/croppingBannerImage/getCroppedImage.js"],"names":["getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","img","Image","onload","console","log","drawImage","src","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","x","y","base64Image","toDataURL"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,KAA2B;AACpD,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAMC,MAAM,GAAGN,KAAK,CAACO,YAAN,GAAqBP,KAAK,CAACQ,KAA1C;AACA,QAAMC,MAAM,GAAGT,KAAK,CAACU,aAAN,GAAsBV,KAAK,CAACW,MAA3C;AACAR,EAAAA,MAAM,CAACK,KAAP,GAAeP,IAAI,CAACO,KAApB;AACAL,EAAAA,MAAM,CAACQ,MAAP,GAAgBV,IAAI,CAACU,MAArB;AACA,QAAMC,GAAG,GAAGT,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAAZ;AAEA,QAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AAEAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,YAAW;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAN,IAAAA,GAAG,CAACO,SAAJ,CAAcL,GAAd,EAAmBR,MAAnB,EAA2BG,MAA3B;AACD,GAHD;;AAIAK,EAAAA,GAAG,CAACM,GAAJ,GAAUpB,KAAV,CAdoD,CAgBpD;;AACA,QAAMqB,UAAU,GAAGC,MAAM,CAACC,gBAA1B;AACApB,EAAAA,MAAM,CAACK,KAAP,GAAeP,IAAI,CAACO,KAAL,GAAaa,UAA5B;AACAlB,EAAAA,MAAM,CAACQ,MAAP,GAAgBV,IAAI,CAACU,MAAL,GAAcU,UAA9B;AACAT,EAAAA,GAAG,CAACY,YAAJ,CAAiBH,UAAjB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCA,UAAnC,EAA+C,CAA/C,EAAkD,CAAlD;AACAT,EAAAA,GAAG,CAACa,qBAAJ,GAA4B,MAA5B;AAEAb,EAAAA,GAAG,CAACO,SAAJ,CACEL,GADF,EAEEb,IAAI,CAACyB,CAAL,GAASpB,MAFX,EAGEL,IAAI,CAAC0B,CAAL,GAASlB,MAHX,EAIER,IAAI,CAACO,KAAL,GAAaF,MAJf,EAKEL,IAAI,CAACU,MAAL,GAAcF,MALhB,EAME,CANF,EAOE,CAPF,EAQER,IAAI,CAACO,KARP,EASEP,IAAI,CAACU,MATP,EAvBoD,CAmCpD;;AACA,QAAMiB,WAAW,GAAGzB,MAAM,CAAC0B,SAAP,CAAiB,YAAjB,CAApB;AAEA,SAAOD,WAAP;AACH,CAvCM","sourcesContent":["export const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n\n    img.onload = function() {\n      console.log(\"onload ran!\");\n      ctx.drawImage(img, scaleX, scaleY);    \n    }  \n    img.src = image;\n  \n    // New lines to be added\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n  \n    ctx.drawImage(\n      img,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n  \n    // convert to base64\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n\n    return base64Image;\n}"]},"metadata":{},"sourceType":"module"}