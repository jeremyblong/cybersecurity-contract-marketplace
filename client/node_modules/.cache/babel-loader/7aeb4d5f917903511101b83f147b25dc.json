{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/index.js\";\nimport React, { Fragment, useState, useMemo, useEffect, useRef } from \"react\";\nimport Dropzone from 'react-dropzone-uploader';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button, InputGroup, InputGroupText, InputGroupAddon, Progress } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { ProgressLevel, UploadProjectFile } from '../../../../../../../../constant';\nimport reduxFormHelpers from \"./helpers/reduxFormHelpers.js\";\nimport optionHelper from \"./helpers/options/options.js\";\nimport Select from \"react-select\";\nimport helperFunctions from \"./helpers/helperFunctions/index.js\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { Plus, Trash } from \"react-feather\";\nimport { NotificationManager } from \"react-notifications\";\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nconst courseTitle = reduxFormHelpers().courseTitle;\nconst courseCategory = reduxFormHelpers().courseCategory;\nconst descriptionChecks = reduxFormHelpers().descriptionChecks;\nconst pricing = reduxFormHelpers().pricing;\nconst objectiveChecks = reduxFormHelpers().objectiveChecks;\nconst courseDesignedForChecks = reduxFormHelpers().courseDesignedForChecks;\nconst prerequisitesChecks = reduxFormHelpers().prerequisitesChecks;\nconst {\n  courseCategoryOptions,\n  pricingOptions\n} = optionHelper;\nconst {\n  CourseCreationHashtagHelper\n} = helperFunctions;\n\nconst CreateNewCoursePageOne = _ref => {\n  let {\n    overallProgress,\n    setOverallProgress,\n    updateCourseInformationData,\n    courseData\n  } = _ref;\n  // create ref's local\n  const courseCategoryGeneratedRef = useRef(null);\n  const pricingGeneratedRef = useRef(null);\n  const customHashtagsRef = useRef(null);\n  let cursor = useRef(null); // state initialization\n\n  const [objectives, setObjectiveState] = useState([{\n    partCount0: \"\",\n    id: uuid()\n  }, {\n    partCount1: \"\",\n    id: uuid()\n  }, {\n    partCount2: \"\",\n    id: uuid()\n  }, {\n    partCount3: \"\",\n    id: uuid()\n  }]);\n  const [requirements, setRequirements] = useState([{\n    partCount0: \"\",\n    id: uuid()\n  }]);\n  const [courseContentConcepts, setCourseContentConcepts] = useState([{\n    partCount0: \"\",\n    id: uuid()\n  }]);\n  useEffect(() => {\n    setOverallProgress(25);\n  }, []); // state init\n\n  const [hashtags, setHashtags] = useState([]);\n  const [wordCount, setWordCount] = useState(0); // redux form logic\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }); // collect redux-hook-form values\n\n  const currentValues = getValues();\n\n  const renderErrorsFormUploadContent = (e, errors) => {\n    console.log(\"renderErrorsFormUploadContent ran...\", e, errors);\n  };\n\n  const onSubmission = (e, data) => {\n    console.log(\"onSubmission ran...\", e, data);\n    const {\n      objective0,\n      objective1,\n      objective2,\n      objective3,\n      concept0,\n      courseCategory,\n      courseHashtags,\n      courseTitle,\n      description,\n      pricing,\n      requirement0\n    } = data; // LEFT OUT ~ concept1, concept2\n\n    const whatStudentsWillLearn = {\n      objective0: typeof objective0 !== \"undefined\" ? objective0 : null,\n      objective1: typeof objective1 !== \"undefined\" ? objective1 : null,\n      objective2: typeof objective2 !== \"undefined\" ? objective2 : null,\n      objective3: typeof objective3 !== \"undefined\" ? objective3 : null,\n      objective4: typeof data.objective4 !== \"undefined\" ? data.objective4 : null,\n      objective5: typeof data.objective5 !== \"undefined\" ? data.objective5 : null\n    };\n    const mainData = {\n      courseTitle,\n      courseCategory,\n      courseHashtags,\n      pricing,\n      description\n    };\n    const requirementOrPreReqs = {\n      requirement0: typeof requirement0 !== \"undefined\" ? requirement0 : null,\n      requirement1: typeof data.requirement1 !== \"undefined\" ? data.requirement1 : null,\n      requirement2: typeof data.requirement2 !== \"undefined\" ? data.requirement2 : null\n    };\n    const whoIsThisCourseFor = {\n      concept0: typeof concept0 !== \"undefined\" ? concept0 : null,\n      concept1: typeof data.concept1 !== \"undefined\" ? data.concept1 : null,\n      concept2: typeof data.concept2 !== \"undefined\" ? data.concept2 : null\n    };\n    updateCourseInformationData({\n      currentPage: 2,\n      pageOneData: {\n        whatStudentsWillLearn,\n        mainData,\n        requirementOrPreReqs,\n        whoIsThisCourseFor\n      }\n    });\n  };\n\n  const autofocusNoSpellcheckerOptions = useMemo(() => {\n    return {\n      autofocus: false,\n      spellChecker: false\n    };\n  }, []);\n\n  const handleDeletionRow = (item, index, type) => {\n    // objective requirements concepts\n    if (type === \"objective\") {\n      setObjectiveState(prevState => {\n        return prevState.filter(x => {\n          if (x.id === item.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      });\n    } else if (type === \"requirements\") {\n      setRequirements(prevState => {\n        return prevState.filter(x => {\n          if (x.id === item.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      });\n    } else if (type === \"concepts\") {\n      setCourseContentConcepts(prevState => {\n        return prevState.filter(x => {\n          if (x.id === item.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-horizontally-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-above-bar-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 110\n    }\n  }, overallProgress, \"% Complete\")), /*#__PURE__*/React.createElement(Progress, {\n    className: \"course-creation-progress-bar\",\n    animated: true,\n    color: \"info\",\n    value: overallProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 152\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    onSubmit: handleSubmit(onSubmission, (e, errors) => {\n      return renderErrorsFormUploadContent(e, errors);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, courseTitle.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, courseTitle.check(setError, register), {\n    autoFocus: true,\n    ref: cursor,\n    className: \"form-control\",\n    type: courseTitle.type,\n    name: courseTitle.name,\n    placeholder: courseTitle.placeholder,\n    onChange: e => {\n      courseTitle.onChange(e, setValue);\n      const caret = e.target.selectionStart;\n      const element = e.target;\n      window.requestAnimationFrame(() => {\n        element.selectionStart = caret;\n        element.selectionEnd = caret;\n      });\n    },\n    value: currentValues.courseTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 41\n    }\n  })), errors.courseTitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 63\n    }\n  }, errors.courseTitle.message) : null))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, courseCategory.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: courseCategory.name\n  }, courseCategory.check(setError, register, clearErrors), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: courseCategoryGeneratedRef,\n        autoBlur: true,\n        placeholder: courseCategory.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          courseCategoryGeneratedRef.current.blur();\n        },\n        value: currentValues.courseCategory,\n        onChange: selectedOption => courseCategory.onChange(selectedOption, setValue, clearErrors),\n        options: courseCategoryOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  })), errors.courseCategory ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 66\n    }\n  }, errors.courseCategory.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 41\n    }\n  }, pricing.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: pricing.name\n  }, pricing.check(setError, register, clearErrors), {\n    render: _ref3 => {\n      let {\n        field\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: pricingGeneratedRef,\n        autoBlur: true,\n        placeholder: pricing.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          pricingGeneratedRef.current.blur();\n        },\n        value: currentValues.pricing,\n        onChange: selectedOption => pricing.onChange(selectedOption, setValue, clearErrors),\n        options: pricingOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 41\n    }\n  })), errors.pricing ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 59\n    }\n  }, errors.pricing.message) : null))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CourseCreationHashtagHelper, {\n    customHashtagsRef: customHashtagsRef,\n    setHashtags: setHashtags,\n    hashtags: hashtags,\n    setError: setError,\n    register: register,\n    values: currentValues,\n    errors: errors,\n    setValue: setValue,\n    clearErrors: clearErrors,\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, \"Enter a description for your listing (markdown is accepted - use the attached buttons to customize the way your content looks)\"), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: descriptionChecks.name,\n    value: currentValues.description\n  }, descriptionChecks.check(clearErrors, register, setError, currentValues, wordCount), {\n    render: _ref4 => {\n      let {\n        field: {\n          ref,\n          onChange,\n          value,\n          ...field\n        }\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(SimpleMDE, Object.assign({\n        ref: ref\n      }, field, {\n        placeholder: descriptionChecks.placeholder,\n        name: descriptionChecks.name,\n        onFocus: () => {\n          clearErrors(\"description\");\n        },\n        onBlur: () => descriptionChecks.onBlur(clearErrors, setError, currentValues, wordCount),\n        id: \"editor_container\",\n        onChange: value => {\n          onChange(value); // return value for hook-form logic\n\n          return value;\n        },\n        value: value,\n        options: autofocusNoSpellcheckerOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 49\n        }\n      })), errors.description ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"span-tooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 71\n        }\n      }, errors.description.message) : null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"course-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, \"The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"couse-create-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, \"The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"h5-custom-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 37\n    }\n  }, \"What will students learn in your course?\"), \"You must enter at least 4 learning \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    className: \"important-course-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 72\n    }\n  }, \"objectives or outcomes\"), \" that learners can expect to achieve after completing your course.\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, objectives.map((objective, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      style: {\n        paddingTop: \"17.5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      onClick: () => handleDeletionRow(objective, index, \"objective\"),\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      style: {\n        backgroundColor: \"#dc3545\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 159\n      }\n    }, /*#__PURE__*/React.createElement(Trash, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 214\n      }\n    }))), /*#__PURE__*/React.createElement(Input, Object.assign({}, objectiveChecks.check(register, `objective${index}`), {\n      onChange: e => {\n        // value\n        const value = e.target.value; // create shallow array copy\n\n        const newArr = [...objectives]; // create new object w/changes\n\n        const newObj = {\n          [`partCount${index}`]: value,\n          id: objective.id\n        }; // replace item\n\n        newArr[index] = newObj; // render onChange logic\n\n        objectiveChecks.onChange(setValue, `objective${index}`, value); // update relevant state\n\n        setObjectiveState(newArr); // logic to KEEP current cursor position\n\n        const caret = e.target.selectionStart;\n        const element = e.target;\n        window.requestAnimationFrame(() => {\n          element.selectionStart = caret;\n          element.selectionEnd = caret;\n        });\n      },\n      value: currentValues[`partCount${index}`],\n      name: `objective${index}`,\n      className: \"form-control no-right-border-input\",\n      type: \"text\",\n      placeholder: objectiveChecks.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      className: \"counter-addon-transparent\",\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 133\n      }\n    }, typeof currentValues[`objective${index}`] !== \"undefined\" ? 160 - currentValues[`objective${index}`].length : 160))), errors[`objective${index}`] ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 84\n      }\n    }, errors[`objective${index}`].message) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 53\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (objectives.length <= 5) {\n        setObjectiveState(prevState => {\n          return [...prevState, {\n            [`partOne${objectives.length}`]: \"\",\n            id: uuid()\n          }];\n        });\n      } else {\n        NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 6 TOTAL inputs/fields...Please use your existing fields.\", \"Too many fields/inputs!\", 4500);\n      }\n    },\n    outline: true,\n    color: \"primary-2x\",\n    className: \"btn-square primary\",\n    style: {\n      width: \"35%\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    style: {\n      fontSize: 35,\n      marginBottom: \"-7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 143\n    }\n  }), \" Add Another Field\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"course-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 37\n    }\n  }, \"What are the requirements or prerequisites for taking your course?\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"couse-create-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  }, \"List the required skills, experience, tools or equipment learners should have prior to taking your course. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 176\n    }\n  }), \" If there are no requirements, use this space as an opportunity to lower the barrier for beginners.\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 33\n    }\n  }, requirements.map((requirement, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      style: {\n        paddingTop: \"17.5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      onClick: () => handleDeletionRow(requirement, index, \"requirements\"),\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      style: {\n        backgroundColor: \"#dc3545\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 164\n      }\n    }, /*#__PURE__*/React.createElement(Trash, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 219\n      }\n    }))), /*#__PURE__*/React.createElement(Input, Object.assign({}, prerequisitesChecks.check(register, `requirement${index}`), {\n      onChange: e => {\n        // value from input\n        const value = e.target.value; // shallow copy\n\n        const newArr = [...requirements]; // new data obj\n\n        const newObj = {\n          [`partCount${index}`]: value,\n          id: requirement.id\n        }; // replace item\n\n        newArr[index] = newObj; // render onChange logic\n\n        prerequisitesChecks.onChange(setValue, `requirement${index}`, value); // update the main state\n\n        setRequirements(newArr); // logic to KEEP current cursor position\n\n        const caret = e.target.selectionStart;\n        const element = e.target;\n        window.requestAnimationFrame(() => {\n          element.selectionStart = caret;\n          element.selectionEnd = caret;\n        });\n      },\n      value: currentValues[`partCount${index}`],\n      name: `requirement${index}`,\n      className: \"form-control no-right-border-input\",\n      type: \"text\",\n      placeholder: prerequisitesChecks.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      className: \"counter-addon-transparent\",\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 133\n      }\n    }, typeof currentValues[`requirement${index}`] !== \"undefined\" ? 160 - currentValues[`requirement${index}`].length : 160))), errors[`requirement${index}`] ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 86\n      }\n    }, errors[`requirement${index}`].message) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 53\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (requirements.length <= 2) {\n        setRequirements(prevState => {\n          return [...prevState, {\n            [`partOne${requirements.length}`]: \"\",\n            id: uuid()\n          }];\n        });\n      } else {\n        NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", 4500);\n      }\n    },\n    outline: true,\n    color: \"primary-2x\",\n    className: \"btn-square primary\",\n    style: {\n      width: \"35%\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    style: {\n      fontSize: 35,\n      marginBottom: \"-7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 143\n    }\n  }), \" Add Another Field\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"course-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }, \"Who is this course for?\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"couse-create-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 37\n    }\n  }, \"Write a clear description of the intended learners for your course who will find your course content valuable. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 180\n    }\n  }), \" This will help you attract the right learners to your course.\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 33\n    }\n  }, courseContentConcepts.map((concept, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      style: {\n        paddingTop: \"17.5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      onClick: () => handleDeletionRow(concept, index, \"concepts\"),\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      style: {\n        backgroundColor: \"#dc3545\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 156\n      }\n    }, /*#__PURE__*/React.createElement(Trash, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 211\n      }\n    }))), /*#__PURE__*/React.createElement(Input, Object.assign({}, courseDesignedForChecks.check(register, `concept${index}`), {\n      onChange: e => {\n        // value from input\n        const value = e.target.value; // shallow copy\n\n        const newArr = [...courseContentConcepts]; // new data obj\n\n        const newObj = {\n          [`partCount${index}`]: value,\n          id: concept.id\n        }; // replace item\n\n        newArr[index] = newObj; // onchange handler\n\n        courseDesignedForChecks.onChange(setValue, `concept${index}`, value); // update the main state\n\n        setCourseContentConcepts(newArr); // logic to KEEP current cursor position\n\n        const caret = e.target.selectionStart;\n        const element = e.target;\n        window.requestAnimationFrame(() => {\n          element.selectionStart = caret;\n          element.selectionEnd = caret;\n        });\n      },\n      value: currentValues[`partCount${index}`],\n      className: \"form-control no-right-border-input\",\n      type: \"text\",\n      placeholder: courseDesignedForChecks.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      className: \"counter-addon-transparent\",\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 133\n      }\n    }, typeof currentValues[`concept${index}`] !== \"undefined\" ? 160 - currentValues[`concept${index}`].length : 160))), errors[`concept${index}`] ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 82\n      }\n    }, errors[`concept${index}`].message) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 53\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (courseContentConcepts.length <= 2) {\n        setCourseContentConcepts(prevState => {\n          return [...prevState, {\n            [`partOne${courseContentConcepts.length}`]: \"\",\n            id: uuid()\n          }];\n        });\n      } else {\n        NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", \"Too many field's!\", 4500);\n      }\n    },\n    outline: true,\n    color: \"primary-2x\",\n    className: \"btn-square primary\",\n    style: {\n      width: \"35%\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    style: {\n      fontSize: 35,\n      marginBottom: \"-7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 143\n    }\n  }), \" Add Another Field\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"42.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"info-2x\",\n    outline: true,\n    className: \"btn-square-info\",\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 41\n    }\n  }, \"Submit & Continue w/Process\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCourseInformationData\n})(withRouter(CreateNewCoursePageOne));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/index.js"],"names":["React","Fragment","useState","useMemo","useEffect","useRef","Dropzone","Row","Col","Card","CardBody","Form","FormGroup","Label","Input","Button","InputGroup","InputGroupText","InputGroupAddon","Progress","useForm","Controller","connect","withRouter","Link","ProgressLevel","UploadProjectFile","reduxFormHelpers","optionHelper","Select","helperFunctions","SimpleMDE","uuid","Plus","Trash","NotificationManager","updateCourseInformationData","_","courseTitle","courseCategory","descriptionChecks","pricing","objectiveChecks","courseDesignedForChecks","prerequisitesChecks","courseCategoryOptions","pricingOptions","CourseCreationHashtagHelper","CreateNewCoursePageOne","overallProgress","setOverallProgress","courseData","courseCategoryGeneratedRef","pricingGeneratedRef","customHashtagsRef","cursor","objectives","setObjectiveState","partCount0","id","partCount1","partCount2","partCount3","requirements","setRequirements","courseContentConcepts","setCourseContentConcepts","hashtags","setHashtags","wordCount","setWordCount","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","renderErrorsFormUploadContent","e","console","log","onSubmission","data","objective0","objective1","objective2","objective3","concept0","courseHashtags","description","requirement0","whatStudentsWillLearn","objective4","objective5","mainData","requirementOrPreReqs","requirement1","requirement2","whoIsThisCourseFor","concept1","concept2","currentPage","pageOneData","autofocusNoSpellcheckerOptions","autofocus","spellChecker","handleDeletionRow","item","index","type","prevState","filter","x","label","check","name","placeholder","onChange","caret","target","selectionStart","element","window","requestAnimationFrame","selectionEnd","message","field","current","blur","selectedOption","paddingTop","ref","value","onBlur","map","objective","backgroundColor","color","newArr","newObj","length","warning","width","border","fontSize","marginBottom","requirement","concept","marginTop","mapStateToProps","state","userData","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useMemo, useEffect, useRef } from \"react\";\nimport Dropzone from 'react-dropzone-uploader';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button, InputGroup, InputGroupText, InputGroupAddon, Progress } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { ProgressLevel, UploadProjectFile } from '../../../../../../../../constant';\nimport reduxFormHelpers from \"./helpers/reduxFormHelpers.js\";\nimport optionHelper from \"./helpers/options/options.js\";\nimport Select from \"react-select\";\nimport helperFunctions from \"./helpers/helperFunctions/index.js\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"./styles.css\";\nimport uuid from \"react-uuid\";\nimport { Plus, Trash } from \"react-feather\";\nimport { NotificationManager } from \"react-notifications\";\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\n\nconst courseTitle = reduxFormHelpers().courseTitle;\nconst courseCategory = reduxFormHelpers().courseCategory;\nconst descriptionChecks = reduxFormHelpers().descriptionChecks;\nconst pricing = reduxFormHelpers().pricing;\nconst objectiveChecks = reduxFormHelpers().objectiveChecks;\nconst courseDesignedForChecks = reduxFormHelpers().courseDesignedForChecks;\nconst prerequisitesChecks = reduxFormHelpers().prerequisitesChecks;\n\nconst { courseCategoryOptions, pricingOptions } = optionHelper;\n\nconst { CourseCreationHashtagHelper } = helperFunctions;\n\n\nconst CreateNewCoursePageOne = ({ overallProgress, setOverallProgress, updateCourseInformationData, courseData }) => {\n    // create ref's local\n    const courseCategoryGeneratedRef = useRef(null);\n    const pricingGeneratedRef = useRef(null);\n    const customHashtagsRef = useRef(null);\n    let cursor = useRef(null);\n\n    // state initialization\n    const [ objectives, setObjectiveState ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }, {\n            partCount1: \"\",\n            id: uuid()\n        }, {\n            partCount2: \"\",\n            id: uuid()\n        }, {\n            partCount3: \"\",\n            id: uuid()\n        }\n    ]);\n    const [ requirements, setRequirements ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }\n    ]);\n    const [ courseContentConcepts, setCourseContentConcepts ] = useState([\n        {\n            partCount0: \"\",\n            id: uuid()\n        }\n    ]);\n    useEffect(() => {\n        setOverallProgress(25);\n    }, []);\n    // state init\n    const [ hashtags, setHashtags ] = useState([]);\n    const [ wordCount, setWordCount ] = useState(0);\n    // redux form logic\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n    // collect redux-hook-form values\n    const currentValues = getValues();\n\n    const renderErrorsFormUploadContent = (e, errors) => {\n        console.log(\"renderErrorsFormUploadContent ran...\", e, errors);\n    }\n    const onSubmission = (e, data) => {\n        console.log(\"onSubmission ran...\", e, data);\n\n        const { objective0, objective1, objective2, objective3, concept0, courseCategory, courseHashtags, courseTitle, description, pricing, requirement0 } = data;\n\n        // LEFT OUT ~ concept1, concept2\n\n        const whatStudentsWillLearn = {\n            objective0: typeof objective0 !== \"undefined\" ? objective0 : null,\n            objective1: typeof objective1 !== \"undefined\" ? objective1 : null,\n            objective2: typeof objective2 !== \"undefined\" ? objective2 : null,\n            objective3: typeof objective3 !== \"undefined\" ? objective3 : null,\n            objective4: typeof data.objective4 !== \"undefined\" ? data.objective4 : null,\n            objective5: typeof data.objective5 !== \"undefined\" ? data.objective5 : null\n        };\n        const mainData = {\n            courseTitle,\n            courseCategory,\n            courseHashtags,\n            pricing,\n            description\n        };\n        const requirementOrPreReqs = {\n            requirement0: typeof requirement0 !== \"undefined\" ? requirement0 : null,\n            requirement1: typeof data.requirement1 !== \"undefined\" ? data.requirement1 : null,\n            requirement2: typeof data.requirement2 !== \"undefined\" ? data.requirement2 : null\n        }\n        const whoIsThisCourseFor = {\n            concept0: typeof concept0 !== \"undefined\" ? concept0 : null,\n            concept1: typeof data.concept1 !== \"undefined\" ? data.concept1 : null,\n            concept2: typeof data.concept2 !== \"undefined\" ? data.concept2 : null\n        }\n\n        updateCourseInformationData({\n            currentPage: 2,\n            pageOneData: {\n                whatStudentsWillLearn,\n                mainData,\n                requirementOrPreReqs,\n                whoIsThisCourseFor\n            }\n        });\n    }\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n          autofocus: false,\n          spellChecker: false,\n        };\n    }, []);\n\n    const handleDeletionRow = (item, index, type) => {\n        // objective requirements concepts\n        if (type === \"objective\") {\n            setObjectiveState(prevState => {\n                return prevState.filter((x => {\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            })\n        } else if (type === \"requirements\") {\n            setRequirements(prevState => {\n                return prevState.filter((x => {\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            });\n        } else if (type === \"concepts\") {\n            setCourseContentConcepts(prevState => {\n                return prevState.filter((x => {\n\n                    if (x.id === item.id) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }));\n            });\n        }\n    }\n    return (\n        <Fragment>\n            <div className={\"centered-horizontally-course\"}><div className={\"position-above-bar-percentage\"}><h1>{overallProgress}% Complete</h1></div><Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} /></div>\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit(onSubmission, (e, errors) => {\n                                return renderErrorsFormUploadContent(e, errors);\n                            })}>\n                            <Row>\n                                <Col>\n                                    <FormGroup>\n                                        <Label>{courseTitle.label}</Label>\n                                        <Input {...courseTitle.check(setError, register)} autoFocus={true} ref={cursor} className=\"form-control\" type={courseTitle.type} name={courseTitle.name} placeholder={courseTitle.placeholder} onChange={(e) => {\n                                            courseTitle.onChange(e, setValue);\n                                            const caret = e.target.selectionStart;\n                                            const element = e.target;\n                                            window.requestAnimationFrame(() => {\n                                                element.selectionStart = caret\n                                                element.selectionEnd = caret\n                                            })\n                                        }} value={currentValues.courseTitle} />\n                                        {errors.courseTitle ? <span className=\"span-tooltip\">{errors.courseTitle.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{courseCategory.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={courseCategory.name}\n                                            {...courseCategory.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={courseCategoryGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={courseCategory.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={() => {\n                                                        courseCategoryGeneratedRef.current.blur();\n                                                    }}\n                                                    value={currentValues.courseCategory}\n                                                    onChange={(selectedOption) => courseCategory.onChange(selectedOption, setValue, clearErrors)}\n                                                    options={courseCategoryOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.courseCategory ? <span className=\"span-tooltip\">{errors.courseCategory.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\">\n                                    <FormGroup>\n                                        <Label>{pricing.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={pricing.name}\n                                            {...pricing.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={pricingGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={pricing.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={() => {\n                                                        pricingGeneratedRef.current.blur();\n                                                    }}\n                                                    value={currentValues.pricing}\n                                                    onChange={(selectedOption) => pricing.onChange(selectedOption, setValue, clearErrors)}\n                                                    options={pricingOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.pricing ? <span className=\"span-tooltip\">{errors.pricing.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <CourseCreationHashtagHelper customHashtagsRef={customHashtagsRef} setHashtags={setHashtags} hashtags={hashtags} setError={setError} register={register} values={currentValues} errors={errors} setValue={setValue} clearErrors={clearErrors} control={control} />\n                                </Col>\n                            </Row>\n                            <Row style={{ paddingTop: \"20px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Label>Enter a description for your listing (markdown is accepted - use the attached buttons to customize the way your content looks)</Label>\n                                    <Controller\n                                        control={control}\n                                        name={descriptionChecks.name}\n                                        value={currentValues.description}\n                                        {...descriptionChecks.check(clearErrors, register, setError, currentValues, wordCount)}\n                                        render={({ field: { ref, onChange, value, ...field }}) => (\n                                            <Fragment>\n                                                <SimpleMDE\n                                                    ref={ref}\n                                                    {...field}\n                                                    placeholder={descriptionChecks.placeholder}\n                                                    name={descriptionChecks.name}\n                                                    onFocus={() => {\n                                                        clearErrors(\"description\");\n                                                    }}\n                                                    onBlur={() => descriptionChecks.onBlur(clearErrors, setError, currentValues, wordCount)}\n                                                    id=\"editor_container\"\n                                                    onChange={(value) => {\n                                                        onChange(value);\n                                                        // return value for hook-form logic\n                                                        return value;\n                                                    }}\n                                                    value={value}\n                                                    options={autofocusNoSpellcheckerOptions}\n                                                />\n                                                {errors.description ? <span className=\"span-tooltip\">{errors.description.message}</span> : null}\n                                            </Fragment>\n                                        )}\n                                    />\n                                </Col>\n                            </Row>\n                            <hr />\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.</h4>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>The following descriptions will be publicly visible on your Course Landing Page and will have a direct impact on your course performance. These descriptions will help learners decide if your course is right for them.</p>\n                                    <h5 className={\"h5-custom-course\"}>What will students learn in your course?</h5>\n                                    You must enter at least 4 learning <a href={\"\"} className={\"important-course-link\"}>objectives or outcomes</a> that learners can expect to achieve after completing your course.\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {objectives.map((objective, index) => {\n                                        return (\n                                            <Fragment>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => handleDeletionRow(objective, index, \"objective\")} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...objectiveChecks.check(register, `objective${index}`)} onChange={(e) => {\n                                                            // value\n                                                            const value = e.target.value;\n                                                            // create shallow array copy\n                                                            const newArr = [...objectives];\n                                                            // create new object w/changes\n                                                            const newObj = { [`partCount${index}`]: value, id: objective.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // render onChange logic\n                                                            objectiveChecks.onChange(setValue, `objective${index}`, value);\n                                                            // update relevant state\n                                                            setObjectiveState(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`partCount${index}`]} name={`objective${index}`} className=\"form-control no-right-border-input\" type=\"text\" placeholder={objectiveChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`objective${index}`] !== \"undefined\" ? 160 - currentValues[`objective${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`objective${index}`] ? <span className=\"span-tooltip\">{errors[`objective${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (objectives.length <= 5) {\n                                            setObjectiveState(prevState => {\n                                                return [...prevState, { [`partOne${objectives.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 6 TOTAL inputs/fields...Please use your existing fields.\", \"Too many fields/inputs!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>What are the requirements or prerequisites for taking your course?</h4>\n                                </Col>\n                            </Row>\n                            <Row style={{ marginBottom: \"25px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>List the required skills, experience, tools or equipment learners should have prior to taking your course. <br /> If there are no requirements, use this space as an opportunity to lower the barrier for beginners.</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {requirements.map((requirement, index) => {\n                                        return (\n                                            <Fragment>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => handleDeletionRow(requirement, index, \"requirements\")} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...prerequisitesChecks.check(register, `requirement${index}`)} onChange={(e) => {\n                                                            // value from input\n                                                            const value = e.target.value;\n                                                            // shallow copy\n                                                            const newArr = [...requirements];\n                                                            // new data obj\n                                                            const newObj = { [`partCount${index}`]: value, id: requirement.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // render onChange logic\n                                                            prerequisitesChecks.onChange(setValue, `requirement${index}`, value);\n                                                            // update the main state\n                                                            setRequirements(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`partCount${index}`]} name={`requirement${index}`} className=\"form-control no-right-border-input\" type=\"text\" placeholder={prerequisitesChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`requirement${index}`] !== \"undefined\" ? 160 - currentValues[`requirement${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`requirement${index}`] ? <span className=\"span-tooltip\">{errors[`requirement${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (requirements.length <= 2) {\n                                            setRequirements(prevState => {\n                                                return [...prevState, { [`partOne${requirements.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <h4 className={\"course-custom-title\"}>Who is this course for?</h4>\n                                </Col>\n                            </Row>\n                            <Row style={{ marginBottom: \"25px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <p className={\"couse-create-p\"}>Write a clear description of the intended learners for your course who will find your course content valuable. <br /> This will help you attract the right learners to your course.</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    {courseContentConcepts.map((concept, index) => {\n                                        return (\n                                            <Fragment>\n                                                <FormGroup style={{ paddingTop: \"17.5px\" }}>\n                                                    <InputGroup>\n                                                        <InputGroupAddon onClick={() => handleDeletionRow(concept, index, \"concepts\")} addonType=\"prepend\"><InputGroupText style={{ backgroundColor: \"#dc3545\" }}><Trash style={{ color: \"white\" }} /></InputGroupText></InputGroupAddon>\n                                                        <Input {...courseDesignedForChecks.check(register, `concept${index}`)} onChange={(e) => {\n                                                            // value from input\n                                                            const value = e.target.value;\n                                                            // shallow copy\n                                                            const newArr = [...courseContentConcepts];\n                                                            // new data obj\n                                                            const newObj = { [`partCount${index}`]: value, id: concept.id };\n                                                            // replace item\n                                                            newArr[index] = newObj;\n                                                            // onchange handler\n                                                            courseDesignedForChecks.onChange(setValue, `concept${index}`, value);\n                                                            // update the main state\n                                                            setCourseContentConcepts(newArr);\n                                                            // logic to KEEP current cursor position\n                                                            const caret = e.target.selectionStart;\n                                                            const element = e.target;\n                                                            window.requestAnimationFrame(() => {\n                                                                element.selectionStart = caret\n                                                                element.selectionEnd = caret\n                                                            })\n                                                        }} value={currentValues[`partCount${index}`]} className=\"form-control no-right-border-input\" type=\"text\" placeholder={courseDesignedForChecks.placeholder}/>\n                                                        <InputGroupAddon className={\"counter-addon-transparent\"} addonType=\"append\"><InputGroupText>{typeof currentValues[`concept${index}`] !== \"undefined\" ? 160 - currentValues[`concept${index}`].length : 160}</InputGroupText></InputGroupAddon>\n                                                    </InputGroup>\n                                                    {errors[`concept${index}`] ? <span className=\"span-tooltip\">{errors[`concept${index}`].message}</span> : null}\n                                                    <hr />\n                                                </FormGroup>\n                                            </Fragment>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <div className={\"float-right-absolute\"}>\n                                    <Button onClick={() => {\n                                        if (courseContentConcepts.length <= 2) {\n                                            setCourseContentConcepts(prevState => {\n                                                return [...prevState, { [`partOne${courseContentConcepts.length}`]: \"\", id: uuid() }]\n                                            })\n                                        } else {\n                                            NotificationManager.warning(\"Error - You cannot enter TOO many inputs as there is a MAXIMUM of 3 TOTAL inputs for this field...Please use your existing fields.\", \"Too many field's!\", \"Too many field's!\", 4500);\n                                        }\n                                    }} outline color={\"primary-2x\"} className={\"btn-square primary\"} style={{ width: \"35%\", border: \"none\" }}><Plus style={{ fontSize: 35, marginBottom: \"-7.5px\" }} /> Add Another Field</Button>\n                                </div>\n                            </Row>\n                            <Row style={{ marginTop: \"42.5px\" }}>\n                                <Col>\n                                    <FormGroup className=\"mb-0\">\n                                        <Button style={{ width: \"100%\" }} color=\"info-2x\" outline className={\"btn-square-info\"} className=\"mr-3\">Submit & Continue w/Process</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : null\n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData })(withRouter(CreateNewCoursePageOne));"]},"metadata":{},"sourceType":"module"}