{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar mixinRemoteMediaTrack = require('./remotemediatrack');\n\nvar VideoTrack = require('./videotrack');\n\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nvar NullObserver = require('../../util/nullobserver.js').NullObserver;\n\nvar Timeout = require('../../util/timeout');\n\nvar RemoteMediaVideoTrack = mixinRemoteMediaTrack(VideoTrack);\nvar TRACK_TURN_OF_DELAY_MS = 50;\n/**\n * A {@link RemoteVideoTrack} represents a {@link VideoTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends VideoTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteVideoTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteVideoTrack}\n * @emits RemoteVideoTrack#dimensionsChanged\n * @emits RemoteVideoTrack#disabled\n * @emits RemoteVideoTrack#enabled\n * @emits RemoteVideoTrack#started\n * @emits RemoteVideoTrack#switchedOff\n * @emits RemoteVideoTrack#switchedOn\n */\n\nvar RemoteVideoTrack =\n/** @class */\nfunction (_super) {\n  __extends(RemoteVideoTrack, _super);\n  /**\n   * Construct a {@link RemoteVideoTrack}.\n   * @param {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n   * @param {MediaTrackReceiver} mediaTrackReceiver - A video MediaStreamTrack container\n   * @param {boolean} isEnabled - whether the {@link RemoteVideoTrack} is enabled\n   * @param {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n   * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n   *  {@link Track.Priority} of the {@link RemoteVideoTrack}\n   * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n   * @param {{log: Log}} options - The {@link RemoteTrack} options\n   */\n\n\n  function RemoteVideoTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n    var _this = this;\n\n    options = Object.assign({\n      clientTrackSwitchOffControl: 'auto',\n      contentPreferencesMode: 'auto',\n      enableDocumentVisibilityTurnOff: true\n    }, options);\n    options = Object.assign({\n      IntersectionObserver: typeof IntersectionObserver === 'undefined' || options.clientTrackSwitchOffControl !== 'auto' ? NullObserver : IntersectionObserver,\n      ResizeObserver: typeof ResizeObserver === 'undefined' || options.contentPreferencesMode !== 'auto' ? NullObserver : ResizeObserver\n    }, options);\n    _this = _super.call(this, sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) || this;\n    Object.defineProperties(_this, {\n      _enableDocumentVisibilityTurnOff: {\n        value: options.enableDocumentVisibilityTurnOff === true && options.clientTrackSwitchOffControl === 'auto'\n      },\n      _documentVisibilityTurnOffCleanup: {\n        value: null,\n        writable: true\n      },\n      _clientTrackSwitchOffControl: {\n        value: options.clientTrackSwitchOffControl\n      },\n      _contentPreferencesMode: {\n        value: options.contentPreferencesMode\n      },\n      _invisibleElements: {\n        value: new WeakSet()\n      },\n      _elToPipCallbacks: {\n        value: new WeakMap()\n      },\n      _elToPipWindows: {\n        value: new WeakMap()\n      },\n      _turnOffTimer: {\n        value: new Timeout(function () {\n          _this._setRenderHint({\n            enabled: false\n          });\n        }, TRACK_TURN_OF_DELAY_MS, false)\n      },\n      _resizeObserver: {\n        value: new options.ResizeObserver(function (entries) {\n          // NOTE(mpatwardhan): we ignore elements in _invisibleElements\n          // to ensure that ResizeObserver does not end-up turning off a track when a fresh Video element is\n          // attached and IntersectionObserver has not had its callback executed yet.\n          var visibleElementResized = entries.find(function (entry) {\n            return !_this._invisibleElements.has(entry.target);\n          });\n\n          if (visibleElementResized) {\n            maybeUpdateDimensionHint(_this);\n          }\n        })\n      },\n      _intersectionObserver: {\n        value: new options.IntersectionObserver(function (entries) {\n          var shouldSetRenderHint = false;\n          entries.forEach(function (entry) {\n            var wasVisible = !_this._invisibleElements.has(entry.target);\n\n            if (wasVisible !== entry.isIntersecting) {\n              if (entry.isIntersecting) {\n                _this._log.debug('intersectionObserver detected: Off => On');\n\n                _this._invisibleElements.delete(entry.target);\n              } else {\n                _this._log.debug('intersectionObserver detected: On => Off');\n\n                _this._invisibleElements.add(entry.target);\n              }\n\n              shouldSetRenderHint = true;\n            }\n          });\n\n          if (shouldSetRenderHint) {\n            maybeUpdateEnabledHint(_this); // when visibility of an element changes that may cause the \"biggest\" element to change,\n            // update dimensions as well. since dimensions are cached and de-duped at signaling layer,\n            // its okay if they got  resent.\n\n            maybeUpdateDimensionHint(_this);\n          }\n        }, {\n          threshold: 0.25\n        })\n      }\n    });\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  RemoteVideoTrack.prototype._start = function (dummyEl) {\n    var result = _super.prototype._start.call(this, dummyEl); // NOTE(mpatwardhan): after emitting started, update turn off track if not visible.\n\n\n    maybeUpdateEnabledHint(this);\n    return result;\n  };\n  /**\n   * Request to switch on a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.switchOn = function () {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n\n    this._setRenderHint({\n      enabled: true\n    });\n\n    return this;\n  };\n  /**\n   * Request to switch off a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.switchOff = function () {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOff only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n\n    this._setRenderHint({\n      enabled: false\n    });\n\n    return this;\n  };\n  /**\n   * Set the {@link RemoteVideoTrack}'s content preferences. This method is applicable only for the group rooms and only when connected with\n   * videoContentPreferencesMode in video bandwidth profile options set to 'manual'\n   * @param {VideoContentPreferences} contentPreferences - requested preferences.\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.setContentPreferences = function (contentPreferences) {\n    if (this._contentPreferencesMode !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.contentPreferencesMode is set to \"manual\"');\n    }\n\n    if (contentPreferences.renderDimensions) {\n      this._setRenderHint({\n        renderDimensions: contentPreferences.renderDimensions\n      });\n    }\n\n    return this;\n  };\n\n  RemoteVideoTrack.prototype._unObservePip = function (el) {\n    var pipCallbacks = this._elToPipCallbacks.get(el);\n\n    if (pipCallbacks) {\n      el.removeEventListener('enterpictureinpicture', pipCallbacks.onEnterPip);\n      el.removeEventListener('leavepictureinpicture', pipCallbacks.onLeavePip);\n\n      this._elToPipCallbacks.delete(el);\n    }\n  };\n\n  RemoteVideoTrack.prototype._observePip = function (el) {\n    var _this = this;\n\n    var pipCallbacks = this._elToPipCallbacks.get(el);\n\n    if (!pipCallbacks) {\n      var onEnterPip = function (event) {\n        return _this._onEnterPip(event, el);\n      };\n\n      var onLeavePip = function (event) {\n        return _this._onLeavePip(event, el);\n      };\n\n      var onResizePip = function (event) {\n        return _this._onResizePip(event, el);\n      };\n\n      el.addEventListener('enterpictureinpicture', onEnterPip);\n      el.addEventListener('leavepictureinpicture', onLeavePip);\n\n      this._elToPipCallbacks.set(el, {\n        onEnterPip: onEnterPip,\n        onLeavePip: onLeavePip,\n        onResizePip: onResizePip\n      });\n    }\n  };\n\n  RemoteVideoTrack.prototype._onEnterPip = function (event, videoEl) {\n    this._log.debug('onEnterPip');\n\n    var pipWindow = event.pictureInPictureWindow;\n\n    this._elToPipWindows.set(videoEl, pipWindow);\n\n    var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n\n    pipWindow.addEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  };\n\n  RemoteVideoTrack.prototype._onLeavePip = function (event, videoEl) {\n    this._log.debug('onLeavePip');\n\n    this._elToPipWindows.delete(videoEl);\n\n    var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n\n    var pipWindow = event.pictureInPictureWindow;\n    pipWindow.removeEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  };\n\n  RemoteVideoTrack.prototype._onResizePip = function () {\n    maybeUpdateDimensionHint(this);\n  };\n\n  RemoteVideoTrack.prototype.attach = function (el) {\n    var result = _super.prototype.attach.call(this, el);\n\n    if (this._clientTrackSwitchOffControl === 'auto') {\n      // start off the element as invisible. will mark it\n      // visible (and update render hints) once intersection observer calls back.\n      this._invisibleElements.add(result);\n    }\n\n    this._intersectionObserver.observe(result);\n\n    this._resizeObserver.observe(result);\n\n    if (this._enableDocumentVisibilityTurnOff) {\n      this._documentVisibilityTurnOffCleanup = this._documentVisibilityTurnOffCleanup || setupDocumentVisibilityTurnOff(this);\n    }\n\n    this._observePip(result);\n\n    return result;\n  };\n\n  RemoteVideoTrack.prototype.detach = function (el) {\n    var _this = this;\n\n    var result = _super.prototype.detach.call(this, el);\n\n    var elements = Array.isArray(result) ? result : [result];\n    elements.forEach(function (element) {\n      _this._intersectionObserver.unobserve(element);\n\n      _this._resizeObserver.unobserve(element);\n\n      _this._invisibleElements.delete(element);\n\n      _this._unObservePip(element);\n    });\n\n    if (this._attachments.size === 0) {\n      if (this._documentVisibilityTurnOffCleanup) {\n        this._documentVisibilityTurnOffCleanup();\n\n        this._documentVisibilityTurnOffCleanup = null;\n      }\n    }\n\n    maybeUpdateEnabledHint(this);\n    maybeUpdateDimensionHint(this);\n    return result;\n  };\n  /**\n   * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n   * When a Participant un-publishes and re-publishes a VideoTrack, a new RemoteVideoTrack is created and\n   * any VideoProcessors attached to the previous RemoteVideoTrack would have to be re-added again.\n   * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   */\n\n\n  RemoteVideoTrack.prototype.addProcessor = function () {\n    return _super.prototype.addProcessor.apply(this, arguments);\n  };\n  /**\n   * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   *\n   * document.getElementById('remove-button').onclick = () => {\n   *   Array.from(room.participants.values()).forEach(participant => {\n   *     const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *     remoteVideoTrack.removeProcessor(grayscaleProcessor);\n   *   });\n   * }\n   */\n\n\n  RemoteVideoTrack.prototype.removeProcessor = function () {\n    return _super.prototype.removeProcessor.apply(this, arguments);\n  };\n\n  RemoteVideoTrack.prototype.toString = function () {\n    return \"[RemoteVideoTrack #\" + this._instanceId + \": \" + this.sid + \"]\";\n  };\n  /**\n   * Update the subscribe {@link Track.Priority} of the {@link RemoteVideoTrack}.\n   * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n   *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n   *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n\n\n  RemoteVideoTrack.prototype.setPriority = function (priority) {\n    return _super.prototype.setPriority.call(this, priority);\n  };\n\n  return RemoteVideoTrack;\n}(RemoteMediaVideoTrack);\n\nfunction setupDocumentVisibilityTurnOff(removeVideoTrack) {\n  function onVisibilityChanged() {\n    maybeUpdateEnabledHint(removeVideoTrack);\n  }\n\n  documentVisibilityMonitor.onVisibilityChange(1, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisibilityChange(1, onVisibilityChanged);\n  };\n}\n\nfunction maybeUpdateEnabledHint(remoteVideoTrack) {\n  if (remoteVideoTrack._clientTrackSwitchOffControl !== 'auto') {\n    return;\n  }\n\n  var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return !remoteVideoTrack._invisibleElements.has(el);\n  });\n\n  var pipWindows = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return remoteVideoTrack._elToPipWindows.has(el);\n  }); // even when document is invisible we may have track playing in pip window.\n\n\n  var enabled = pipWindows.length > 0 || document.visibilityState === 'visible' && visibleElements.length > 0;\n\n  if (enabled === true) {\n    remoteVideoTrack._turnOffTimer.clear();\n\n    remoteVideoTrack._setRenderHint({\n      enabled: true\n    });\n  } else if (!remoteVideoTrack._turnOffTimer.isSet) {\n    // set the track to be turned off after some delay.\n    remoteVideoTrack._turnOffTimer.start();\n  }\n}\n\nfunction maybeUpdateDimensionHint(remoteVideoTrack) {\n  if (remoteVideoTrack._contentPreferencesMode !== 'auto') {\n    return;\n  }\n\n  var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return !remoteVideoTrack._invisibleElements.has(el);\n  });\n\n  var pipElements = remoteVideoTrack._getAllAttachedElements().map(function (el) {\n    var pipWindow = remoteVideoTrack._elToPipWindows.get(el);\n\n    return pipWindow ? {\n      clientHeight: pipWindow.height,\n      clientWidth: pipWindow.width\n    } : {\n      clientHeight: 0,\n      clientWidth: 0\n    };\n  });\n\n  var totalElements = visibleElements.concat(pipElements);\n\n  if (totalElements.length > 0) {\n    var _a = __read(totalElements.sort(function (el1, el2) {\n      return el2.clientHeight + el2.clientWidth - el1.clientHeight - el1.clientWidth - 1;\n    }), 1),\n        _b = _a[0],\n        clientHeight = _b.clientHeight,\n        clientWidth = _b.clientWidth;\n\n    var renderDimensions = {\n      height: clientHeight,\n      width: clientWidth\n    };\n\n    remoteVideoTrack._setRenderHint({\n      renderDimensions: renderDimensions\n    });\n  }\n}\n/**\n * @typedef {object} VideoContentPreferences\n * @property {VideoTrack.Dimensions} [renderDimensions] - Render Dimensions to request for the {@link RemoteVideoTrack}.\n */\n\n/**\n * The {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose\n *   dimensions changed\n * @event RemoteVideoTrack#dimensionsChanged\n */\n\n/**\n * The {@link RemoteVideoTrack} was disabled, i.e. \"paused\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   disabled\n * @event RemoteVideoTrack#disabled\n */\n\n/**\n * The {@link RemoteVideoTrack} was enabled, i.e. \"resumed\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   enabled\n * @event RemoteVideoTrack#enabled\n */\n\n/**\n * The {@link RemoteVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that started\n * @event RemoteVideoTrack#started\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched off.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched off\n * @event RemoteVideoTrack#switchedOff\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched on.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched on\n * @event RemoteVideoTrack#switchedOn\n */\n\n\nmodule.exports = RemoteVideoTrack;","map":{"version":3,"sources":["../../../lib/media/track/remotevideotrack.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar mixinRemoteMediaTrack = require('./remotemediatrack');\nvar VideoTrack = require('./videotrack');\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\nvar NullObserver = require('../../util/nullobserver.js').NullObserver;\nvar Timeout = require('../../util/timeout');\nvar RemoteMediaVideoTrack = mixinRemoteMediaTrack(VideoTrack);\nvar TRACK_TURN_OF_DELAY_MS = 50;\n/**\n * A {@link RemoteVideoTrack} represents a {@link VideoTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends VideoTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteVideoTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteVideoTrack}\n * @emits RemoteVideoTrack#dimensionsChanged\n * @emits RemoteVideoTrack#disabled\n * @emits RemoteVideoTrack#enabled\n * @emits RemoteVideoTrack#started\n * @emits RemoteVideoTrack#switchedOff\n * @emits RemoteVideoTrack#switchedOn\n */\nvar RemoteVideoTrack = /** @class */ (function (_super) {\n    __extends(RemoteVideoTrack, _super);\n    /**\n     * Construct a {@link RemoteVideoTrack}.\n     * @param {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n     * @param {MediaTrackReceiver} mediaTrackReceiver - A video MediaStreamTrack container\n     * @param {boolean} isEnabled - whether the {@link RemoteVideoTrack} is enabled\n     * @param {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n     * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n     *  {@link Track.Priority} of the {@link RemoteVideoTrack}\n     * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n     * @param {{log: Log}} options - The {@link RemoteTrack} options\n     */\n    function RemoteVideoTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n        var _this = this;\n        options = Object.assign({\n            clientTrackSwitchOffControl: 'auto',\n            contentPreferencesMode: 'auto',\n            enableDocumentVisibilityTurnOff: true,\n        }, options);\n        options = Object.assign({\n            IntersectionObserver: typeof IntersectionObserver === 'undefined' || options.clientTrackSwitchOffControl !== 'auto' ? NullObserver : IntersectionObserver,\n            ResizeObserver: typeof ResizeObserver === 'undefined' || options.contentPreferencesMode !== 'auto' ? NullObserver : ResizeObserver,\n        }, options);\n        _this = _super.call(this, sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) || this;\n        Object.defineProperties(_this, {\n            _enableDocumentVisibilityTurnOff: {\n                value: options.enableDocumentVisibilityTurnOff === true && options.clientTrackSwitchOffControl === 'auto',\n            },\n            _documentVisibilityTurnOffCleanup: {\n                value: null,\n                writable: true\n            },\n            _clientTrackSwitchOffControl: {\n                value: options.clientTrackSwitchOffControl,\n            },\n            _contentPreferencesMode: {\n                value: options.contentPreferencesMode,\n            },\n            _invisibleElements: {\n                value: new WeakSet(),\n            },\n            _elToPipCallbacks: {\n                value: new WeakMap(),\n            },\n            _elToPipWindows: {\n                value: new WeakMap(),\n            },\n            _turnOffTimer: {\n                value: new Timeout(function () {\n                    _this._setRenderHint({ enabled: false });\n                }, TRACK_TURN_OF_DELAY_MS, false),\n            },\n            _resizeObserver: {\n                value: new options.ResizeObserver(function (entries) {\n                    // NOTE(mpatwardhan): we ignore elements in _invisibleElements\n                    // to ensure that ResizeObserver does not end-up turning off a track when a fresh Video element is\n                    // attached and IntersectionObserver has not had its callback executed yet.\n                    var visibleElementResized = entries.find(function (entry) { return !_this._invisibleElements.has(entry.target); });\n                    if (visibleElementResized) {\n                        maybeUpdateDimensionHint(_this);\n                    }\n                })\n            },\n            _intersectionObserver: {\n                value: new options.IntersectionObserver(function (entries) {\n                    var shouldSetRenderHint = false;\n                    entries.forEach(function (entry) {\n                        var wasVisible = !_this._invisibleElements.has(entry.target);\n                        if (wasVisible !== entry.isIntersecting) {\n                            if (entry.isIntersecting) {\n                                _this._log.debug('intersectionObserver detected: Off => On');\n                                _this._invisibleElements.delete(entry.target);\n                            }\n                            else {\n                                _this._log.debug('intersectionObserver detected: On => Off');\n                                _this._invisibleElements.add(entry.target);\n                            }\n                            shouldSetRenderHint = true;\n                        }\n                    });\n                    if (shouldSetRenderHint) {\n                        maybeUpdateEnabledHint(_this);\n                        // when visibility of an element changes that may cause the \"biggest\" element to change,\n                        // update dimensions as well. since dimensions are cached and de-duped at signaling layer,\n                        // its okay if they got  resent.\n                        maybeUpdateDimensionHint(_this);\n                    }\n                }, { threshold: 0.25 })\n            },\n        });\n        return _this;\n    }\n    /**\n     * @private\n     */\n    RemoteVideoTrack.prototype._start = function (dummyEl) {\n        var result = _super.prototype._start.call(this, dummyEl);\n        // NOTE(mpatwardhan): after emitting started, update turn off track if not visible.\n        maybeUpdateEnabledHint(this);\n        return result;\n    };\n    /**\n     * Request to switch on a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n     * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n     * @returns {this}\n     */\n    RemoteVideoTrack.prototype.switchOn = function () {\n        if (this._clientTrackSwitchOffControl !== 'manual') {\n            throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n        }\n        this._setRenderHint({ enabled: true });\n        return this;\n    };\n    /**\n     * Request to switch off a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n     * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n     * @returns {this}\n     */\n    RemoteVideoTrack.prototype.switchOff = function () {\n        if (this._clientTrackSwitchOffControl !== 'manual') {\n            throw new Error('Invalid state. You can call switchOff only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n        }\n        this._setRenderHint({ enabled: false });\n        return this;\n    };\n    /**\n     * Set the {@link RemoteVideoTrack}'s content preferences. This method is applicable only for the group rooms and only when connected with\n     * videoContentPreferencesMode in video bandwidth profile options set to 'manual'\n     * @param {VideoContentPreferences} contentPreferences - requested preferences.\n     * @returns {this}\n     */\n    RemoteVideoTrack.prototype.setContentPreferences = function (contentPreferences) {\n        if (this._contentPreferencesMode !== 'manual') {\n            throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.contentPreferencesMode is set to \"manual\"');\n        }\n        if (contentPreferences.renderDimensions) {\n            this._setRenderHint({ renderDimensions: contentPreferences.renderDimensions });\n        }\n        return this;\n    };\n    RemoteVideoTrack.prototype._unObservePip = function (el) {\n        var pipCallbacks = this._elToPipCallbacks.get(el);\n        if (pipCallbacks) {\n            el.removeEventListener('enterpictureinpicture', pipCallbacks.onEnterPip);\n            el.removeEventListener('leavepictureinpicture', pipCallbacks.onLeavePip);\n            this._elToPipCallbacks.delete(el);\n        }\n    };\n    RemoteVideoTrack.prototype._observePip = function (el) {\n        var _this = this;\n        var pipCallbacks = this._elToPipCallbacks.get(el);\n        if (!pipCallbacks) {\n            var onEnterPip = function (event) { return _this._onEnterPip(event, el); };\n            var onLeavePip = function (event) { return _this._onLeavePip(event, el); };\n            var onResizePip = function (event) { return _this._onResizePip(event, el); };\n            el.addEventListener('enterpictureinpicture', onEnterPip);\n            el.addEventListener('leavepictureinpicture', onLeavePip);\n            this._elToPipCallbacks.set(el, { onEnterPip: onEnterPip, onLeavePip: onLeavePip, onResizePip: onResizePip });\n        }\n    };\n    RemoteVideoTrack.prototype._onEnterPip = function (event, videoEl) {\n        this._log.debug('onEnterPip');\n        var pipWindow = event.pictureInPictureWindow;\n        this._elToPipWindows.set(videoEl, pipWindow);\n        var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n        pipWindow.addEventListener('resize', onResizePip);\n        maybeUpdateEnabledHint(this);\n    };\n    RemoteVideoTrack.prototype._onLeavePip = function (event, videoEl) {\n        this._log.debug('onLeavePip');\n        this._elToPipWindows.delete(videoEl);\n        var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n        var pipWindow = event.pictureInPictureWindow;\n        pipWindow.removeEventListener('resize', onResizePip);\n        maybeUpdateEnabledHint(this);\n    };\n    RemoteVideoTrack.prototype._onResizePip = function () {\n        maybeUpdateDimensionHint(this);\n    };\n    RemoteVideoTrack.prototype.attach = function (el) {\n        var result = _super.prototype.attach.call(this, el);\n        if (this._clientTrackSwitchOffControl === 'auto') {\n            // start off the element as invisible. will mark it\n            // visible (and update render hints) once intersection observer calls back.\n            this._invisibleElements.add(result);\n        }\n        this._intersectionObserver.observe(result);\n        this._resizeObserver.observe(result);\n        if (this._enableDocumentVisibilityTurnOff) {\n            this._documentVisibilityTurnOffCleanup = this._documentVisibilityTurnOffCleanup || setupDocumentVisibilityTurnOff(this);\n        }\n        this._observePip(result);\n        return result;\n    };\n    RemoteVideoTrack.prototype.detach = function (el) {\n        var _this = this;\n        var result = _super.prototype.detach.call(this, el);\n        var elements = Array.isArray(result) ? result : [result];\n        elements.forEach(function (element) {\n            _this._intersectionObserver.unobserve(element);\n            _this._resizeObserver.unobserve(element);\n            _this._invisibleElements.delete(element);\n            _this._unObservePip(element);\n        });\n        if (this._attachments.size === 0) {\n            if (this._documentVisibilityTurnOffCleanup) {\n                this._documentVisibilityTurnOffCleanup();\n                this._documentVisibilityTurnOffCleanup = null;\n            }\n        }\n        maybeUpdateEnabledHint(this);\n        maybeUpdateDimensionHint(this);\n        return result;\n    };\n    /**\n     * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n     * When a Participant un-publishes and re-publishes a VideoTrack, a new RemoteVideoTrack is created and\n     * any VideoProcessors attached to the previous RemoteVideoTrack would have to be re-added again.\n     * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n     *     const context = outputFrameBuffer.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n     *   }\n     * }\n     *\n     * const grayscaleProcessor = new GrayScaleProcessor(100);\n     *\n     * Array.from(room.participants.values()).forEach(participant => {\n     *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n     *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n     * });\n     */\n    RemoteVideoTrack.prototype.addProcessor = function () {\n        return _super.prototype.addProcessor.apply(this, arguments);\n    };\n    /**\n     * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n     *     const context = outputFrameBuffer.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n     *   }\n     * }\n     *\n     * const grayscaleProcessor = new GrayScaleProcessor(100);\n     *\n     * Array.from(room.participants.values()).forEach(participant => {\n     *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n     *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n     * });\n     *\n     * document.getElementById('remove-button').onclick = () => {\n     *   Array.from(room.participants.values()).forEach(participant => {\n     *     const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n     *     remoteVideoTrack.removeProcessor(grayscaleProcessor);\n     *   });\n     * }\n     */\n    RemoteVideoTrack.prototype.removeProcessor = function () {\n        return _super.prototype.removeProcessor.apply(this, arguments);\n    };\n    RemoteVideoTrack.prototype.toString = function () {\n        return \"[RemoteVideoTrack #\" + this._instanceId + \": \" + this.sid + \"]\";\n    };\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteVideoTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n    RemoteVideoTrack.prototype.setPriority = function (priority) {\n        return _super.prototype.setPriority.call(this, priority);\n    };\n    return RemoteVideoTrack;\n}(RemoteMediaVideoTrack));\nfunction setupDocumentVisibilityTurnOff(removeVideoTrack) {\n    function onVisibilityChanged() {\n        maybeUpdateEnabledHint(removeVideoTrack);\n    }\n    documentVisibilityMonitor.onVisibilityChange(1, onVisibilityChanged);\n    return function () {\n        documentVisibilityMonitor.offVisibilityChange(1, onVisibilityChanged);\n    };\n}\nfunction maybeUpdateEnabledHint(remoteVideoTrack) {\n    if (remoteVideoTrack._clientTrackSwitchOffControl !== 'auto') {\n        return;\n    }\n    var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) { return !remoteVideoTrack._invisibleElements.has(el); });\n    var pipWindows = remoteVideoTrack._getAllAttachedElements().filter(function (el) { return remoteVideoTrack._elToPipWindows.has(el); });\n    // even when document is invisible we may have track playing in pip window.\n    var enabled = pipWindows.length > 0 || (document.visibilityState === 'visible' && visibleElements.length > 0);\n    if (enabled === true) {\n        remoteVideoTrack._turnOffTimer.clear();\n        remoteVideoTrack._setRenderHint({ enabled: true });\n    }\n    else if (!remoteVideoTrack._turnOffTimer.isSet) {\n        // set the track to be turned off after some delay.\n        remoteVideoTrack._turnOffTimer.start();\n    }\n}\nfunction maybeUpdateDimensionHint(remoteVideoTrack) {\n    if (remoteVideoTrack._contentPreferencesMode !== 'auto') {\n        return;\n    }\n    var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) { return !remoteVideoTrack._invisibleElements.has(el); });\n    var pipElements = remoteVideoTrack._getAllAttachedElements().map(function (el) {\n        var pipWindow = remoteVideoTrack._elToPipWindows.get(el);\n        return pipWindow ? { clientHeight: pipWindow.height, clientWidth: pipWindow.width } : { clientHeight: 0, clientWidth: 0 };\n    });\n    var totalElements = visibleElements.concat(pipElements);\n    if (totalElements.length > 0) {\n        var _a = __read(totalElements.sort(function (el1, el2) {\n            return el2.clientHeight + el2.clientWidth - el1.clientHeight - el1.clientWidth - 1;\n        }), 1), _b = _a[0], clientHeight = _b.clientHeight, clientWidth = _b.clientWidth;\n        var renderDimensions = { height: clientHeight, width: clientWidth };\n        remoteVideoTrack._setRenderHint({ renderDimensions: renderDimensions });\n    }\n}\n/**\n * @typedef {object} VideoContentPreferences\n * @property {VideoTrack.Dimensions} [renderDimensions] - Render Dimensions to request for the {@link RemoteVideoTrack}.\n */\n/**\n * The {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose\n *   dimensions changed\n * @event RemoteVideoTrack#dimensionsChanged\n */\n/**\n * The {@link RemoteVideoTrack} was disabled, i.e. \"paused\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   disabled\n * @event RemoteVideoTrack#disabled\n */\n/**\n * The {@link RemoteVideoTrack} was enabled, i.e. \"resumed\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   enabled\n * @event RemoteVideoTrack#enabled\n */\n/**\n * The {@link RemoteVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that started\n * @event RemoteVideoTrack#started\n */\n/**\n * A {@link RemoteVideoTrack} was switched off.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched off\n * @event RemoteVideoTrack#switchedOff\n */\n/**\n * A {@link RemoteVideoTrack} was switched on.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched on\n * @event RemoteVideoTrack#switchedOn\n */\nmodule.exports = RemoteVideoTrack;\n//# sourceMappingURL=remotevideotrack.js.map"]},"metadata":{},"sourceType":"script"}