{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText, Media } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport Tour from 'reactour';\nconst {\n  TimelineHelper,\n  SheetPaneSubmittingDataHelper,\n  HelperRadioButtons,\n  renderMountedLogic,\n  handleDeletionLink,\n  handleLinkAddition,\n  SheetDisplayFilesFileManagerHelper\n} = helpers;\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\nconst tourStepsOptions = [{\n  selector: '#tour-col-custom',\n  content: 'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!'\n}];\n\nconst ApplyAsHackerEmployerListingHelper = _ref => {\n  let {\n    userData,\n    shiftCoreStyles,\n    location\n  } = _ref;\n  // ref's\n  const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n  const scrollToTourWrapper = useRef(null); // get URL ID from string\n\n  const {\n    id\n  } = useParams(); // initialize state items...\n\n  const [alreadyAdded, setAlreadyAddedState] = useState(null);\n  const [filesSheetOpen, setFileSheetOpenState] = useState(false);\n  const [linkInput, setLinkInput] = useState(\"\");\n  const [isTourOpen, setIsTourOpenState] = useState(false);\n  const [disabledDays, setDisabledDaysState] = useState([]);\n  const [physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState] = useState([]);\n  const [sheetIsOpen, setSheetOpenState] = useState(false);\n  const [currentUserData, setCurrentUserData] = useState(null);\n  const [ready, setReadyGlobal] = useState(false);\n  const [listingReady, setListingReady] = useState(false);\n  const [listingData, setListingData] = useState(null);\n  const [dateRanges, setDateRanges] = useState(null);\n  const [datesReady, setDatesReady] = useState(false);\n  const [selectedLinks, setSelectedLinks] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\" // delayError: 500\n\n  });\n  const gatheredValues = getValues();\n\n  const handleDateSelection = ranges => {\n    // setDateRanges(ranges);\n    console.log(\"ranges\", ranges);\n  }; // deconstruct redux-state items...\n\n\n  const {\n    username,\n    firstName,\n    lastName,\n    registrationDate,\n    completedJobs\n  } = userData; // component mounted.\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const globalConfig = {\n      config: {\n        params: {\n          uniqueId: userData.uniqueId\n        }\n      },\n      configuration: {\n        params: {\n          listingId: id\n        }\n      }\n    };\n    renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady); // gather core anonymous user information\n\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        setCurrentUserData(user);\n        setReadyGlobal(true);\n      } else {\n        console.log('err', res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // render custom sentence instead of DRY repeating\n\n  const renderSentence = (actual, type, val) => {\n    // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n    if (ready === true && currentUserData !== null) {\n      // ready to display\n      if (currentUserData.hasOwnProperty(actual)) {\n        // return proper/desired \"right\" filled out data\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }\n        }, \"Your \", type, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: currentUserData.hasOwnProperty(actual) ? {\n            color: \"#dc3545\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          } : {\n            color: \"#a927f9\",\n            fontSize: \"1.005rem\",\n            fontWeight: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 90\n          }\n        }, val), \" will be submitted to the employer...\");\n      } else {\n        // throw error warning user\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-1 listitem-sub-text-custom-custom override-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 24\n          }\n        }, \"You have NOT filled out the required field of \", /*#__PURE__*/React.createElement(\"em\", {\n          style: {\n            textDecorationLine: \"underline\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 137\n          }\n        }, type), \", therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile/settings/edit\",\n          className: \"linky\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 299\n          }\n        }, \"your profile settings page\"), \" and edit the appropriate sections, then come back and try again!\");\n      }\n    } else {\n      // return loading \"data\"\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-1 listitem-sub-text-custom-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }\n      }, \"Still loading your data/content...!\");\n    }\n  }; // view more fields in PANE\n\n\n  const viewRemainderOfIncludedFields = alreadyIncludedArray => {\n    console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray); // already shown items *(HIGHLIGHT)*\n\n    setAlreadyAddedState(alreadyIncludedArray); // shift \"lock\" styles to prevent scrolling and clicking\n\n    shiftCoreStyles(true); // open modal - change modal state to OPEN\n\n    setSheetOpenState(true); // set delay to allow load\n\n    setTimeout(() => {\n      // select outter body classname to pause/freeze\n      const target = document.querySelector(\".enact-nonclick\"); // DISABLE body scroll entirely\n\n      disableBodyScroll(target);\n    }, 500);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(name, value, {\n      shouldValidate: true\n    });\n  };\n\n  const showButtonOrNot = () => {\n    if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const clearInput = () => {\n    setLinkInput(\"\");\n  }; //  TOUR related LOCK SCREEN functions - DISABLE body scrolling\n\n\n  const disableBodyAndScroll = target => {\n    // disable body scroll\n    disableBodyScroll(target);\n  };\n\n  const enableBody = target => clearAllBodyScrollLocks();\n\n  const handleDirectionChangeTour = () => {\n    // DISABLE clicking background\n    shiftCoreStyles(true); // scroll to target and LOCK SCREEN until closed.\n\n    scrollToTourWrapper.current.scrollIntoView(); // alter slightly to account for top-NAV\n\n    setTimeout(() => {\n      window.scrollBy(0, -175);\n    }, 750); // lock after appropriate position change\n\n    setTimeout(() => {\n      // select MAIN WRAPPER class\n      const select = document.querySelector(\".enact-nonclick\"); // disable selected class (movement, clicks, etc...);\n\n      disableBodyScroll(select);\n      setIsTourOpenState(true);\n    }, 1000);\n  };\n\n  const handleTourClosingAction = () => {\n    // allow background clicking again\n    shiftCoreStyles(false); // clear body scroll locks\n\n    clearAllBodyScrollLocks(); // close tour state\n\n    setIsTourOpenState(false);\n  };\n\n  const onErrorMainForm = (errors, e) => {\n    console.log(\"errors : \", errors);\n    console.log(\"e : \", e);\n  };\n\n  const onFormSubmit = (values, valuesTwo) => {\n    console.log(\"values and valuesTwo\", values, valuesTwo);\n  };\n\n  const handleFinalSubmissionFiles = () => {\n    // DISABLE clicking background\n    shiftCoreStyles(true); // set sheet open\n\n    setFileSheetOpenState(true); // lock after appropriate position change\n\n    setTimeout(() => {\n      // select MAIN-WRAPPER div class\n      const select = document.querySelector(\".enact-nonclick\"); // finally - disable while pane is open!\n\n      disableBodyScroll(select);\n    }, 450);\n  }; // log values to debug\n\n\n  console.log(\"gatheredValues\", gatheredValues, \"errors\", errors);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SheetPaneSubmittingDataHelper, {\n    ready: ready,\n    shiftCoreStyles: shiftCoreStyles,\n    alreadyAdded: alreadyAdded,\n    currentUserData: currentUserData,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    userData: userData,\n    sheetIsOpen: sheetIsOpen,\n    setSheetOpenState: setSheetOpenState,\n    renderSentence: renderSentence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SheetDisplayFilesFileManagerHelper, {\n    filesSheetOpen: filesSheetOpen,\n    setFileSheetOpenState: setFileSheetOpenState,\n    shiftCoreStyles: shiftCoreStyles,\n    clearAllBodyScrollLocks: clearAllBodyScrollLocks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Breadcrumb, {\n    passedClassname: \"custom-breadcrumb-class\",\n    parent: `Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`,\n    title: \"Review job requirements & details + apply to position/listing!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tour, {\n    steps: tourStepsOptions,\n    isOpen: isTourOpen,\n    onAfterOpen: disableBodyAndScroll,\n    onBeforeClose: enableBody,\n    onRequestClose: handleTourClosingAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute-position-bottom-right-fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"redirect-fixed-bottom-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"p-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio radio-info mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    checked: true,\n    id: \"radio-redirect\",\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"option1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"radio-redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    className: \"media-body-customized-fixed\",\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-0 mega-title-badge custom-mega-title-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, \"Are you ready to submit your application?! \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info pull-right digits custom-pull-right digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 134\n    }\n  }, \"SHOW ME HOW TO SUBMIT APP!\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, \"Are you \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 40\n    }\n  }, \"READY TO SUBMIT YOUR APPLICATION\"), \" to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 204\n    }\n  }, \"'Submit Application'\"), \" button to proceed forwards...\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDirectionChangeTour,\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, \"Show me the 'submission' button!\"))))), /*#__PURE__*/React.createElement(Container, {\n    className: \"container-default\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation validateClass`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onFormSubmit, (errors, e) => {\n      return onErrorMainForm(errors, e);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"customized-row-apply\",\n    style: {\n      paddingTop: \"25px \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner customized-top-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, \"Type of hack (physical location or digital asset)\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, \"This is the \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 84\n    }\n  }, \"TYPE\"), \" of hack this \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 111\n    }\n  }, \"specific listing\"), \" requires from its participants. These selected options have absolutely \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 208\n    }\n  }, \"NO LIENENCY\"), \" and any disregard to platform rules will result in \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 288\n    }\n  }, \"IMMEDIATE PERMENANT BANNING\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(HelperRadioButtons, {\n    listingReady: listingReady,\n    listingData: listingData,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 49\n    }\n  }, coverLetterChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, coverLetterChecks.check(setError, register, clearErrors, setValue, \"coverLetterText\"), {\n    value: gatheredValues.coverLetterText,\n    placeholder: coverLetterChecks.placeholder,\n    onChange: e => {\n      return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n    },\n    name: coverLetterChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 49\n    }\n  })), errors.coverLetterText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 75\n    }\n  }, errors.coverLetterText.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 49\n    }\n  }, physicalOrDigitalChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: physicalOrDigitalChecks.name\n  }, physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        autoBlur: true,\n        defaultValue: null,\n        ref: physicalOrDigitalOrBothGeneratedRef,\n        value: gatheredValues.physicalOrDigitalOrBoth,\n        placeholder: physicalOrDigitalChecks.placeholder,\n        onChange: selectedOption => {\n          console.log(\"changed!!!!\");\n          setTimeout(() => {\n            // clear error after proper selection\n            if (typeof selectedOption !== \"undefined\" && Object.keys(selectedOption).length > 0) {\n              // set selected value\n              setValue(physicalOrDigitalChecks.name, selectedOption, {\n                shouldValidate: false\n              }); // clear relevant error\n\n              clearErrors(physicalOrDigitalChecks.name);\n            } else {\n              // set error as nothing was selected (blank 'click-off' selection of selector)\n              setError(physicalOrDigitalChecks.name, {\n                type: \"manual\",\n                message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\"\n              });\n            }\n          }, 50);\n        },\n        onMenuClose: () => {\n          physicalOrDigitalOrBothGeneratedRef.current.blur();\n        },\n        options: physicalOrDigitalHackOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 57\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 49\n    }\n  })), errors.physicalOrDigitalOrBoth ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 83\n    }\n  }, errors.physicalOrDigitalOrBoth.message) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 49\n    }\n  }, approachToSuccessfullyHackCo.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\"), {\n    placeholder: approachToSuccessfullyHackCo.placeholder,\n    onChange: e => {\n      return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n    },\n    name: approachToSuccessfullyHackCo.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 49\n    }\n  })), errors.technicalApproachToHack ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 83\n    }\n  }, errors.technicalApproachToHack.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, \"Message To Employer (Direct to employer)\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\"), {\n    placeholder: messageToEmployerChecks.placeholder,\n    onChange: e => {\n      return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n    },\n    name: messageToEmployerChecks.name,\n    type: \"textarea\",\n    className: \"form-control input-air-primary\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 49\n    }\n  })), errors.messageToEmployer ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 77\n    }\n  }, errors.messageToEmployer.message) : null))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-bottom-across\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 57\n    }\n  }, \"Attachments\"), \" to be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 92\n    }\n  }, \"sent\"), \" to the employer of this listing\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 53\n    }\n  }, \"These attachments can be anything from a \\\"Cover Letter\\\" or \\\"Resume\\\" & these files will be sent \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 183\n    }\n  }, \"directly\"), \" to the employer for consideration of your application for this listing or job/gig.\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-success\",\n    onClick: () => {\n      // open pane slider up from bottom\n      handleFinalSubmissionFiles();\n    },\n    outline: true,\n    color: \"success-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 53\n    }\n  }, \"Upload & Manage Attachments (To-be sent directly to employer)\"))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, \"Type Of Data That'll Be Automatically Submitted\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, \"This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 45\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 106\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 45\n    }\n  }), renderSentence(\"username\", \"Username\", username)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 45\n    }\n  }, \"First Name & Last Name (Together)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 131\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 45\n    }\n  }), renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 45\n    }\n  }, \"Completed Job Count\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 117\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 45\n    }\n  }), renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-1 listitem-header-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 45\n    }\n  }, \"Created Account (from ago...)\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 127\n    }\n  }, \"Will be submitted to employer\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 45\n    }\n  }), renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: \"list-group-item-action flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"btn-square btn-air-info\",\n    onClick: () => {\n      // View ALL included fields...\n      viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n    },\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 45\n    }\n  }, \"View all included fields (including above mentioned)\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"custom-card-inner custom-card-inner-customized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }, \"REQUIRED\"), \" data to be completed/filled-out\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 45\n    }\n  }, \"Reference a link (blog, website, etc... made by \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 124\n    }\n  }, \"you\"), \")\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 86\n    }\n  }, \"http(s)://\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\"), {\n    value: linkInput,\n    onChange: e => {\n      return urlEnteredLinkData.onChange(e, setError, clearErrors, setValue, setLinkInput);\n    },\n    className: \"form-control\",\n    type: \"text\",\n    name: \"referenceLink\",\n    placeholder: \"Enter a link to your work (website, blog, etc...)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 49\n    }\n  })), showButtonOrNot() ? /*#__PURE__*/React.createElement(InputGroupAddon, {\n    onClick: () => {\n      handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink, clearInput);\n    },\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 70\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    className: \"group-addon-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 71\n    }\n  }, \"Submit\")) : null), errors.referenceLink ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 69\n    }\n  }, errors.referenceLink.message) : null), selectedLinks.map((link, index) => {\n    console.log(\"link\", link);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"12.5px\",\n        marginBottom: \"12.5px\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      onClick: e => {\n        e.preventDefault();\n      },\n      className: \"list-group-item custom-list-group-item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: \"25px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 112\n      }\n    }), link.url, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => {\n        // handle deletion\n        handleDeletionLink(link, setSelectedLinks);\n      },\n      id: \"float-trash-right\",\n      className: \"icon-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 162\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"heavy-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, \"Available dates to select (Physical 'Hack'ing Dates)\"), datesReady === true ? /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: dateRanges,\n    onChange: handleDateSelection // onPreviewChange={(value1, value2) => {\n    //     console.log(value1, value2);\n    // }}\n    ,\n    minDate: new Date() // go back MAX 2 WEEKS and start from there\n    // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n    ,\n    disabledDates: disabledDays,\n    scroll: {\n      enabled: true\n    },\n    direction: \"horizontal\" // showMonthAndYearPickers={true}\n    ,\n    rangeColors: [\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 64\n    }\n  }) : null))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollToTourWrapper,\n    id: \"tour-col-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 41\n    }\n  }, \"Have you filled out \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 65\n    }\n  }, \"ALL OF THE REQUIRED DATA/INFO\"), \" and you're now \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 127\n    }\n  }, \"READY\"), \" to apply and continue with your application?!\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 41\n    }\n  }, \"Click the button below to proceed forward & \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 88\n    }\n  }, \"apply to this listing\"), \" and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    className: \"btn-square btn-air-info\",\n    outline: true,\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 41\n    }\n  }, \"SUBMIT APPLICATION INFORMATION\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"natural-sm-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimelineHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles\n})(withRouter(ApplyAsHackerEmployerListingHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/applyAsHacker.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","CardBody","Button","CardHeader","ListGroupItem","ListGroup","FormGroup","Label","Input","InputGroupAddon","Form","InputGroup","InputGroupText","Media","helpers","connect","moment","shiftCoreStyles","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","axios","_","Link","withRouter","useParams","Select","DateRangePicker","useForm","Controller","MainHooksCustomHelpers","Tour","TimelineHelper","SheetPaneSubmittingDataHelper","HelperRadioButtons","renderMountedLogic","handleDeletionLink","handleLinkAddition","SheetDisplayFilesFileManagerHelper","urlEnteredLinkData","coverLetterChecks","messageToEmployerChecks","physicalOrDigitalChecks","approachToSuccessfullyHackCo","tourStepsOptions","selector","content","ApplyAsHackerEmployerListingHelper","userData","location","physicalOrDigitalOrBothGeneratedRef","scrollToTourWrapper","id","alreadyAdded","setAlreadyAddedState","filesSheetOpen","setFileSheetOpenState","linkInput","setLinkInput","isTourOpen","setIsTourOpenState","disabledDays","setDisabledDaysState","physicalOrDigitalHackOptions","setPhysicalOrDigitalHackOptionsState","sheetIsOpen","setSheetOpenState","currentUserData","setCurrentUserData","ready","setReadyGlobal","listingReady","setListingReady","listingData","setListingData","dateRanges","setDateRanges","datesReady","setDatesReady","selectedLinks","setSelectedLinks","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","gatheredValues","handleDateSelection","ranges","console","log","username","firstName","lastName","registrationDate","completedJobs","window","scrollTo","globalConfig","config","params","uniqueId","configuration","listingId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","user","catch","err","renderSentence","actual","type","val","hasOwnProperty","color","fontSize","fontWeight","textDecorationLine","viewRemainderOfIncludedFields","alreadyIncludedArray","setTimeout","target","document","querySelector","handleInputChange","e","name","value","shouldValidate","showButtonOrNot","has","referenceLink","length","clearInput","disableBodyAndScroll","enableBody","handleDirectionChangeTour","current","scrollIntoView","scrollBy","select","handleTourClosingAction","onErrorMainForm","onFormSubmit","values","valuesTwo","handleFinalSubmissionFiles","REACT_APP_CRYPTO_TOKEN_NAME","width","paddingTop","label","check","coverLetterText","placeholder","onChange","field","physicalOrDigitalOrBoth","selectedOption","Object","keys","blur","technicalApproachToHack","messageToEmployer","fromNow","marginTop","map","link","index","marginBottom","preventDefault","paddingRight","url","Date","enabled","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8CC,MAA9C,EAAsDC,UAAtD,EAAkEC,aAAlE,EAAiFC,SAAjF,EAA4FC,SAA5F,EAAuGC,KAAvG,EAA8GC,KAA9G,EAAqHC,eAArH,EAAsIC,IAAtI,EAA4IC,UAA5I,EAAwJC,cAAxJ,EAAwKC,KAAxK,QAAqL,YAArL;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,iDAAhC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,uBAA9C,QAA6E,kBAA7E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,IAAP,MAAiB,UAAjB;AAEA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,6BAAlB;AAAiDC,EAAAA,kBAAjD;AAAqEC,EAAAA,kBAArE;AAAyFC,EAAAA,kBAAzF;AAA6GC,EAAAA,kBAA7G;AAAiIC,EAAAA;AAAjI,IAAwKxB,OAA9K;AAEA,MAAMyB,kBAAkB,GAAGT,sBAAsB,GAAGS,kBAApD;AACA,MAAMC,iBAAiB,GAAGV,sBAAsB,GAAGU,iBAAnD;AACA,MAAMC,uBAAuB,GAAGX,sBAAsB,GAAGW,uBAAzD;AACA,MAAMC,uBAAuB,GAAGZ,sBAAsB,GAAGY,uBAAzD;AACA,MAAMC,4BAA4B,GAAGb,sBAAsB,GAAGa,4BAA9D;AAGA,MAAMC,gBAAgB,GAAG,CACrB;AACEC,EAAAA,QAAQ,EAAE,kBADZ;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADqB,CAAzB;;AAQA,MAAMC,kCAAkC,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAY/B,IAAAA,eAAZ;AAA6BgC,IAAAA;AAA7B,GAA4C;AAEpF;AACA,QAAMC,mCAAmC,GAAGvD,MAAM,CAAC,IAAD,CAAlD;AACA,QAAMwD,mBAAmB,GAAGxD,MAAM,CAAC,IAAD,CAAlC,CAJoF,CAKpF;;AACA,QAAM;AAAEyD,IAAAA;AAAF,MAAS3B,SAAS,EAAxB,CANoF,CAOpF;;AACA,QAAM,CAAE4B,YAAF,EAAgBC,oBAAhB,IAAyC7D,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAAE8D,cAAF,EAAkBC,qBAAlB,IAA4C/D,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAEgE,SAAF,EAAaC,YAAb,IAA8BjE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEkE,UAAF,EAAcC,kBAAd,IAAqCnE,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEoE,YAAF,EAAgBC,oBAAhB,IAAyCrE,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAAEsE,4BAAF,EAAgCC,oCAAhC,IAAyEvE,QAAQ,CAAC,EAAD,CAAvF;AACA,QAAM,CAAEwE,WAAF,EAAeC,iBAAf,IAAqCzE,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAE0E,eAAF,EAAmBC,kBAAnB,IAA0C3E,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAAE4E,KAAF,EAASC,cAAT,IAA4B7E,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAE8E,YAAF,EAAgBC,eAAhB,IAAoC/E,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEgF,WAAF,EAAeC,cAAf,IAAkCjF,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAEkF,UAAF,EAAcC,aAAd,IAAgCnF,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAEoF,UAAF,EAAcC,aAAd,IAAgCrF,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEsF,aAAF,EAAiBC,gBAAjB,IAAsCvF,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM;AAAEwF,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA,QAA/D;AAAyEC,IAAAA,WAAzE;AAAsFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAjG,MAA+G9D,OAAO,CAAC;AACzH+D,IAAAA,IAAI,EAAE,WADmH;AAEzHC,IAAAA,cAAc,EAAE,QAFyG,CAGzH;;AAHyH,GAAD,CAA5H;AAMA,QAAMC,cAAc,GAAGR,SAAS,EAAhC;;AAEA,QAAMS,mBAAmB,GAAIC,MAAD,IAAY;AACpC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACH,GAHD,CA/BoF,CAmCpF;;;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,gBAAjC;AAAmDC,IAAAA;AAAnD,MAAqEtD,QAA3E,CApCoF,CAsCpF;;AACAtD,EAAAA,SAAS,CAAC,MAAM;AACZ6G,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,UAAMC,YAAY,GAAG;AACjBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE5D,QAAQ,CAAC4D;AADf;AADJ,OADS;AAMjBC,MAAAA,aAAa,EAAE;AACXF,QAAAA,MAAM,EAAE;AACJG,UAAAA,SAAS,EAAE1D;AADP;AADG;AANE,KAArB;AAYAjB,IAAAA,kBAAkB,CAACsE,YAAD,EAAezC,oCAAf,EAAqDU,cAArD,EAAqEI,aAArE,EAAoFF,aAApF,EAAmGd,oBAAnG,EAAyHU,eAAzH,CAAlB,CAfY,CAgBZ;;AACAnD,IAAAA,KAAK,CAAC0F,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,kCAA5C,EAA+ET,YAAY,CAACC,MAA5F,EAAoGS,IAApG,CAA0GC,GAAD,IAAS;AAC9G,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,8CAAzB,EAAyE;AACrEtB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAG,CAACC,IAAhB;AAEA,cAAM;AAAEE,UAAAA;AAAF,YAAWH,GAAG,CAACC,IAArB;AAEAjD,QAAAA,kBAAkB,CAACmD,IAAD,CAAlB;AACAjD,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAPD,MAOO;AACH0B,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBmB,GAAG,CAACC,IAAvB;AACH;AACJ,KAXD,EAWGG,KAXH,CAWUC,GAAD,IAAS;AACdzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACH,KAbD;AAcH,GA/BQ,EA+BN,EA/BM,CAAT,CAvCoF,CAwEpF;;AACA,QAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,GAAf,KAAuB;AAC1C;AACA,QAAIxD,KAAK,KAAK,IAAV,IAAkBF,eAAe,KAAK,IAA1C,EAAgD;AAC5C;AACA,UAAIA,eAAe,CAAC2D,cAAhB,CAA+BH,MAA/B,CAAJ,EAA4C;AACxC;AACA,4BAAO;AAAG,UAAA,SAAS,EAAE,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4DC,IAA5D,oBAAkE;AAAQ,UAAA,KAAK,EAAEzD,eAAe,CAAC2D,cAAhB,CAA+BH,MAA/B,IAAyC;AAAEI,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE,UAA9B;AAA0CC,YAAAA,UAAU,EAAE;AAAtD,WAAzC,GAAuG;AAAEF,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE,UAA9B;AAA0CC,YAAAA,UAAU,EAAE;AAAtD,WAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoLJ,GAApL,CAAlE,0CAAP;AACH,OAHD,MAGO;AACH;AACA,4BAAO;AAAG,UAAA,SAAS,EAAE,mDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAAiH;AAAI,UAAA,KAAK,EAAE;AAAEK,YAAAA,kBAAkB,EAAE;AAAtB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDN,IAAjD,CAAjH,0HAAmR,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,wBAAV;AAAoC,UAAA,SAAS,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAnR,sEAAP;AACH;AACJ,KATD,MASO;AACH;AACA,0BAAO;AAAG,QAAA,SAAS,EAAE,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH;AACJ,GAfD,CAzEoF,CAyFpF;;;AACA,QAAMO,6BAA6B,GAAIC,oBAAD,IAA0B;AAC5DpC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CmC,oBAA9C,EAD4D,CAG5D;;AACA9E,IAAAA,oBAAoB,CAAC8E,oBAAD,CAApB,CAJ4D,CAK5D;;AACAnH,IAAAA,eAAe,CAAC,IAAD,CAAf,CAN4D,CAO5D;;AACAiD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAR4D,CAS5D;;AACAmE,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACAtH,MAAAA,iBAAiB,CAACoH,MAAD,CAAjB;AACH,KALS,EAKN,GALM,CAAV;AAMH,GAhBD;;AAiBA,QAAMG,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACJ,MAA1B;AAEAhD,IAAAA,QAAQ,CAACqD,IAAD,EAAOC,KAAP,EAAc;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAd,CAAR;AACH,GAJD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAI,CAACxH,CAAC,CAACyH,GAAF,CAAMrD,MAAN,EAAc,eAAd,CAAD,IAAmC,CAACA,MAAM,CAACsD,aAA3C,IAA4D,OAAOnD,cAAc,CAACmD,aAAtB,KAAwC,WAApG,IAAmHnD,cAAc,CAACmD,aAAf,CAA6BC,MAA7B,GAAsC,CAA7J,EAAgK;AAC5J,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAND;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACrBxF,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAFD,CAvHoF,CA0HpF;;;AACA,QAAMyF,oBAAoB,GAAGb,MAAM,IAAI;AACnC;AACApH,IAAAA,iBAAiB,CAACoH,MAAD,CAAjB;AACH,GAHD;;AAIA,QAAMc,UAAU,GAAGd,MAAM,IAAIlH,uBAAuB,EAApD;;AAEA,QAAMiI,yBAAyB,GAAG,MAAM;AACpC;AACApI,IAAAA,eAAe,CAAC,IAAD,CAAf,CAFoC,CAGpC;;AACAkC,IAAAA,mBAAmB,CAACmG,OAApB,CAA4BC,cAA5B,GAJoC,CAKpC;;AACAlB,IAAAA,UAAU,CAAC,MAAM;AACb9B,MAAAA,MAAM,CAACiD,QAAP,CAAgB,CAAhB,EAAmB,CAAC,GAApB;AACH,KAFS,EAEP,GAFO,CAAV,CANoC,CASpC;;AACAnB,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMoB,MAAM,GAAGlB,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACAtH,MAAAA,iBAAiB,CAACuI,MAAD,CAAjB;AAEA7F,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAPS,EAOP,IAPO,CAAV;AAQH,GAlBD;;AAmBA,QAAM8F,uBAAuB,GAAG,MAAM;AAClC;AACAzI,IAAAA,eAAe,CAAC,KAAD,CAAf,CAFkC,CAGlC;;AACAG,IAAAA,uBAAuB,GAJW,CAKlC;;AACAwC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAPD;;AAQA,QAAM+F,eAAe,GAAG,CAACjE,MAAD,EAASgD,CAAT,KAAe;AACnC1C,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,MAAzB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoByC,CAApB;AACH,GAHD;;AAIA,QAAMkB,YAAY,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACxC9D,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC4D,MAApC,EAA4CC,SAA5C;AACH,GAFD;;AAGA,QAAMC,0BAA0B,GAAG,MAAM;AACrC;AACA9I,IAAAA,eAAe,CAAC,IAAD,CAAf,CAFqC,CAGrC;;AACAuC,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CAJqC,CAKrC;;AACA6E,IAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAMoB,MAAM,GAAGlB,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf,CAFa,CAGb;;AACAtH,MAAAA,iBAAiB,CAACuI,MAAD,CAAjB;AACH,KALS,EAKP,GALO,CAAV;AAMH,GAZD,CAnKoF,CAgLpF;;;AACAzD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,cAA9B,EAA8C,QAA9C,EAAwDH,MAAxD;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,6BAAD;AAA+B,IAAA,KAAK,EAAErB,KAAtC;AAA6C,IAAA,eAAe,EAAEpD,eAA9D;AAA+E,IAAA,YAAY,EAAEoC,YAA7F;AAA2G,IAAA,eAAe,EAAEc,eAA5H;AAA6I,IAAA,uBAAuB,EAAE/C,uBAAtK;AAA+L,IAAA,QAAQ,EAAE4B,QAAzM;AAAmN,IAAA,WAAW,EAAEiB,WAAhO;AAA6O,IAAA,iBAAiB,EAAEC,iBAAhQ;AAAmR,IAAA,cAAc,EAAEwD,cAAnS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,kCAAD;AAAoC,IAAA,cAAc,EAAEnE,cAApD;AAAoE,IAAA,qBAAqB,EAAEC,qBAA3F;AAAkH,IAAA,eAAe,EAAEvC,eAAnI;AAAoJ,IAAA,uBAAuB,EAAEG,uBAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAE,yBAA7B;AAAwD,IAAA,MAAM,EAAG,wBAAuB4F,OAAO,CAACC,GAAR,CAAY+C,2BAA4B,gCAAhI;AAAiK,IAAA,KAAK,EAAE,gEAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEpH,gBADX;AAEI,IAAA,MAAM,EAAEe,UAFZ;AAGI,IAAA,WAAW,EAAEwF,oBAHjB;AAII,IAAA,aAAa,EAAEC,UAJnB;AAKI,IAAA,cAAc,EAAEM,uBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAWI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,IAAhB;AAAsB,IAAA,EAAE,EAAC,gBAAzB;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAuD,IAAA,IAAI,EAAC,QAA5D;AAAqE,IAAA,KAAK,EAAC,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,6BAAjB;AAA+C,IAAA,IAAI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,+CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAAyG;AAAM,IAAA,SAAS,EAAC,6DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+E,4BAA/E,CAAzG,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAX,sIAA+K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA/K,mCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,yBAAjB;AAA4C,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAAnD;AAAsE,IAAA,SAAS,EAAC,yBAAhF;AAA0G,IAAA,OAAO,MAAjH;AAAkH,IAAA,KAAK,EAAC,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCALJ,CALJ,CADJ,CADJ,CAXJ,eA4BI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAyC,IAAA,KAAK,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,mDAAlB;AAAsE,IAAA,UAAU,EAAC,EAAjF;AAAoF,IAAA,QAAQ,EAAE/E,YAAY,CAAC0E,YAAD,EAAe,CAAClE,MAAD,EAASgD,CAAT,KAAe;AACpI,aAAOiB,eAAe,CAACjE,MAAD,EAASgD,CAAT,CAAtB;AACH,KAFyG,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEwB,MAAAA,UAAU,EAAE;AAAd,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/C,iCAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA1E,2FAA2K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3K,uEAA2P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA3P,CAFJ,CADJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,YAAY,EAAE3F,YAAlC;AAAgD,IAAA,WAAW,EAAEE,WAA7D;AAA0E,IAAA,EAAE,EAAErB,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAAE8G,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC1H,iBAAiB,CAAC2H,KAAlD,CADJ,eAEI,oBAAC,KAAD,oBAAW3H,iBAAiB,CAAC4H,KAAlB,CAAwB7E,QAAxB,EAAkCN,QAAlC,EAA4CO,WAA5C,EAAyDF,QAAzD,EAAmE,iBAAnE,CAAX;AAAkG,IAAA,KAAK,EAAEO,cAAc,CAACwE,eAAxH;AAAyI,IAAA,WAAW,EAAE7H,iBAAiB,CAAC8H,WAAxK;AAAqL,IAAA,QAAQ,EAAG5B,CAAD,IAAO;AAClM,aAAOlG,iBAAiB,CAAC+H,QAAlB,CAA2B7B,CAA3B,EAA8B,iBAA9B,EAAiDpD,QAAjD,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAE9C,iBAAiB,CAACmG,IAF3B;AAEiC,IAAA,IAAI,EAAC,UAFtC;AAEiD,IAAA,SAAS,EAAC,gCAF3D;AAE4F,IAAA,IAAI,EAAE,GAFlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKKjD,MAAM,CAAC2E,eAAP,gBAAyB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC3E,MAAM,CAAC2E,eAAP,CAAuB/C,OAAvD,CAAzB,GAAkG,IALvG,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ5E,uBAAuB,CAACyH,KAAhC,CADJ,eAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEhF,OADb;AAEI,IAAA,IAAI,EAAEzC,uBAAuB,CAACiG;AAFlC,KAGQjG,uBAAuB,CAAC0H,KAAxB,CAA8B1H,uBAAuB,CAACiG,IAAtD,EAA4D1D,QAA5D,CAHR;AAII,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEuF,QAAAA;AAAF,OAAD;AAAA,0BACJ,oBAAC,MAAD,oBACQA,KADR;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,YAAY,EAAE,IAHlB;AAII,QAAA,GAAG,EAAEtH,mCAJT;AAKI,QAAA,KAAK,EAAE2C,cAAc,CAAC4E,uBAL1B;AAMI,QAAA,WAAW,EAAE/H,uBAAuB,CAAC4H,WANzC;AAOI,QAAA,QAAQ,EAAGI,cAAD,IAAoB;AAC1B1E,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEAoC,UAAAA,UAAU,CAAC,MAAM;AACb;AACA,gBAAK,OAAOqC,cAAP,KAA0B,WAA3B,IAA4CC,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BzB,MAA5B,GAAqC,CAArF,EAAyF;AACrF;AACA3D,cAAAA,QAAQ,CAAC5C,uBAAuB,CAACiG,IAAzB,EAA+B+B,cAA/B,EAA+C;AAAE7B,gBAAAA,cAAc,EAAE;AAAlB,eAA/C,CAAR,CAFqF,CAGrF;;AACArD,cAAAA,WAAW,CAAC9C,uBAAuB,CAACiG,IAAzB,CAAX;AACH,aALD,MAKO;AACH;AACApD,cAAAA,QAAQ,CAAC7C,uBAAuB,CAACiG,IAAzB,EAA+B;AACnCf,gBAAAA,IAAI,EAAE,QAD6B;AAEnCN,gBAAAA,OAAO,EAAE;AAF0B,eAA/B,CAAR;AAIH;AACJ,WAdS,EAcP,EAdO,CAAV;AAeH,SAzBL;AA0BI,QAAA,WAAW,EAAE,MAAM;AACfpE,UAAAA,mCAAmC,CAACoG,OAApC,CAA4CuB,IAA5C;AACH,SA5BL;AA6BI,QAAA,OAAO,EAAE9G,4BA7Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADI;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAwCK2B,MAAM,CAAC+E,uBAAP,gBAAiC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC/E,MAAM,CAAC+E,uBAAP,CAA+BnD,OAA/D,CAAjC,GAAkH,IAxCvH,CARJ,eAkDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC3E,4BAA4B,CAACwH,KAA7D,CADJ,eAEI,oBAAC,KAAD,oBAAWxH,4BAA4B,CAACyH,KAA7B,CAAmC7E,QAAnC,EAA6CN,QAA7C,EAAuDO,WAAvD,EAAoE,yBAApE,CAAX;AAA2G,IAAA,WAAW,EAAE7C,4BAA4B,CAAC2H,WAArJ;AAAkK,IAAA,QAAQ,EAAG5B,CAAD,IAAO;AAC/K,aAAO/F,4BAA4B,CAAC4H,QAA7B,CAAsC7B,CAAtC,EAAyC,yBAAzC,EAAoEpD,QAApE,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAE3C,4BAA4B,CAACgG,IAFtC;AAE4C,IAAA,IAAI,EAAC,UAFjD;AAE4D,IAAA,SAAS,EAAC,gCAFtE;AAEuG,IAAA,IAAI,EAAE,GAF7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKKjD,MAAM,CAACoF,uBAAP,gBAAiC;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCpF,MAAM,CAACoF,uBAAP,CAA+BxD,OAA/D,CAAjC,GAAkH,IALvH,CAlDJ,CADJ,eA2DI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,eAEI,oBAAC,KAAD,oBAAW7E,uBAAuB,CAAC2H,KAAxB,CAA8B7E,QAA9B,EAAwCN,QAAxC,EAAkDO,WAAlD,EAA+DF,QAA/D,EAAyE,mBAAzE,CAAX;AAA0G,IAAA,WAAW,EAAE7C,uBAAuB,CAAC6H,WAA/I;AAA4J,IAAA,QAAQ,EAAG5B,CAAD,IAAO;AACzK,aAAOjG,uBAAuB,CAAC8H,QAAxB,CAAiC7B,CAAjC,EAAoC,mBAApC,EAAyDpD,QAAzD,CAAP;AACH,KAFD;AAEG,IAAA,IAAI,EAAE7C,uBAAuB,CAACkG,IAFjC;AAEuC,IAAA,IAAI,EAAC,UAF5C;AAEuD,IAAA,SAAS,EAAC,gCAFjE;AAEkG,IAAA,IAAI,EAAE,GAFxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKKjD,MAAM,CAACqF,iBAAP,gBAA2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrF,MAAM,CAACqF,iBAAP,CAAyBzD,OAAzD,CAA3B,GAAsG,IAL3G,CADJ,CA3DJ,CAJJ,eAyEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,0BAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvC,qCADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAAE4C,MAAAA,UAAU,EAAE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAAkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlI,wFAFJ,CADJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,SAAS,EAAE,4BAA7C;AAA2E,IAAA,OAAO,EAAE,MAAM;AACtF;AACAF,MAAAA,0BAA0B;AAC7B,KAHD;AAGG,IAAA,OAAO,MAHV;AAGW,IAAA,KAAK,EAAC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADJ,CALJ,CADJ,CADJ,CAzEJ,CALJ,CADJ,CADJ,CAHJ,eAuGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gMAHJ,CADJ,eAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,UAA7C,CADA,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CAD7D,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKrC,cAAc,CAAC,UAAD,EAAa,UAAb,EAAyBxB,QAAzB,CALnB,CADJ,eAQI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,mCAA7C,CADA,eACsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADtF,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKwB,cAAc,CAAC,UAAD,EAAa,WAAb,EAA2B,GAAEvB,SAAU,IAAGC,QAAS,EAAnD,CALnB,CARJ,eAeI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,qBAA7C,CADA,eACwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADxE,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKsB,cAAc,CAAC,kBAAD,EAAqB,sBAArB,EAA6C1G,MAAM,CAACqF,gBAAD,CAAN,CAAyB2E,OAAzB,EAA7C,CALnB,CAfJ,eAsBI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C,+BAA7C,CADA,eACkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,+BAAR,CADlF,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKtD,cAAc,CAAC,eAAD,EAAkB,qBAAlB,EAAyCpB,aAAzC,CALnB,CAtBJ,eA6BI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAE2D,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,SAAS,EAAE,yBAA7C;AAAwE,IAAA,OAAO,EAAE,MAAM;AACnF;AACA9B,MAAAA,6BAA6B,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,kBAAzB,EAA6C,eAA7C,CAAD,CAA7B;AACH,KAHD;AAGG,IAAA,OAAO,MAHV;AAGW,IAAA,KAAK,EAAC,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,CA7BJ,CADJ,CANJ,CADJ,CADJ,eAgDI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,qCADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE8C,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAA2C,IAAA,SAAS,EAAC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAA+E;AAAI,IAAA,KAAK,EAAE;AAAE/C,MAAAA,kBAAkB,EAAE;AAAtB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA/E,MADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoD,YAApD,CAArC,CADJ,eAEI,oBAAC,KAAD,oBAAW3F,kBAAkB,CAAC6H,KAAnB,CAAyB7E,QAAzB,EAAmCN,QAAnC,EAA6CO,WAA7C,EAA0DF,QAA1D,EAAoEI,MAApE,EAA4E,eAA5E,CAAX;AAAyG,IAAA,KAAK,EAAEjC,SAAhH;AAA2H,IAAA,QAAQ,EAAGiF,CAAD,IAAO;AACxI,aAAOnG,kBAAkB,CAACgI,QAAnB,CAA4B7B,CAA5B,EAA+BnD,QAA/B,EAAyCC,WAAzC,EAAsDF,QAAtD,EAAgE5B,YAAhE,CAAP;AACH,KAFD;AAEG,IAAA,SAAS,EAAC,cAFb;AAE4B,IAAA,IAAI,EAAC,MAFjC;AAEwC,IAAA,IAAI,EAAC,eAF7C;AAE6D,IAAA,WAAW,EAAE,mDAF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKKoF,eAAe,kBAAK,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAAM;AACjDzG,MAAAA,kBAAkB,CAAC2C,gBAAD,EAAmBa,cAAc,CAACmD,aAAlC,EAAiDE,UAAjD,CAAlB;AACH,KAFoB;AAElB,IAAA,SAAS,EAAC,QAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD,QAAhD,CAFD,CAAL,GAEqG,IAPzH,CAFJ,EAWKxD,MAAM,CAACsD,aAAP,gBAAuB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCtD,MAAM,CAACsD,aAAP,CAAqB1B,OAArD,CAAvB,GAA8F,IAXnG,CAFJ,EAeKvC,aAAa,CAACmG,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChCpF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkF,IAApB;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,SAAS,EAAE,QAAb;AAAuBI,QAAAA,YAAY,EAAE;AAArC,OAAZ;AAA6D,MAAA,GAAG,EAAED,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAG1C,CAAD,IAAO;AAC3BA,QAAAA,CAAC,CAAC4C,cAAF;AACH,OAFD;AAEG,MAAA,SAAS,EAAC,6CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAE2D;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3D,EAEoGJ,IAAI,CAACK,GAFzG,eAE6G;AAAG,MAAA,OAAO,EAAE,MAAM;AAC3H;AACApJ,QAAAA,kBAAkB,CAAC+I,IAAD,EAAOnG,gBAAP,CAAlB;AACH,OAH4G;AAG1G,MAAA,EAAE,EAAE,mBAHsG;AAGjF,MAAA,SAAS,EAAC,YAHuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7G,CADJ,CADJ;AAUH,GAZA,CAfL,eA4BI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DA5BJ,EA6BKH,UAAU,KAAK,IAAf,gBAAsB,oBAAC,eAAD;AACnB,IAAA,MAAM,EAAEF,UADW;AAEnB,IAAA,QAAQ,EAAEmB,mBAFS,CAGnB;AACA;AACA;AALmB;AAMnB,IAAA,OAAO,EAAE,IAAI2F,IAAJ,EANU,CAOnB;AACA;AARmB;AASnB,IAAA,aAAa,EAAE5H,YATI;AAUnB,IAAA,MAAM,EAAE;AAAE6H,MAAAA,OAAO,EAAE;AAAX,KAVW;AAWnB,IAAA,SAAS,EAAE,YAXQ,CAYnB;AAZmB;AAanB,IAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAcI,IA3CT,CADJ,CAJJ,CADJ,CAhDJ,CAvGJ,eA8MI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEvI,mBAAV;AAA+B,IAAA,EAAE,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAxB,mCAAsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtF,mDADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA/C,8JADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAE8G,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,IAAI,EAAE,QAAxC;AAAkD,IAAA,SAAS,EAAC,yBAA5D;AAAsF,IAAA,OAAO,MAA7F;AAA8F,IAAA,KAAK,EAAC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANJ,eAOI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAJJ,CADJ,CADJ,CADJ,CA9MJ,eAmOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAnOJ,CADJ,CA5BJ,CADJ;AA0QH,CA5bD;;AA6bA,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH5I,IAAAA,QAAQ,EAAE4I,KAAK,CAACC,IAAN,CAAWxE;AADlB,GAAP;AAGH,CAJD;;AAKA,eAAetG,OAAO,CAAC4K,eAAD,EAAkB;AAAE1K,EAAAA;AAAF,CAAlB,CAAP,CAA8CO,UAAU,CAACuB,kCAAD,CAAxD,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardBody, Button, CardHeader, ListGroupItem, ListGroup, FormGroup, Label, Input, InputGroupAddon, Form, InputGroup, InputGroupText, Media } from 'reactstrap';\nimport helpers from \"./helpers/miscFunctions.js\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { shiftCoreStyles } from \"../../../../../redux/actions/universal/index.js\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport Select from 'react-select';\nimport { DateRangePicker } from 'react-date-range';\nimport { useForm, Controller } from 'react-hook-form';\nimport MainHooksCustomHelpers from \"./helpers/reactHookFormHelpers.js\";\nimport Tour from 'reactour';\n\nconst { TimelineHelper, SheetPaneSubmittingDataHelper, HelperRadioButtons, renderMountedLogic, handleDeletionLink, handleLinkAddition, SheetDisplayFilesFileManagerHelper } = helpers;\n\nconst urlEnteredLinkData = MainHooksCustomHelpers().urlEnteredLinkData;\nconst coverLetterChecks = MainHooksCustomHelpers().coverLetterChecks;\nconst messageToEmployerChecks = MainHooksCustomHelpers().messageToEmployerChecks;\nconst physicalOrDigitalChecks = MainHooksCustomHelpers().physicalOrDigitalChecks;\nconst approachToSuccessfullyHackCo = MainHooksCustomHelpers().approachToSuccessfullyHackCo;\n\n\nconst tourStepsOptions = [\n    {\n      selector: '#tour-col-custom',\n      content: 'ONCE you have ALL of the required information completed & filled-out, Click this button to proceed forward and submit your filled out information & APPLY!',\n    }\n];\n\n\nconst ApplyAsHackerEmployerListingHelper = ({ userData, shiftCoreStyles, location }) => {\n    \n    // ref's\n    const physicalOrDigitalOrBothGeneratedRef = useRef(null);\n    const scrollToTourWrapper = useRef(null);\n    // get URL ID from string\n    const { id } = useParams();\n    // initialize state items...\n    const [ alreadyAdded, setAlreadyAddedState ] = useState(null);\n    const [ filesSheetOpen, setFileSheetOpenState ] = useState(false);\n    const [ linkInput, setLinkInput ] = useState(\"\"); \n    const [ isTourOpen, setIsTourOpenState ] = useState(false);\n    const [ disabledDays, setDisabledDaysState ] = useState([]);\n    const [ physicalOrDigitalHackOptions, setPhysicalOrDigitalHackOptionsState ] = useState([]);\n    const [ sheetIsOpen, setSheetOpenState ] = useState(false);\n    const [ currentUserData, setCurrentUserData ] = useState(null);\n    const [ ready, setReadyGlobal ] = useState(false);\n    const [ listingReady, setListingReady ] = useState(false);\n    const [ listingData, setListingData ] = useState(null);\n    const [ dateRanges, setDateRanges ] = useState(null);\n    const [ datesReady, setDatesReady ] = useState(false);\n    const [ selectedLinks, setSelectedLinks ] = useState([]);\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n        // delayError: 500\n    });\n    \n    const gatheredValues = getValues();\n\n    const handleDateSelection = (ranges) => {\n        // setDateRanges(ranges);\n        console.log(\"ranges\", ranges);\n    }\n    // deconstruct redux-state items...\n    const { username, firstName, lastName, registrationDate, completedJobs } = userData;\n\n    // component mounted.\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        const globalConfig = {\n            config: {\n                params: {\n                    uniqueId: userData.uniqueId\n                }\n            },\n            configuration: {\n                params: {\n                    listingId: id\n                }\n            }\n        }\n        renderMountedLogic(globalConfig, setPhysicalOrDigitalHackOptionsState, setListingData, setDatesReady, setDateRanges, setDisabledDaysState, setListingReady);\n        // gather core anonymous user information\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, globalConfig.config).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                setCurrentUserData(user);\n                setReadyGlobal(true);\n            } else {\n                console.log('err', res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    \n    // render custom sentence instead of DRY repeating\n    const renderSentence = (actual, type, val) => {\n        // run conditionals to figure out what to display to user and what to mark as \"incomplete\"\n        if (ready === true && currentUserData !== null) {\n            // ready to display\n            if (currentUserData.hasOwnProperty(actual)) {\n                // return proper/desired \"right\" filled out data\n                return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Your {type} <strong style={currentUserData.hasOwnProperty(actual) ? { color: \"#dc3545\", fontSize: \"1.005rem\", fontWeight: 500 } : { color: \"#a927f9\", fontSize: \"1.005rem\", fontWeight: 500 }}>{val}</strong> will be submitted to the employer...</p>;\n            } else {\n                // throw error warning user\n                return <p className={\"mb-1 listitem-sub-text-custom-custom override-red\"}>You have NOT filled out the required field of <em style={{ textDecorationLine: \"underline\" }}>{type}</em>, therefore you will be unable to apply to this listing! If you'd like to apply to this listing, go to <Link to={\"/profile/settings/edit\"} className=\"linky\">your profile settings page</Link> and edit the appropriate sections, then come back and try again!</p>;\n            }\n        } else {\n            // return loading \"data\"\n            return <p className={\"mb-1 listitem-sub-text-custom-custom\"}>Still loading your data/content...!</p>;\n        }\n    }\n    // view more fields in PANE\n    const viewRemainderOfIncludedFields = (alreadyIncludedArray) => {\n        console.log(\"alreadyIncludedArray arr... : \", alreadyIncludedArray);\n\n        // already shown items *(HIGHLIGHT)*\n        setAlreadyAddedState(alreadyIncludedArray);\n        // shift \"lock\" styles to prevent scrolling and clicking\n        shiftCoreStyles(true);\n        // open modal - change modal state to OPEN\n        setSheetOpenState(true);\n        // set delay to allow load\n        setTimeout(() => {\n            // select outter body classname to pause/freeze\n            const target = document.querySelector(\".enact-nonclick\");\n            // DISABLE body scroll entirely\n            disableBodyScroll(target);\n        },  500);\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setValue(name, value, { shouldValidate: true });\n    }\n    const showButtonOrNot = () => {\n        if (!_.has(errors, \"referenceLink\") && !errors.referenceLink && typeof gatheredValues.referenceLink !== \"undefined\" && gatheredValues.referenceLink.length > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const clearInput = () => {\n        setLinkInput(\"\");\n    }\n    //  TOUR related LOCK SCREEN functions - DISABLE body scrolling\n    const disableBodyAndScroll = target => {\n        // disable body scroll\n        disableBodyScroll(target);\n    };\n    const enableBody = target => clearAllBodyScrollLocks();\n\n    const handleDirectionChangeTour = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // scroll to target and LOCK SCREEN until closed.\n        scrollToTourWrapper.current.scrollIntoView();\n        // alter slightly to account for top-NAV\n        setTimeout(() => {\n            window.scrollBy(0, -175);\n        }, 750);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN WRAPPER class\n            const select = document.querySelector(\".enact-nonclick\");\n            // disable selected class (movement, clicks, etc...);\n            disableBodyScroll(select);\n\n            setIsTourOpenState(true);\n        }, 1000)\n    }\n    const handleTourClosingAction = () => {\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // clear body scroll locks\n        clearAllBodyScrollLocks();\n        // close tour state\n        setIsTourOpenState(false);\n    }\n    const onErrorMainForm = (errors, e) => {\n        console.log(\"errors : \", errors);\n        console.log(\"e : \", e);\n    }\n    const onFormSubmit = (values, valuesTwo) => {\n        console.log(\"values and valuesTwo\", values, valuesTwo);\n    }\n    const handleFinalSubmissionFiles = () => {\n        // DISABLE clicking background\n        shiftCoreStyles(true);\n        // set sheet open\n        setFileSheetOpenState(true);\n        // lock after appropriate position change\n        setTimeout(() => {\n            // select MAIN-WRAPPER div class\n            const select = document.querySelector(\".enact-nonclick\");\n            // finally - disable while pane is open!\n            disableBodyScroll(select);\n        }, 450);\n    }\n    // log values to debug\n    console.log(\"gatheredValues\", gatheredValues, \"errors\", errors);\n    return (\n        <Fragment>\n            <SheetPaneSubmittingDataHelper ready={ready} shiftCoreStyles={shiftCoreStyles} alreadyAdded={alreadyAdded} currentUserData={currentUserData} clearAllBodyScrollLocks={clearAllBodyScrollLocks} userData={userData} sheetIsOpen={sheetIsOpen} setSheetOpenState={setSheetOpenState} renderSentence={renderSentence} />\n            <SheetDisplayFilesFileManagerHelper filesSheetOpen={filesSheetOpen} setFileSheetOpenState={setFileSheetOpenState} shiftCoreStyles={shiftCoreStyles} clearAllBodyScrollLocks={clearAllBodyScrollLocks} />\n            <Breadcrumb passedClassname={\"custom-breadcrumb-class\"} parent={`Apply & Work To Earn ${process.env.REACT_APP_CRYPTO_TOKEN_NAME} to cashout for REAL ($$$-USD)`} title={\"Review job requirements & details + apply to position/listing!\"} />\n            <Tour\n                steps={tourStepsOptions}\n                isOpen={isTourOpen}\n                onAfterOpen={disableBodyAndScroll}\n                onBeforeClose={enableBody}\n                onRequestClose={handleTourClosingAction} \n            />\n            <div className=\"absolute-position-bottom-right-fixed\">\n                <Card className=\"redirect-fixed-bottom-right\">\n                    <Media className=\"p-20\">\n                        <div className=\"radio radio-info mr-3\">\n                            <Input checked={true} id=\"radio-redirect\" type=\"radio\" name=\"radio1\" value=\"option1\" />\n                            <Label for=\"radio-redirect\"></Label>\n                        </div>\n                        <Media className=\"media-body-customized-fixed\" body>\n                            <h6 className=\"mt-0 mega-title-badge custom-mega-title-badge\">Are you ready to submit your application?! <span className=\"badge badge-info pull-right digits custom-pull-right digits\">{\"SHOW ME HOW TO SUBMIT APP!\"}</span></h6>\n                            <p>Are you <strong>READY TO SUBMIT YOUR APPLICATION</strong> to this employer and submit your 'completed/filled-out' information? Click the button below to be directed to the <strong>'Submit Application'</strong> button to proceed forwards...</p>\n                            <hr />\n                            <div className=\"natural-sm-spacer\" />\n                            <Button onClick={handleDirectionChangeTour} style={{ width: \"100%\" }} className=\"btn-square btn-air-info\" outline color=\"info-2x\">Show me the 'submission' button!</Button>\n                        </Media>\n                    </Media>\n                </Card>\n            </div>\n            <Container className=\"container-default\" fluid={true}>\n                <Form className={`needs-validation tooltip-validation validateClass`} noValidate=\"\" onSubmit={handleSubmit(onFormSubmit, (errors, e) => {\n                    return onErrorMainForm(errors, e);\n                })}>\n                    <Row className=\"customized-row-apply\" style={{ paddingTop: \"25px \" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className=\"custom-card-inner customized-top-card\">\n                                <CardHeader className=\"b-l-primary\">\n                                    <h5>Type of hack (physical location or digital asset)</h5>\n                                    <p style={{ paddingTop: \"7.5px\" }}>This is the <em>TYPE</em> of hack this <em>specific listing</em> requires from its participants. These selected options have absolutely <strong>NO LIENENCY</strong> and any disregard to platform rules will result in <strong>IMMEDIATE PERMENANT BANNING</strong></p>\n                                </CardHeader>\n                                <CardBody>\n                                    <HelperRadioButtons listingReady={listingReady} listingData={listingData} id={id} />\n                                    <div style={{ paddingTop: \"15px\" }} />\n                                    <hr />{/*  listingVisibility */}\n                                    <Row>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{coverLetterChecks.label}</Label>\n                                                <Input {...coverLetterChecks.check(setError, register, clearErrors, setValue, \"coverLetterText\")} value={gatheredValues.coverLetterText} placeholder={coverLetterChecks.placeholder} onChange={(e) => {\n                                                    return coverLetterChecks.onChange(e, \"coverLetterText\", setValue);\n                                                }} name={coverLetterChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                                {errors.coverLetterText ? <span className=\"span-tooltip\">{errors.coverLetterText.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label>{physicalOrDigitalChecks.label}</Label>\n                                                <Controller\n                                                    control={control} \n                                                    name={physicalOrDigitalChecks.name}\n                                                    {...physicalOrDigitalChecks.check(physicalOrDigitalChecks.name, register)}\n                                                    render={({ field }) => (\n                                                        <Select\n                                                            {...field}\n                                                            autoBlur={true}\n                                                            defaultValue={null}\n                                                            ref={physicalOrDigitalOrBothGeneratedRef}\n                                                            value={gatheredValues.physicalOrDigitalOrBoth}\n                                                            placeholder={physicalOrDigitalChecks.placeholder}\n                                                            onChange={(selectedOption) => {\n                                                                console.log(\"changed!!!!\");\n\n                                                                setTimeout(() => {\n                                                                    // clear error after proper selection\n                                                                    if ((typeof selectedOption !== \"undefined\") && (Object.keys(selectedOption).length > 0)) {\n                                                                        // set selected value\n                                                                        setValue(physicalOrDigitalChecks.name, selectedOption, { shouldValidate: false });\n                                                                        // clear relevant error\n                                                                        clearErrors(physicalOrDigitalChecks.name);\n                                                                    } else {\n                                                                        // set error as nothing was selected (blank 'click-off' selection of selector)\n                                                                        setError(physicalOrDigitalChecks.name, {\n                                                                            type: \"manual\",\n                                                                            message: \"You haven't selected a 'Type Of Hack Selection' & a selection is required before proceeding\",\n                                                                        });\n                                                                    }\n                                                                }, 50);\n                                                            }}\n                                                            onMenuClose={() => {\n                                                                physicalOrDigitalOrBothGeneratedRef.current.blur();\n                                                            }}\n                                                            options={physicalOrDigitalHackOptions}\n                                                        />\n                                                    )}\n                                                />\n                                                {errors.physicalOrDigitalOrBoth ? <span className=\"span-tooltip\">{errors.physicalOrDigitalOrBoth.message}</span> : null}\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">{approachToSuccessfullyHackCo.label}</Label>\n                                                <Input {...approachToSuccessfullyHackCo.check(setError, register, clearErrors, \"technicalApproachToHack\")} placeholder={approachToSuccessfullyHackCo.placeholder} onChange={(e) => {\n                                                    return approachToSuccessfullyHackCo.onChange(e, \"technicalApproachToHack\", setValue);\n                                                }} name={approachToSuccessfullyHackCo.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"3\"} />\n                                                {errors.technicalApproachToHack ? <span className=\"span-tooltip\">{errors.technicalApproachToHack.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md=\"6\" lg=\"6\" xl=\"6\" sm=\"12\">\n                                            <FormGroup>\n                                                <Label className=\"heavy-label\">Message To Employer (Direct to employer)</Label>\n                                                <Input {...messageToEmployerChecks.check(setError, register, clearErrors, setValue, \"messageToEmployer\")} placeholder={messageToEmployerChecks.placeholder} onChange={(e) => {\n                                                    return messageToEmployerChecks.onChange(e, \"messageToEmployer\", setValue);\n                                                }} name={messageToEmployerChecks.name} type=\"textarea\" className=\"form-control input-air-primary\" rows={\"4\"} />\n                                                {errors.messageToEmployer ? <span className=\"span-tooltip\">{errors.messageToEmployer.message}</span> : null}\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                            <Card className=\"custom-card-inner custom-card-bottom-across\">\n                                                <CardHeader className=\"b-l-info\">\n                                                    <h5><strong>Attachments</strong> to be <strong>sent</strong> to the employer of this listing</h5>\n                                                    <p style={{ paddingTop: \"7.5px\" }}>These attachments can be anything from a \"Cover Letter\" or \"Resume\" & these files will be sent <strong>directly</strong> to the employer for consideration of your application for this listing or job/gig.</p>\n                                                </CardHeader>\n                                                <CardBody>\n                                                    <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-success\"} onClick={() => {\n                                                        // open pane slider up from bottom\n                                                        handleFinalSubmissionFiles() \n                                                    }} outline color=\"success-2x\">Upload & Manage Attachments (To-be sent directly to employer)</Button>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5>Type Of Data That'll Be Automatically Submitted</h5>\n                                    <hr />\n                                    <p>This is the data/information that'll be automatically submitted to the employer to give them a better idea of who/what you are and to hopefully personalize the experience a bit more...</p>\n                                </CardHeader>\n                                <CardBody>\n                                    <ListGroup>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Username\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"username\", \"Username\", username)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"First Name & Last Name (Together)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"fullName\", \"Full Name\", `${firstName} ${lastName}`)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Completed Job Count\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"registrationDate\", \"Registration date of\", moment(registrationDate).fromNow())}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1 listitem-header-custom\">{\"Created Account (from ago...)\"}</h5><small>{\"Will be submitted to employer\"}</small>\n                                            </div>\n                                            <hr />\n                                            {renderSentence(\"completedJobs\", \"Completed Job Count\", completedJobs)}\n                                        </ListGroupItem>\n                                        <ListGroupItem className=\"list-group-item-action flex-column align-items-start\" >\n                                            <Button style={{ width: \"100%\" }} className={\"btn-square btn-air-info\"} onClick={() => {\n                                                // View ALL included fields...\n                                                viewRemainderOfIncludedFields([\"username\", \"fullName\", \"registrationDate\", \"completedJobs\"]);\n                                            }} outline color=\"info-2x\">View all included fields (including above mentioned)</Button>\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Card className=\"custom-card-inner custom-card-inner-customized\">\n                                <CardHeader className=\"b-l-info\">\n                                    <h5><strong>REQUIRED</strong> data to be completed/filled-out</h5>\n                                </CardHeader>\n                                <CardBody>\n                                    <Form>  \n                                        {/* links go here... */}\n                                        <FormGroup style={{ marginTop: \"17.5px\" }} className=\" m-form__group\">\n                                            <Label className=\"heavy-label\">Reference a link (blog, website, etc... made by <em style={{ textDecorationLine: \"underline\" }}>you</em>)</Label>\n                                            <InputGroup>\n                                                <InputGroupAddon addonType=\"prepend\"><InputGroupText className=\"group-addon-custom-two\">{\"http(s)://\"}</InputGroupText></InputGroupAddon>\n                                                <Input {...urlEnteredLinkData.check(setError, register, clearErrors, setValue, errors, \"referenceLink\")} value={linkInput} onChange={(e) => {\n                                                    return urlEnteredLinkData.onChange(e, setError, clearErrors, setValue, setLinkInput);\n                                                }} className=\"form-control\" type=\"text\" name=\"referenceLink\" placeholder={\"Enter a link to your work (website, blog, etc...)\"} />\n                                                {showButtonOrNot() ? <InputGroupAddon onClick={() => {\n                                                    handleLinkAddition(setSelectedLinks, gatheredValues.referenceLink, clearInput);\n                                                }} addonType=\"append\"><InputGroupText className=\"group-addon-custom\">{\"Submit\"}</InputGroupText></InputGroupAddon> : null}\n                                            </InputGroup>\n                                            {errors.referenceLink ? <span className=\"span-tooltip\">{errors.referenceLink.message}</span> : null}\n                                        </FormGroup>\n                                        {selectedLinks.map((link, index) => {\n                                            console.log(\"link\", link);\n                                            return (\n                                                <div style={{ marginTop: \"12.5px\", marginBottom: \"12.5px\" }} key={index}>\n                                                    <ListGroupItem onClick={(e) => {\n                                                        e.preventDefault();\n                                                    }} className=\"list-group-item custom-list-group-item-text\"><div style={{ paddingRight: \"25px\" }} />{link.url}<i onClick={() => {\n                                                        // handle deletion\n                                                        handleDeletionLink(link, setSelectedLinks);\n                                                    }} id={\"float-trash-right\"} className=\"icon-trash\"></i></ListGroupItem>\n                                                </div>\n                                            );\n                                        })}\n                                        <Label className=\"heavy-label\">Available dates to select (Physical 'Hack'ing Dates)</Label>\n                                        {datesReady === true ? <DateRangePicker\n                                            ranges={dateRanges}\n                                            onChange={handleDateSelection}\n                                            // onPreviewChange={(value1, value2) => {\n                                            //     console.log(value1, value2);\n                                            // }}\n                                            minDate={new Date()}\n                                            // go back MAX 2 WEEKS and start from there\n                                            // minDate={new Date(new Date.getTime() - (dayInMilli * 14))}\n                                            disabledDates={disabledDays}\n                                            scroll={{ enabled: true }}\n                                            direction={\"horizontal\"}\n                                            // showMonthAndYearPickers={true}\n                                            rangeColors={[\"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\", \"#f73164\", \"#a927f9\"]}\n                                        /> : null}\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" lg=\"12\" xl=\"12\" md=\"12\">\n                            <div ref={scrollToTourWrapper} id=\"tour-col-custom\">\n                                <Card className=\"shadow-lg\">\n                                    <CardHeader>\n                                        <h5>Have you filled out <strong>ALL OF THE REQUIRED DATA/INFO</strong> and you're now <strong>READY</strong> to apply and continue with your application?!</h5>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <p>Click the button below to proceed forward & <strong>apply to this listing</strong> and submit the data you've filled out. Good luck & we'll keep you updated along the way as we recieve more updates on this listing and your application!</p>\n                                        <hr />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                        <Button style={{ width: \"100%\" }} type={\"submit\"} className=\"btn-square btn-air-info\" outline color=\"info-2x\">SUBMIT APPLICATION INFORMATION</Button>\n                                        <div className=\"natural-sm-spacer\" />\n                                        <div className=\"natural-sm-spacer\" />\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <TimelineHelper />\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles })(withRouter(ApplyAsHackerEmployerListingHelper));\n"]},"metadata":{},"sourceType":"module"}