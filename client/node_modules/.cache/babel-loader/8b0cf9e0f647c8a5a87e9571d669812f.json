{"ast":null,"code":"import _slicedToArray from \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/view/viewBalanceInfo.js\";\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { CardHeader, CardBody, CardFooter, Card, Row, Col, Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport moment from 'moment';\n\nvar ViewAllBalanceRelatedInfoHelper = function ViewAllBalanceRelatedInfoHelper(_ref) {\n  var userData = _ref.userData;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      balanceInfo = _useState2[0],\n      setBalanceInfo = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      instantAvailable = _useState4[0],\n      setInstantAvailable = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      available = _useState6[0],\n      setAvailiable = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pending = _useState8[0],\n      setPending = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ready = _useState10[0],\n      setReady = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      transactions = _useState12[0],\n      setTransactions = _useState12[1];\n\n  useEffect(function () {\n    var config = {\n      params: {\n        uniqueId: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/availiable/stripe/bal\"), config).then(function (res) {\n      if (res.data.message === \"Gathered balance!\") {\n        var bal = res.data.bal;\n        setBalanceInfo(bal);\n\n        if (userData.accountType === \"hackers\") {\n          for (var index = 0; index < bal.instant_available.length; index++) {\n            var element = bal.instant_available[index];\n\n            if (element.currency === \"usd\") {\n              setInstantAvailable(element);\n              break;\n            }\n          }\n\n          for (var _index = 0; _index < bal.available.length; _index++) {\n            var _element = bal.available[_index];\n\n            if (_element.currency === \"usd\") {\n              setAvailiable(_element);\n              break;\n            }\n          }\n\n          for (var _index2 = 0; _index2 < bal.pending.length; _index2++) {\n            var _element2 = bal.pending[_index2];\n\n            if (_element2.currency === \"usd\") {\n              setPending(_element2);\n              break;\n            }\n          }\n        }\n\n        console.log(res.data);\n        setReady(true);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n    });\n  }, []);\n  useEffect(function () {\n    if (userData.accountType === \"employers\") {\n      var config = {\n        params: {\n          uniqueId: userData.uniqueId,\n          accountType: userData.accountType\n        }\n      };\n      axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/gather/transactional/history/employer\"), config).then(function (res) {\n        if (res.data.message === \"Gathered transactional history!\") {\n          console.log(res.data);\n          var balanceTransactions = res.data.balanceTransactions;\n          setTransactions(balanceTransactions.data);\n        } else {\n          console.log(\"err\", res.data);\n          NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        }\n      }).catch(function (err) {\n        console.log(err);\n        NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n      });\n    }\n  }, []);\n  console.log(\"ready\", ready);\n  console.log(\"transactions\", transactions);\n\n  var renderContent = function renderContent() {\n    if (userData.accountType === \"hackers\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        lg: \"4\",\n        md: \"12\",\n        xl: \"4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-bal-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"b-l-success border-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"header-balance-green\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, \"Available\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, \"You currently \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 67\n        }\n      }, \"available balance\"), \" which you have \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 117\n        }\n      }, \"immediate\"), \" access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }), ready === true ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"heavy-instant-availiable\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 51\n        }\n      }, \"Immediate Available Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"#51bb25\",\n          textDecorationLine: \"underline\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 120\n        }\n      }, \"$\", Number(available.amount / 100).toFixed(2))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-bottom-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 252\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#c9c9c9\",\n        highlightColor: \"#444\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 45\n        }\n      }))))))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        lg: \"4\",\n        md: \"12\",\n        xl: \"4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-bal-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"b-l-secondary border-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"header-balance-red\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }, userData.accountType === \"hackers\" ? \"Instant Available\" : \"Connect Reserved\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 53\n        }\n      }, \"Funds held\"), \" due to \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 88\n        }\n      }, \"negative\"), \" balances on hacker account types. These are \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 158\n        }\n      }, \"\\\"held\\\"\"), \" funds.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }), ready === true ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"heavy-instant-availiable\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 51\n        }\n      }, \"Instant Available Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"#51bb25\",\n          textDecorationLine: \"underline\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 118\n        }\n      }, \"$\", Number(instantAvailable.amount / 100).toFixed(2))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-bottom-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 257\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#c9c9c9\",\n        highlightColor: \"#444\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }))))))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        lg: \"4\",\n        md: \"12\",\n        xl: \"4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"card-bal-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"b-l-primary border-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"header-balance-primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, \"Pending\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, \"These funds are \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 69\n        }\n      }, \"\\\"pending\\\"\"), \" funds which means they are \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 123\n        }\n      }, \"not yet\"), \" available due to the \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 169\n        }\n      }, \"7-day rolling pay cycle\"), \". It generally takes a few days (7) for newly aquired funds to become available!\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      }), ready === true ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"heavy-instant-availiable\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 51\n        }\n      }, \"Pending Available Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"#51bb25\",\n          textDecorationLine: \"underline\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 118\n        }\n      }, \"$\", Number(pending.amount / 100).toFixed(2))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-bottom-bal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 248\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#c9c9c9\",\n        highlightColor: \"#444\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 45\n        }\n      }))))))));\n    } else {\n      if (ready === true) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          lg: \"4\",\n          md: \"12\",\n          xl: \"4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: \"card-bal-bal\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"b-l-success border-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"header-balance-green\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 37\n          }\n        }, \"Available\")), /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"lead\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }\n        }, \"You currently \", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 71\n          }\n        }, \"available balance\"), \" which you have \", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 121\n          }\n        }, \"immediate\"), \" access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..\"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"heavy-instant-availiable\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }\n        }, \"Immediate Available Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: {\n            color: \"#51bb25\",\n            textDecorationLine: \"underline\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 106\n          }\n        }, \"$\", Number(balanceInfo / 100).toFixed(2)))))), /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          lg: \"8\",\n          md: \"12\",\n          xl: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"top-portion-transactions\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"topportion-text\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }\n        }, \"These are your \", /*#__PURE__*/React.createElement(\"strong\", {\n          style: {\n            textDecorationLine: \"underline\",\n            color: \"#7366ff\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 80\n          }\n        }, \"balance\"), \" transactional history items!\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"lower-p\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }\n        }, \"These are various changes in your account balance whether money/funds we're added OR removed, anything related to your general account balance..\")), /*#__PURE__*/React.createElement(ListGroup, {\n          className: \"listgroup-bal\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }\n        }, typeof transactions !== \"undefined\" && transactions.length > 0 ? transactions.map(function (transaction, index) {\n          return /*#__PURE__*/React.createElement(Fragment, {\n            key: index,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(ListGroupItem, {\n            className: \"list-group-item-action custom-list-group-transactions flex-column align-items-start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex w-100 justify-content-between\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"h5\", {\n            className: \"mb-1 custom-starting-bal-text\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 49\n            }\n          }, \"This transaction was approx. $\", Number(transaction.amount / 100).toFixed(2), \" (\", transaction.currency, \")\"), /*#__PURE__*/React.createElement(\"small\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 200\n            }\n          }, moment(transaction.created * 1000).fromNow())), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"mb-1 custom-ending-bal-text\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 49\n            }\n          }, \"You ending balance \", /*#__PURE__*/React.createElement(\"strong\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 111\n            }\n          }, \"after\"), \" the $\", Number(transaction.amount / 100).toFixed(2), \" change resulting in \", /*#__PURE__*/React.createElement(\"strong\", {\n            style: {\n              color: \"#51bb25\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 205\n            }\n          }, \"$\", Number(transaction.ending_balance / 100).toFixed(2)), \" total account balance..\"), /*#__PURE__*/React.createElement(\"small\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 49\n            }\n          }, transaction.object)));\n        }) : /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 38\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: require(\"../../../../assets/images/ch.png\"),\n          className: \"full-width-placeholder\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 37\n          }\n        })))));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: \"12\",\n          lg: \"12\",\n          md: \"12\",\n          xl: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n          baseColor: \"#c9c9c9\",\n          highlightColor: \"#444\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Skeleton, {\n          count: 20,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 37\n          }\n        })))));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"View Balance (Pending, Available & Held)\",\n    title: \"View Balance & Other Related Critical Information\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    lg: \"12\",\n    md: \"12\",\n    xl: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-card-balance\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"balance-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, \"Below you will be able to find, manage and view your related account balances & other related info!\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, renderContent())), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-info b-r-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, \"Above are your various account balances whether the bal. is available \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 123\n    }\n  }, \"NOW\"), \" or will be available \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 165\n    }\n  }, \"shortly\"), \" or in the near future & even pending deposit's!\")))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewAllBalanceRelatedInfoHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/view/viewBalanceInfo.js"],"names":["React","Fragment","useState","useEffect","CardHeader","CardBody","CardFooter","Card","Row","Col","Container","ListGroup","ListGroupItem","Breadcrumb","connect","axios","NotificationManager","Skeleton","SkeletonTheme","moment","ViewAllBalanceRelatedInfoHelper","userData","balanceInfo","setBalanceInfo","instantAvailable","setInstantAvailable","available","setAvailiable","pending","setPending","ready","setReady","transactions","setTransactions","config","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","bal","index","instant_available","length","element","currency","console","log","warning","catch","err","balanceTransactions","renderContent","color","textDecorationLine","Number","amount","toFixed","map","transaction","created","fromNow","ending_balance","object","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { CardHeader, CardBody, CardFooter, Card, Row, Col, Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport moment from 'moment';\n\n\nconst ViewAllBalanceRelatedInfoHelper = ({ userData }) => {\n\n    const [ balanceInfo, setBalanceInfo ] = useState(null);\n    const [ instantAvailable, setInstantAvailable ] = useState(null);\n    const [ available, setAvailiable ] = useState(null);\n    const [ pending, setPending ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ transactions, setTransactions ] = useState([]);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then((res) => {\n            if (res.data.message === \"Gathered balance!\") {\n\n                const { bal } = res.data;\n\n                setBalanceInfo(bal);\n\n                if (userData.accountType === \"hackers\") {\n                    for (let index = 0; index < bal.instant_available.length; index++) {\n                        const element = bal.instant_available[index];\n                        if (element.currency === \"usd\") {\n                            setInstantAvailable(element);\n                            break;\n                        }\n                    }\n                    for (let index = 0; index < bal.available.length; index++) {\n                        const element = bal.available[index];\n                        if (element.currency === \"usd\") {\n                            setAvailiable(element);\n                            break;\n                        }\n                    }\n                    for (let index = 0; index < bal.pending.length; index++) {\n                        const element = bal.pending[index];\n                        if (element.currency === \"usd\") {\n                            setPending(element);\n                            break;\n                        }\n                    }\n                }\n\n                console.log(res.data);\n\n                setReady(true);\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, []);\n\n    useEffect(() => {\n\n        if (userData.accountType === \"employers\") {\n            const config = {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType\n                }\n            }\n            axios.get(`${process.env.REACT_APP_BASE_URL}/gather/transactional/history/employer`, config).then((res) => {\n                if (res.data.message === \"Gathered transactional history!\") {\n                    console.log(res.data);\n\n                    const { balanceTransactions } = res.data;\n\n                    setTransactions(balanceTransactions.data);\n                } else {\n                    console.log(\"err\", res.data);\n                    \n                    NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n                }\n            }).catch((err) => {\n                console.log(err);\n    \n                NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            })\n        }\n    }, [])\n\n    console.log(\"ready\", ready);\n\n    console.log(\"transactions\", transactions);\n\n    const renderContent = () => {\n        if (userData.accountType === \"hackers\") {\n            return (\n                <Fragment>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-success border-3\">\n                                <h5 className='header-balance-green'>Available</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'>You currently <strong>available balance</strong> which you have <strong>immediate</strong> access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Immediate Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(available.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-secondary border-3\">\n                                <h5 className='header-balance-red'>{userData.accountType === \"hackers\" ? \"Instant Available\" : \"Connect Reserved\"}</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'><strong>Funds held</strong> due to <strong>negative</strong> balances on hacker account types. These are <strong>\"held\"</strong> funds.</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Instant Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(instantAvailable.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-primary border-3\">\n                                <h5 className='header-balance-primary'>Pending</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'>These funds are <strong>\"pending\"</strong> funds which means they are <strong>not yet</strong> available due to the <strong>7-day rolling pay cycle</strong>. It generally takes a few days (7) for newly aquired funds to become available!</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Pending Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(pending.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Fragment>\n            );\n        } else {\n            if (ready === true) {\n                return (\n                    <Fragment>\n                        <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                            <Card className='card-bal-bal'>\n                                <CardHeader className=\"b-l-success border-3\">\n                                    <h5 className='header-balance-green'>Available</h5>\n                                </CardHeader>\n                                <CardBody>\n                                    <p className='lead'>You currently <strong>available balance</strong> which you have <strong>immediate</strong> access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..</p>\n                                    <hr />\n                                    <p className='heavy-instant-availiable'>Immediate Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(balanceInfo / 100)).toFixed(2)}</strong></p>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\" lg=\"8\" md=\"12\" xl=\"8\">\n                            <div className='top-portion-transactions'>\n                                <h5 className='topportion-text'>These are your <strong style={{ textDecorationLine: \"underline\", color: \"#7366ff\" }}>balance</strong> transactional history items!</h5>\n                                <p className='lower-p'>These are various changes in your account balance whether money/funds we're added OR removed, anything related to your general account balance..</p>\n                            </div>\n                            <ListGroup className='listgroup-bal'>\n                                {typeof transactions !== \"undefined\" && transactions.length > 0 ? transactions.map((transaction, index) => {\n                                    return (\n                                        <Fragment key={index}>\n                                            <ListGroupItem className=\"list-group-item-action custom-list-group-transactions flex-column align-items-start\">\n                                                <div className=\"d-flex w-100 justify-content-between\">\n                                                <h5 className=\"mb-1 custom-starting-bal-text\">This transaction was approx. ${Number(transaction.amount / 100).toFixed(2)} ({transaction.currency})</h5><small>{moment(transaction.created * 1000).fromNow()}</small>\n                                                </div>\n                                                <p className=\"mb-1 custom-ending-bal-text\">You ending balance <strong>after</strong> the ${Number(transaction.amount / 100).toFixed(2)} change resulting in <strong style={{ color: \"#51bb25\" }}>${Number(transaction.ending_balance / 100).toFixed(2)}</strong> total account balance..</p>\n                                                <small>{transaction.object}</small>\n                                            </ListGroupItem>\n                                        </Fragment>\n                                    );\n                                }) : <Fragment>\n                                    <img src={require(\"../../../../assets/images/ch.png\")} className={\"full-width-placeholder\"} />\n                                </Fragment>}\n                            </ListGroup>\n                        </Col>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                            <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                <p>\n                                    <Skeleton count={20} />\n                                </p>\n                            </SkeletonTheme>\n                        </Col>\n                    </Fragment>\n                );\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"View Balance (Pending, Available & Held)\" title=\"View Balance & Other Related Critical Information\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                        <Card className={\"shadow-card-balance\"}>\n                            <CardHeader className='b-l-info b-r-info'>\n                                <h3 className='balance-title'>Below you will be able to find, manage and view your related account balances & other related info!</h3>\n                            </CardHeader>\n                            <CardBody className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    {renderContent()}\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-info b-r-info'>\n                                <p className='lead'>Above are your various account balances whether the bal. is available <strong>NOW</strong> or will be available <strong>shortly</strong> or in the near future & even pending deposit's!</p>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewAllBalanceRelatedInfoHelper);"]},"metadata":{},"sourceType":"module"}