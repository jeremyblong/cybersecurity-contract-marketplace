{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js\";\nimport React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Progress, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport \"../styles.css\";\nconst {\n  renderCustomButtonDropzone,\n  onSubmitHelper,\n  calculateFileType\n} = helpers;\n\nconst SheetHelperPaneUploadCourseContent = _ref => {\n  let {\n    isOpen,\n    setIsOpen,\n    setProgress,\n    shiftCoreStyles,\n    disableBodyScroll,\n    clearAllBodyScrollLocks,\n    courseData,\n    updateCourseInformationData,\n    selectedCourseContent,\n    setCourseContentState,\n    coursesArray\n  } = _ref;\n  const dropzoneRef = useRef(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [showInitial, setShowInitialState] = useState(true);\n  const [videoFile, setVideoFileState] = useState(null);\n  const [loaded, setLoadedState] = useState(false);\n  const [alreadyExisted, alreadyExistedState] = useState(false);\n  const [videoLoadingProgress, setVideoLoadingProgressState] = useState(0);\n  const [cancelToken, setCancelToken] = useState(null);\n\n  const renderPreviewOfFile = data => {\n    const file = data.fileWithMeta.file; // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n\n    if (fileReady === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filereader-preview-dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FileViewer, {\n        fileType: calculateFileType(file.type),\n        filePath: filePathData,\n        onError: err => console.log(\"fileviewer error - \", err),\n        key: file.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent);\n    setCancelToken(axios.CancelToken.source()); // check if previously already updated\n\n    if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n      console.log(\"main chunk\");\n      setDescription(selectedCourseContent.description);\n      const configuration = {\n        method: 'get',\n        url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n        responseType: 'blob',\n        onDownloadProgress: progressEvent => {\n          let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setVideoLoadingProgressState(percentCompleted);\n        },\n        cancelToken: cancelToken.token\n      };\n      axios(configuration).then(response => {\n        console.log(\"response\", response); // create fileready\n\n        const file = new File([response.data], selectedCourseContent.video.name); // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n        // setFileReadyStatus(true);\n        // mark pane READY to display content\n\n        setLoadedState(true); // check if rendering from previous upload\n\n        alreadyExistedState(true);\n      }).catch(error => {\n        console.log(\"error api request...:\", error);\n      });\n    } else {\n      console.log(\"second chunk\");\n    } // update local component state to reflect already-made changes\n\n  }, [selectedCourseContent]);\n\n  const CustomInputHelper = _ref2 => {\n    let {\n      accept,\n      onFiles\n    } = _ref2;\n    const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-input-dropzone-copy\",\n      style: {\n        backgroundColor: '#007bff',\n        color: '#fff',\n        cursor: 'pointer',\n        padding: 15,\n        borderRadius: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered-both-ways\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone-text-courses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, text)), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: accept,\n      multiple: false,\n      className: \"custom-dropzone-input-actual-input\",\n      onChange: e => {\n        const file = e.target.files[0]; // set current file path to convert to readable URL later\n\n        setCurrentFilePathData(URL.createObjectURL(file)); // set status update for current file\n\n        setCurrentUploadFileStatus(file); // mark file as READY \n\n        setFileReadyStatus(true); // update \"Dropzone\" component state (NOT this react component state).\n\n        onFiles([file]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleDescriptionChange = e => {\n    const value = e.target.value;\n    setDescription(value);\n  };\n\n  const handleAdditionFileDescription = () => {\n    console.log(\"handleAdditionFileDescription clicked...\");\n\n    if (videoFile !== null) {\n      if (typeof description !== \"undefined\" && description.length >= 25 && description.length <= 750) {\n        // mock a copy of redux state\n        const shallowCopy = [...coursesArray]; // newly created obj with desc and video info data\n\n        const newlyAddedData = {\n          description,\n          video: videoFile,\n          id: uuid(),\n          systemDate: Date.now(),\n          date: new Date(),\n          formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n          comments: [],\n          likes: 0,\n          dislikes: 0\n        }; // courseData\n\n        const matchingItem = shallowCopy.find((course, index) => {\n          if (course.id === selectedCourseContent.id) {\n            return true;\n          }\n        }); // combined OLD and NEW state\n\n        const combinedPreviousPlusNew = { ...matchingItem,\n          ...newlyAddedData\n        }; // find index of matching item\n\n        const updatedStateIndex = shallowCopy.findIndex(item => item.id === selectedCourseContent.id); // replace matching item\n\n        shallowCopy[updatedStateIndex] = combinedPreviousPlusNew; // update redux state\n\n        updateCourseInformationData({ ...courseData,\n          pageTwoData: {\n            courseContentSections: shallowCopy\n          }\n        }); // close modal\n\n        closeModalRelated();\n        NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n      } else {\n        NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n      }\n    } else {\n      NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n    }\n  };\n\n  const closeModalRelated = () => {\n    setCancelToken(null); // clear video logic\n\n    setCourseContentState(null); // image upload logic CLEAR existing state\n\n    setCurrentUploadFileStatus(null); // revert image state back to default\n\n    setVideoFileState(null); // set current file path to default state\n\n    setCurrentFilePathData(null); // set description back to default\n\n    setDescription(\"\"); // image upload logic CLEAR existing state\n\n    setMetaFileData(null); // image upload logic CLEAR existing state\n\n    setFileReadyStatus(false); // allow background clicking again\n\n    shiftCoreStyles(false); // change loading state back to default\n\n    setLoadedState(false); // close modal\n\n    setIsOpen(false); // clear scroll locks as PANE is closed now...\n\n    clearAllBodyScrollLocks();\n  };\n\n  const onBufferEnded = () => {\n    setVideoLoadingProgressState(0);\n  };\n\n  const renderPreChecks = () => {\n    if (loaded === true) {\n      // ready to display live content\n      if (currentFileSelectedUpload === null) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-boxshadow-courses centered-both-ways\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"header-no-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 89\n          }\n        }, \"Current NO file(s) is selected/uploaded - please select a file.\")));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          onBufferEnd: onBufferEnded,\n          progressInterval: 1000,\n          controls: true,\n          playIcon: true,\n          playing: false,\n          loop: false,\n          volume: 1,\n          width: \"100%\",\n          height: \"100%\",\n          url: filePathData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }\n        }));\n      }\n    } else {\n      // still loading display skelaton\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-positied-loading-courses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-loading-wrapper-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-above-bar-percentage-video\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }\n      }, \"Downloading video...\", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"#f73164\",\n          fontSize: \"1.75rem\",\n          textDecorationLine: \"underline\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 53\n        }\n      }, videoLoadingProgress, \"%\"), \" of video loaded/complete...\")), /*#__PURE__*/React.createElement(Progress, {\n        className: \"course-creation-progress-bar-video\",\n        animated: true,\n        color: \"secondary\",\n        value: videoLoadingProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(SkeletonTheme, {\n        baseColor: \"#d4d4d4\",\n        highlightColor: \"#8f8f8f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        containerClassName: \"custom-loading-courses\",\n        count: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }))));\n    }\n  };\n\n  console.log(\"cancelToken\", cancelToken);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sheet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    id: \"sheet-ultimate\",\n    disableDrag: true,\n    isOpen: isOpen,\n    onClose: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    className: \"sheetcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    className: \"sheetheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: closeModalRelated,\n    className: \"btn-square-danger\",\n    outline: true,\n    color: \"danger\",\n    size: \"md-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)\")))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 49\n    }\n  }, \"This is the form that is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 78\n    }\n  }, \"primarily\"), \" used to upload/change content related to \\\"course content\\\". Use the form below to upload video's to each course \\\"clip/section\\\" and enter a description if you'd like...\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-video-overlay-courses-upload centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 49\n    }\n  }, renderPreChecks())), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: CustomInputHelper,\n    getFilesFromEvent: null,\n    onSubmit: onSubmitHelper,\n    accept: \"video/*\",\n    SubmitButtonComponent: data => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 61\n        }\n      }, renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData));\n    },\n    className: \"shadow-courses-dropzone\",\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 350\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 71\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      setCurrentFilePathData(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 57\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \" m-form__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 49\n    }\n  }, \"Course Section/Segment Description (Between 25-750 Charector's in length)\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => handleDescriptionChange(e),\n    value: description,\n    className: \"form-control\",\n    rows: 6,\n    type: \"textarea\",\n    placeholder: \"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    style: {\n      width: \"75%\"\n    },\n    onClick: () => handleAdditionFileDescription(),\n    className: \"btn-square-info\",\n    color: \"info\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 49\n    }\n  }, \"Submit New Information/Details & File(s)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : [],\n    coursesArray: _.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\") ? state.courseData.courseData.pageTwoData.courseContentSections : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shiftCoreStyles,\n  updateCourseInformationData\n})(SheetHelperPaneUploadCourseContent); // <h5>Upload any supporting files (if any/applicable)</h5>\n// <p style={{ paddingTop: \"7.5px\" }} className={\"top-title-course-help\"}>These files will be <strong style={{ color: \"#f73164\" }}>fully-downloadable (on purpose)</strong> so viewer's/students will be able to download course content to <strong>follow along</strong> with you during your pre-recorded videos/seminars!</p>","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageTwo/helpers/paneSheet.js"],"names":["React","Fragment","useState","useRef","useEffect","Sheet","helpers","FileViewer","Button","Row","Col","Card","CardBody","FormGroup","Label","Input","Progress","InputGroup","InputGroupAddon","InputGroupText","ListGroup","ListGroupItem","Dropzone","_","connect","shiftCoreStyles","ReactPlayer","uuid","moment","updateCourseInformationData","NotificationManager","axios","Skeleton","SkeletonTheme","renderCustomButtonDropzone","onSubmitHelper","calculateFileType","SheetHelperPaneUploadCourseContent","isOpen","setIsOpen","setProgress","disableBodyScroll","clearAllBodyScrollLocks","courseData","selectedCourseContent","setCourseContentState","coursesArray","dropzoneRef","changeOptions","setChangeOptions","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","filePathData","setCurrentFilePathData","fileMetaData","setMetaFileData","description","setDescription","showInitial","setShowInitialState","videoFile","setVideoFileState","loaded","setLoadedState","alreadyExisted","alreadyExistedState","videoLoadingProgress","setVideoLoadingProgressState","cancelToken","setCancelToken","renderPreviewOfFile","data","file","fileWithMeta","type","err","console","log","id","CancelToken","source","video","has","Object","keys","length","configuration","method","url","process","env","REACT_APP_ASSET_LINK","link","responseType","onDownloadProgress","progressEvent","percentCompleted","Math","round","total","token","then","response","File","name","URL","createObjectURL","catch","error","CustomInputHelper","accept","onFiles","text","backgroundColor","color","cursor","padding","borderRadius","display","e","target","files","handleDescriptionChange","value","handleAdditionFileDescription","shallowCopy","newlyAddedData","systemDate","Date","now","date","formattedDate","format","comments","likes","dislikes","matchingItem","find","course","index","combinedPreviousPlusNew","updatedStateIndex","findIndex","item","pageTwoData","courseContentSections","closeModalRelated","success","onBufferEnded","renderPreChecks","fontSize","textDecorationLine","margin","width","marginBottom","functions","dropzone","height","dropzoneActive","borderColor","marginTop","remove","mapStateToProps","state","userData","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,SAA5C,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,SAA3C,EAAsDC,KAAtD,EAA6DC,KAA7D,EAAoEC,QAApE,EAA8EC,UAA9E,EAA0FC,eAA1F,EAA2GC,cAA3G,EAA2HC,SAA3H,EAAsIC,aAAtI,QAA2J,YAA3J;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,6DAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,2BAAT,QAA4C,2EAA5C;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AACA,OAAO,eAAP;AAEA,MAAM;AAAEC,EAAAA,0BAAF;AAA8BC,EAAAA,cAA9B;AAA8CC,EAAAA;AAA9C,IAAoE9B,OAA1E;;AAGA,MAAM+B,kCAAkC,GAAG,QAA0M;AAAA,MAAzM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,WAArB;AAAkCf,IAAAA,eAAlC;AAAmDgB,IAAAA,iBAAnD;AAAsEC,IAAAA,uBAAtE;AAA+FC,IAAAA,UAA/F;AAA2Gd,IAAAA,2BAA3G;AAAwIe,IAAAA,qBAAxI;AAA+JC,IAAAA,qBAA/J;AAAsLC,IAAAA;AAAtL,GAAyM;AACjP,QAAMC,WAAW,GAAG5C,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM,CAAE6C,aAAF,EAAiBC,gBAAjB,IAAsC/C,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAEgD,SAAF,EAAaC,kBAAb,IAAoCjD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEkD,yBAAF,EAA6BC,0BAA7B,IAA4DnD,QAAQ,CAAC,IAAD,CAA1E;AACA,QAAM,CAAEoD,YAAF,EAAgBC,sBAAhB,IAA2CrD,QAAQ,CAAC,IAAD,CAAzD;AACA,QAAM,CAAEsD,YAAF,EAAgBC,eAAhB,IAAoCvD,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAEwD,WAAF,EAAeC,cAAf,IAAkCzD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAE0D,WAAF,EAAeC,mBAAf,IAAuC3D,QAAQ,CAAC,IAAD,CAArD;AACA,QAAM,CAAE4D,SAAF,EAAaC,iBAAb,IAAmC7D,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAAE8D,MAAF,EAAUC,cAAV,IAA6B/D,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAAEgE,cAAF,EAAkBC,mBAAlB,IAA0CjE,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAEkE,oBAAF,EAAwBC,4BAAxB,IAAyDnE,QAAQ,CAAC,CAAD,CAAvE;AACA,QAAM,CAAEoE,WAAF,EAAeC,cAAf,IAAkCrE,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMsE,mBAAmB,GAAIC,IAAD,IAAU;AAElC,UAAMC,IAAI,GAAGD,IAAI,CAACE,YAAL,CAAkBD,IAA/B,CAFkC,CAGlC;;AACA,QAAIxB,SAAS,KAAK,IAAlB,EAAwB;AACpB,0BACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAEd,iBAAiB,CAACsC,IAAI,CAACE,IAAN,CAD/B;AAEI,QAAA,QAAQ,EAAEtB,YAFd;AAGI,QAAA,OAAO,EAAGuB,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC,CAHtB;AAII,QAAA,GAAG,EAAEH,IAAI,CAACM,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH,KAXD,MAWO;AACH,aAAO,IAAP;AACH;AACJ,GAlBD;;AAmBA5E,EAAAA,SAAS,CAAC,MAAM;AACZ0E,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CnC,qBAA/C;AAEA2B,IAAAA,cAAc,CAACxC,KAAK,CAACkD,WAAN,CAAkBC,MAAlB,EAAD,CAAd,CAHY,CAIZ;;AACA,QAAItC,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,CAACuC,KAAtB,KAAgC,IAAlE,IAA0E5D,CAAC,CAAC6D,GAAF,CAAMxC,qBAAN,EAA6B,OAA7B,CAA1E,IAAmHyC,MAAM,CAACC,IAAP,CAAY1C,qBAAqB,CAACuC,KAAlC,EAAyCI,MAAzC,GAAkD,CAAzK,EAA4K;AACxKT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACApB,MAAAA,cAAc,CAACf,qBAAqB,CAACc,WAAvB,CAAd;AAEA,YAAM8B,aAAa,GAAG;AAClBC,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGjD,qBAAqB,CAACuC,KAAtB,CAA4BW,IAAK,EAF3D;AAGlBC,QAAAA,YAAY,EAAE,MAHI;AAIlBC,QAAAA,kBAAkB,EAAGC,aAAD,IAAmB;AACnC,cAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACjC,MAAd,GAAuB,GAAxB,GAA+BiC,aAAa,CAACI,KAAxD,CAAvB;AAEAhC,UAAAA,4BAA4B,CAAC6B,gBAAD,CAA5B;AACH,SARiB;AASlB5B,QAAAA,WAAW,EAAEA,WAAW,CAACgC;AATP,OAAtB;AAYAvE,MAAAA,KAAK,CAACyD,aAAD,CAAL,CAAqBe,IAArB,CAA2BC,QAAD,IAAc;AACpC1B,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwByB,QAAxB,EADoC,CAEpC;;AACA,cAAM9B,IAAI,GAAG,IAAI+B,IAAJ,CAAS,CAACD,QAAQ,CAAC/B,IAAV,CAAT,EAA0B7B,qBAAqB,CAACuC,KAAtB,CAA4BuB,IAAtD,CAAb,CAHoC,CAIpC;;AACAnD,QAAAA,sBAAsB,CAACoD,GAAG,CAACC,eAAJ,CAAoBlC,IAApB,CAAD,CAAtB,CALoC,CAMpC;;AACArB,QAAAA,0BAA0B,CAACqB,IAAD,CAA1B,CAPoC,CAQpC;AACA;AACA;;AACAT,QAAAA,cAAc,CAAC,IAAD,CAAd,CAXoC,CAYpC;;AACAE,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,OAdD,EAcG0C,KAdH,CAcUC,KAAD,IAAW;AAChBhC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC+B,KAArC;AACH,OAhBD;AAiBH,KAjCD,MAiCQ;AACJhC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAxCW,CAyCZ;;AACH,GA1CQ,EA0CN,CAACnC,qBAAD,CA1CM,CAAT;;AA2CA,QAAMmE,iBAAiB,GAAG,SAAyB;AAAA,QAAxB;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAwB;AAE/C,UAAMC,IAAI,GAAGtD,WAAW,KAAK,KAAhB,GAAwB,0FAAxB,GAAqH,4CAAlI;AAEA,wBACI;AAAO,MAAA,SAAS,EAAC,4BAAjB;AAA8C,MAAA,KAAK,EAAE;AAAEuD,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,KAAK,EAAE,MAArC;AAA6CC,QAAAA,MAAM,EAAE,SAArD;AAAgEC,QAAAA,OAAO,EAAE,EAAzE;AAA6EC,QAAAA,YAAY,EAAE;AAA3F,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCL,IAAxC,CADJ,CADJ,eAII;AACI,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE;AAAX,OADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,MAAM,EAAER,MAHZ;AAII,MAAA,QAAQ,EAAE,KAJd;AAKI,MAAA,SAAS,EAAE,oCALf;AAMI,MAAA,QAAQ,EAAES,CAAC,IAAI;AACX,cAAM/C,IAAI,GAAG+C,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CADW,CAEX;;AACApE,QAAAA,sBAAsB,CAACoD,GAAG,CAACC,eAAJ,CAAoBlC,IAApB,CAAD,CAAtB,CAHW,CAIX;;AACArB,QAAAA,0BAA0B,CAACqB,IAAD,CAA1B,CALW,CAMX;;AACAvB,QAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAPW,CAQX;;AACA8D,QAAAA,OAAO,CAAC,CAACvC,IAAD,CAAD,CAAP;AACH,OAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAyBH,GA7BD;;AA8BA,QAAMkD,uBAAuB,GAAIH,CAAD,IAAO;AACnC,UAAMI,KAAK,GAAGJ,CAAC,CAACC,MAAF,CAASG,KAAvB;AAEAlE,IAAAA,cAAc,CAACkE,KAAD,CAAd;AACH,GAJD;;AAKA,QAAMC,6BAA6B,GAAG,MAAM;AACxChD,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;;AAEA,QAAIjB,SAAS,KAAK,IAAlB,EAAwB;AACpB,UAAI,OAAOJ,WAAP,KAAuB,WAAvB,IAAuCA,WAAW,CAAC6B,MAAZ,IAAsB,EAAtB,IAA4B7B,WAAW,CAAC6B,MAAZ,IAAsB,GAA7F,EAAmG;AAC/F;AACA,cAAMwC,WAAW,GAAG,CAAC,GAAGjF,YAAJ,CAApB,CAF+F,CAG/F;;AACA,cAAMkF,cAAc,GAAG;AACnBtE,UAAAA,WADmB;AAEnByB,UAAAA,KAAK,EAAErB,SAFY;AAGnBkB,UAAAA,EAAE,EAAErD,IAAI,EAHW;AAInBsG,UAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,EAJO;AAKnBC,UAAAA,IAAI,EAAE,IAAIF,IAAJ,EALa;AAMnBG,UAAAA,aAAa,EAAEzG,MAAM,CAAC,IAAIsG,IAAJ,EAAD,CAAN,CAAmBI,MAAnB,CAA0B,uBAA1B,CANI;AAOnBC,UAAAA,QAAQ,EAAE,EAPS;AAQnBC,UAAAA,KAAK,EAAE,CARY;AASnBC,UAAAA,QAAQ,EAAE;AATS,SAAvB,CAJ+F,CAe/F;;AACA,cAAMC,YAAY,GAAGX,WAAW,CAACY,IAAZ,CAAiB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrD,cAAID,MAAM,CAAC5D,EAAP,KAAcpC,qBAAqB,CAACoC,EAAxC,EAA4C;AACxC,mBAAO,IAAP;AACH;AACJ,SAJoB,CAArB,CAhB+F,CAqB/F;;AACA,cAAM8D,uBAAuB,GAAG,EAC5B,GAAGJ,YADyB;AAE5B,aAAGV;AAFyB,SAAhC,CAtB+F,CA0B/F;;AACA,cAAMe,iBAAiB,GAAGhB,WAAW,CAACiB,SAAZ,CAAuBC,IAAD,IAAUA,IAAI,CAACjE,EAAL,KAAYpC,qBAAqB,CAACoC,EAAlE,CAA1B,CA3B+F,CA4B/F;;AACA+C,QAAAA,WAAW,CAACgB,iBAAD,CAAX,GAAiCD,uBAAjC,CA7B+F,CA8B/F;;AACAjH,QAAAA,2BAA2B,CAAC,EACxB,GAAGc,UADqB;AAExBuG,UAAAA,WAAW,EAAE;AACTC,YAAAA,qBAAqB,EAAEpB;AADd;AAFW,SAAD,CAA3B,CA/B+F,CAqC/F;;AACAqB,QAAAA,iBAAiB;AAEjBtH,QAAAA,mBAAmB,CAACuH,OAApB,CAA4B,oJAA5B,EAAkL,sCAAlL,EAA0N,IAA1N;AACH,OAzCD,MAyCO;AACHvH,QAAAA,mBAAmB,CAACgF,KAApB,CAA0B,yFAA1B,EAAqH,sCAArH,EAA6J,IAA7J;AACH;AACJ,KA7CD,MA6CO;AACHhF,MAAAA,mBAAmB,CAACgF,KAApB,CAA0B,+EAA1B,EAA2G,mCAA3G,EAAgJ,IAAhJ;AACH;AACJ,GAnDD;;AAoDA,QAAMsC,iBAAiB,GAAG,MAAM;AAC5B7E,IAAAA,cAAc,CAAC,IAAD,CAAd,CAD4B,CAE5B;;AACA1B,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CAH4B,CAI5B;;AACAQ,IAAAA,0BAA0B,CAAC,IAAD,CAA1B,CAL4B,CAM5B;;AACAU,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAP4B,CAQ5B;;AACAR,IAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAT4B,CAU5B;;AACAI,IAAAA,cAAc,CAAC,EAAD,CAAd,CAX4B,CAY5B;;AACAF,IAAAA,eAAe,CAAC,IAAD,CAAf,CAb4B,CAc5B;;AACAN,IAAAA,kBAAkB,CAAC,KAAD,CAAlB,CAf4B,CAgB5B;;AACA1B,IAAAA,eAAe,CAAC,KAAD,CAAf,CAjB4B,CAkB5B;;AACAwC,IAAAA,cAAc,CAAC,KAAD,CAAd,CAnB4B,CAoB5B;;AACA1B,IAAAA,SAAS,CAAC,KAAD,CAAT,CArB4B,CAsB5B;;AACAG,IAAAA,uBAAuB;AAC1B,GAxBD;;AAyBA,QAAM4G,aAAa,GAAG,MAAM;AACxBjF,IAAAA,4BAA4B,CAAC,CAAD,CAA5B;AACH,GAFD;;AAGA,QAAMkF,eAAe,GAAG,MAAM;AAC1B,QAAIvF,MAAM,KAAK,IAAf,EAAqB;AACjB;AACA,UAAIZ,yBAAyB,KAAK,IAAlC,EAAwC;AACpC,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAE,8CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgE;AAAI,UAAA,SAAS,EAAE,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAAhE,CADJ,CADJ;AAKH,OAND,MAMO;AACH,4BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,WAAD;AAAa,UAAA,WAAW,EAAEkG,aAA1B;AAAyC,UAAA,gBAAgB,EAAE,IAA3D;AAAiE,UAAA,QAAQ,EAAE,IAA3E;AAAiF,UAAA,QAAQ,EAAE,IAA3F;AAAiG,UAAA,OAAO,EAAE,KAA1G;AAAiH,UAAA,IAAI,EAAE,KAAvH;AAA8H,UAAA,MAAM,EAAE,CAAtI;AAAyI,UAAA,KAAK,EAAE,MAAhJ;AAAwJ,UAAA,MAAM,EAAE,MAAhK;AAAwK,UAAA,GAAG,EAAEhG,YAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;AACJ,KAfD,MAeO;AACH;AACA,0BACI;AAAK,QAAA,SAAS,EAAE,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAE,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAE,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAwB;AAAQ,QAAA,KAAK,EAAE;AAAE8D,UAAAA,KAAK,EAAE,SAAT;AAAoBoC,UAAAA,QAAQ,EAAE,SAA9B;AAAyCC,UAAAA,kBAAkB,EAAE;AAA7D,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4FrF,oBAA5F,MAAxB,iCADJ,CADJ,eAII,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,oCAArB;AAA2D,QAAA,QAAQ,MAAnE;AAAoE,QAAA,KAAK,EAAC,WAA1E;AAAsF,QAAA,KAAK,EAAEA,oBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,eAOI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,SAAzB;AAAmC,QAAA,cAAc,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,kBAAkB,EAAE,wBAA9B;AAAwD,QAAA,KAAK,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAPJ,CADJ;AAeH;AACJ,GAlCD;;AAmCAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,WAA3B;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,gBAAV;AAA2B,IAAA,WAAW,EAAE,IAAxC;AAA8C,IAAA,MAAM,EAAEhC,MAAtD;AAA8D,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEmH,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAkC,IAAA,OAAO,EAAEP,iBAA3C;AAA8D,IAAA,SAAS,EAAC,mBAAxE;AAA4F,IAAA,OAAO,MAAnG;AAAoG,IAAA,KAAK,EAAC,QAA1G;AAAmH,IAAA,IAAI,EAAC,OAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGADJ,CADJ,CADJ,CADJ,eAQI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7B,gLADJ,CADJ,CADJ,eAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,qDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,eAAe,EADpB,CADJ,CADJ,eAMI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAExG,WADT;AAEI,IAAA,gBAAgB,EAAG0B,IAAD,IAAUD,mBAAmB,CAACC,IAAD,CAFnD;AAGI,IAAA,QAAQ,EAAE,CAHd;AAII,IAAA,UAAU,EAAE,IAJhB;AAKI,IAAA,cAAc,EAAGoF,SAAD,IAAe;AAC3B5G,MAAAA,gBAAgB,CAAC4G,SAAD,CAAhB;AACH,KAPL;AAQI,IAAA,oBAAoB,EAAE,KAR1B;AASI,IAAA,cAAc,EAAE9C,iBATpB;AAUI,IAAA,iBAAiB,EAAE,IAVvB;AAWI,IAAA,QAAQ,EAAE5E,cAXd;AAYI,IAAA,MAAM,EAAC,SAZX;AAaI,IAAA,qBAAqB,EAAGsC,IAAD,IAAU;AAC7B,0BACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKvC,0BAA0B,CAACuC,IAAD,EAAOhB,eAAP,EAAwBL,yBAAxB,EAAmDI,YAAnD,EAAiEN,SAAjE,EAA4EC,kBAA5E,EAAgGX,WAAhG,EAA6GuB,iBAA7G,EAAgIF,mBAAhI,EAAqJI,cAArJ,EAAqKC,cAArK,EAAqLX,sBAArL,CAD/B,CADJ;AAKH,KAnBL;AAoBI,IAAA,SAAS,EAAE,yBApBf;AAqBI,IAAA,QAAQ,EAAE,KArBd;AAsBI,IAAA,SAAS,EAAE,KAtBf;AAuBI,IAAA,MAAM,EAAE;AACJuG,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADN;AAEJC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAFZ,KAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EA6BK/G,SAAS,KAAK,IAAd,gBAAqB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClB;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,eAElB;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEgH,MAAAA,SAAS,EAAE;AAAb,KAAf;AAAsC,IAAA,OAAO,EAAGzC,CAAD,IAAO;AAClDhE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAN,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAE,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AAEAP,MAAAA,aAAa,CAACmH,MAAd;AACH,KAPD;AAOG,IAAA,SAAS,EAAC,qCAPb;AAOmD,IAAA,KAAK,EAAC,QAPzD;AAOkE,IAAA,IAAI,EAAC,IAPvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CAFkB,CAArB,GAYa,IAzClB,CANJ,eAiDI;AAAI,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDJ,eAkDI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAGzC,CAAD,IAAOG,uBAAuB,CAACH,CAAD,CAA/C;AAAoD,IAAA,KAAK,EAAE/D,WAA3D;AAAwE,IAAA,SAAS,EAAC,cAAlF;AAAiG,IAAA,IAAI,EAAE,CAAvG;AAA0G,IAAA,IAAI,EAAC,UAA/G;AAA0H,IAAA,WAAW,EAAE,uLAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAlDJ,eAwDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDJ,eAyDI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEiG,MAAAA,KAAK,EAAE;AAAT,KAAvB;AAAyC,IAAA,OAAO,EAAE,MAAM7B,6BAA6B,EAArF;AAAyF,IAAA,SAAS,EAAC,iBAAnG;AAAqH,IAAA,KAAK,EAAC,MAA3H;AAAkI,IAAA,IAAI,EAAC,IAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CAzDJ,CANJ,eAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEJ,CADJ,CADJ,CADJ,CARJ,CADJ,eAqFI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArFJ,CADJ,CADJ,CADJ;AA6FH,CAjUD;;AAkUA,MAAMsC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,CAAW9F,IADlB;AAEH9B,IAAAA,UAAU,EAAEpB,CAAC,CAAC6D,GAAF,CAAMiF,KAAK,CAAC1H,UAAZ,EAAwB,YAAxB,IAAwC0H,KAAK,CAAC1H,UAAN,CAAiBA,UAAzD,GAAsE,EAF/E;AAGHG,IAAAA,YAAY,EAAGvB,CAAC,CAAC6D,GAAF,CAAMiF,KAAK,CAAC1H,UAAZ,EAAwB,YAAxB,KAAyCpB,CAAC,CAAC6D,GAAF,CAAMiF,KAAK,CAAC1H,UAAN,CAAiBA,UAAvB,EAAmC,aAAnC,CAAzC,IAA8FpB,CAAC,CAAC6D,GAAF,CAAMiF,KAAK,CAAC1H,UAAN,CAAiBA,UAAjB,CAA4BuG,WAAlC,EAA+C,uBAA/C,CAA/F,GAA0KmB,KAAK,CAAC1H,UAAN,CAAiBA,UAAjB,CAA4BuG,WAA5B,CAAwCC,qBAAlN,GAA0O;AAHrP,GAAP;AAKH,CAND;;AAOA,eAAe3H,OAAO,CAAC4I,eAAD,EAAkB;AAAE3I,EAAAA,eAAF;AAAmBI,EAAAA;AAAnB,CAAlB,CAAP,CAA2EQ,kCAA3E,CAAf,C,CAEA;AACA","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport Sheet from 'react-modal-sheet';\nimport helpers from \"./miscFunctions.js\";\nimport FileViewer from 'react-file-viewer';\nimport { Button, Row, Col, Card, CardBody, FormGroup, Label, Input, Progress, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem } from 'reactstrap';\nimport Dropzone from 'react-dropzone-uploader';\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { shiftCoreStyles } from \"../../../../../../../../../redux/actions/universal/index.js\";\nimport ReactPlayer from 'react-player';\nimport uuid from 'react-uuid';\nimport moment from \"moment\";\nimport { updateCourseInformationData } from \"../../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport { NotificationManager } from 'react-notifications';\nimport axios from \"axios\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport \"../styles.css\";\n\nconst { renderCustomButtonDropzone, onSubmitHelper, calculateFileType } = helpers;\n\n\nconst SheetHelperPaneUploadCourseContent = ({ isOpen, setIsOpen, setProgress, shiftCoreStyles, disableBodyScroll, clearAllBodyScrollLocks, courseData, updateCourseInformationData, selectedCourseContent, setCourseContentState, coursesArray }) => {\n    const dropzoneRef = useRef(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ description, setDescription ] = useState(\"\");\n    const [ showInitial, setShowInitialState ] = useState(true);\n    const [ videoFile, setVideoFileState ] = useState(null);\n    const [ loaded, setLoadedState ] = useState(false);\n    const [ alreadyExisted, alreadyExistedState ] = useState(false);\n    const [ videoLoadingProgress, setVideoLoadingProgressState ] = useState(0);\n    const [ cancelToken, setCancelToken ] = useState(null);\n\n    const renderPreviewOfFile = (data) => {\n\n        const file = data.fileWithMeta.file;\n        // return preview data via FileViewer (to not exclude documents such as .docx and such...);\n        if (fileReady === true) {\n            return (\n                <div className=\"filereader-preview-dropzone\">\n                    <FileViewer\n                        fileType={calculateFileType(file.type)}\n                        filePath={filePathData}\n                        onError={(err) => console.log(\"fileviewer error - \", err)}\n                        key={file.id}\n                    />\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n    useEffect(() => {\n        console.log(\"mounted/useeffect ran... sheet!\", selectedCourseContent);\n\n        setCancelToken(axios.CancelToken.source());\n        // check if previously already updated\n        if (selectedCourseContent !== null && selectedCourseContent.video !== null && _.has(selectedCourseContent, \"video\") && Object.keys(selectedCourseContent.video).length > 0) {\n            console.log(\"main chunk\");\n            setDescription(selectedCourseContent.description);\n\n            const configuration = {\n                method: 'get',\n                url: `${process.env.REACT_APP_ASSET_LINK}/${selectedCourseContent.video.link}`,\n                responseType: 'blob',\n                onDownloadProgress: (progressEvent) => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        \n                    setVideoLoadingProgressState(percentCompleted);\n                },\n                cancelToken: cancelToken.token\n            };\n\n            axios(configuration).then((response) => {\n                console.log(\"response\", response);\n                // create fileready\n                const file = new File([response.data], selectedCourseContent.video.name); \n                // set current file path to convert to readable URL later\n                setCurrentFilePathData(URL.createObjectURL(file));\n                // set status update for current file\n                setCurrentUploadFileStatus(file);\n                // mark file as READY \n                // setFileReadyStatus(true);\n                // mark pane READY to display content\n                setLoadedState(true);\n                // check if rendering from previous upload\n                alreadyExistedState(true);\n            }).catch((error) => {\n                console.log(\"error api request...:\", error);\n            })\n        }  else {\n            console.log(\"second chunk\")\n        }\n        // update local component state to reflect already-made changes\n    }, [selectedCourseContent])\n    const CustomInputHelper = ({ accept, onFiles }) => {\n\n        const text = showInitial === false ? \"You already selected a file to upload, please proceed with the 'course-creation' process\" : \"Drop a file OR select to browse local data\";\n    \n        return (\n            <label className=\"custom-input-dropzone-copy\" style={{ backgroundColor: '#007bff', color: '#fff', cursor: 'pointer', padding: 15, borderRadius: 3 }}>\n                <div className={\"centered-both-ways\"}>\n                    <p className={\"dropzone-text-courses\"}>{text}</p>\n                </div>\n                <input\n                    style={{ display: 'none' }}\n                    type=\"file\"\n                    accept={accept}\n                    multiple={false}\n                    className={\"custom-dropzone-input-actual-input\"}\n                    onChange={e => {\n                        const file = e.target.files[0];\n                        // set current file path to convert to readable URL later\n                        setCurrentFilePathData(URL.createObjectURL(file));\n                        // set status update for current file\n                        setCurrentUploadFileStatus(file);\n                        // mark file as READY \n                        setFileReadyStatus(true);\n                        // update \"Dropzone\" component state (NOT this react component state).\n                        onFiles([file])\n                    }}\n                />\n            </label>\n        );\n    }\n    const handleDescriptionChange = (e) => {\n        const value = e.target.value;\n\n        setDescription(value);\n    }\n    const handleAdditionFileDescription = () => {\n        console.log(\"handleAdditionFileDescription clicked...\");\n\n        if (videoFile !== null) {\n            if (typeof description !== \"undefined\" && (description.length >= 25 && description.length <= 750)) {\n                // mock a copy of redux state\n                const shallowCopy = [...coursesArray];\n                // newly created obj with desc and video info data\n                const newlyAddedData = {\n                    description,\n                    video: videoFile,\n                    id: uuid(),\n                    systemDate: Date.now(),\n                    date: new Date(),\n                    formattedDate: moment(new Date()).format(\"MM/DD/YYYY hh:mm:ss a\"),\n                    comments: [],\n                    likes: 0,\n                    dislikes: 0\n                }\n                // courseData\n                const matchingItem = shallowCopy.find((course, index) => {\n                    if (course.id === selectedCourseContent.id) {\n                        return true;\n                    }\n                });\n                // combined OLD and NEW state\n                const combinedPreviousPlusNew = {\n                    ...matchingItem,\n                    ...newlyAddedData\n                }\n                // find index of matching item\n                const updatedStateIndex = shallowCopy.findIndex((item) => item.id === selectedCourseContent.id);\n                // replace matching item\n                shallowCopy[updatedStateIndex] = combinedPreviousPlusNew;\n                // update redux state\n                updateCourseInformationData({\n                    ...courseData,\n                    pageTwoData: {\n                        courseContentSections: shallowCopy\n                    }\n                });\n                // close modal\n                closeModalRelated();\n\n                NotificationManager.success(\"Successfully ADDED your new data/information to your existing course 'chunk/section' - Please continue building out your course content, good job!\", \"Updated Course Content Successfully!\", 4500);\n            } else {\n                NotificationManager.error(\"You MUST enter a description BETWEEN 25 and 750 charectors (min/max) before proceeding!\", \"Check your description letter count!\", 4500);\n            }\n        } else {\n            NotificationManager.error(\"You MUST upload a video file BEFORE proceeding forward with these updates...!\", \"UPLOAD a video before proceeding!\", 4500);\n        }\n    }\n    const closeModalRelated = () => {\n        setCancelToken(null);\n        // clear video logic\n        setCourseContentState(null);\n        // image upload logic CLEAR existing state\n        setCurrentUploadFileStatus(null);\n        // revert image state back to default\n        setVideoFileState(null);\n        // set current file path to default state\n        setCurrentFilePathData(null);\n        // set description back to default\n        setDescription(\"\");\n        // image upload logic CLEAR existing state\n        setMetaFileData(null);\n        // image upload logic CLEAR existing state\n        setFileReadyStatus(false);\n        // allow background clicking again\n        shiftCoreStyles(false);\n        // change loading state back to default\n        setLoadedState(false);\n        // close modal\n        setIsOpen(false);\n        // clear scroll locks as PANE is closed now...\n        clearAllBodyScrollLocks();\n    }\n    const onBufferEnded = () => {\n        setVideoLoadingProgressState(0);\n    }\n    const renderPreChecks = () => {\n        if (loaded === true) {\n            // ready to display live content\n            if (currentFileSelectedUpload === null) {\n                return (\n                    <Fragment>\n                        <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <ReactPlayer onBufferEnd={onBufferEnded} progressInterval={1000} controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                    </Fragment>\n                );   \n            }\n        } else {\n            // still loading display skelaton\n            return (\n                <div className={\"absolutely-positied-loading-courses\"}>\n                    <div className={\"video-loading-wrapper-bar\"}>\n                        <div className={\"position-above-bar-percentage-video\"}>\n                            <h6>Downloading video...<strong style={{ color: \"#f73164\", fontSize: \"1.75rem\", textDecorationLine: \"underline\" }}>{videoLoadingProgress}%</strong> of video loaded/complete...</h6>\n                        </div>\n                        <Progress className={\"course-creation-progress-bar-video\"} animated color=\"secondary\" value={videoLoadingProgress} />\n                    </div>\n                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                        <p>\n                            <Skeleton containerClassName={\"custom-loading-courses\"} count={8} />\n                        </p>\n                    </SkeletonTheme>\n                </div>\n            );\n        }\n    }\n    console.log(\"cancelToken\", cancelToken);\n    return (\n        <Fragment>\n            <div id=\"sheet-container\">\n                <Sheet id=\"sheet-ultimate\" disableDrag={true} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                    <Sheet.Container className=\"sheetcontainer\">\n                        <Sheet.Header className=\"sheetheader\">\n                            <Row style={{ margin: \"17.5px\" }}>\n                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                    <Button style={{ width: \"100%\" }} onClick={closeModalRelated} className=\"btn-square-danger\" outline color=\"danger\" size=\"md-2x\">Close Pane (Any Changes will NOT be preserved while previously editted data will however persist)</Button>\n                                </Col>\n                            </Row>\n                        </Sheet.Header>\n                        <Sheet.Content>\n                            <Row>\n                                <Card>\n                                    <CardBody>\n                                        <Row style={{ marginBottom: \"20px\" }}>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h3>This is the form that is <strong>primarily</strong> used to upload/change content related to \"course content\". Use the form below to upload video's to each course \"clip/section\" and enter a description if you'd like...</h3>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <div className={\"add-video-overlay-courses-upload centered-both-ways\"}>\n                                                    {renderPreChecks()}\n                                                </div>\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                <Dropzone\n                                                    ref={dropzoneRef}\n                                                    PreviewComponent={(data) => renderPreviewOfFile(data)}\n                                                    maxFiles={1}\n                                                    autoUpload={true}\n                                                    onChangeStatus={(functions) => {\n                                                        setChangeOptions(functions);\n                                                    }}\n                                                    submitButtonDisabled={false}\n                                                    InputComponent={CustomInputHelper}\n                                                    getFilesFromEvent={null}\n                                                    onSubmit={onSubmitHelper}\n                                                    accept=\"video/*\"\n                                                    SubmitButtonComponent={(data) => {\n                                                        return (\n                                                            <div className=\"absolutely-position-submit-btn\">\n                                                                {renderCustomButtonDropzone(data, setMetaFileData, currentFileSelectedUpload, fileMetaData, fileReady, setFileReadyStatus, setProgress, setVideoFileState, setShowInitialState, setLoadedState, alreadyExisted, setCurrentFilePathData)}\n                                                            </div>\n                                                        );\n                                                    }}\n                                                    className={\"shadow-courses-dropzone\"}\n                                                    multiple={false}\n                                                    canCancel={false}\n                                                    styles={{\n                                                        dropzone: { height: 350 },\n                                                        dropzoneActive: { borderColor: 'green' },\n                                                    }}\n                                                />\n                                                {fileReady === true ? <Fragment>\n                                                    <hr className=\"secondary-hr\" />\n                                                    <div className=\"centered-both-ways\">\n                                                        <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                            setMetaFileData(null);\n                                                            setFileReadyStatus(false);\n                                                            setCurrentUploadFileStatus(null);\n                                                            setCurrentFilePathData(null);\n\n                                                            changeOptions.remove();\n                                                        }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                    </div>\n                                                </Fragment> : null}\n                                            </Col>\n                                            <hr style={{ marginTop: \"25px\" }} />\n                                            <FormGroup className=\" m-form__group\">\n                                                <Label>Course Section/Segment Description (Between 25-750 Charector's in length)</Label>\n                                                <InputGroup>\n                                                    <Input onChange={(e) => handleDescriptionChange(e)} value={description} className=\"form-control\" rows={6} type=\"textarea\" placeholder={\"Enter a description (Between 25-750 Charector's in length) for your segment/section of this chunk of your course (this SHOULD give a 'general' idea of what this segment is about)...\"}/>\n                                                </InputGroup>\n                                            </FormGroup>\n                                            <hr />\n                                            <div className={\"centered-both-ways\"}>\n                                                <Button outline style={{ width: \"75%\" }} onClick={() => handleAdditionFileDescription()} className=\"btn-square-info\" color=\"info\" size=\"md\">Submit New Information/Details & File(s)</Button>\n                                            </div>\n                                        </Row>\n                                        <hr />\n                                    </CardBody>\n                                </Card>\n                            </Row>\n                        </Sheet.Content>\n                        </Sheet.Container>\n                    <Sheet.Backdrop />\n                </Sheet>\n            </div>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : [],\n        coursesArray: (_.has(state.courseData, \"courseData\") && _.has(state.courseData.courseData, \"pageTwoData\") && _.has(state.courseData.courseData.pageTwoData, \"courseContentSections\")) ? state.courseData.courseData.pageTwoData.courseContentSections : []\n    }\n}\nexport default connect(mapStateToProps, { shiftCoreStyles, updateCourseInformationData })(SheetHelperPaneUploadCourseContent);\n\n// <h5>Upload any supporting files (if any/applicable)</h5>\n// <p style={{ paddingTop: \"7.5px\" }} className={\"top-title-course-help\"}>These files will be <strong style={{ color: \"#f73164\" }}>fully-downloadable (on purpose)</strong> so viewer's/students will be able to download course content to <strong>follow along</strong> with you during your pre-recorded videos/seminars!</p>"]},"metadata":{},"sourceType":"module"}