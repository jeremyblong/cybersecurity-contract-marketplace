{"ast":null,"code":"import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst HookHelpers = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // clearErrors(name);\n\n    setValue(name, value, {\n      shouldValidate: true\n    });\n    return value;\n  };\n\n  const startBidCheck = {\n    check: { ...register(\"startBid\", {\n        required: false,\n        minLength: {\n          value: 15,\n          message: \"You must enter AT Least 15 characters\"\n        },\n        maxLength: {\n          value: 75,\n          message: \"You may ONLY enter 75 characters or less\"\n        },\n        onBlur: e => {// check if valid url in helper file.\n        }\n      })\n    },\n    name: \"startBid\",\n    placeholder: \"Enter a starting bid...\",\n    type: \"text\",\n    label: \"Starting Bid\",\n    onChange: e => handleInputChange(e)\n  };\n  return {\n    startBidCheck\n  };\n};\n\nexport default HookHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/helpers/slideUpPane/helpers/reactHookFormRelated.js"],"names":["React","useState","useRef","useEffect","Fragment","useForm","Controller","HookHelpers","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","handleInputChange","e","name","value","target","shouldValidate","startBidCheck","check","required","minLength","message","maxLength","onBlur","placeholder","type","label","onChange"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA,QAA/D;AAAyEC,IAAAA,WAAzE;AAAsFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAjG,MAA+GZ,OAAO,CAAC;AACzHa,IAAAA,IAAI,EAAE,WADmH;AAEzHC,IAAAA,cAAc,EAAE;AAFyG,GAAD,CAA5H;;AAKA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B,CAD6B,CAG7B;;AAEAX,IAAAA,QAAQ,CAACS,IAAD,EAAOC,KAAP,EAAc;AAAEE,MAAAA,cAAc,EAAE;AAAlB,KAAd,CAAR;AAEA,WAAOF,KAAP;AACH,GARD;;AAUA,QAAMG,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,EAAC,GAAGnB,QAAQ,CAAC,UAAD,EAAa;AAAEoB,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAE;AAC1DN,UAAAA,KAAK,EAAE,EADmD;AAE1DO,UAAAA,OAAO,EAAE;AAFiD,SAA9B;AAG7BC,QAAAA,SAAS,EAAE;AACVR,UAAAA,KAAK,EAAE,EADG;AAEVO,UAAAA,OAAO,EAAE;AAFC,SAHkB;AAM7BE,QAAAA,MAAM,EAAGX,CAAD,IAAO,CACd;AAEH;AAT+B,OAAb;AAAZ,KADW;AAWlBC,IAAAA,IAAI,EAAE,UAXY;AAYlBW,IAAAA,WAAW,EAAE,yBAZK;AAalBC,IAAAA,IAAI,EAAE,MAbY;AAclBC,IAAAA,KAAK,EAAE,cAdW;AAelBC,IAAAA,QAAQ,EAAGf,CAAD,IAAOD,iBAAiB,CAACC,CAAD;AAfhB,GAAtB;AAkBA,SAAO;AACHK,IAAAA;AADG,GAAP;AAGH,CAtCD;;AAyCA,eAAenB,WAAf","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\n\nconst HookHelpers = () => {\n\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        // clearErrors(name);\n\n        setValue(name, value, { shouldValidate: true })\n    \n        return value;\n    };\n    \n    const startBidCheck = {\n        check: {...register(\"startBid\", { required: false, minLength: {\n            value: 15,\n            message: \"You must enter AT Least 15 characters\"\n        }, maxLength: {\n            value: 75,\n            message: \"You may ONLY enter 75 characters or less\"\n        }, onBlur: (e) => {\n            // check if valid url in helper file.\n            \n        }})},\n        name: \"startBid\",\n        placeholder: \"Enter a starting bid...\",\n        type: \"text\",\n        label: \"Starting Bid\",\n        onChange: (e) => handleInputChange(e)\n    };\n\n    return {\n        startBidCheck\n    }\n}\n\n\nexport default HookHelpers;"]},"metadata":{},"sourceType":"module"}