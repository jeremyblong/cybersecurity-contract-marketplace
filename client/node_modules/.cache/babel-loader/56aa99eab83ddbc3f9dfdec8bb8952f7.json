{"ast":null,"code":"export const getCroppedImg=(image,crop,mimetype)=>{const canvas=document.createElement(\"canvas\");const scaleX=image.naturalWidth/image.width;const scaleY=image.naturalHeight/image.height;canvas.width=crop.width;canvas.height=crop.height;const ctx=canvas.getContext(\"2d\");ctx.drawImage(image,0,0,image.width,image.height,0,0,crop.width,crop.height);// as base64 string\nconst base64Image=canvas.toDataURL(mimetype);return base64Image;};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/profile/hacker/view/generalDetails/helpers/croppingBannerImage/getCroppedImage.js"],"names":["getCroppedImg","image","crop","mimetype","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","drawImage","base64Image","toDataURL"],"mappings":"AAAA,MAAO,MAAMA,CAAAA,aAAa,CAAG,CAACC,KAAD,CAAQC,IAAR,CAAcC,QAAd,GAA2B,CAEpD,KAAMC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf,CAEA,KAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACO,YAAN,CAAqBP,KAAK,CAACQ,KAA1C,CACA,KAAMC,CAAAA,MAAM,CAAGT,KAAK,CAACU,aAAN,CAAsBV,KAAK,CAACW,MAA3C,CAEAR,MAAM,CAACK,KAAP,CAAeP,IAAI,CAACO,KAApB,CACAL,MAAM,CAACQ,MAAP,CAAgBV,IAAI,CAACU,MAArB,CAEA,KAAMC,CAAAA,GAAG,CAAGT,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAAZ,CAEAD,GAAG,CAACE,SAAJ,CACEd,KADF,CAEE,CAFF,CAGE,CAHF,CAIEA,KAAK,CAACQ,KAJR,CAKER,KAAK,CAACW,MALR,CAME,CANF,CAOE,CAPF,CAQEV,IAAI,CAACO,KARP,CASEP,IAAI,CAACU,MATP,EAYA;AACA,KAAMI,CAAAA,WAAW,CAAGZ,MAAM,CAACa,SAAP,CAAiBd,QAAjB,CAApB,CAEA,MAAOa,CAAAA,WAAP,CAED,CA7BI","sourcesContent":["export const getCroppedImg = (image, crop, mimetype) => {\n  \n    const canvas = document.createElement(\"canvas\");\n  \n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n  \n    canvas.width = crop.width;\n    canvas.height = crop.height;\n  \n    const ctx = canvas.getContext(\"2d\");\n  \n    ctx.drawImage(\n      image,\n      0,\n      0,\n      image.width,\n      image.height,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n  \n    // as base64 string\n    const base64Image = canvas.toDataURL(mimetype);\n  \n    return base64Image;\n  \n  }"]},"metadata":{},"sourceType":"module"}