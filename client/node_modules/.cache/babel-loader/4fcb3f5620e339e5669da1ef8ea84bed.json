{"ast":null,"code":"import React,{Fragment,useState,useEffect}from'react';import{CardHeader,CardBody,CardFooter,Card,Row,Col,Container,ListGroup,ListGroupItem}from'reactstrap';import\"./styles.css\";import Breadcrumb from'../../../../layout/breadcrumb';import{connect}from\"react-redux\";import axios from\"axios\";import{NotificationManager}from\"react-notifications\";import Skeleton,{SkeletonTheme}from'react-loading-skeleton';import moment from'moment';const ViewAllBalanceRelatedInfoHelper=_ref=>{let{userData}=_ref;const[balanceInfo,setBalanceInfo]=useState(null);const[instantAvailable,setInstantAvailable]=useState(null);const[available,setAvailiable]=useState(null);const[pending,setPending]=useState(null);const[ready,setReady]=useState(false);const[transactions,setTransactions]=useState([]);useEffect(()=>{const config={params:{uniqueId:userData.uniqueId,accountType:userData.accountType}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/availiable/stripe/bal\"),config).then(res=>{if(res.data.message===\"Gathered balance!\"){const{bal}=res.data;setBalanceInfo(bal);if(userData.accountType===\"hackers\"){for(let index=0;index<bal.instant_available.length;index++){const element=bal.instant_available[index];if(element.currency===\"usd\"){setInstantAvailable(element);break;}}for(let index=0;index<bal.available.length;index++){const element=bal.available[index];if(element.currency===\"usd\"){setAvailiable(element);break;}}for(let index=0;index<bal.pending.length;index++){const element=bal.pending[index];if(element.currency===\"usd\"){setPending(element);break;}}}console.log(res.data);setReady(true);}else{console.log(\"err\",res.data);NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);}}).catch(err=>{console.log(err);NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);});},[]);useEffect(()=>{if(userData.accountType===\"employers\"){const config={params:{uniqueId:userData.uniqueId,accountType:userData.accountType}};axios.get(\"\".concat(process.env.REACT_APP_BASE_URL,\"/gather/transactional/history/employer\"),config).then(res=>{if(res.data.message===\"Gathered transactional history!\"){console.log(res.data);const{balanceTransactions}=res.data;setTransactions(balanceTransactions.data);}else{console.log(\"err\",res.data);NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);}}).catch(err=>{console.log(err);NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\",\"Unknown error has occurred.\",4750);});}},[]);console.log(\"ready\",ready);console.log(\"transactions\",transactions);const renderContent=()=>{if(userData.accountType===\"hackers\"){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"4\",md:\"12\",xl:\"4\"},/*#__PURE__*/React.createElement(Card,{className:\"card-bal-bal\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-success border-3\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"header-balance-green\"},\"Available\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"You currently \",/*#__PURE__*/React.createElement(\"strong\",null,\"available balance\"),\" which you have \",/*#__PURE__*/React.createElement(\"strong\",null,\"immediate\"),\" access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..\"),/*#__PURE__*/React.createElement(\"hr\",null),ready===true?/*#__PURE__*/React.createElement(\"p\",{className:\"heavy-instant-availiable\"},\"Immediate Available Balance: \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},\"$\",Number(available.amount/100).toFixed(2))):/*#__PURE__*/React.createElement(\"div\",{className:\"position-bottom-bal\"},/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:6}))))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"4\",md:\"12\",xl:\"4\"},/*#__PURE__*/React.createElement(Card,{className:\"card-bal-bal\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-secondary border-3\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"header-balance-red\"},userData.accountType===\"hackers\"?\"Instant Available\":\"Connect Reserved\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Funds held\"),\" due to \",/*#__PURE__*/React.createElement(\"strong\",null,\"negative\"),\" balances on hacker account types. These are \",/*#__PURE__*/React.createElement(\"strong\",null,\"\\\"held\\\"\"),\" funds.\"),/*#__PURE__*/React.createElement(\"hr\",null),ready===true?/*#__PURE__*/React.createElement(\"p\",{className:\"heavy-instant-availiable\"},\"Instant Available Balance: \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},\"$\",Number(instantAvailable.amount/100).toFixed(2))):/*#__PURE__*/React.createElement(\"div\",{className:\"position-bottom-bal\"},/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:6}))))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"4\",md:\"12\",xl:\"4\"},/*#__PURE__*/React.createElement(Card,{className:\"card-bal-bal\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary border-3\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"header-balance-primary\"},\"Pending\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"These funds are \",/*#__PURE__*/React.createElement(\"strong\",null,\"\\\"pending\\\"\"),\" funds which means they are \",/*#__PURE__*/React.createElement(\"strong\",null,\"not yet\"),\" available due to the \",/*#__PURE__*/React.createElement(\"strong\",null,\"7-day rolling pay cycle\"),\". It generally takes a few days (7) for newly aquired funds to become available!\"),/*#__PURE__*/React.createElement(\"hr\",null),ready===true?/*#__PURE__*/React.createElement(\"p\",{className:\"heavy-instant-availiable\"},\"Pending Available Balance: \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},\"$\",Number(pending.amount/100).toFixed(2))):/*#__PURE__*/React.createElement(\"div\",{className:\"position-bottom-bal\"},/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:6}))))))));}else{if(ready===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"4\",md:\"12\",xl:\"4\"},/*#__PURE__*/React.createElement(Card,{className:\"card-bal-bal\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-success border-3\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"header-balance-green\"},\"Available\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"You currently \",/*#__PURE__*/React.createElement(\"strong\",null,\"available balance\"),\" which you have \",/*#__PURE__*/React.createElement(\"strong\",null,\"immediate\"),\" access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"heavy-instant-availiable\"},\"Immediate Available Balance: \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\",textDecorationLine:\"underline\"}},\"$\",Number(balanceInfo/100).toFixed(2)))))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"8\",md:\"12\",xl:\"8\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-portion-transactions\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"topportion-text\"},\"These are your \",/*#__PURE__*/React.createElement(\"strong\",{style:{textDecorationLine:\"underline\",color:\"#7366ff\"}},\"balance\"),\" transactional history items!\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lower-p\"},\"These are various changes in your account balance whether money/funds we're added OR removed, anything related to your general account balance..\")),/*#__PURE__*/React.createElement(ListGroup,{className:\"listgroup-bal\"},typeof transactions!==\"undefined\"&&transactions.length>0?transactions.map((transaction,index)=>{return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(ListGroupItem,{className:\"list-group-item-action custom-list-group-transactions flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex w-100 justify-content-between\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-1 custom-starting-bal-text\"},\"This transaction was approx. $\",Number(transaction.amount/100).toFixed(2),\" (\",transaction.currency,\")\"),/*#__PURE__*/React.createElement(\"small\",null,moment(transaction.created*1000).fromNow())),/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1 custom-ending-bal-text\"},\"You ending balance \",/*#__PURE__*/React.createElement(\"strong\",null,\"after\"),\" the $\",Number(transaction.amount/100).toFixed(2),\" change resulting in \",/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"#51bb25\"}},\"$\",Number(transaction.ending_balance/100).toFixed(2)),\" total account balance..\"),/*#__PURE__*/React.createElement(\"small\",null,transaction.object)));}):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../../assets/images/ch.png\"),className:\"full-width-placeholder\"})))));}else{return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",md:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(SkeletonTheme,{baseColor:\"#c9c9c9\",highlightColor:\"#444\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Skeleton,{count:20})))));}}};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"View Balance (Pending, Available & Held)\",title:\"View Balance & Other Related Critical Information\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",lg:\"12\",md:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-card-balance\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"balance-title\"},\"Below you will be able to find, manage and view your related account balances & other related info!\")),/*#__PURE__*/React.createElement(CardBody,{className:\"b-l-secondary b-r-secondary\"},/*#__PURE__*/React.createElement(Row,null,renderContent())),/*#__PURE__*/React.createElement(CardFooter,{className:\"b-l-info b-r-info\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Above are your various account balances whether the bal. is available \",/*#__PURE__*/React.createElement(\"strong\",null,\"NOW\"),\" or will be available \",/*#__PURE__*/React.createElement(\"strong\",null,\"shortly\"),\" or in the near future & even pending deposit's!\")))))));};const mapStateToProps=state=>{return{userData:state.auth.data};};export default connect(mapStateToProps,{})(ViewAllBalanceRelatedInfoHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/view/viewBalanceInfo.js"],"names":["React","Fragment","useState","useEffect","CardHeader","CardBody","CardFooter","Card","Row","Col","Container","ListGroup","ListGroupItem","Breadcrumb","connect","axios","NotificationManager","Skeleton","SkeletonTheme","moment","ViewAllBalanceRelatedInfoHelper","userData","balanceInfo","setBalanceInfo","instantAvailable","setInstantAvailable","available","setAvailiable","pending","setPending","ready","setReady","transactions","setTransactions","config","params","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","bal","index","instant_available","length","element","currency","console","log","warning","catch","err","balanceTransactions","renderContent","color","textDecorationLine","Number","amount","toFixed","map","transaction","created","fromNow","ending_balance","object","require","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { CardHeader, CardBody, CardFooter, Card, Row, Col, Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport \"./styles.css\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport moment from 'moment';\n\n\nconst ViewAllBalanceRelatedInfoHelper = ({ userData }) => {\n\n    const [ balanceInfo, setBalanceInfo ] = useState(null);\n    const [ instantAvailable, setInstantAvailable ] = useState(null);\n    const [ available, setAvailiable ] = useState(null);\n    const [ pending, setPending ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ transactions, setTransactions ] = useState([]);\n\n    useEffect(() => {\n        const config = {\n            params: {\n                uniqueId: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/availiable/stripe/bal`, config).then((res) => {\n            if (res.data.message === \"Gathered balance!\") {\n\n                const { bal } = res.data;\n\n                setBalanceInfo(bal);\n\n                if (userData.accountType === \"hackers\") {\n                    for (let index = 0; index < bal.instant_available.length; index++) {\n                        const element = bal.instant_available[index];\n                        if (element.currency === \"usd\") {\n                            setInstantAvailable(element);\n                            break;\n                        }\n                    }\n                    for (let index = 0; index < bal.available.length; index++) {\n                        const element = bal.available[index];\n                        if (element.currency === \"usd\") {\n                            setAvailiable(element);\n                            break;\n                        }\n                    }\n                    for (let index = 0; index < bal.pending.length; index++) {\n                        const element = bal.pending[index];\n                        if (element.currency === \"usd\") {\n                            setPending(element);\n                            break;\n                        }\n                    }\n                }\n\n                console.log(res.data);\n\n                setReady(true);\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"An unknown error has occurred while attempting to fetch your related balance related information, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n        })\n    }, []);\n\n    useEffect(() => {\n\n        if (userData.accountType === \"employers\") {\n            const config = {\n                params: {\n                    uniqueId: userData.uniqueId,\n                    accountType: userData.accountType\n                }\n            }\n            axios.get(`${process.env.REACT_APP_BASE_URL}/gather/transactional/history/employer`, config).then((res) => {\n                if (res.data.message === \"Gathered transactional history!\") {\n                    console.log(res.data);\n\n                    const { balanceTransactions } = res.data;\n\n                    setTransactions(balanceTransactions.data);\n                } else {\n                    console.log(\"err\", res.data);\n                    \n                    NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n                }\n            }).catch((err) => {\n                console.log(err);\n    \n                NotificationManager.warning(\"An unknown error has occurred while attempting to transactional history and/or past transactions, Contact support if the problem persists!\", \"Unknown error has occurred.\", 4750);\n            })\n        }\n    }, [])\n\n    console.log(\"ready\", ready);\n\n    console.log(\"transactions\", transactions);\n\n    const renderContent = () => {\n        if (userData.accountType === \"hackers\") {\n            return (\n                <Fragment>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-success border-3\">\n                                <h5 className='header-balance-green'>Available</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'>You currently <strong>available balance</strong> which you have <strong>immediate</strong> access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Immediate Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(available.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-secondary border-3\">\n                                <h5 className='header-balance-red'>{userData.accountType === \"hackers\" ? \"Instant Available\" : \"Connect Reserved\"}</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'><strong>Funds held</strong> due to <strong>negative</strong> balances on hacker account types. These are <strong>\"held\"</strong> funds.</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Instant Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(instantAvailable.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                        <Card className='card-bal-bal'>\n                            <CardHeader className=\"b-l-primary border-3\">\n                                <h5 className='header-balance-primary'>Pending</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <p className='lead'>These funds are <strong>\"pending\"</strong> funds which means they are <strong>not yet</strong> available due to the <strong>7-day rolling pay cycle</strong>. It generally takes a few days (7) for newly aquired funds to become available!</p>\n                                <hr />\n                                {ready === true ? <p className='heavy-instant-availiable'>Pending Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(pending.amount / 100)).toFixed(2)}</strong></p> : <div className='position-bottom-bal'>\n                                    <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                        <p>\n                                            <Skeleton count={6} />\n                                        </p>\n                                    </SkeletonTheme>\n                                </div>}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Fragment>\n            );\n        } else {\n            if (ready === true) {\n                return (\n                    <Fragment>\n                        <Col sm=\"12\" lg=\"4\" md=\"12\" xl=\"4\">\n                            <Card className='card-bal-bal'>\n                                <CardHeader className=\"b-l-success border-3\">\n                                    <h5 className='header-balance-green'>Available</h5>\n                                </CardHeader>\n                                <CardBody>\n                                    <p className='lead'>You currently <strong>available balance</strong> which you have <strong>immediate</strong> access to, these are funds you can currently withdrawl & use! Funds that are available to be transferred or paid out..</p>\n                                    <hr />\n                                    <p className='heavy-instant-availiable'>Immediate Available Balance: <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>${(Number(balanceInfo / 100)).toFixed(2)}</strong></p>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm=\"12\" lg=\"8\" md=\"12\" xl=\"8\">\n                            <div className='top-portion-transactions'>\n                                <h5 className='topportion-text'>These are your <strong style={{ textDecorationLine: \"underline\", color: \"#7366ff\" }}>balance</strong> transactional history items!</h5>\n                                <p className='lower-p'>These are various changes in your account balance whether money/funds we're added OR removed, anything related to your general account balance..</p>\n                            </div>\n                            <ListGroup className='listgroup-bal'>\n                                {typeof transactions !== \"undefined\" && transactions.length > 0 ? transactions.map((transaction, index) => {\n                                    return (\n                                        <Fragment key={index}>\n                                            <ListGroupItem className=\"list-group-item-action custom-list-group-transactions flex-column align-items-start\">\n                                                <div className=\"d-flex w-100 justify-content-between\">\n                                                <h5 className=\"mb-1 custom-starting-bal-text\">This transaction was approx. ${Number(transaction.amount / 100).toFixed(2)} ({transaction.currency})</h5><small>{moment(transaction.created * 1000).fromNow()}</small>\n                                                </div>\n                                                <p className=\"mb-1 custom-ending-bal-text\">You ending balance <strong>after</strong> the ${Number(transaction.amount / 100).toFixed(2)} change resulting in <strong style={{ color: \"#51bb25\" }}>${Number(transaction.ending_balance / 100).toFixed(2)}</strong> total account balance..</p>\n                                                <small>{transaction.object}</small>\n                                            </ListGroupItem>\n                                        </Fragment>\n                                    );\n                                }) : <Fragment>\n                                    <img src={require(\"../../../../assets/images/ch.png\")} className={\"full-width-placeholder\"} />\n                                </Fragment>}\n                            </ListGroup>\n                        </Col>\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <Fragment>\n                        <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                            <SkeletonTheme baseColor=\"#c9c9c9\" highlightColor=\"#444\">\n                                <p>\n                                    <Skeleton count={20} />\n                                </p>\n                            </SkeletonTheme>\n                        </Col>\n                    </Fragment>\n                );\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"View Balance (Pending, Available & Held)\" title=\"View Balance & Other Related Critical Information\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                        <Card className={\"shadow-card-balance\"}>\n                            <CardHeader className='b-l-info b-r-info'>\n                                <h3 className='balance-title'>Below you will be able to find, manage and view your related account balances & other related info!</h3>\n                            </CardHeader>\n                            <CardBody className='b-l-secondary b-r-secondary'>\n                                <Row>\n                                    {renderContent()}\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-info b-r-info'>\n                                <p className='lead'>Above are your various account balances whether the bal. is available <strong>NOW</strong> or will be available <strong>shortly</strong> or in the near future & even pending deposit's!</p>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(ViewAllBalanceRelatedInfoHelper);"]},"metadata":{},"sourceType":"module"}