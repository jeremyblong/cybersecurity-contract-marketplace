{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst MainHooksIndividualViewListingEmployerHelpers=()=>{const checkMessageMeetsCritera={check:(setError,register,clearErrors,name)=>{return{...register(name,{required:{value:true,message:\"You MUST enter a value for this field between 50 and 450 charactors\"},minLength:{value:50,message:\"You MUST enter AT Least 50 characters\"},maxLength:{value:450,message:\"You may ONLY enter 450 characters or less\"},onBlur:e=>{console.log(\"blurred/\");// deconstruct actual value\nconst value=e.target.value;// deconstruct length\nconst len=value.length;// check if both min/max values met\nif(len>0&&len>=50&&len<=450){// clear error\nclearErrors(name);}else{// set error\nsetTimeout(()=>{setError(name,{type:\"manual\",message:\"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\"});},50);}}})};},onChange:(e,name,setValue)=>{// deconstruct actual value\nconst value=e.target.value;// set new value\nsetValue(name,value,{shouldValidate:true});},label:\"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",name:\"comment\",placeholder:\"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"};// return values to other component\nreturn{checkMessageMeetsCritera};};export default MainHooksIndividualViewListingEmployerHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/opportunities/employers/liveListings/individual/viewListing/helpers/comments/helpers/reduxFormHelpers.js"],"names":["MainHooksIndividualViewListingEmployerHelpers","checkMessageMeetsCritera","check","setError","register","clearErrors","name","required","value","message","minLength","maxLength","onBlur","e","console","log","target","len","length","setTimeout","type","onChange","setValue","shouldValidate","label","placeholder"],"mappings":"AAAA;AACA,KAAMA,CAAAA,6CAA6C,CAAG,IAAM,CAExD,KAAMC,CAAAA,wBAAwB,CAAG,CAC7BC,KAAK,CAAE,CAACC,QAAD,CAAWC,QAAX,CAAqBC,WAArB,CAAkCC,IAAlC,GAA2C,CAC9C,MACI,CAAC,GAAGF,QAAQ,CAACE,IAAD,CAAO,CAAEC,QAAQ,CAAE,CAC3BC,KAAK,CAAE,IADoB,CAE3BC,OAAO,CAAE,qEAFkB,CAAZ,CAGhBC,SAAS,CAAE,CACVF,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,uCAFC,CAHK,CAMhBE,SAAS,CAAE,CACVH,KAAK,CAAE,GADG,CAEVC,OAAO,CAAE,2CAFC,CANK,CAShBG,MAAM,CAAGC,CAAD,EAAO,CACdC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA;AACA,KAAMP,CAAAA,KAAK,CAAGK,CAAC,CAACG,MAAF,CAASR,KAAvB,CACA;AACA,KAAMS,CAAAA,GAAG,CAAGT,KAAK,CAACU,MAAlB,CACA;AACA,GAAKD,GAAG,CAAG,CAAP,EAAcA,GAAG,EAAI,EAArB,EAA6BA,GAAG,EAAI,GAAxC,CAA8C,CAC1C;AACAZ,WAAW,CAACC,IAAD,CAAX,CACH,CAHD,IAGO,CACH;AACAa,UAAU,CAAC,IAAM,CACbhB,QAAQ,CAACG,IAAD,CAAO,CACXc,IAAI,CAAE,QADK,CAEXX,OAAO,CAAE,kGAFE,CAAP,CAAR,CAIH,CALS,CAKP,EALO,CAAV,CAMH,CACJ,CA5BkB,CAAP,CAAZ,CADJ,CA+BH,CAjC4B,CAkC7BY,QAAQ,CAAE,CAACR,CAAD,CAAIP,IAAJ,CAAUgB,QAAV,GAAuB,CAC7B;AACA,KAAMd,CAAAA,KAAK,CAAGK,CAAC,CAACG,MAAF,CAASR,KAAvB,CACA;AACAc,QAAQ,CAAChB,IAAD,CAAOE,KAAP,CAAc,CAAEe,cAAc,CAAE,IAAlB,CAAd,CAAR,CACH,CAvC4B,CAwC7BC,KAAK,CAAE,mFAxCsB,CAyC7BlB,IAAI,CAAE,SAzCuB,CA0C7BmB,WAAW,CAAE,oPA1CgB,CAAjC,CA4CA;AACA,MAAO,CACHxB,wBADG,CAAP,CAGH,CAlDD,CAoDA,cAAeD,CAAAA,6CAAf","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHooksIndividualViewListingEmployerHelpers = () => {\n\n    const checkMessageMeetsCritera = {\n        check: (setError, register, clearErrors, name) => {\n            return (\n                {...register(name, { required: {\n                    value: true,\n                    message: \"You MUST enter a value for this field between 50 and 450 charactors\"\n                }, minLength: {\n                    value: 50,\n                    message: \"You MUST enter AT Least 50 characters\"\n                }, maxLength: {\n                    value: 450,\n                    message: \"You may ONLY enter 450 characters or less\"\n                }, onBlur: (e) => {\n                    console.log(\"blurred/\");\n                    // deconstruct actual value\n                    const value = e.target.value;\n                    // deconstruct length\n                    const len = value.length;\n                    // check if both min/max values met\n                    if ((len > 0) && (len >= 50) && (len <= 450)) {\n                        // clear error\n                        clearErrors(name);\n                    } else {\n                        // set error\n                        setTimeout(() => {\n                            setError(name, {\n                                type: \"manual\",\n                                message: \"You MUST enter between 50 and 450 charectors total when 'leaving a comment' before proceeding...\",\n                            });\n                        }, 50);\n                    }\n                }})}\n            );\n        },\n        onChange: (e, name, setValue) => {\n            // deconstruct actual value\n            const value = e.target.value;\n            // set new value\n            setValue(name, value, { shouldValidate: true })\n        },\n        label: \"Drop/Leave a comment (communicate w/others, leave reviews, post thoughts, etc...)\",\n        name: \"comment\",\n        placeholder: \"Enter a comment to leave a comment on this course information, this comment will be fully-public so please be precise with whatever you say & be honest/helpful to other hacker's/student's... (Please enter between 50 and 450 charector's total)\"\n    }\n    // return values to other component\n    return {\n        checkMessageMeetsCritera\n    }\n}\n\nexport default MainHooksIndividualViewListingEmployerHelpers;"]},"metadata":{},"sourceType":"module"}