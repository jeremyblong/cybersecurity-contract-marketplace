{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/createListing/create/createEmployerListing.js\";\nimport React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport one from '../../../../../../assets/images/job-search/1.jpg';\nimport { Container, Row, Col, Card, CardBody, Media, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, InputGroupText, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport { Submit, Cancel } from \"../../../../../../constant\";\nimport Select from 'react-select';\nimport uuid from \"react-uuid\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport CKEditors from \"react-ckeditor-component\";\nimport CreateHashtagsListingComponent from \"./helpers/hashtags/createHashtagsListing.js\";\nimport LocationSearchInput from \"./helpers/location/searchAddress.js\";\nimport { XCircle } from \"react-feather\";\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { DateRangePicker } from 'react-date-range';\nimport Dropzone from 'react-dropzone-uploader';\nimport { connect } from \"react-redux\";\nimport { saveListingData } from \"../../../../../../redux/actions/employer/listings/listingData.js\";\nimport desiredSkillsOptions from \"./helpers/options/desiredSkills.js\";\nconst idealTimespanOptions = [{\n  value: 7,\n  label: '7 Days'\n}, {\n  value: 10,\n  label: '10 Days'\n}, {\n  value: 14,\n  label: '14 Days'\n}, {\n  value: 18,\n  label: '18 Days'\n}, {\n  value: 23,\n  label: '23 Days'\n}, {\n  value: 27,\n  label: '27 Days'\n}, {\n  value: 31,\n  label: '31 Days'\n}, {\n  value: 35,\n  label: '35 Days'\n}, {\n  value: 40,\n  label: '40 Days'\n}, {\n  value: 45,\n  label: '45 Days'\n}, {\n  value: 50,\n  label: '50 Days'\n}, {\n  value: 55,\n  label: '55 Days'\n}, {\n  value: 60,\n  label: '60 Days'\n}]; // $1.00 === 1000xp\n\nconst experienceOptions = [{\n  value: '5,000 XP Reward & $5.00 To Post',\n  label: '5,000 XP Reward & $5.00 To Post',\n  experience: 5000,\n  cost: 500\n}, {\n  value: '7,500 XP Reward & $7.50 To Post',\n  label: '7,500 XP Reward & $7.50 To Post',\n  experience: 7500,\n  cost: 750\n}, {\n  value: '10,000 XP Reward & $10.00 To Post',\n  label: '10,000 XP Reward & $10.00 To Post',\n  experience: 10000,\n  cost: 1000\n}, {\n  value: '15,000 XP Reward & $15.00 To Post',\n  label: '15,000 XP Reward & $15.00 To Post',\n  experience: 15000,\n  cost: 1500\n}, {\n  value: '20,000 XP Reward & $20.00 To Post',\n  label: '20,000 XP Reward & $20.00 To Post',\n  experience: 20000,\n  cost: 2000\n}, {\n  value: '25,000 XP Reward & $25.00 To Post',\n  label: '25,000 XP Reward & $25.00 To Post',\n  experience: 25000,\n  cost: 2500\n}, {\n  value: '30,000 XP Reward & $30.00 To Post',\n  label: '30,000 XP Reward & $30.00 To Post',\n  experience: 30000,\n  cost: 3000\n}, {\n  value: '40,000 XP Reward & $40.00 To Post',\n  label: '40,000 XP Reward & $40.00 To Post',\n  experience: 40000,\n  cost: 4000\n}];\nconst rankOptions = [{\n  value: '1-3',\n  label: 'Levels 1-3'\n}, {\n  value: '3-5',\n  label: 'Levels 3-5'\n}, {\n  value: '6-8',\n  label: 'Levels 6-8'\n}, {\n  value: '9-13',\n  label: 'Levels 9-13'\n}, {\n  value: '14-17',\n  label: 'Levels 14-17'\n}, {\n  value: '18-21',\n  label: 'Levels 18-21'\n}, {\n  value: '22-26',\n  label: 'Levels 22-26'\n}, {\n  value: '27-31',\n  label: 'Levels 27-31'\n}, {\n  value: '32-36',\n  label: 'Levels 32-36'\n}, {\n  value: '37-42',\n  label: 'Levels 37-42'\n}, {\n  value: '43-45',\n  label: 'Levels 43-45'\n}, {\n  value: '46-48',\n  label: 'Levels 46-48'\n}, {\n  value: '49-50',\n  label: 'Levels 49-50'\n}];\nconst maxNumberOfHackersOptions = [{\n  label: \"1 Hacker\",\n  value: 1\n}, {\n  label: \"2 Hackers\",\n  value: 2\n}, {\n  label: \"3 Hackers\",\n  value: 3\n}, {\n  label: \"4 Hackers\",\n  value: 4\n}, {\n  label: \"5 Hackers\",\n  value: 5\n}, {\n  label: \"6 Hackers\",\n  value: 6\n}, {\n  label: \"7 Hackers\",\n  value: 7\n}, {\n  label: \"8 Hackers\",\n  value: 8\n}, {\n  label: \"9 Hackers\",\n  value: 9\n}, {\n  label: \"10 Hackers\",\n  value: 10\n}];\nconst tokensApplyOptions = [{\n  value: 2,\n  label: \"2 Tokens To Apply\"\n}, {\n  value: 4,\n  label: \"4 Tokens To Apply\"\n}, {\n  value: 7,\n  label: \"7 Tokens To Apply\"\n}, {\n  value: 10,\n  label: \"10 Tokens To Apply\"\n}, {\n  value: 12,\n  label: \"12 Tokens To Apply\"\n}, {\n  value: 14,\n  label: \"14 Tokens To Apply\"\n}, {\n  value: 16,\n  label: \"16 Tokens To Apply\"\n}, {\n  value: 18,\n  label: \"18 Tokens To Apply\"\n}, {\n  value: 20,\n  label: \"20 Tokens To Apply\"\n}, {\n  value: 23,\n  label: \"23 Tokens To Apply\"\n}, {\n  value: 25,\n  label: \"25 Tokens To Apply\"\n}, {\n  value: 28,\n  label: \"28 Tokens To Apply\"\n}, {\n  value: 30,\n  label: \"30 Tokens To Apply\"\n}, {\n  value: 32,\n  label: \"32 Tokens To Apply\"\n}, {\n  value: 34,\n  label: \"34 Tokens To Apply\"\n}, {\n  value: 35,\n  label: \"35 Tokens To Apply\"\n}];\nconst disclosureOptions = [{\n  label: \"Public Disclosure\",\n  value: \"public-disclosure\"\n}, {\n  label: \"Private Disclosure\",\n  value: \"private-disclosure\"\n}, {\n  label: \"Partial Disclosure\",\n  value: \"partial-disclosure\"\n}];\nconst physicalOptions = [{\n  label: \"Physical Location Hacking Required\",\n  value: \"physical-hack\"\n}, {\n  label: \"Digital/Internet Asset Hacking Required\",\n  value: \"digital-internet-hack\"\n}];\nconst visibilityOptions = [{\n  label: \"Fully Public\",\n  value: \"public-anyone\"\n}, {\n  label: \"Competition Winners ONLY\",\n  value: \"competition-winners-only\"\n}, {\n  label: \"Leaderboard Leaders ONLY\",\n  value: \"leaderboard-leading-only\"\n}, {\n  label: \"Private/Invite ONLY\",\n  value: \"private-invite-only\"\n}];\n\nconst CreateJobListingMainHelper = props => {\n  const [assetArray, setAssetArray] = useState([]);\n  const [timespan, setTimespan] = useState(null);\n  const [data, setData] = useState({});\n  const [requiredRankToApply, setRequiredRankToApply] = useState(null);\n  const [experienceAndCost, setExperienceAndCost] = useState(null);\n  const [desiredSkills, setDesiredSkills] = useState([]);\n  const [content, setContent] = useState('Enter your content here...');\n  const [maxNumberOfApplicants, setMaxNumberOfApplicants] = useState(null);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [tokensRequiredToApply, setTokensRequiredToApply] = useState(null);\n  const [disclosureVisibility, setDisclosureVisibility] = useState(null);\n  const [typeOfHack, setTypeOfHack] = useState(null);\n  const [rules, setRules] = useState(\"\");\n  const [outOfScope, setOutOfScope] = useState(\"\");\n  const [selectionRange, setSelectionRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  });\n  const [availiableHackerDates, handleHackerDates] = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]);\n  const [listingVisibility, setListingVisibility] = useState(null);\n\n  const onChangeDescription = evt => {\n    const newContent = evt.editor.getData();\n    setContent(newContent);\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleAssetAddition = e => {\n    e.preventDefault(); // assetName\n\n    setAssetArray(prevState => {\n      return [...prevState, {\n        id: uuid(),\n        name: data.assetName\n      }];\n    });\n    setData(prevState => {\n      return { ...prevState,\n        assetName: \"\"\n      };\n    });\n  };\n\n  const changeBountyPrices = (e, rewardLevel, asset) => {\n    const {\n      value\n    } = e.target;\n    setAssetArray(prevState => {\n      return prevState.map((item, i) => {\n        if (item.id === asset.id) {\n          return { ...item,\n            [rewardLevel]: Number(value)\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n  };\n\n  const renderBusinessLocationPortion = () => {\n    if (typeOfHack !== null && typeOfHack.value === \"physical-hack\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"Location - Physical Hacking (Only Provided To \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 88\n        }\n      }, \"SELECTED/HIRED\"), \" Applicants)\"), /*#__PURE__*/React.createElement(Form, {\n        className: \"theme-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        lg: \"12\",\n        md: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"exampleFormControlInput1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }\n      }, \"Enter your company business address (the address that your hackers will be testing at):\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 166\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(LocationSearchInput, {\n        props: props,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }))))));\n    }\n  };\n\n  const renderPhysicalHackingDates = () => {\n    if (typeOfHack !== null && typeOfHack.value === \"physical-hack\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"exampleFormControlInput1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, \"Dates Availiable To Hackers To Test Physical/Digital Assets:\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 123\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"These are the days that will be available to the \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 73\n        }\n      }, \"hired/selected\"), \" hacker canidates to choose from when deciding which days they will attempt to infiltrate your company. This is only relevant for \", /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 234\n        }\n      }, \"PHYSICAL\"), \" hacking requirements.\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          paddingBottom: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DateRangePicker, {\n        ranges: availiableHackerDates,\n        onChange: handleDatesSelectable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  const handleDeadlineSelect = ranges => {\n    setSelectionRange(ranges.selection);\n  };\n\n  const handleDatesSelectable = ranges => {\n    handleHackerDates(prevState => {\n      console.log(\"PREVSTATE\", prevState);\n      return [...prevState, ranges.selection];\n    });\n  };\n\n  const getUploadParams = _ref => {\n    let {\n      meta\n    } = _ref;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  };\n\n  const handleChangeStatus = (_ref2, status) => {\n    let {\n      meta,\n      file\n    } = _ref2;\n    console.log(status, meta, file);\n  };\n\n  const handleListingSubmission = e => {\n    e.preventDefault();\n    const data = {\n      requiredRankToApply,\n      publicCompanyName: data.publicCompanyName,\n      experienceAndCost,\n      desiredSkills,\n      maxNumberOfApplicants,\n      tokensRequiredToApply,\n      disclosureVisibility,\n      typeOfHack,\n      allowedTimespan: timespan,\n      listingVisibility,\n      expectedDateOfCompletion: selectionRange,\n      availiableDatesToHackers: availiableHackerDates\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Create Listing\",\n    title: \"Create a public employer listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-40 img-fluid m-r-20\",\n    src: one,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"f-w-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 49\n    }\n  }, \"Create an employer listing\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 45\n    }\n  }, \"Create a listing requesting for your company to be hacked (this will be public visible information to our database of hackers)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 41\n    }\n  }, \"General Details\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 57\n    }\n  }, \"Public Company Name:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    value: data.publicCompanyName,\n    onChange: handleChangeInput,\n    className: \"form-control\",\n    id: \"exampleFormControlInput1\",\n    name: \"publicCompanyName\",\n    type: \"text\",\n    placeholder: \"Enter your company's publically known name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 57\n    }\n  }, \"Preferred Rank/Level Required To Apply:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 138\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Select, {\n    value: requiredRankToApply,\n    onChange: setRequiredRankToApply,\n    options: rankOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 57\n    }\n  }, \"Experience Rewarded To Winner + Cost To Post:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 144\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingTop: \"7px\",\n      paddingBottom: \"7px\"\n    },\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 57\n    }\n  }, \"Experience is rewarded to the hacker winner. Hackers level up their accounts with XP points and can redeem the XP for cash ($-USD) after reaching certain ranks/levels. Having a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 311\n    }\n  }, \"higher\"), \" XP reward will incentivize hackers to pick your company over others - however it \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 416\n    }\n  }, \"costs more\"), \".\"), /*#__PURE__*/React.createElement(Select, {\n    value: experienceAndCost,\n    onChange: setExperienceAndCost,\n    options: experienceOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 57\n    }\n  }, \"Required/Desired Skills From Hackers:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 138\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(MultiSelect, {\n    options: desiredSkillsOptions,\n    value: desiredSkills,\n    onChange: setDesiredSkills,\n    labelledBy: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlpassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 57\n    }\n  }, \"HashTags/Tags (Hackers will use these to find your listing):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 162\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(CreateHashtagsListingComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-form-label pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 90\n    }\n  }, \"MAX\"), \" Number Of Required Hackers:\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: maxNumberOfApplicants,\n    onChange: setMaxNumberOfApplicants,\n    options: maxNumberOfHackersOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => {\n      setPopoverOpen(true);\n    },\n    id: \"PopoverID\",\n    className: \"col-form-label pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 53\n    }\n  }, \"Amount Of Tokens Required To Apply (hover for info):\"), /*#__PURE__*/React.createElement(Popover, {\n    placement: \"top\",\n    isOpen: popoverOpen,\n    target: \"PopoverID\",\n    toggle: () => {\n      setPopoverOpen(!popoverOpen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 57\n    }\n  }, \"Tokens are required from hackers to apply to this job\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    onMouseLeave: () => {\n      setPopoverOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 57\n    }\n  }, \"Hackers purchase tokens in which they then use to apply to your listing(s). These are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 147\n    }\n  }, \"REQUIRED\"), \" to apply to listings so please choose the amount you charge proportionally to the work required from your company and the reward given to successful hackers.\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: tokensRequiredToApply,\n    onChange: setTokensRequiredToApply,\n    options: tokensApplyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 57\n    }\n  }, \"Public Or Private Vulnerability Disclosures (Upon Successful Hack):\"), /*#__PURE__*/React.createElement(Select, {\n    value: disclosureVisibility,\n    onChange: setDisclosureVisibility,\n    options: disclosureOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 57\n    }\n  }, \"Type Of Hack Required (Physical/in-person \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 141\n    }\n  }, \"OR\"), \" digital/online assets):\"), /*#__PURE__*/React.createElement(Select, {\n    value: typeOfHack,\n    onChange: setTypeOfHack,\n    options: physicalOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 41\n    }\n  }, \"Timespan & Timeline Information + Visibility Type\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 61\n    }\n  }, \"Timespan allocated for hackers to test/exploit (Maximum - from posted date):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 179\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Select, {\n    value: timespan,\n    onChange: value => {\n      setTimespan(value);\n    },\n    options: idealTimespanOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 61\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 61\n    }\n  }, \"Visibility Type (Who Can See Your Listing Or Apply Once Live):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 165\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Select, {\n    value: listingVisibility,\n    onChange: value => {\n      setListingVisibility(value);\n    },\n    options: visibilityOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 61\n    }\n  })), renderPhysicalHackingDates())), /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    lg: \"12\",\n    xl: \"6 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 57\n    }\n  }, \"Estimated/Expected Day Of Completion (Must Be Successfully Hacked By This Day For Full Payment):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 195\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 57\n    }\n  }, \"These are the days in which you expect the hired hackers/contractors to have \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 171\n    }\n  }, \"successfully\"), \" completed any hacks or attacks (digital or physical) against your company. Disclosures will occurr shortly after whichever days are selected and any further testing or reporting shall proceed at that point.\"), /*#__PURE__*/React.createElement(DateRangePicker, {\n    ranges: [selectionRange],\n    onChange: handleDeadlineSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 57\n    }\n  }))))), renderBusinessLocationPortion(), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 62\n    }\n  }, \"DIGITAL\"), \" Assets & Payment/Reward Information - Digital Scope\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: \"12 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"exampleFormControlInput7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 57\n    }\n  }, \"Asset Endpoint Or URL:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 121\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleChangeInput,\n    value: data.assetName,\n    className: \"form-control\",\n    id: \"exampleFormControlInput7\",\n    name: \"assetName\",\n    type: \"text\",\n    placeholder: \"Eg.'s - api.yourcompany.com OR https://www.yourcompanywebsite.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAssetAddition,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 97\n    }\n  }, \"Add Asset\"))))), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 49\n    }\n  }, typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray.map((asset, index) => {\n    return /*#__PURE__*/React.createElement(ListGroupItem, {\n      key: index,\n      className: \"list-group-item flex-column align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingBottom: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 65\n      }\n    }, asset.name, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        setAssetArray(prevState => {\n          return prevState.filter((item, index) => {\n            if (item.id !== asset.id) {\n              return item;\n            }\n          });\n        });\n      },\n      id: \"float-right-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 99\n      }\n    }, /*#__PURE__*/React.createElement(XCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 90\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#ffc800\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 80\n      }\n    }, \"Low\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: e => {\n        changeBountyPrices(e, \"lowSeverity\", asset);\n      },\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#ed3824\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 80\n      }\n    }, \"Medium\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: e => {\n        changeBountyPrices(e, \"mediumSeverity\", asset);\n      },\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#8f0091\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 80\n      }\n    }, \"High\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: e => {\n        changeBountyPrices(e, \"highSeverity\", asset);\n      },\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      lg: \"3\",\n      sm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#b30211\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 80\n      }\n    }, \"Critical\"), \" Severity Bounty Reward\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: e => {\n        changeBountyPrices(e, \"criticalSeverity\", asset);\n      },\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Average Cash($) Reward Price\",\n      \"aria-label\": \"Average Cash($) Reward Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 73\n      }\n    }))))));\n  }) : null))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 41\n    }\n  }, \"Upload Any Supporting Documents/Files\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 57\n    }\n  }, \"Upload File(s):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 111\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 5,\n    multiple: true,\n    canCancel: false,\n    inputContent: \"Drop A File(s)\",\n    styles: {\n      dropzone: {\n        height: 225\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 61\n    }\n  })))))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 41\n    }\n  }, \"Listing Description/Information\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 41\n    }\n  }, \"Include as detailed of a description as you possibly can so our hackers will know what they're being asked to attempt/hack. This can be \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 214\n    }\n  }, \"general\"), \" information as well as any other information that you'd like to include. Strong/detailed listing descriptions generally always have higher response/application rates compared to minimal detail listings.\"), /*#__PURE__*/React.createElement(CKEditors, {\n    activeclassName: \"p10\",\n    content: content,\n    events: {\n      \"change\": onChangeDescription\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\",\n      paddingTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 41\n    }\n  }, \"Program/Listing Rules & Conditions Of Engagement\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 41\n    }\n  }, \"Please include an \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 96\n    }\n  }, \"exhaustive list\"), \" of specific \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 141\n    }\n  }, \"RULES\"), \" our hackers should follow and abide by while applying allowed hacks to avoid \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 241\n    }\n  }, \"termination or suspension\"), \" from our platform for misuse (referring to our hackers). We stand by our rules and proceedures so please be as detailed and clear as possible while outlines what you expect from potential hacker candiates and the conditions in place once hired.\"), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"editor_container\",\n    onChange: value => {\n      setRules(value);\n    },\n    value: rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0\",\n    style: {\n      paddingBottom: \"15px\",\n      paddingTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 116\n    }\n  }, \"OUT OF SCOPE\"), \" Vulnerabilities & Boundaries\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 41\n    }\n  }, \"Please include an exhaustive list of which vulnerabilities are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 141\n    }\n  }, \"NOT\"), \" included as acceptable reports as well as anything you would like our hackers to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 243\n    }\n  }, \"abstain\"), \" from testing or tampering with such as texting accounts, unauthenticated tests, etc... \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 355\n    }\n  }, \"BE AS SPECIFIC AS POSSIBLE.\")), /*#__PURE__*/React.createElement(SimpleMDE, {\n    id: \"editor_container_two\",\n    onChange: value => {\n      setOutOfScope(value);\n    },\n    value: outOfScope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleListingSubmission,\n    color: \"primary mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 37\n    }\n  }, Submit), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 37\n    }\n  }, Cancel))))))));\n};\n\nexport default connect(null, {\n  saveListingData\n})(CreateJobListingMainHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/createListing/create/createEmployerListing.js"],"names":["React","Fragment","useState","Breadcrumb","one","Container","Row","Col","Card","CardBody","Media","Button","Form","FormGroup","Label","Input","InputGroup","InputGroupAddon","ListGroup","ListGroupItem","InputGroupText","Popover","PopoverBody","PopoverHeader","Submit","Cancel","Select","uuid","MultiSelect","CKEditors","CreateHashtagsListingComponent","LocationSearchInput","XCircle","SimpleMDE","DateRangePicker","Dropzone","connect","saveListingData","desiredSkillsOptions","idealTimespanOptions","value","label","experienceOptions","experience","cost","rankOptions","maxNumberOfHackersOptions","tokensApplyOptions","disclosureOptions","physicalOptions","visibilityOptions","CreateJobListingMainHelper","props","assetArray","setAssetArray","timespan","setTimespan","data","setData","requiredRankToApply","setRequiredRankToApply","experienceAndCost","setExperienceAndCost","desiredSkills","setDesiredSkills","content","setContent","maxNumberOfApplicants","setMaxNumberOfApplicants","popoverOpen","setPopoverOpen","tokensRequiredToApply","setTokensRequiredToApply","disclosureVisibility","setDisclosureVisibility","typeOfHack","setTypeOfHack","rules","setRules","outOfScope","setOutOfScope","selectionRange","setSelectionRange","startDate","Date","endDate","key","availiableHackerDates","handleHackerDates","listingVisibility","setListingVisibility","onChangeDescription","evt","newContent","editor","getData","handleChangeInput","e","name","target","prevState","handleAssetAddition","preventDefault","id","assetName","changeBountyPrices","rewardLevel","asset","map","item","i","Number","renderBusinessLocationPortion","renderPhysicalHackingDates","color","paddingBottom","handleDatesSelectable","handleDeadlineSelect","ranges","selection","console","log","getUploadParams","meta","url","handleChangeStatus","status","file","handleListingSubmission","publicCompanyName","allowedTimespan","expectedDateOfCompletion","availiableDatesToHackers","paddingTop","length","index","filter","dropzone","height","dropzoneActive","borderColor"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport Breadcrumb from '../../../../../../layout/breadcrumb';\nimport one from '../../../../../../assets/images/job-search/1.jpg';\nimport {Container,Row,Col,Card,CardBody,Media,Button,Form,FormGroup,Label,Input,InputGroup,InputGroupAddon,ListGroup,ListGroupItem,InputGroupText,Popover,PopoverBody,PopoverHeader} from 'reactstrap';\nimport { Submit,Cancel } from \"../../../../../../constant\";\nimport Select from 'react-select';\nimport uuid from \"react-uuid\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport CKEditors from \"react-ckeditor-component\";\nimport CreateHashtagsListingComponent from \"./helpers/hashtags/createHashtagsListing.js\";\nimport LocationSearchInput from \"./helpers/location/searchAddress.js\";\nimport { XCircle } from \"react-feather\";\nimport \"./styles.css\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { DateRangePicker } from 'react-date-range';\nimport Dropzone from 'react-dropzone-uploader';\nimport { connect } from \"react-redux\";\nimport { saveListingData } from \"../../../../../../redux/actions/employer/listings/listingData.js\";\nimport desiredSkillsOptions from \"./helpers/options/desiredSkills.js\";\n\nconst idealTimespanOptions = [\n  { value: 7, label: '7 Days' },\n  { value: 10, label: '10 Days' },\n  { value: 14, label: '14 Days' },\n  { value: 18, label: '18 Days' },\n  { value: 23, label: '23 Days' },\n  { value: 27, label: '27 Days' },\n  { value: 31, label: '31 Days' },\n  { value: 35, label: '35 Days' },\n  { value: 40, label: '40 Days' },\n  { value: 45, label: '45 Days' },\n  { value: 50, label: '50 Days' },\n  { value: 55, label: '55 Days' },\n  { value: 60, label: '60 Days' }\n];\n// $1.00 === 1000xp\nconst experienceOptions = [\n    { value: '5,000 XP Reward & $5.00 To Post', label: '5,000 XP Reward & $5.00 To Post', experience: 5000, cost: 500 },\n    { value: '7,500 XP Reward & $7.50 To Post', label: '7,500 XP Reward & $7.50 To Post', experience: 7500, cost: 750 },\n    { value: '10,000 XP Reward & $10.00 To Post', label: '10,000 XP Reward & $10.00 To Post', experience: 10000, cost: 1000 },\n    { value: '15,000 XP Reward & $15.00 To Post', label: '15,000 XP Reward & $15.00 To Post', experience: 15000, cost: 1500 },\n    { value: '20,000 XP Reward & $20.00 To Post', label: '20,000 XP Reward & $20.00 To Post', experience: 20000, cost: 2000 },\n    { value: '25,000 XP Reward & $25.00 To Post', label: '25,000 XP Reward & $25.00 To Post', experience: 25000, cost: 2500 },\n    { value: '30,000 XP Reward & $30.00 To Post', label: '30,000 XP Reward & $30.00 To Post', experience: 30000, cost: 3000 },\n    { value: '40,000 XP Reward & $40.00 To Post', label: '40,000 XP Reward & $40.00 To Post', experience: 40000, cost: 4000 }\n]\nconst rankOptions = [\n    { value: '1-3', label: 'Levels 1-3' },\n    { value: '3-5', label: 'Levels 3-5' },\n    { value: '6-8', label: 'Levels 6-8' },\n    { value: '9-13', label: 'Levels 9-13' },\n    { value: '14-17', label: 'Levels 14-17' },\n    { value: '18-21', label: 'Levels 18-21' },\n    { value: '22-26', label: 'Levels 22-26' },\n    { value: '27-31', label: 'Levels 27-31' },\n    { value: '32-36', label: 'Levels 32-36' },\n    { value: '37-42', label: 'Levels 37-42' },\n    { value: '43-45', label: 'Levels 43-45' },\n    { value: '46-48', label: 'Levels 46-48' },\n    { value: '49-50', label: 'Levels 49-50' }\n];\nconst maxNumberOfHackersOptions = [\n    { label: \"1 Hacker\", value: 1 },\n    { label: \"2 Hackers\", value: 2 },\n    { label: \"3 Hackers\", value: 3 },\n    { label: \"4 Hackers\", value: 4 },\n    { label: \"5 Hackers\", value: 5 },\n    { label: \"6 Hackers\", value: 6 },\n    { label: \"7 Hackers\", value: 7 },\n    { label: \"8 Hackers\", value: 8 },\n    { label: \"9 Hackers\", value: 9 },\n    { label: \"10 Hackers\", value: 10 }\n];\nconst tokensApplyOptions = [\n    { value: 2, label: \"2 Tokens To Apply\" },\n    { value: 4, label: \"4 Tokens To Apply\" },\n    { value: 7, label: \"7 Tokens To Apply\" },\n    { value: 10, label: \"10 Tokens To Apply\" },\n    { value: 12, label: \"12 Tokens To Apply\" },\n    { value: 14, label: \"14 Tokens To Apply\" },\n    { value: 16, label: \"16 Tokens To Apply\" },\n    { value: 18, label: \"18 Tokens To Apply\" },\n    { value: 20, label: \"20 Tokens To Apply\" },\n    { value: 23, label: \"23 Tokens To Apply\" },\n    { value: 25, label: \"25 Tokens To Apply\" },\n    { value: 28, label: \"28 Tokens To Apply\" },\n    { value: 30, label: \"30 Tokens To Apply\" },\n    { value: 32, label: \"32 Tokens To Apply\" },\n    { value: 34, label: \"34 Tokens To Apply\" },\n    { value: 35, label: \"35 Tokens To Apply\" }\n];\nconst disclosureOptions = [\n    { label: \"Public Disclosure\", value: \"public-disclosure\" },\n    { label: \"Private Disclosure\", value: \"private-disclosure\" },\n    { label: \"Partial Disclosure\", value: \"partial-disclosure\" }\n];\nconst physicalOptions = [\n    { label: \"Physical Location Hacking Required\", value: \"physical-hack\" },\n    { label: \"Digital/Internet Asset Hacking Required\", value: \"digital-internet-hack\" }\n];\nconst visibilityOptions = [\n    { label: \"Fully Public\", value: \"public-anyone\" },\n    { label: \"Competition Winners ONLY\", value: \"competition-winners-only\" },\n    { label: \"Leaderboard Leaders ONLY\", value: \"leaderboard-leading-only\" },\n    { label: \"Private/Invite ONLY\", value: \"private-invite-only\" }\n];\nconst CreateJobListingMainHelper = (props) => {\n    const [ assetArray, setAssetArray ] = useState([]);\n    const [ timespan, setTimespan ] = useState(null);\n    const [ data, setData ] = useState({});\n    const [ requiredRankToApply, setRequiredRankToApply ] = useState(null);\n    const [ experienceAndCost, setExperienceAndCost ] = useState(null);\n    const [ desiredSkills, setDesiredSkills ] = useState([]);\n    const [ content,setContent ] = useState('Enter your content here...');\n    const [ maxNumberOfApplicants, setMaxNumberOfApplicants ] = useState(null);\n    const [ popoverOpen, setPopoverOpen ] = useState(false);\n    const [ tokensRequiredToApply, setTokensRequiredToApply ] = useState(null);\n    const [ disclosureVisibility, setDisclosureVisibility ] = useState(null);\n    const [ typeOfHack, setTypeOfHack ] = useState(null);\n    const [ rules, setRules ] = useState(\"\");\n    const [ outOfScope, setOutOfScope ] = useState(\"\");\n    const [ selectionRange, setSelectionRange ] = useState({\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection',\n    });\n    const [ availiableHackerDates, handleHackerDates ] = useState([{\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection',\n    }]);\n    const [ listingVisibility, setListingVisibility ] = useState(null);\n\n    const onChangeDescription = (evt) => {\n        const newContent = evt.editor.getData();\n        setContent(newContent)\n    }\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n\n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        })\n    }\n    const handleAssetAddition = (e) => {\n        e.preventDefault();\n        // assetName\n\n        setAssetArray(prevState => {\n            return [...prevState, {\n                id: uuid(),\n                name: data.assetName\n            }]\n        });\n        setData(prevState => {\n            return {\n                ...prevState,\n                assetName: \"\"\n            }\n        })\n    }\n    const changeBountyPrices = (e, rewardLevel, asset) => {\n        const { value } = e.target;\n\n        setAssetArray(prevState => {\n            return prevState.map((item, i) => {\n                if (item.id === asset.id) {\n                    return {\n                        ...item,\n                        [rewardLevel]: Number(value)\n                    }\n                } else {\n                    return item;\n                }\n            });\n        });\n    }\n    const renderBusinessLocationPortion = () => {\n        if (typeOfHack !== null && typeOfHack.value === \"physical-hack\") {\n            return (\n                <Fragment>\n                    <h6 className=\"mb-0\">Location - Physical Hacking (Only Provided To <strong>SELECTED/HIRED</strong> Applicants)</h6>\n                    <Form className=\"theme-form\">\n                        <Row>\n                            <Col sm=\"12\" lg=\"12\" md=\"12\" xl=\"12\">\n                                <FormGroup>\n                                    <Label htmlFor=\"exampleFormControlInput1\">Enter your company business address (the address that your hackers will be testing at):<span className=\"font-danger\">*</span></Label>\n                                    <LocationSearchInput props={props} />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Fragment>\n            );\n        }\n    }\n    const renderPhysicalHackingDates = () => {\n        if (typeOfHack !== null && typeOfHack.value === \"physical-hack\") {\n            return (\n                <Fragment>\n                    <Label htmlFor=\"exampleFormControlInput1\">Dates Availiable To Hackers To Test Physical/Digital Assets:<span className=\"font-danger\">*</span></Label>\n                    <p>These are the days that will be available to the <strong>hired/selected</strong> hacker canidates to choose from when deciding which days they will attempt to infiltrate your company. This is only relevant for <strong style={{ color: \"blue\" }}>PHYSICAL</strong> hacking requirements.</p>\n                    <p style={{ paddingBottom: \"20px\" }}></p>\n                    <DateRangePicker\n                        ranges={availiableHackerDates}\n                        onChange={handleDatesSelectable}\n                    />\n                </Fragment>\n            );\n        }\n    }\n    const handleDeadlineSelect = (ranges) => {\n        setSelectionRange(ranges.selection);\n    }\n    const handleDatesSelectable = (ranges) => {\n        handleHackerDates(prevState => {\n            console.log(\"PREVSTATE\", prevState);\n\n            return [...prevState, ranges.selection]\n        });\n    }\n    const getUploadParams = ({ meta }) => { \n        return { \n            url: 'https://httpbin.org/post' \n        } \n    };\n\n    const handleChangeStatus = ({ meta, file }, status) => { \n        console.log(status, meta, file);\n    };\n    const handleListingSubmission = (e) => {\n\n        e.preventDefault();\n\n        const data = {\n            requiredRankToApply,\n            publicCompanyName: data.publicCompanyName,\n            experienceAndCost,\n            desiredSkills,\n            maxNumberOfApplicants,\n            tokensRequiredToApply,\n            disclosureVisibility,\n            typeOfHack,\n            allowedTimespan: timespan,\n            listingVisibility,\n            expectedDateOfCompletion: selectionRange,\n            availiableDatesToHackers: availiableHackerDates\n        }\n    }\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Create Listing\" title=\"Create a public employer listing\"/>\n            <Container fluid={true}>\n                <Row>\n                    {/* <JobFilter /> */}\n                    <Col xl=\"12 xl-100\">\n                        <Card>\n                            <div className=\"job-search\">\n                                <CardBody className=\"pb-0\">\n                                    <Media>\n                                        <img className=\"img-40 img-fluid m-r-20\" src={one} alt=\"\" />\n                                        <Media body>\n                                            <h6 className=\"f-w-600\">\n                                                <a href=\"#\">Create an employer listing</a>\n                                                <span className=\"pull-right\">\n                                                {/* <Button color=\"primary\">\n                                                    <span>\n                                                        <i className=\"fa fa-check text-white\">\n                                                        </i>\n                                                    </span>{\"Save this job\"}\n                                                </Button> */}\n                                                </span>\n                                            </h6>\n                                            <p>Create a listing requesting for your company to be hacked (this will be public visible information to our database of hackers)</p>\n                                        </Media>\n                                    </Media>\n                                    <div className=\"job-description\">\n                                        <h6 className=\"mb-0\">General Details</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col md=\"6\" lg=\"6\" sm=\"12\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Public Company Name:<span className=\"font-danger\">*</span></Label>\n                                                        <Input value={data.publicCompanyName} onChange={handleChangeInput} className=\"form-control\" id=\"exampleFormControlInput1\" name=\"publicCompanyName\" type=\"text\" placeholder=\"Enter your company's publically known name\" />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md=\"6\" lg=\"6\" sm=\"12\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Preferred Rank/Level Required To Apply:<span className=\"font-danger\">*</span></Label>\n                                                        <Select\n                                                            value={requiredRankToApply}\n                                                            onChange={setRequiredRankToApply}\n                                                            options={rankOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput3\">Experience Rewarded To Winner + Cost To Post:<span className=\"font-danger\">*</span></Label>\n                                                        <p style={{ paddingTop: \"7px\", paddingBottom: \"7px\" }} className=\"text-left\">Experience is rewarded to the hacker winner. Hackers level up their accounts with XP points and can redeem the XP for cash ($-USD) after reaching certain ranks/levels. Having a <strong>higher</strong> XP reward will incentivize hackers to pick your company over others - however it <strong>costs more</strong>.</p>\n                                                        <Select\n                                                            value={experienceAndCost}\n                                                            onChange={setExperienceAndCost}\n                                                            options={experienceOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlpassword\">Required/Desired Skills From Hackers:<span className=\"font-danger\">*</span></Label>\n                                                        <MultiSelect\n                                                            options={desiredSkillsOptions}\n                                                            value={desiredSkills}\n                                                            onChange={setDesiredSkills}\n                                                            labelledBy=\"Select\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlpassword1\">HashTags/Tags (Hackers will use these to find your listing):<span className=\"font-danger\">*</span></Label>\n                                                        <CreateHashtagsListingComponent />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm=\"6\">\n                                                    <div className=\"col-form-label pt-0\"><strong>MAX</strong> Number Of Required Hackers:</div>\n                                                    <FormGroup>\n                                                        <Select\n                                                            value={maxNumberOfApplicants}\n                                                            onChange={setMaxNumberOfApplicants}\n                                                            options={maxNumberOfHackersOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\">\n                                                    <div onMouseEnter={() => {\n                                                        setPopoverOpen(true);\n                                                    }} id=\"PopoverID\" className=\"col-form-label pt-0\">Amount Of Tokens Required To Apply (hover for info):</div>\n                                                    <Popover\n                                                        placement={\"top\"}\n                                                        isOpen={popoverOpen}\n                                                        target={\"PopoverID\"}\n                                                        toggle={() => {\n                                                            setPopoverOpen(!popoverOpen);\n                                                        }}\n                                                    >\n                                                        <PopoverHeader>Tokens are required from hackers to apply to this job</PopoverHeader>\n                                                        <PopoverBody onMouseLeave={() => {\n                                                            setPopoverOpen(false);\n                                                        }}>\n                                                            Hackers purchase tokens in which they then use to apply to your listing(s). These are <strong>REQUIRED</strong> to apply to listings so please choose the amount you charge proportionally to the work required from your company and the reward given to successful hackers.\n                                                        </PopoverBody>\n                                                    </Popover>\n                                                    <FormGroup>\n                                                        <Select\n                                                            value={tokensRequiredToApply}\n                                                            onChange={setTokensRequiredToApply}\n                                                            options={tokensApplyOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput4\">Public Or Private Vulnerability Disclosures (Upon Successful Hack):</Label>\n                                                        <Select\n                                                            value={disclosureVisibility}\n                                                            onChange={setDisclosureVisibility}\n                                                            options={disclosureOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput4\">Type Of Hack Required (Physical/in-person <strong>OR</strong> digital/online assets):</Label>\n                                                        <Select\n                                                            value={typeOfHack}\n                                                            onChange={setTypeOfHack}\n                                                            options={physicalOptions}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        <h6 className=\"mb-0\">Timespan & Timeline Information + Visibility Type</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col md=\"6\" lg=\"6\" xl=\"6\">\n                                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12 xl-100\">\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"exampleFormControlInput1\">Timespan allocated for hackers to test/exploit (Maximum - from posted date):<span className=\"font-danger\">*</span></Label>\n                                                            <Select\n                                                                value={timespan}\n                                                                onChange={(value) => {\n                                                                    setTimespan(value);\n                                                                }}\n                                                                options={idealTimespanOptions}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12 xl-100\">\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"exampleFormControlInput1\">Visibility Type (Who Can See Your Listing Or Apply Once Live):<span className=\"font-danger\">*</span></Label>\n                                                            <Select\n                                                                value={listingVisibility}\n                                                                onChange={(value) => {\n                                                                    setListingVisibility(value);\n                                                                }}\n                                                                options={visibilityOptions}\n                                                            />\n                                                        </FormGroup>\n                                                        {renderPhysicalHackingDates()}\n                                                    </Col>\n                                                </Col>\n                                                <Col md=\"12\" lg=\"12\" xl=\"6 xl-100\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput1\">Estimated/Expected Day Of Completion (Must Be Successfully Hacked By This Day For Full Payment):<span className=\"font-danger\">*</span></Label>\n                                                        <p style={{ paddingBottom: \"20px\" }}>These are the days in which you expect the hired hackers/contractors to have <strong>successfully</strong> completed any hacks or attacks (digital or physical) against your company. Disclosures will occurr shortly after whichever days are selected and any further testing or reporting shall proceed at that point.</p>\n                                                        <DateRangePicker\n                                                            ranges={[selectionRange]}\n                                                            onChange={handleDeadlineSelect}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        {renderBusinessLocationPortion()}\n                                        <h6 className=\"mb-0\"><strong>DIGITAL</strong> Assets & Payment/Reward Information - Digital Scope</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col xl=\"12 xl-100\">\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"exampleFormControlInput7\">Asset Endpoint Or URL:<span className=\"font-danger\">*</span></Label>\n                                                        <InputGroup>\n                                                            <Input onChange={handleChangeInput} value={data.assetName} className=\"form-control\" id=\"exampleFormControlInput7\" name=\"assetName\" type=\"text\" placeholder=\"Eg.'s - api.yourcompany.com OR https://www.yourcompanywebsite.com\" />\n                                                            <InputGroupAddon addonType=\"append\"><Button onClick={handleAssetAddition} color=\"secondary\">Add Asset</Button></InputGroupAddon>\n                                                        </InputGroup>\n                                                    </FormGroup>\n                                                </Col>\n                                                <ListGroup>\n                                                {typeof assetArray !== \"undefined\" && assetArray.length > 0 ? assetArray.map((asset, index) => {\n                                                    return (\n                                                        <ListGroupItem key={index} className=\"list-group-item flex-column align-items-start\">\n                                                            <Row style={{ paddingBottom: \"12px\" }}>\n                                                                <ListGroupItem active>{asset.name}<div onClick={() => {\n                                                                    setAssetArray(prevState => {\n                                                                        return prevState.filter((item, index) => {\n                                                                            if (item.id !== asset.id) {\n                                                                                return item;\n                                                                            }\n                                                                        });\n                                                                    });   \n                                                                }} id=\"float-right-icon\"><XCircle /></div></ListGroupItem>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#ffc800\" }}>Low</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"lowSeverity\", asset);\n                                                                        }} className=\"form-control\" type=\"text\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#ed3824\" }}>Medium</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"mediumSeverity\", asset);\n                                                                        }} className=\"form-control\" type=\"text\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#8f0091\" }}>High</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"highSeverity\", asset);\n                                                                        }} className=\"form-control\" type=\"text\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col md=\"3\" lg=\"3\" sm=\"6\">\n                                                                    <FormGroup>\n                                                                        <Label><span style={{ color: \"#b30211\" }}>Critical</span> Severity Bounty Reward</Label>\n                                                                        <InputGroup>\n                                                                        <Input onChange={(e) => {\n                                                                            changeBountyPrices(e, \"criticalSeverity\", asset);\n                                                                        }} className=\"form-control\" type=\"text\" placeholder=\"Average Cash($) Reward Price\" aria-label=\"Average Cash($) Reward Price\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroupItem>\n                                                    );\n                                                }) : null}\n                                                </ListGroup>\n                                            </Row>\n                                        </Form>\n                                        <h6 className=\"mb-0\">Upload Any Supporting Documents/Files</h6>\n                                        <Form className=\"theme-form\">\n                                            <Row>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label className=\"col-form-label pt-0\">Upload File(s):<span className=\"font-danger\">*</span></Label>\n                                                        <div className=\"dz-message needsclick\">\n                                                            <Dropzone\n                                                                getUploadParams={getUploadParams}\n                                                                onChangeStatus={handleChangeStatus}\n                                                                maxFiles={5}\n                                                                multiple={true}\n                                                                canCancel={false}\n                                                                inputContent=\"Drop A File(s)\"\n                                                                styles={{\n                                                                    dropzone: { height: 225 },\n                                                                    dropzoneActive: { borderColor: 'green' },\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\" }}>Listing Description/Information</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Include as detailed of a description as you possibly can so our hackers will know what they're being asked to attempt/hack. This can be <strong>general</strong> information as well as any other information that you'd like to include. Strong/detailed listing descriptions generally always have higher response/application rates compared to minimal detail listings.</p>\n                                        <CKEditors\n                                            activeclassName=\"p10\"\n                                            content={content}\n                                            events={{\n                                                \"change\": onChangeDescription\n                                            }}\n                                        />\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\", paddingTop: \"25px\" }}>Program/Listing Rules & Conditions Of Engagement</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Please include an <strong>exhaustive list</strong> of specific <strong>RULES</strong> our hackers should follow and abide by while applying allowed hacks to avoid <strong>termination or suspension</strong> from our platform for misuse (referring to our hackers). We stand by our rules and proceedures so please be as detailed and clear as possible while outlines what you expect from potential hacker candiates and the conditions in place once hired.</p>\n                                        <SimpleMDE\n                                            id=\"editor_container\"\n                                            onChange={(value) => {\n                                                setRules(value);\n                                            }}\n                                            value={rules}\n                                        />\n                                        <h6 className=\"mb-0\" style={{ paddingBottom: \"15px\", paddingTop: \"25px\" }}><strong>OUT OF SCOPE</strong> Vulnerabilities & Boundaries</h6>\n                                        <p style={{ paddingBottom: \"25px\" }}>Please include an exhaustive list of which vulnerabilities are <strong>NOT</strong> included as acceptable reports as well as anything you would like our hackers to <strong>abstain</strong> from testing or tampering with such as texting accounts, unauthenticated tests, etc... <em>BE AS SPECIFIC AS POSSIBLE.</em></p>\n                                        <SimpleMDE\n                                            id=\"editor_container_two\"\n                                            onChange={(value) => {\n                                                setOutOfScope(value);\n                                            }}\n                                            value={outOfScope}\n                                        />\n                                    </div>\n                                </CardBody>\n                                <div className=\"card-footer\">\n                                    <Button onClick={handleListingSubmission} color=\"primary mr-1\">{Submit}</Button>\n                                    <Button color=\"light\">{Cancel}</Button>\n                                </div>\n                            </div>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n};\n\nexport default connect(null, { saveListingData })(CreateJobListingMainHelper);"]},"metadata":{},"sourceType":"module"}