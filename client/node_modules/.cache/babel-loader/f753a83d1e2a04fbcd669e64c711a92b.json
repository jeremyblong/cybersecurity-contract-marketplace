{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/index.js\";\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport Dropzone from 'react-dropzone-uploader';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { ProjectTitle, ClientName, ProjectRate, ProjectStatus, ProgressLevel, ProjectSize, Small, Medium, Big, StartingDate, EndingDate, EnterSomeDetails, UploadProjectFile, Add, Cancel, Done, Doing, Maps } from '../../../../../../../../constant';\nimport reduxFormHelpers from \"./helpers/reduxFormHelpers.js\";\nimport optionHelper from \"./helpers/options/options.js\";\nimport Select from \"react-select\";\nconst courseTitle = reduxFormHelpers().courseTitle;\nconst courseCategory = reduxFormHelpers().courseCategory;\nconst {\n  courseCategoryOptions\n} = optionHelper;\n\nconst CreateNewCoursePageOne = () => {\n  // create ref's local\n  const courseCategoryGeneratedRef = useRef(null); // redux form logic\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }); // collect redux-hook-form values\n\n  const currentValues = getValues(); // called every time a file's `status` changes\n\n  const handleChangeStatus = (_ref, status) => {\n    let {\n      meta,\n      file\n    } = _ref;\n    console.log(\"handleChangeStatus ran...\", meta, file, status);\n  };\n\n  const renderErrorsFormUploadContent = (e, errors) => {\n    console.log(\"renderErrorsFormUploadContent ran...\", e, errors);\n  };\n\n  const onSubmission = (e, data) => {\n    console.log(\"onSubmission ran...\", e, data);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    onSubmit: handleSubmit(onSubmission, (e, errors) => {\n      return renderErrorsFormUploadContent(e, errors);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, courseTitle.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, courseTitle.check(setError, register), {\n    className: \"form-control\",\n    type: courseTitle.type,\n    name: courseTitle.name,\n    placeholder: courseTitle.placeholder,\n    onChange: e => courseTitle.onChange(e, setValue),\n    value: currentValues.courseTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  })), errors.courseTitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 63\n    }\n  }, errors.courseTitle.message) : null))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, courseCategory.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: courseCategory.name\n  }, courseCategory.check(setError, register, clearErrors), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: courseCategoryGeneratedRef,\n        autoBlur: true,\n        placeholder: courseCategory.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          courseCategoryGeneratedRef.current.blur();\n        },\n        value: currentValues.courseCategory,\n        onChange: selectedOption => courseCategory.onChange(selectedOption, setValue),\n        options: courseCategoryOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 41\n    }\n  })), errors.courseCategory ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 66\n    }\n  }, errors.courseCategory.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, ProgressLevel), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"progress_level\",\n    className: \"form-control digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, \"50\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }, \"70\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, \"100\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, ProjectSize), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, Small), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, Medium), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, Big)))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, StartingDate), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepicker-here form-control\",\n    selected: null,\n    onChange: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, EndingDate), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepicker-here form-control\",\n    selected: null,\n    endDate: null,\n    onChange: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, EnterSomeDetails), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    className: \"form-control\",\n    name: \"description\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, errors.description && 'Some Details is required')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, UploadProjectFile), /*#__PURE__*/React.createElement(Dropzone, {\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 1,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Drop A File\",\n    styles: {\n      dropzone: {\n        width: '100%',\n        height: 50\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    color: \"info-2x\",\n    outline: true,\n    className: \"btn-square-info\",\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }, \"Submit & Continue w/Process\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(CreateNewCoursePageOne));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageOne/index.js"],"names":["React","Fragment","useState","useEffect","useRef","Dropzone","Row","Col","Card","CardBody","Form","FormGroup","Label","Input","Button","DatePicker","useForm","Controller","connect","withRouter","Link","ProjectTitle","ClientName","ProjectRate","ProjectStatus","ProgressLevel","ProjectSize","Small","Medium","Big","StartingDate","EndingDate","EnterSomeDetails","UploadProjectFile","Add","Cancel","Done","Doing","Maps","reduxFormHelpers","optionHelper","Select","courseTitle","courseCategory","courseCategoryOptions","CreateNewCoursePageOne","courseCategoryGeneratedRef","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","handleChangeStatus","status","meta","file","console","log","renderErrorsFormUploadContent","e","onSubmission","data","label","check","type","name","placeholder","onChange","message","field","current","blur","selectedOption","color","description","dropzone","width","height","dropzoneActive","borderColor","mapStateToProps","state","userData","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport Dropzone from 'react-dropzone-uploader';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { ProjectTitle, ClientName, ProjectRate, ProjectStatus, ProgressLevel, ProjectSize, Small, Medium, Big, StartingDate, EndingDate, EnterSomeDetails, UploadProjectFile, Add, Cancel, Done, Doing, Maps } from '../../../../../../../../constant';\nimport reduxFormHelpers from \"./helpers/reduxFormHelpers.js\";\nimport optionHelper from \"./helpers/options/options.js\";\nimport Select from \"react-select\";\n\nconst courseTitle = reduxFormHelpers().courseTitle;\nconst courseCategory = reduxFormHelpers().courseCategory;\n\nconst { courseCategoryOptions } = optionHelper;\n\n\nconst CreateNewCoursePageOne = () => {\n    // create ref's local\n    const courseCategoryGeneratedRef = useRef(null);\n    // redux form logic\n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n    // collect redux-hook-form values\n    const currentValues = getValues();\n\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => {\n        console.log(\"handleChangeStatus ran...\", meta, file, status);\n    }\n\n    const renderErrorsFormUploadContent = (e, errors) => {\n        console.log(\"renderErrorsFormUploadContent ran...\", e, errors);\n    }\n    const onSubmission = (e, data) => {\n        console.log(\"onSubmission ran...\", e, data);\n    }\n    return (\n        <Fragment>\n            <Row>\n                <Col sm=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Form className=\"theme-form\" onSubmit={handleSubmit(onSubmission, (e, errors) => {\n                                return renderErrorsFormUploadContent(e, errors);\n                            })}>\n                            <Row>\n                                <Col>\n                                    <FormGroup>\n                                        <Label>{courseTitle.label}</Label>\n                                        <Input {...courseTitle.check(setError, register)} className=\"form-control\" type={courseTitle.type} name={courseTitle.name} placeholder={courseTitle.placeholder} onChange={(e) => courseTitle.onChange(e, setValue)} value={currentValues.courseTitle} />\n                                        {errors.courseTitle ? <span className=\"span-tooltip\">{errors.courseTitle.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"6\">\n                                    <FormGroup>\n                                        <Label>{courseCategory.label}</Label>\n                                        <Controller\n                                            control={control}\n                                            name={courseCategory.name}\n                                            {...courseCategory.check(setError, register, clearErrors)}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    ref={courseCategoryGeneratedRef}\n                                                    autoBlur={true}\n                                                    placeholder={courseCategory.placeholder}\n                                                    defaultValue={null}\n                                                    onMenuClose={() => {\n                                                        courseCategoryGeneratedRef.current.blur();\n                                                    }}\n                                                    value={currentValues.courseCategory}\n                                                    onChange={(selectedOption) => courseCategory.onChange(selectedOption, setValue)}\n                                                    options={courseCategoryOptions}\n                                                />\n                                            )}\n                                        />\n                                        {errors.courseCategory ? <span className=\"span-tooltip\">{errors.courseCategory.message}</span> : null}\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"6\">\n                                    <FormGroup>\n                                        <Label>{ProgressLevel}</Label>\n                                        <Input type=\"select\"  name=\"progress_level\" className=\"form-control digits\">\n                                            <option value=\"25\">{\"25\"}</option>\n                                            <option value=\"50\">{\"50\"}</option>\n                                            <option value=\"70\">{\"70\"}</option>\n                                            <option value=\"100\">{\"100\"}</option>\n                                        </Input>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"4\">\n                                <FormGroup>\n                                    <Label>{ProjectSize}</Label>\n                                    <select className=\"form-control digits\">\n                                    <option>{Small}</option>\n                                    <option>{Medium}</option>\n                                    <option>{Big}</option>\n                                    </select>\n                                </FormGroup>\n                                </Col>\n                                <Col sm=\"4\">\n                                <FormGroup>\n                                    <Label>{StartingDate}</Label>\n                                    <DatePicker className=\"datepicker-here form-control\"  selected={null} onChange={null} />\n                                </FormGroup>\n                                </Col>\n                                <Col sm=\"4\">\n                                <FormGroup>\n                                    <Label>{EndingDate}</Label>\n                                    <DatePicker className=\"datepicker-here form-control\"  selected={null} endDate={null} onChange={null} />\n                                </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                <FormGroup>\n                                    <Label>{EnterSomeDetails}</Label>\n                                    <Input  type=\"textarea\" className=\"form-control\" name=\"description\" rows=\"3\"/>\n                                    <span style={{ color: \"red\" }}>{errors.description && 'Some Details is required'}</span>\n                                </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                <FormGroup>\n                                    <Label>{UploadProjectFile}</Label>\n                                        <Dropzone\n                                            onChangeStatus={handleChangeStatus}\n                                            maxFiles={1}\n                                            multiple={false}\n                                            canCancel={false}\n                                            inputContent=\"Drop A File\"\n                                            styles={{\n                                                dropzone: { width: '100%', height: 50 },\n                                                dropzoneActive: { borderColor: 'green' },\n                                            }}\n                                        />\n                                </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <FormGroup className=\"mb-0\">\n                                        <Button style={{ width: \"100%\" }} color=\"info-2x\" outline className={\"btn-square-info\"} className=\"mr-3\">Submit & Continue w/Process</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(withRouter(CreateNewCoursePageOne));"]},"metadata":{},"sourceType":"module"}