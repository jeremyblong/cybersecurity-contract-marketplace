{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/pageThreeMain.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport helpers from \"./helpers/mainFunctions.js\";\nimport { Col, Button, Form, Label, Input, Card, CardHeader, CardBody, Media, Row, Popover, PopoverBody, PopoverHeader, Container, ListGroupItem, ListGroup } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport { WithContext as ReactTags } from 'react-tag-input';\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13]\n};\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst PageThreeHelper = _ref => {\n  let {\n    saveSoftwareListingInfo,\n    previouslySavedSoftwareData,\n    userData\n  } = _ref;\n  // create redirect ability\n  const history = useHistory(); // create Refs...\n\n  const listingTimespanGeneratedRef = useRef(null);\n  const [validateClass, setValidateClass] = useState(false);\n  const [tags, setTagsState] = useState([]);\n  const [suggestions, setSuggestionsState] = useState(helpers.suggestionsPreselected);\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    getValues,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  }); // react state initialization goes here...\n\n  const [data, setData] = useState({\n    demoURL: \"\"\n  }); // const [validateClass , setValidateClass] = useState(false);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    clearErrors(name);\n    setData(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n    return value;\n  };\n\n  const onSubmit = (data, e) => {\n    // prevent reload\n    e.preventDefault();\n\n    if (data !== '') {\n      // everything is properly filled out\n      console.log(\"success! :) - : \", data);\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const onError = (errors, e) => {\n    console.log(\"error submitting...!\", errors);\n  };\n\n  const listingTimelineSelectClose = data => {\n    console.log(\"closed menu. check order.\", data);\n    const timespan = gatheredValues.listingTimespan;\n\n    if (typeof timespan !== \"undefined\" && Object.keys(timespan).length > 0) {\n      clearErrors(\"listingTimespan\");\n    }\n\n    ;\n  };\n\n  console.log(\"data : \", data);\n  console.log(\"getValues(listingTimespan)\", getValues());\n  const {\n    handleDrag,\n    handleDelete\n  } = helpers;\n  const gatheredValues = getValues();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: `needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`,\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Demo URL (\", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"red\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 46\n    }\n  }, \"optional\"), \" - if you want to display working code at an external URL)\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, register(\"demoURL\", {\n    required: false,\n    minLength: {\n      value: 15,\n      message: \"You must enter AT Least 15 characters\"\n    },\n    maxLength: {\n      value: 75,\n      message: \"You may ONLY enter 75 characters or less\"\n    },\n    onBlur: e => {\n      // check if valid url in helper file.\n      return helpers.CalculateWhetherURLIsLegit(e.target.value);\n    }\n  }), {\n    className: \"form-control\",\n    name: \"demoURL\",\n    type: \"text\",\n    placeholder: \"Listing title\",\n    onChange: handleInputChange,\n    value: data.demoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"input-surrounding-col\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, \"Select how long you would like your listing to run for (length of \", /*#__PURE__*/React.createElement(\"em\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 102\n    }\n  }, \"both\"), \" \\\"buy-it-now\\\" & \\\"actions\\\")\"), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"listingTimespan\"\n  }, register(\"listingTimespan\", {\n    required: true,\n    onBlur: e => {\n      console.log(\"onBlur...!\", e);\n      const value = e.target.value;\n      setTimeout(() => {\n        // clear error after proper selection\n        if (typeof value !== \"undefined\" && Object.keys(value).length > 0) {\n          clearErrors(\"listingTimespan\");\n        } else {\n          // set error as nothing was selected (blank 'click-off' selection of selector)\n          setError(\"listingTimespan\", {\n            type: \"manual\",\n            message: \"You haven't selected a 'timespan' & a selection is required before proceeding\"\n          });\n        }\n      }, 50);\n    }\n  }), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: listingTimespanGeneratedRef,\n        autoBlur: true,\n        defaultValue: null,\n        onMenuClose: listingTimelineSelectClose,\n        value: gatheredValues.listingTimespan,\n        onChange: selectedOption => {\n          console.log(\"getValues(listingTimespan\", gatheredValues);\n\n          if (typeof gatheredValues.listingTimespan === \"undefined\") {\n            setValue('listingTimespan', selectedOption, {\n              shouldValidate: false\n            });\n          } else {\n            clearErrors(\"listingTimespan\");\n          }\n\n          listingTimespanGeneratedRef.current.blur();\n        },\n        options: helpers.listingTimespanOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })), errors.listingTimespan ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 55\n    }\n  }, errors.listingTimespan.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 142\n    }\n  }, \"15 tags MAX\")), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: \"hashtags\"\n  }, register(\"hashtags\", {\n    required: true,\n    onBlur: e => {\n      console.log(\"onBlur...!\", e); // const value = e.target.value;\n    }\n  }), {\n    render: _ref3 => {\n      let {\n        field\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(ReactTags, Object.assign({}, field, {\n        tags: tags,\n        suggestions: suggestions,\n        classNames: {\n          tags: 'hashtagsTagsClass',\n          tagInput: 'hashtagsTagInputClass',\n          tagInputField: 'hashtagsTagInputFieldClass',\n          selected: 'hashtagsSelectedClass',\n          tag: 'hashtagsTagClass',\n          remove: 'hashtagsRemoveClass',\n          suggestions: 'hashtagsSuggestionsClass',\n          activeSuggestion: 'hashtagsActiveSuggestionClass'\n        },\n        handleDelete: index => {\n          setTagsState(handleDelete(index, tags));\n        },\n        renderSuggestion: _ref4 => {\n          let {\n            text,\n            index\n          } = _ref4;\n          console.log(\"index\", index); // return list item(s)\n\n          return /*#__PURE__*/React.createElement(ListGroupItem, {\n            active: index % 2 === 1 ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 56\n            }\n          }, text);\n        },\n        placeholder: \"Enter a tag (these are how people search & find your listing)\",\n        maxLength: 15,\n        handleAddition: tag => {\n          setTagsState(prevState => {\n            return [...prevState, tag];\n          });\n        },\n        handleDrag: (tag, currPos, newPos) => {\n          console.log(tag, currPos, newPos);\n          setTagsState(handleDrag(tag, currPos, newPos, tags));\n        },\n        delimiters: delimiters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  })), errors.hashtags ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 48\n    }\n  }, errors.hashtags.message) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, \"~ Submit form details and proceed to next page ~\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveSoftwareListingInfo\n})(PageThreeHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/softwareHardwareExchanges/software/createListing/multiStepPages/pageThree/pageThreeMain.js"],"names":["React","useState","useRef","useEffect","connect","NotificationManager","saveSoftwareListingInfo","_","useHistory","helpers","Col","Button","Form","Label","Input","Card","CardHeader","CardBody","Media","Row","Popover","PopoverBody","PopoverHeader","Container","ListGroupItem","ListGroup","useForm","Controller","Select","WithContext","ReactTags","KeyCodes","comma","enter","delimiters","PageThreeHelper","previouslySavedSoftwareData","userData","history","listingTimespanGeneratedRef","validateClass","setValidateClass","tags","setTagsState","suggestions","setSuggestionsState","suggestionsPreselected","register","handleSubmit","control","reset","getValues","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","data","setData","demoURL","handleInputChange","e","name","value","target","prevState","onSubmit","preventDefault","console","log","showMessages","onError","listingTimelineSelectClose","timespan","gatheredValues","listingTimespan","Object","keys","length","handleDrag","handleDelete","color","textDecorationLine","required","minLength","message","maxLength","onBlur","CalculateWhetherURLIsLegit","setTimeout","type","field","selectedOption","shouldValidate","current","blur","listingTimespanOptions","paddingTop","tagInput","tagInputField","selected","tag","remove","activeSuggestion","index","text","currPos","newPos","hashtags","marginTop","width","mapStateToProps","state","auth","softwareListingSale","softwareListingSaleInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,uBAAT,QAAwC,kGAAxC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgDC,UAAhD,EAA4DC,QAA5D,EAAsEC,KAAtE,EAA6EC,GAA7E,EAAkFC,OAAlF,EAA2FC,WAA3F,EAAwGC,aAAxG,EAAuHC,SAAvH,EAAkIC,aAAlI,EAAiJC,SAAjJ,QAAkK,YAAlK;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAW,IAAIC,SAAxB,QAAyC,iBAAzC;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE,GADM;AAEbC,EAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL;AAFM,CAAjB;AAKA,MAAMC,UAAU,GAAG,CAAC,GAAGH,QAAQ,CAACE,KAAb,EAAoBF,QAAQ,CAACC,KAA7B,CAAnB;;AAEA,MAAMG,eAAe,GAAG,QAAwE;AAAA,MAAvE;AAAE7B,IAAAA,uBAAF;AAA2B8B,IAAAA,2BAA3B;AAAwDC,IAAAA;AAAxD,GAAuE;AAC5F;AACA,QAAMC,OAAO,GAAG9B,UAAU,EAA1B,CAF4F,CAG5F;;AACA,QAAM+B,2BAA2B,GAAGrC,MAAM,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsC,aAAD,EAAiBC,gBAAjB,IAAqCxC,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAEyC,IAAF,EAAQC,YAAR,IAAyB1C,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAE2C,WAAF,EAAeC,mBAAf,IAAuC5C,QAAQ,CAACQ,OAAO,CAACqC,sBAAT,CAArD;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA,QAA/D;AAAyEC,IAAAA,WAAzE;AAAsFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAjG,MAA+G9B,OAAO,CAAC;AACzH+B,IAAAA,IAAI,EAAE,WADmH;AAEzHC,IAAAA,cAAc,EAAE;AAFyG,GAAD,CAA5H,CAT4F,CAc5F;;AACA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoB3D,QAAQ,CAAC;AAC/B4D,IAAAA,OAAO,EAAE;AADsB,GAAD,CAAlC,CAf4F,CAkB5F;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAZ,IAAAA,WAAW,CAACU,IAAD,CAAX;AAEAJ,IAAAA,OAAO,CAACO,SAAS,IAAI;AACjB,aAAO,EACH,GAAGA,SADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALM,CAAP;AAOA,WAAOA,KAAP;AACH,GAbD;;AAcA,QAAMG,QAAQ,GAAG,CAACT,IAAD,EAAOI,CAAP,KAAa;AAC1B;AACAA,IAAAA,CAAC,CAACM,cAAF;;AAEA,QAAIV,IAAI,KAAK,EAAb,EAAiB;AACb;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCZ,IAAhC;AACH,KAHD,MAGO;AACHH,MAAAA,MAAM,CAACgB,YAAP;AACH;AACJ,GAVD;;AAWA,QAAMC,OAAO,GAAG,CAACjB,MAAD,EAASO,CAAT,KAAe;AAC3BO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,MAApC;AACH,GAFD;;AAGA,QAAMkB,0BAA0B,GAAIf,IAAD,IAAU;AACzCW,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCZ,IAAzC;AAEA,UAAMgB,QAAQ,GAAGC,cAAc,CAACC,eAAhC;;AAEA,QAAK,OAAOF,QAAP,KAAoB,WAArB,IAAsCG,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAAtB,GAA+B,CAAzE,EAA6E;AACzE1B,MAAAA,WAAW,CAAC,iBAAD,CAAX;AACH;;AAAA;AACJ,GARD;;AASAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,IAAvB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CpB,SAAS,EAAnD;AAEA,QAAM;AAAE8B,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BzE,OAArC;AAEA,QAAMmE,cAAc,GAAGzB,SAAS,EAAhC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,uCAAsCX,aAAa,GAAG,eAAH,GAAqB,EAAG,EAA7F;AAAgG,IAAA,UAAU,EAAC,EAA3G;AAA8G,IAAA,QAAQ,EAAEQ,YAAY,CAACoB,QAAD,EAAWK,OAAX,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAiB;AAAQ,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,kBAAkB,EAAE;AAApC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,+DADJ,eAEI,+CAAWrC,QAAQ,CAAC,SAAD,EAAY;AAAEsC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,SAAS,EAAE;AACzDrB,MAAAA,KAAK,EAAE,EADkD;AAEzDsB,MAAAA,OAAO,EAAE;AAFgD,KAA9B;AAG5BC,IAAAA,SAAS,EAAE;AACVvB,MAAAA,KAAK,EAAE,EADG;AAEVsB,MAAAA,OAAO,EAAE;AAFC,KAHiB;AAM5BE,IAAAA,MAAM,EAAG1B,CAAD,IAAO;AACd;AACA,aAAOtD,OAAO,CAACiF,0BAAR,CAAmC3B,CAAC,CAACG,MAAF,CAASD,KAA5C,CAAP;AACH;AAT8B,GAAZ,CAAnB;AASK,IAAA,SAAS,EAAC,cATf;AAS8B,IAAA,IAAI,EAAC,SATnC;AAS6C,IAAA,IAAI,EAAC,MATlD;AASyD,IAAA,WAAW,EAAC,eATrE;AASqF,IAAA,QAAQ,EAAEH,iBAT/F;AASkH,IAAA,KAAK,EAAEH,IAAI,CAACE,OAT9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,eAYI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC,aAAjC,CAZJ,CADJ,eAeI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,IAA1C;AAA+C,IAAA,EAAE,EAAC,GAAlD;AAAsD,IAAA,EAAE,EAAC,GAAzD;AAA6D,IAAA,EAAE,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAAyE;AAAI,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzE,mCADJ,eAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAElC,OADb;AAEI,IAAA,IAAI,EAAC;AAFT,KAGQF,QAAQ,CAAC,iBAAD,EAAoB;AAAEsC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBI,IAAAA,MAAM,EAAG1B,CAAD,IAAO;AAE7DO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,CAA1B;AAEA,YAAME,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AAEA0B,MAAAA,UAAU,CAAC,MAAM;AACb;AACA,YAAK,OAAO1B,KAAP,KAAiB,WAAlB,IAAmCa,MAAM,CAACC,IAAP,CAAYd,KAAZ,EAAmBe,MAAnB,GAA4B,CAAnE,EAAuE;AACnE1B,UAAAA,WAAW,CAAC,iBAAD,CAAX;AACH,SAFD,MAEO;AACH;AACAD,UAAAA,QAAQ,CAAC,iBAAD,EAAoB;AACxBuC,YAAAA,IAAI,EAAE,QADkB;AAExBL,YAAAA,OAAO,EAAE;AAFe,WAApB,CAAR;AAIH;AACJ,OAXS,EAWP,EAXO,CAAV;AAYH;AAlB+B,GAApB,CAHhB;AAsBI,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEM,QAAAA;AAAF,OAAD;AAAA,0BACJ,oBAAC,MAAD,oBACQA,KADR;AAEI,QAAA,GAAG,EAAEtD,2BAFT;AAGI,QAAA,QAAQ,EAAE,IAHd;AAII,QAAA,YAAY,EAAE,IAJlB;AAKI,QAAA,WAAW,EAAEmC,0BALjB;AAMI,QAAA,KAAK,EAAEE,cAAc,CAACC,eAN1B;AAOI,QAAA,QAAQ,EAAGiB,cAAD,IAAoB;AAE1BxB,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,cAAzC;;AAEA,cAAI,OAAOA,cAAc,CAACC,eAAtB,KAA0C,WAA9C,EAA2D;AACvDzB,YAAAA,QAAQ,CAAC,iBAAD,EAAoB0C,cAApB,EAAoC;AAAEC,cAAAA,cAAc,EAAE;AAAlB,aAApC,CAAR;AACH,WAFD,MAEO;AACHzC,YAAAA,WAAW,CAAC,iBAAD,CAAX;AACH;;AAEDf,UAAAA,2BAA2B,CAACyD,OAA5B,CAAoCC,IAApC;AACH,SAlBL;AAmBI,QAAA,OAAO,EAAExF,OAAO,CAACyF,sBAnBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADI;AAAA,KAtBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAgDK1C,MAAM,CAACqB,eAAP,gBAAyB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrB,MAAM,CAACqB,eAAP,CAAuBU,OAAvD,CAAzB,GAAkG,IAhDvG,eAiDI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC,aAAjC,CAjDJ,CAfJ,CADJ,eAoEI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAAiH;AAAQ,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjH,CADJ,eAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAElC,OADb;AAEI,IAAA,IAAI,EAAC;AAFT,KAGQF,QAAQ,CAAC,UAAD,EAAa;AAAEsC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBI,IAAAA,MAAM,EAAG1B,CAAD,IAAO;AAEtDO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,CAA1B,EAFsD,CAItD;AACH;AALwB,GAAb,CAHhB;AASI,IAAA,MAAM,EAAE;AAAA,UAAC;AAAE8B,QAAAA;AAAF,OAAD;AAAA,0BACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD,oBACQA,KADR;AAEI,QAAA,IAAI,EAAEnD,IAFV;AAGI,QAAA,WAAW,EAAEE,WAHjB;AAII,QAAA,UAAU,EAAE;AACRF,UAAAA,IAAI,EAAE,mBADE;AAER0D,UAAAA,QAAQ,EAAE,uBAFF;AAGRC,UAAAA,aAAa,EAAE,4BAHP;AAIRC,UAAAA,QAAQ,EAAE,uBAJF;AAKRC,UAAAA,GAAG,EAAE,kBALG;AAMRC,UAAAA,MAAM,EAAE,qBANA;AAOR5D,UAAAA,WAAW,EAAE,0BAPL;AAQR6D,UAAAA,gBAAgB,EAAE;AARV,SAJhB;AAcI,QAAA,YAAY,EAAGC,KAAD,IAAW;AACrB/D,UAAAA,YAAY,CAACuC,YAAY,CAACwB,KAAD,EAAQhE,IAAR,CAAb,CAAZ;AACH,SAhBL;AAiBI,QAAA,gBAAgB,EAAI,SAAqB;AAAA,cAApB;AAAEiE,YAAAA,IAAF;AAAQD,YAAAA;AAAR,WAAoB;AACrCpC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmC,KAArB,EADqC,CAErC;;AACA,8BAAO,oBAAC,aAAD;AAAe,YAAA,MAAM,EAAEA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,IAAlB,GAAyB,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwDC,IAAxD,CAAP;AACH,SArBL;AAsBI,QAAA,WAAW,EAAE,+DAtBjB;AAuBI,QAAA,SAAS,EAAE,EAvBf;AAwBI,QAAA,cAAc,EAAGJ,GAAD,IAAS;AACrB5D,UAAAA,YAAY,CAACwB,SAAS,IAAI;AACtB,mBAAO,CAAC,GAAGA,SAAJ,EAAeoC,GAAf,CAAP;AACH,WAFW,CAAZ;AAGH,SA5BL;AA6BI,QAAA,UAAU,EAAE,CAACA,GAAD,EAAMK,OAAN,EAAeC,MAAf,KAA0B;AAClCvC,UAAAA,OAAO,CAACC,GAAR,CAAYgC,GAAZ,EAAiBK,OAAjB,EAA0BC,MAA1B;AAEAlE,UAAAA,YAAY,CAACsC,UAAU,CAACsB,GAAD,EAAMK,OAAN,EAAeC,MAAf,EAAuBnE,IAAvB,CAAX,CAAZ;AACH,SAjCL;AAkCI,QAAA,UAAU,EAAER,UAlChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADI;AAAA,KATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAoDKsB,MAAM,CAACsD,QAAP,gBAAkB;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCtD,MAAM,CAACsD,QAAP,CAAgBvB,OAAhD,CAAlB,GAAoF,IApDzF,eAqDI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC,aAAjC,CArDJ,CADJ,CApEJ,eA6HI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,EAAE,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjC;AAAoD,IAAA,IAAI,EAAC,QAAzD;AAAkE,IAAA,OAAO,EAAE,MAAM,CAEhF,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,CADJ,CA7HJ,CADJ,CADJ,CADJ;AA2IH,CA3MD;;AA4MA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH7E,IAAAA,QAAQ,EAAE6E,KAAK,CAACC,IAAN,CAAWxD,IADlB;AAEHvB,IAAAA,2BAA2B,EAAE8E,KAAK,CAACE,mBAAN,CAA0BC;AAFpD,GAAP;AAIH,CALD;;AAMA,eAAejH,OAAO,CAAC6G,eAAD,EAAkB;AAAE3G,EAAAA;AAAF,CAAlB,CAAP,CAAsD6B,eAAtD,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from 'react-notifications';\nimport { saveSoftwareListingInfo } from \"../../../../../../../redux/actions/hackers/createSoftwareListing/createNewSoftwareListingSale.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\nimport helpers from \"./helpers/mainFunctions.js\";\nimport { Col, Button, Form, Label, Input, Card, CardHeader, CardBody, Media, Row, Popover, PopoverBody, PopoverHeader, Container, ListGroupItem, ListGroup } from 'reactstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\n\nconst KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n};\n  \nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nconst PageThreeHelper = ({ saveSoftwareListingInfo, previouslySavedSoftwareData, userData }) => {\n    // create redirect ability\n    const history = useHistory();\n    // create Refs...\n    const listingTimespanGeneratedRef = useRef(null);\n    const [validateClass , setValidateClass] = useState(false);\n    const [ tags, setTagsState ] = useState([]);\n    const [ suggestions, setSuggestionsState ] = useState(helpers.suggestionsPreselected);\n    \n    const { register, handleSubmit, control, reset, getValues, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    // react state initialization goes here...\n    const [ data, setData ] = useState({\n        demoURL: \"\"\n    });\n    // const [validateClass , setValidateClass] = useState(false);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n    \n        clearErrors(name);\n    \n        setData(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n    \n        return value;\n    };\n    const onSubmit = (data, e) => {\n        // prevent reload\n        e.preventDefault();\n\n        if (data !== '') {\n            // everything is properly filled out\n            console.log(\"success! :) - : \", data);\n        } else {\n            errors.showMessages();\n        }\n    };\n    const onError = (errors, e) => {\n        console.log(\"error submitting...!\", errors);\n    };\n    const listingTimelineSelectClose = (data) => {\n        console.log(\"closed menu. check order.\", data);\n\n        const timespan = gatheredValues.listingTimespan;\n\n        if ((typeof timespan !== \"undefined\") && (Object.keys(timespan).length > 0)) {\n            clearErrors(\"listingTimespan\");\n        };\n    }\n    console.log(\"data : \", data);\n\n    console.log(\"getValues(listingTimespan)\", getValues());\n\n    const { handleDrag, handleDelete } = helpers;\n\n    const gatheredValues = getValues();\n    return (\n        <div>\n            <Container fluid={true}>\n                <Form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit, onError)}>\n                    <Row>\n                        <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Label>Demo URL (<strong style={{ color: \"red\", textDecorationLine: \"underline\" }}>optional</strong> - if you want to display working code at an external URL)</Label>\n                            <input {...register(\"demoURL\", { required: false, minLength: {\n                                value: 15,\n                                message: \"You must enter AT Least 15 characters\"\n                            }, maxLength: {\n                                value: 75,\n                                message: \"You may ONLY enter 75 characters or less\"\n                            }, onBlur: (e) => {\n                                // check if valid url in helper file.\n                                return helpers.CalculateWhetherURLIsLegit(e.target.value);\n                            }})} className=\"form-control\" name=\"demoURL\" type=\"text\" placeholder=\"Listing title\" onChange={handleInputChange} value={data.demoURL} />\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                        <Col className=\"input-surrounding-col\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                            <Label>Select how long you would like your listing to run for (length of <em style={{ color: \"blue\" }}>both</em> \"buy-it-now\" & \"actions\")</Label>\n                            <Controller\n                                control={control}\n                                name=\"listingTimespan\"\n                                {...register(\"listingTimespan\", { required: true, onBlur: (e) => {\n\n                                    console.log(\"onBlur...!\", e);\n\n                                    const value = e.target.value;\n\n                                    setTimeout(() => {\n                                        // clear error after proper selection\n                                        if ((typeof value !== \"undefined\") && (Object.keys(value).length > 0)) {\n                                            clearErrors(\"listingTimespan\");\n                                        } else {\n                                            // set error as nothing was selected (blank 'click-off' selection of selector)\n                                            setError(\"listingTimespan\", {\n                                                type: \"manual\",\n                                                message: \"You haven't selected a 'timespan' & a selection is required before proceeding\",\n                                            });\n                                        }\n                                    }, 50);\n                                }})}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        ref={listingTimespanGeneratedRef}\n                                        autoBlur={true}\n                                        defaultValue={null}\n                                        onMenuClose={listingTimelineSelectClose}\n                                        value={gatheredValues.listingTimespan}\n                                        onChange={(selectedOption) => {\n\n                                            console.log(\"getValues(listingTimespan\", gatheredValues);\n\n                                            if (typeof gatheredValues.listingTimespan === \"undefined\") {\n                                                setValue('listingTimespan', selectedOption, { shouldValidate: false });\n                                            } else {\n                                                clearErrors(\"listingTimespan\");\n                                            }\n\n                                            listingTimespanGeneratedRef.current.blur();\n                                        }}\n                                        options={helpers.listingTimespanOptions}\n                                    />\n                                )}\n                            />\n                            {errors.listingTimespan ? <span className=\"span-tooltip\">{errors.listingTimespan.message}</span> : null}\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                    </Row>\n                    <Row style={{ paddingTop: \"25px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Label>Enter relevant tags/hashtags (people will use these tags when searching for specific/condensed results) - <strong style={{ color: \"blue\" }}>15 tags MAX</strong></Label>\n                            <Controller\n                                control={control}\n                                name=\"hashtags\"\n                                {...register(\"hashtags\", { required: true, onBlur: (e) => {\n\n                                    console.log(\"onBlur...!\", e);\n\n                                    // const value = e.target.value;\n                                }})}\n                                render={({ field }) => (\n                                    <ListGroup>\n                                        <ReactTags \n                                            {...field}\n                                            tags={tags}\n                                            suggestions={suggestions}\n                                            classNames={{\n                                                tags: 'hashtagsTagsClass',\n                                                tagInput: 'hashtagsTagInputClass',\n                                                tagInputField: 'hashtagsTagInputFieldClass',\n                                                selected: 'hashtagsSelectedClass',\n                                                tag: 'hashtagsTagClass',\n                                                remove: 'hashtagsRemoveClass',\n                                                suggestions: 'hashtagsSuggestionsClass',\n                                                activeSuggestion: 'hashtagsActiveSuggestionClass'\n                                            }}\n                                            handleDelete={(index) => {\n                                                setTagsState(handleDelete(index, tags));\n                                            }}\n                                            renderSuggestion = {({ text, index }) => {\n                                                console.log(\"index\", index);\n                                                // return list item(s)\n                                                return <ListGroupItem active={index % 2 === 1 ? true : false}>{text}</ListGroupItem>;\n                                            }}\n                                            placeholder={\"Enter a tag (these are how people search & find your listing)\"}\n                                            maxLength={15}\n                                            handleAddition={(tag) => {\n                                                setTagsState(prevState => {\n                                                    return [...prevState, tag]\n                                                })\n                                            }}\n                                            handleDrag={(tag, currPos, newPos) => {\n                                                console.log(tag, currPos, newPos)\n                                                \n                                                setTagsState(handleDrag(tag, currPos, newPos, tags));\n                                            }}\n                                            delimiters={delimiters} \n                                        />\n                                    </ListGroup>\n                                )}\n                            />\n                            {errors.hashtags ? <span className=\"span-tooltip\">{errors.hashtags.message}</span> : null}\n                            <div className=\"valid-feedback\">{\"Looks good!\"}</div>\n                        </Col>\n                    </Row>\n                    <Row style={{ marginTop: \"45px\" }}>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Button color=\"secondary\" style={{ width: \"100%\" }} type=\"submit\" onClick={() => {\n\n                            }}>~ Submit form details and proceed to next page ~</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        previouslySavedSoftwareData: state.softwareListingSale.softwareListingSaleInfo\n    }\n}\nexport default connect(mapStateToProps, { saveSoftwareListingInfo })(PageThreeHelper);\n"]},"metadata":{},"sourceType":"module"}