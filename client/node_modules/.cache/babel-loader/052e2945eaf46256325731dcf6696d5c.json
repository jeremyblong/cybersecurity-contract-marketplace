{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport { Modal } from 'react-responsive-modal';\n\nconst renderPictureOrVideoLast = (file, onCloseModal, index, setSelectedModalIndex) => {\n  if (file !== null && _.has(file, \"link\")) {\n    if (file.type.includes(\"video\")) {\n      // video logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        playing: true,\n        loop: true,\n        muted: true,\n        width: \"100%\",\n        className: \"img-fluid\",\n        wrapper: \"div\",\n        url: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }\n      }))));\n    } else {\n      // image logic\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: () => {\n          setSelectedModalIndex(index); // open modal and display\n\n          onCloseModal(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"latest-post profile-pic-video-sidebar-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid\",\n        alt: \"post1\",\n        src: `${process.env.REACT_APP_ASSET_LINK}/${file.link}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }))));\n    }\n  } else {\n    // image logic - DEFAULT.\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => {\n        setSelectedModalIndex(index); // open modal and display\n\n        onCloseModal(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"latest-post profile-pic-video-sidebar-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      alt: \"post1\",\n      src: process.env.REACT_APP_PLACEHOLDER_IMAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nconst RenderGalleryModalHackerProfileHelper = _ref => {\n  let {\n    onCloseModal,\n    isOpen,\n    user,\n    modalIndexSelected\n  } = _ref;\n  const [picturesArr, setPicturesArr] = useState([]);\n  const [captions, setCaptions] = useState([]);\n  const options = {\n    settings: {\n      overlayColor: \"rgba(169, 39, 249, 0.725)\",\n      autoplaySpeed: 2250,\n      boxShadow: true\n    },\n    buttons: {\n      backgroundColor: \"#1b5245\",\n      iconColor: \"rgba(126, 172, 139, 0.8)\"\n    },\n    caption: {\n      captionColor: \"#a6cfa5\",\n      captionTextTransform: \"uppercase\"\n    }\n  };\n  useEffect(async () => {\n    if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n      const captionArray = []; // pictures exist - run setup logic\n\n      const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n        if (idx + 1 === row.length) {\n          // Last one.\n          let result = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            caption: `You're viewing the ${el.name} file...`,\n            width: 1920,\n            height: \"auto\",\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`\n          };\n          let caption = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"SRLCustomCaption lightbox-hacker-profile-display-custom\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }\n          }, \"Something - put a like or respond action here...\", /*#__PURE__*/React.createElement(\"span\", {\n            className: \"SRLCustomCaption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 27\n            }\n          }, \"You're viewing \", el.name)); // push appropriate caption for lightbox\n\n          captionArray.push(caption); // return constructed obj for lightbox\n\n          return result;\n        } else {\n          // Not last one.\n          let resultNotLast = {\n            src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n            type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n            caption: `You're viewing the ${el.name} file...`,\n            width: 1920,\n            height: \"auto\",\n            thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`\n          };\n          let caption = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"SRLCustomCaption lightbox-hacker-profile-display-custom\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }\n          }, \"Something - put a like or respond action here...\", /*#__PURE__*/React.createElement(\"span\", {\n            className: \"SRLCustomCaption\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 27\n            }\n          }, \"You're viewing \", el.name)); // push appropriate caption for lightbox\n\n          captionArray.push(caption); // return constructed obj for lightbox\n\n          return resultNotLast;\n        }\n      }); // wait for .mapped to finish then set the local state.\n\n      if (newlyStructuredProfilePicsVids) {\n        setCaptions(captionArray);\n        setPicturesArr(newlyStructuredProfilePicsVids);\n      }\n    }\n  }, []);\n\n  const galleryCloseModal = data => {\n    console.log(\"galleryCloseModal callback :\", data);\n    onCloseModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    classNames: {\n      overlay: 'hackerProfileLightboxDisplayOverlay',\n      modal: 'hackerProfileLightboxDisplayModal'\n    },\n    clas: true,\n    open: isOpen,\n    onClose: () => onCloseModal(false),\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SRLWrapper, {\n    images: picturesArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default {\n  renderPictureOrVideoLast,\n  RenderGalleryModalHackerProfileHelper\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/people/hackers/individualProfile/bars/helpers/rightBarHelperFunctions.js"],"names":["React","Fragment","useState","useEffect","ReactPlayer","_","SRLWrapper","Modal","renderPictureOrVideoLast","file","onCloseModal","index","setSelectedModalIndex","has","type","includes","process","env","REACT_APP_ASSET_LINK","link","REACT_APP_PLACEHOLDER_IMAGE","RenderGalleryModalHackerProfileHelper","isOpen","user","modalIndexSelected","picturesArr","setPicturesArr","captions","setCaptions","options","settings","overlayColor","autoplaySpeed","boxShadow","buttons","backgroundColor","iconColor","caption","captionColor","captionTextTransform","profilePicsVideos","length","captionArray","newlyStructuredProfilePicsVids","map","el","idx","row","result","src","name","width","height","thumbnail","push","resultNotLast","galleryCloseModal","data","console","log","overlay","modal"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport { Modal } from 'react-responsive-modal';\n\nconst renderPictureOrVideoLast = (file, onCloseModal, index, setSelectedModalIndex) => {\n    if (file !== null && _.has(file, \"link\")) {\n        if (file.type.includes(\"video\")) {\n            // video logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <ReactPlayer playing={true} loop={true} muted={true} width={\"100%\"} className={\"img-fluid\"} wrapper={\"div\"} url={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        } else {\n            // image logic\n            return (\n                <Fragment>\n                    <li onClick={() => {\n                        setSelectedModalIndex(index);\n                        // open modal and display\n                        onCloseModal(true);\n                    }}>\n                        <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                            <img className=\"img-fluid\" alt=\"post1\" src={`${process.env.REACT_APP_ASSET_LINK}/${file.link}`} />\n                        </div>\n                    </li>\n                </Fragment>\n            );\n        }  \n    } else {\n        // image logic - DEFAULT.\n        return (\n            <Fragment>\n                <li onClick={() => {\n                    setSelectedModalIndex(index);\n                    // open modal and display\n                    onCloseModal(true);\n                }}>\n                    <div className=\"latest-post profile-pic-video-sidebar-custom\">\n                        <img className=\"img-fluid\" alt=\"post1\" src={process.env.REACT_APP_PLACEHOLDER_IMAGE} />\n                    </div>\n                </li>\n            </Fragment>\n        );\n    } \n}\nconst RenderGalleryModalHackerProfileHelper = ({ onCloseModal, isOpen, user, modalIndexSelected }) => {\n\n    const [ picturesArr, setPicturesArr ] = useState([]);\n    const [ captions, setCaptions ] = useState([]);\n\n    const options = {\n        settings: {\n            overlayColor: \"rgba(169, 39, 249, 0.725)\",\n            autoplaySpeed: 2250,\n            boxShadow: true\n        },\n        buttons: {\n            backgroundColor: \"#1b5245\",\n            iconColor: \"rgba(126, 172, 139, 0.8)\",\n        },\n        caption: {\n            captionColor: \"#a6cfa5\",\n            captionTextTransform: \"uppercase\",\n        }\n    };\n\n    useEffect(async () => {\n\n        if (typeof user.profilePicsVideos !== \"undefined\" && user.profilePicsVideos.length > 0) {\n            const captionArray = [];\n            // pictures exist - run setup logic\n            const newlyStructuredProfilePicsVids = await user.profilePicsVideos.map((el, idx, row) => {\n                if (idx + 1 === row.length) {\n                    // Last one.\n                    let result = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        caption: `You're viewing the ${el.name} file...`,\n                        width: 1920,\n                        height: \"auto\",\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`\n                    };\n                    let caption = (\n                        <div className=\"SRLCustomCaption lightbox-hacker-profile-display-custom\">\n                          Something - put a like or respond action here...\n                          <span className=\"SRLCustomCaption\">You're viewing {el.name}</span>\n                        </div>\n                    );\n                    // push appropriate caption for lightbox\n                    captionArray.push(caption);\n                    // return constructed obj for lightbox\n                    return result;\n                } else {\n                    // Not last one.\n                    let resultNotLast = {\n                        src: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`,\n                        type: el.type.includes(\"image\") ? \"photo\" : \"video\",\n                        caption: `You're viewing the ${el.name} file...`,\n                        width: 1920,\n                        height: \"auto\",\n                        thumbnail: `${process.env.REACT_APP_ASSET_LINK}/${el.link}`\n                    }\n                    let caption = (\n                        <div className=\"SRLCustomCaption lightbox-hacker-profile-display-custom\">\n                          Something - put a like or respond action here...\n                          <span className=\"SRLCustomCaption\">You're viewing {el.name}</span>\n                        </div>\n                    );\n                    // push appropriate caption for lightbox\n                    captionArray.push(caption);\n                    // return constructed obj for lightbox\n                    return resultNotLast;\n                }\n            });\n            // wait for .mapped to finish then set the local state.\n            if (newlyStructuredProfilePicsVids) {\n                setCaptions(captionArray);\n                setPicturesArr(newlyStructuredProfilePicsVids);\n            }\n        }\n    }, []);\n\n    const galleryCloseModal = (data) => {\n        console.log(\"galleryCloseModal callback :\", data);\n\n        onCloseModal(false);\n    }\n    return (\n        <Fragment>\n            <Modal classNames={{\n                overlay: 'hackerProfileLightboxDisplayOverlay',\n                modal: 'hackerProfileLightboxDisplayModal',\n            }} clas open={isOpen} onClose={() => onCloseModal(false)} center>\n                <SRLWrapper images={picturesArr} />\n            </Modal>\n        </Fragment>\n    );\n}\nexport default {\n    renderPictureOrVideoLast,\n    RenderGalleryModalHackerProfileHelper\n};"]},"metadata":{},"sourceType":"module"}