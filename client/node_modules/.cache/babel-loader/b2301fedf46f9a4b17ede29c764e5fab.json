{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/helpers/helperFunctions.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Popover, PopoverHeader, PopoverBody, Row, Col } from \"reactstrap\";\nimport \"../styles.css\";\n\nconst RenderEmojiLogic = reactions => {\n  const [emojiData, emojiArrayResponded] = useState([]);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const customEmojiArr = [];\n    let count = 0; // loop over existing responses\n\n    for (const key in reactions) {\n      const element = reactions[key];\n\n      if (element > 0) {\n        customEmojiArr.push(key);\n        count++;\n      } else {\n        count++;\n      }\n\n      console.log(\"count...:\", count);\n    }\n\n    if (count === 6) {\n      emojiArrayResponded(customEmojiArr);\n      setReady(true);\n    }\n  }, []);\n  console.log(\"emojiData\", emojiData);\n\n  if (ready === true) {\n    console.log(\"ready === true\");\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, emojiData.map(reaction => {\n      console.log(\"reaction....:::::::::::::::\", reaction);\n\n      switch (reaction) {\n        case \"partying\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/partying.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        case \"screaming\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/screaming.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        case \"steaming\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/steaming.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        case \"sunglasses\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/sunglasses.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        case \"tearsOfJoy\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        case \"vomitting\":\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: require(\"../../../../../../../../assets/gifs/vomitting.gif\"),\n            className: \"emoji-already-existant\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 36\n            }\n          });\n          break;\n\n        default:\n          return null;\n          break;\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n};\n\nconst RenderPopoverEmojiLogic = _ref => {\n  let {\n    reactions,\n    targetAndPopState,\n    setPopoverState,\n    popoverState,\n    handleRespondEmoji,\n    comment\n  } = _ref;\n  const [emojiStateArr, setEmojiStateArray] = useState([]);\n  const [stateCount, setStateCount] = useState(0);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    const emojiArray = [];\n    const alreadyAdded = [];\n    let count = 0;\n\n    for (const key in reactions) {\n      const reactionName = key;\n      const reactionOutcome = reactions[key]; // check if emoji is already added - if not... add it!\n\n      if (reactionOutcome > 0) {\n        count++; // push emoji into array as it doesn't exist yet\n\n        alreadyAdded.push(\"reactionName\"); // create viewable history of likes/emoji responses\n\n        const newItem = {}; // push into array\n\n        emojiArray.push(newItem);\n      }\n    }\n\n    setStateCount(count);\n    setEmojiStateArray(emojiArray);\n    setReady(true);\n  }, []);\n\n  const renderMainContentPopover = () => {\n    if (ready === true) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: popoverState[targetAndPopState],\n        target: targetAndPopState,\n        toggle: () => {\n          setPopoverState(prevState => {\n            return { ...prevState,\n              [targetAndPopState]: false\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, \"Current Comment Reaction's (\", stateCount, \" total response's)\"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseLeave: () => {\n          setPopoverState(prevState => {\n            return { ...prevState,\n              [targetAndPopState]: false\n            };\n          });\n        },\n        className: \"mouse-exit-close-popover-emojis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"sunglasses\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/sunglasses.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"steaming\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/steaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"tearsOfJoy\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"vomitting\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/vomitting.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"partying\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/partying.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        md: \"2\",\n        lg: \"2\",\n        xl: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleRespondEmoji(\"screaming\", comment),\n        className: \"emoji-wrapper-course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"custom-course-emoji-render\",\n        src: require(\"../../../../../../../../assets/gifs/screaming.gif\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }))))))));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, renderMainContentPopover());\n};\n\nexport default {\n  RenderPopoverEmojiLogic,\n  RenderEmojiLogic\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/viewCourses/helpers/comments/helpers/helperFunctions.js"],"names":["React","Fragment","useEffect","useState","Popover","PopoverHeader","PopoverBody","Row","Col","RenderEmojiLogic","reactions","emojiData","emojiArrayResponded","ready","setReady","customEmojiArr","count","key","element","push","console","log","map","reaction","require","RenderPopoverEmojiLogic","targetAndPopState","setPopoverState","popoverState","handleRespondEmoji","comment","emojiStateArr","setEmojiStateArray","stateCount","setStateCount","emojiArray","alreadyAdded","reactionName","reactionOutcome","newItem","renderMainContentPopover","prevState"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Popover, PopoverHeader, PopoverBody, Row, Col } from \"reactstrap\";\nimport \"../styles.css\";\n\nconst RenderEmojiLogic = (reactions) => {\n\n    const [emojiData, emojiArrayResponded] = useState([]);\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        const customEmojiArr = [];\n        let count = 0;\n        // loop over existing responses\n        for (const key in reactions) {\n            const element = reactions[key];\n            if (element > 0) {\n                customEmojiArr.push(key);\n                count++;\n            } else {\n                count++;\n            }\n            console.log(\"count...:\", count);\n        }\n        if (count === 6) {\n            emojiArrayResponded(customEmojiArr);\n            setReady(true);\n        }\n    }, []);\n\n    console.log(\"emojiData\", emojiData);\n\n    if (ready === true) {\n        console.log(\"ready === true\");\n        return (\n            <Fragment>\n                {emojiData.map((reaction) => {\n                    console.log(\"reaction....:::::::::::::::\", reaction);\n                    switch (reaction) {\n                        case \"partying\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/partying.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        case \"screaming\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/screaming.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        case \"steaming\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/steaming.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        case \"sunglasses\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/sunglasses.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        case \"tearsOfJoy\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        case \"vomitting\":\n                            return <img src={require(\"../../../../../../../../assets/gifs/vomitting.gif\")} className={\"emoji-already-existant\"} />;\n                            break;\n                        default:\n                            return null;\n                            break;\n                    }\n                })}\n            </Fragment>\n        );\n    } else {\n        return <h1>Loading...</h1>;\n    }\n}\n\nconst RenderPopoverEmojiLogic = ({ reactions, targetAndPopState, setPopoverState, popoverState, handleRespondEmoji, comment }) => {\n\n    const [emojiStateArr, setEmojiStateArray] = useState([]);\n    const [stateCount, setStateCount] = useState(0);\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n\n        const emojiArray = [];\n        const alreadyAdded = [];\n        let count = 0;\n\n        for (const key in reactions) {\n            const reactionName = key;\n            const reactionOutcome = reactions[key];\n\n            // check if emoji is already added - if not... add it!\n            if (reactionOutcome > 0) {\n                count++;\n                // push emoji into array as it doesn't exist yet\n                alreadyAdded.push(\"reactionName\");\n                // create viewable history of likes/emoji responses\n                const newItem = {};\n                // push into array\n                emojiArray.push(newItem);\n            }\n        }\n\n        setStateCount(count);\n        setEmojiStateArray(emojiArray);\n        setReady(true);\n    }, []);\n\n    const renderMainContentPopover = () => {\n        if (ready === true) {\n            return (\n                <Fragment>\n                    <Popover placement=\"bottom\" isOpen={popoverState[targetAndPopState]} target={targetAndPopState} toggle={() => {\n                        setPopoverState(prevState => {\n                            return {\n                                ...prevState,\n                                [targetAndPopState]: false\n                            }\n                        });\n                    }}>\n                        <PopoverHeader>Current Comment Reaction's ({stateCount} total response's)</PopoverHeader>\n                        <PopoverBody>\n                            <div onMouseLeave={() => {\n                                setPopoverState(prevState => {\n                                    return {\n                                        ...prevState,\n                                        [targetAndPopState]: false\n                                    }\n                                });\n                            }} className={\"mouse-exit-close-popover-emojis\"}>\n                                <Row>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"sunglasses\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/sunglasses.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"steaming\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/steaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"tearsOfJoy\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/tearsOfJoy.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"vomitting\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/vomitting.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"partying\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/partying.gif\")} />\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"2\" md=\"2\" lg=\"2\" xl=\"2\">\n                                        <div onClick={() => handleRespondEmoji(\"screaming\", comment)} className={\"emoji-wrapper-course\"}>\n                                            <img className={\"custom-course-emoji-render\"} src={require(\"../../../../../../../../assets/gifs/screaming.gif\")} />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </PopoverBody>\n                    </Popover>\n                </Fragment>\n            );\n        } else {\n            return null;\n        }\n    }\n    return (\n        <Fragment>\n            {renderMainContentPopover()}\n        </Fragment>\n    );\n}\n\nexport default {\n    RenderPopoverEmojiLogic,\n    RenderEmojiLogic\n};"]},"metadata":{},"sourceType":"module"}