{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst CreateNewBlogPostReduxFormHelpers=()=>{const titleChecker={check:register=>{return{...register(\"title\",{required:{value:true,message:\"You MUST enter AT least 35 characters to 225 characters\"},minLength:{value:35,message:\"You MUST enter AT Least 35 characters\"},maxLength:{value:225,message:\"You may ONLY enter 225 characters or less\"},onBlur:data=>{console.log(\"blurrred... data :\",data);}})};},onChange:(value,setValue)=>{setValue(\"title\",value,{shouldValidate:true});},name:\"title\",placeholder:\"Enter your 'blog title'...\",type:\"text\"};const subtitleChecker={check:register=>{return{...register(\"subtitle\",{required:{value:true,message:\"You MUST enter AT least 35 characters to 225 characters\"},minLength:{value:35,message:\"You MUST enter AT Least 35 characters\"},maxLength:{value:225,message:\"You may ONLY enter 225 characters or less\"},onBlur:data=>{console.log(\"blurrred... data :\",data);}})};},onChange:(value,setValue)=>{setValue(\"subtitle\",value,{shouldValidate:true});},name:\"subtitle\",placeholder:\"Enter your 'blog sub-title'...\",type:\"text\"};const hashtagsChecker={check:register=>{return{...register(\"hashtags\",{required:{value:true,message:\"You MUST enter AT least 5 characters to 15 characters\"},minLength:{value:5,message:\"You MUST enter AT Least 5 characters\"},maxLength:{value:15,message:\"You may ONLY enter 15 characters or less\"},onBlur:data=>{console.log(\"blurrred... data :\",data);}})};},onChange:(value,setValue)=>{setValue(\"hashtags\",value,{shouldValidate:false});},name:\"hashtags\",placeholder:\"Enter your 'blog sub-title'...\",type:\"text\"};const descriptionChecker={check:register=>{return{...register(\"description\",{required:{value:true,message:\"You MUST enter AT least 500 characters to 12500 characters\"},minLength:{value:500,message:\"You MUST enter AT Least 500 characters\"},maxLength:{value:12500,message:\"You may ONLY enter 12500 characters or less\"},onBlur:data=>{console.log(\"blurrred... data :\",data);}})};},onChange:(value,setValue)=>{setValue(\"description\",value,{shouldValidate:false});},name:\"description\",placeholder:\"Enter your 'blog sub-title'...\",type:\"text\"};// return values to other component\nreturn{titleChecker,subtitleChecker,hashtagsChecker,descriptionChecker};};export default CreateNewBlogPostReduxFormHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/blogging/blogCreation/helpers/reduxFormHelpers.js"],"names":["CreateNewBlogPostReduxFormHelpers","titleChecker","check","register","required","value","message","minLength","maxLength","onBlur","data","console","log","onChange","setValue","shouldValidate","name","placeholder","type","subtitleChecker","hashtagsChecker","descriptionChecker"],"mappings":"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","sourcesContent":["\n// helpers logic related to mainly to redux-hook-form\nconst CreateNewBlogPostReduxFormHelpers = () => {\n    const titleChecker = {\n        check: (register) => {\n            return (\n                {...register(\"title\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 35 characters to 225 characters\"\n                }, minLength: {\n                    value: 35,\n                    message: \"You MUST enter AT Least 35 characters\"\n                }, maxLength: {\n                    value: 225,\n                    message: \"You may ONLY enter 225 characters or less\"\n                }, onBlur: (data) => {\n                    console.log(\"blurrred... data :\", data);\n                }})}\n            )\n        },\n        onChange: (value, setValue) => {\n            setValue(\"title\", value, { shouldValidate: true });\n        },\n        name: \"title\",\n        placeholder: \"Enter your 'blog title'...\",\n        type: \"text\"\n    };\n    const subtitleChecker = {\n        check: (register) => {\n            return (\n                {...register(\"subtitle\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 35 characters to 225 characters\"\n                }, minLength: {\n                    value: 35,\n                    message: \"You MUST enter AT Least 35 characters\"\n                }, maxLength: {\n                    value: 225,\n                    message: \"You may ONLY enter 225 characters or less\"\n                }, onBlur: (data) => {\n                    console.log(\"blurrred... data :\", data);\n                }})}\n            )\n        },\n        onChange: (value, setValue) => {\n            setValue(\"subtitle\", value, { shouldValidate: true });\n        },\n        name: \"subtitle\",\n        placeholder: \"Enter your 'blog sub-title'...\",\n        type: \"text\"\n    };\n    const hashtagsChecker = {\n        check: (register) => {\n            return (\n                {...register(\"hashtags\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 5 characters to 15 characters\"\n                }, minLength: {\n                    value: 5,\n                    message: \"You MUST enter AT Least 5 characters\"\n                }, maxLength: {\n                    value: 15,\n                    message: \"You may ONLY enter 15 characters or less\"\n                }, onBlur: (data) => {\n                    console.log(\"blurrred... data :\", data);\n                }})}\n            )\n        },\n        onChange: (value, setValue) => {\n            setValue(\"hashtags\", value, { shouldValidate: false });\n        },\n        name: \"hashtags\",\n        placeholder: \"Enter your 'blog sub-title'...\",\n        type: \"text\"\n    };\n    const descriptionChecker = {\n        check: (register) => {\n            return (\n                {...register(\"description\", { required: {\n                    value: true,\n                    message: \"You MUST enter AT least 500 characters to 12500 characters\"\n                }, minLength: {\n                    value: 500,\n                    message: \"You MUST enter AT Least 500 characters\"\n                }, maxLength: {\n                    value: 12500,\n                    message: \"You may ONLY enter 12500 characters or less\"\n                }, onBlur: (data) => {\n                    console.log(\"blurrred... data :\", data);\n                }})}\n            )\n        },\n        onChange: (value, setValue) => {\n            setValue(\"description\", value, { shouldValidate: false });\n        },\n        name: \"description\",\n        placeholder: \"Enter your 'blog sub-title'...\",\n        type: \"text\"\n    };\n    // return values to other component\n    return {\n        titleChecker,\n        subtitleChecker,\n        hashtagsChecker,\n        descriptionChecker\n    }\n}\n\nexport default CreateNewBlogPostReduxFormHelpers;"]},"metadata":{},"sourceType":"module"}