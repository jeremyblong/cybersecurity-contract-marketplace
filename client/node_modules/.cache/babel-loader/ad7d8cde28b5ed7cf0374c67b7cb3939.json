{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostProfileOnly/profileBoosts.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup } from \"reactstrap\";\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nconst monthOptions = [{\n  value: '01',\n  label: '01'\n}, {\n  value: '02',\n  label: '02'\n}, {\n  value: '03',\n  label: '03'\n}, {\n  value: '04',\n  label: '04'\n}, {\n  value: '05',\n  label: '05'\n}, {\n  value: '06',\n  label: '06'\n}, {\n  value: '07',\n  label: '07'\n}, {\n  value: '08',\n  label: '08'\n}, {\n  value: '09',\n  label: '09'\n}, {\n  value: '10',\n  label: '10'\n}, {\n  value: '11',\n  label: '11'\n}, {\n  value: '12',\n  label: '12'\n}];\nconst yearOptions = [{\n  label: \"2022\",\n  value: \"22\"\n}, {\n  label: \"2023\",\n  value: \"23\"\n}, {\n  label: \"2024\",\n  value: \"24\"\n}, {\n  label: \"2025\",\n  value: \"25\"\n}, {\n  label: \"2026\",\n  value: \"26\"\n}, {\n  label: \"2027\",\n  value: \"27\"\n}, {\n  label: \"2028\",\n  value: \"28\"\n}, {\n  label: \"2029\",\n  value: \"29\"\n}, {\n  label: \"2030\",\n  value: \"30\"\n}, {\n  label: \"2031\",\n  value: \"31\"\n}, {\n  label: \"2032\",\n  value: \"32\"\n}, {\n  label: \"2033\",\n  value: \"33\"\n}, {\n  label: \"2034\",\n  value: \"34\"\n}, {\n  label: \"2035\",\n  value: \"35\"\n}];\n\nconst PromoteProfileBoostSheetHelper = _ref => {\n  let {\n    profileBoostedSelected,\n    setProfileBoostedSelection,\n    userData,\n    boostProfilePaneOpen,\n    setSheetOpenProfileBoost\n  } = _ref;\n  const [cardPaymentSelected, setSelectedCardPayment] = useState(null);\n  const [previousCards, setPreviousCardsData] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [cardData, setCardData] = useState({\n    focus: \"\",\n    cvc: \"\",\n    name: \"\",\n    number: \"\",\n    expiry: \"\"\n  });\n  useEffect(() => {\n    const config = {\n      params: {\n        id: userData.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        console.log(res.data);\n        const {\n          cards\n        } = res.data;\n        const convertedPaymentsArr = [];\n\n        for (let index = 0; index < cards.data.length; index++) {\n          const method = cards.data[index];\n          const {\n            last4\n          } = method.card;\n          convertedPaymentsArr.push({\n            label: `**** **** **** ${last4}`,\n            value: method\n          });\n        }\n\n        setPreviousCardsData(convertedPaymentsArr);\n        setReady(true);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n    });\n  }, []);\n\n  const calculateBoostCost = tier => {\n    switch (tier) {\n      case \"tier-1\":\n        return \"$15.00 (plus applicable taxes)\";\n        break;\n\n      case \"tier-2\":\n        return \"$35.00 (plus applicable taxes)\";\n        break;\n\n      case \"tier-3\":\n        return \"55.00 (plus applicable taxes)\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculateTier = tier => {\n    switch (tier) {\n      case \"tier-1\":\n        return \"Tier One (1)\";\n        break;\n\n      case \"tier-2\":\n        return \"Tier Two (2)\";\n        break;\n\n      case \"tier-3\":\n        return \"Tier Three (3)\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"number\") {\n      if (value.length !== 0) {\n        let filtered = value.replace(/\\D/, '');\n        setCardData(prevState => {\n          return { ...prevState,\n            number: filtered\n          };\n        });\n        setSelectedCardPayment(null);\n      } else {\n        setCardData(prevState => {\n          return { ...prevState,\n            number: \"\"\n          };\n        });\n        setSelectedCardPayment(null);\n      }\n    } else if (name === \"cvc\") {\n      if (value.length !== 0) {\n        let filtered = value.replace(/\\D/, '');\n        setCardData(prevState => {\n          return { ...prevState,\n            cvc: filtered\n          };\n        });\n        setSelectedCardPayment(null);\n      } else {\n        setCardData(prevState => {\n          return { ...prevState,\n            cvc: \"\"\n          };\n        });\n        setSelectedCardPayment(null);\n      }\n    } else {\n      setCardData(prevState => {\n        return { ...prevState,\n          [name]: value\n        };\n      });\n      setSelectedCardPayment(null);\n    }\n  };\n\n  const handleInputFocus = e => {\n    setCardData(prevState => {\n      return { ...prevState,\n        focus: e.target.name\n      };\n    });\n  };\n\n  const handleSelectBlur = (type, full, monthOrYear) => {\n    if (type === \"selectedMonth\") {\n      setTimeout(() => {\n        setCardData(prevState => {\n          return { ...prevState,\n            expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n          };\n        });\n      }, 500);\n    } else if (type === \"selectedYear\") {\n      setTimeout(() => {\n        setCardData(prevState => {\n          return { ...prevState,\n            expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n          };\n        });\n      }, 500);\n    }\n  };\n\n  const handleCardSelectionChange = value => {\n    console.log(\"handleCardSelectionChange ran/running..:\", value);\n    setSelectedCardPayment(value);\n    setCardData(prevState => {\n      return { ...prevState,\n        cvc: \"\",\n        expiry: \"\",\n        focus: \"\",\n        name: \"\",\n        number: \"\"\n      };\n    });\n  };\n\n  const clearPreviousState = () => {\n    setSelectedCardPayment(null);\n    setSelectedMonth(null);\n    setSelectedYear(null);\n    setCardData({\n      focus: \"\",\n      cvc: \"\",\n      name: \"\",\n      number: \"\",\n      expiry: \"\"\n    });\n  };\n\n  const handleSubmission = () => {\n    console.log(\"handle handleSubmission submission!\");\n    const configuration = {\n      employerId: userData.uniqueId,\n      card: cardData,\n      manuallyEntered: cardPaymentSelected !== null ? false : true,\n      cardPaymentSelected,\n      profileBoostedSelected\n    };\n    axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/profile/period/time`, configuration).then(res => {\n      if (res.data.message === \"Successfully boosted your selected profile!\") {\n        console.log(res.data);\n        const {\n          listing,\n          cost\n        } = res.data;\n        setSheetOpenProfileBoost(false);\n        clearPreviousState();\n        NotificationManager.success(`We've successfully boosted your listing with the company name of '${listing.publicCompanyName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted listing & it is NOW LIVE!`, \"Successfully charged desired card and listing is NOW PROMOTED!\", 5000);\n      } else if (res.data.message === \"Already boosted this listing!\") {\n        setSheetOpenProfileBoost(false);\n        NotificationManager.warning(\"You've ALREADY boosted this listing, you CANNOT double boost a listing as it would be a waste of your money. Please wait for this boosted listing to expire (check back periodically if you'd like) before boosting again or select another listing!\", \"Listing is already boosted!\", 4750);\n      } else {\n        console.log(\"Err\", res.data);\n        setSheetOpenProfileBoost(false);\n        clearPreviousState();\n        NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      setSheetOpenProfileBoost(false);\n      clearPreviousState();\n      NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n    });\n  };\n\n  const calculateDisabled = () => {\n    const {\n      name,\n      number,\n      expiry,\n      cvc\n    } = cardData;\n\n    if (typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5 || cardPaymentSelected !== null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sheet, {\n    disableDrag: true,\n    isOpen: boostProfilePaneOpen,\n    onClose: () => setSheetOpenProfileBoost(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sheet.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin-medium-button-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-square-danger\",\n    color: \"danger-2x\",\n    outline: true,\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => setSheetOpenProfileBoost(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, \"Close/Exit Pane\"))), /*#__PURE__*/React.createElement(Sheet.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bordered-shadowed-card-deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"header-deposit-card-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  }, \"You've selected \", profileBoostedSelected, \" which means you have selected the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 158\n    }\n  }, calculateTier(profileBoostedSelected)), \" boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#51bb25\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 367\n    }\n  }, calculateBoostCost(profileBoostedSelected))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 41\n    }\n  }, \"Please fill out or select the related \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 99\n    }\n  }, \"payment information\"), \" BEFORE continuing with this profile boost submission. We will charge you approx. \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"#7366ff\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 246\n    }\n  }, calculateBoostCost(profileBoostedSelected)), \" for this specific choosen boost!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    className: \"header-deposit-card-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 41\n    }\n  }, \"Please select the payment method you'd like to use for this transaction..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 41\n    }\n  }, \"Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 45\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-primary b-r-primary project-boxed-shadowized-min-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4-two-col-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 65\n    }\n  }, \"Enter your \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 110\n    }\n  }, \"card details\"), \" in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 65\n    }\n  }, \"Add your payment details in the live form collection unit below. This will not only use \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 173\n    }\n  }, \"THIS CARD AS A PAYMENT METHOD\"), \" but will also save this card information to your account for a later date and/or future purchases down the road..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 73\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.number,\n    name: \"number\",\n    className: \"form-control\",\n    maxLength: 19,\n    size: 19,\n    type: \"number\",\n    placeholder: \"Debit/Credit Card Number\",\n    \"aria-label\": \"Debit/Credit Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 77\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 73\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.name,\n    name: \"name\",\n    maxLength: \"35\",\n    size: \"35\",\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    \"aria-label\": \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 73\n    }\n  }, \"Expiration\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: selectedMonth,\n    onChange: value => {\n      setSelectedMonth(value);\n      setSelectedCardPayment(null);\n    },\n    onBlur: () => {\n      handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n    },\n    className: \"stretch\",\n    placeholder: \"MONTH\",\n    options: monthOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 77\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    value: selectedYear,\n    onChange: value => {\n      setSelectedYear(value);\n      setSelectedCardPayment(null);\n    },\n    onBlur: () => {\n      handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n    },\n    className: \"stretch-two\",\n    placeholder: \"YEAR\",\n    options: yearOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    md: \"4\",\n    lg: \"4\",\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 73\n    }\n  }, \"CVC\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onFocus: handleInputFocus,\n    onChange: handleInputChange,\n    value: cardData.cvc,\n    name: \"cvc\",\n    className: \"form-control\",\n    maxLength: \"4\",\n    size: \"4\",\n    type: \"number\",\n    placeholder: \"CVC\",\n    \"aria-label\": \"CVC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 77\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    cvc: cardData.cvc,\n    expiry: cardData.expiry,\n    focused: cardData.focus,\n    name: cardData.name,\n    number: cardData.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 69\n    }\n  })))))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#d4d4d4\",\n    highlightColor: \"#8f8f8f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    containerClassName: \"stretch-bars\",\n    count: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 61\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 45\n    }\n  }, ready === true ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-primary b-r-primary project-boxed-shadowized-min-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4-two-col-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 61\n    }\n  }, \"Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 61\n    }\n  }, \"Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 61\n    }\n  }, \"Select An Existing Registered Card (Previously registered on a different date/time)\"), /*#__PURE__*/React.createElement(Select, {\n    value: cardPaymentSelected,\n    onChange: handleCardSelectionChange,\n    options: previousCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 61\n    }\n  })))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n    baseColor: \"#d4d4d4\",\n    highlightColor: \"#8f8f8f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    containerClassName: \"stretch-bars\",\n    count: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 61\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"37.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: calculateDisabled(),\n    outline: calculateDisabled() ? true : false,\n    className: \"btn-square-success\",\n    onClick: handleSubmission,\n    style: {\n      width: \"100%\"\n    },\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 45\n    }\n  }, \"Submit & Purchase Boost/Promotion!\"))))))))), /*#__PURE__*/React.createElement(Sheet.Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default PromoteProfileBoostSheetHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/promoteMiscData/employers/promoteHomepage/sheets/boostProfileOnly/profileBoosts.js"],"names":["React","useState","useEffect","Fragment","Sheet","Button","Container","Row","Col","Card","CardHeader","CardBody","Progress","Badge","Label","Input","InputGroup","FormGroup","axios","ReactMarkdown","remarkGfm","ReactPlayer","moment","NotificationManager","Cards","Select","Skeleton","SkeletonTheme","monthOptions","value","label","yearOptions","PromoteProfileBoostSheetHelper","profileBoostedSelected","setProfileBoostedSelection","userData","boostProfilePaneOpen","setSheetOpenProfileBoost","cardPaymentSelected","setSelectedCardPayment","previousCards","setPreviousCardsData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","ready","setReady","cardData","setCardData","focus","cvc","name","number","expiry","config","params","id","uniqueId","get","process","env","REACT_APP_BASE_URL","then","res","data","message","console","log","cards","convertedPaymentsArr","index","length","method","last4","card","push","warning","catch","err","calculateBoostCost","tier","calculateTier","handleInputChange","e","target","filtered","replace","prevState","handleInputFocus","handleSelectBlur","type","full","monthOrYear","setTimeout","handleCardSelectionChange","clearPreviousState","handleSubmission","configuration","employerId","manuallyEntered","post","listing","cost","success","publicCompanyName","error","calculateDisabled","width","marginTop","color","textDecorationLine","paddingBottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport \"./styles.css\";\nimport Sheet from 'react-modal-sheet';\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Progress, Badge, Label, Input, InputGroup, FormGroup }  from \"reactstrap\";\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst monthOptions = [\n  { value: '01', label: '01' },\n  { value: '02', label: '02' },\n  { value: '03', label: '03' },\n  { value: '04', label: '04' },\n  { value: '05', label: '05' },\n  { value: '06', label: '06' },\n  { value: '07', label: '07' },\n  { value: '08', label: '08' },\n  { value: '09', label: '09' },\n  { value: '10', label: '10' },\n  { value: '11', label: '11' },\n  { value: '12', label: '12' },\n];\nconst yearOptions = [\n    { label: \"2022\", value: \"22\" },\n    { label: \"2023\", value: \"23\" },\n    { label: \"2024\", value: \"24\" },\n    { label: \"2025\", value: \"25\" },\n    { label: \"2026\", value: \"26\" },\n    { label: \"2027\", value: \"27\" },\n    { label: \"2028\", value: \"28\" },\n    { label: \"2029\", value: \"29\" },\n    { label: \"2030\", value: \"30\" },\n    { label: \"2031\", value: \"31\" },\n    { label: \"2032\", value: \"32\" },\n    { label: \"2033\", value: \"33\" },\n    { label: \"2034\", value: \"34\" },\n    { label: \"2035\", value: \"35\" }\n];\n\nconst PromoteProfileBoostSheetHelper = ({ profileBoostedSelected, setProfileBoostedSelection, userData, boostProfilePaneOpen, setSheetOpenProfileBoost }) => {\n\n    const [ cardPaymentSelected, setSelectedCardPayment ] = useState(null);\n    const [ previousCards, setPreviousCardsData ] = useState([]);\n    const [ selectedMonth, setSelectedMonth ] = useState(null);\n    const [ selectedYear, setSelectedYear ] = useState(null);\n    const [ ready, setReady ] = useState(false);\n    const [ cardData, setCardData ] = useState({\n        focus: \"\",\n        cvc: \"\",\n        name: \"\",\n        number: \"\",\n        expiry: \"\"\n    })\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/employer/payment/methods/cards/only`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                const convertedPaymentsArr = [];\n\n                for (let index = 0; index < cards.data.length; index++) {\n                    const method = cards.data[index];\n\n                    const { last4 } = method.card;\n                    \n                    convertedPaymentsArr.push({ label: `**** **** **** ${last4}`, value: method })\n                }\n\n                setPreviousCardsData(convertedPaymentsArr);\n\n                setReady(true);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n        })\n    }, [])\n\n    const calculateBoostCost = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"$15.00 (plus applicable taxes)\";\n                break;\n            case \"tier-2\":\n                return \"$35.00 (plus applicable taxes)\";\n                break;\n            case \"tier-3\":\n                return \"55.00 (plus applicable taxes)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const calculateTier = (tier) => {\n        switch (tier) {\n            case \"tier-1\":\n                return \"Tier One (1)\";\n                break;\n            case \"tier-2\":\n                return \"Tier Two (2)\";\n                break;\n            case \"tier-3\":\n                return \"Tier Three (3)\";\n                break;\n            default:\n                break;\n        }\n    }\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === \"number\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        number: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else if (name === \"cvc\") {\n            if (value.length !== 0) {\n                let filtered = value.replace(/\\D/, '');\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: filtered\n                    }\n                });\n                setSelectedCardPayment(null);\n            } else {\n\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        cvc: \"\"\n                    }\n                });\n                setSelectedCardPayment(null);\n            }\n        } else {\n\n            setCardData(prevState => {\n                return {\n                    ...prevState,\n                    [name]: value\n                }\n            });\n            setSelectedCardPayment(null);\n        }\n    }\n    const handleInputFocus = (e) => {\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                focus: e.target.name\n            }\n        });\n    }\n    const handleSelectBlur = (type, full, monthOrYear) => {\n        if (type === \"selectedMonth\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${monthOrYear}/${selectedYear !== null ? selectedYear.value : \"--\"}`\n                    }\n                });\n            }, 500)\n        } else if (type === \"selectedYear\") {\n\n            setTimeout(() => {\n                setCardData(prevState => {\n                    return {\n                        ...prevState,\n                        expiry: `${selectedMonth !== null ? selectedMonth.value : \"--\"}/${monthOrYear}`\n                    }\n                });\n            }, 500)\n        }\n    }\n    const handleCardSelectionChange = (value) => {\n        console.log(\"handleCardSelectionChange ran/running..:\", value);\n\n        setSelectedCardPayment(value);\n        setCardData(prevState => {\n            return {\n                ...prevState,\n                cvc: \"\",\n                expiry: \"\",\n                focus: \"\",\n                name: \"\",\n                number: \"\"\n            }\n        });\n    }\n    const clearPreviousState = () => {\n        setSelectedCardPayment(null);\n        setSelectedMonth(null);\n        setSelectedYear(null);\n        setCardData({\n            focus: \"\",\n            cvc: \"\",\n            name: \"\",\n            number: \"\",\n            expiry: \"\"\n        });\n    }\n    const handleSubmission = () => {\n        console.log(\"handle handleSubmission submission!\");\n        \n        const configuration = {\n            employerId: userData.uniqueId,\n            card: cardData,\n            manuallyEntered: cardPaymentSelected !== null ? false : true,\n            cardPaymentSelected,\n            profileBoostedSelected\n        }\n        axios.post(`${process.env.REACT_APP_BASE_URL}/boost/employer/profile/period/time`, configuration).then((res) => {\n            if (res.data.message === \"Successfully boosted your selected profile!\") {\n                console.log(res.data);\n\n                const { listing, cost } = res.data;\n\n                setSheetOpenProfileBoost(false);\n\n                clearPreviousState();\n\n                NotificationManager.success(`We've successfully boosted your listing with the company name of '${listing.publicCompanyName}' at the cost of '$${cost / 100}'! Succesfully initialized your promoted listing & it is NOW LIVE!`, \"Successfully charged desired card and listing is NOW PROMOTED!\", 5000);\n\n            } else if (res.data.message === \"Already boosted this listing!\") {\n\n                setSheetOpenProfileBoost(false);\n\n                NotificationManager.warning(\"You've ALREADY boosted this listing, you CANNOT double boost a listing as it would be a waste of your money. Please wait for this boosted listing to expire (check back periodically if you'd like) before boosting again or select another listing!\", \"Listing is already boosted!\", 4750);\n            } else {\n                console.log(\"Err\", res.data);\n\n                setSheetOpenProfileBoost(false);\n\n                clearPreviousState();\n\n                NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            setSheetOpenProfileBoost(false);\n\n            clearPreviousState();\n\n            NotificationManager.error(\"An error has occurred while attempting to process your payment & initialize your 'employer listing' boosted listing! If this error persists, please contact support or try this action again.\", \"Unknown error has occurred..!\", 4750);\n        })\n    }\n    const calculateDisabled = () => {\n\n        const  { name, number, expiry, cvc } = cardData;\n\n        if (((typeof number !== \"undefined\" && number.length >= 12 && typeof cvc !== \"undefined\" && cvc.length >= 3 && typeof name !== \"undefined\" && name.length >= 8 && typeof expiry !== \"undefined\" && expiry.length === 5) || (cardPaymentSelected !== null))) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    console.log(\"cardData\", cardData, selectedMonth, selectedYear);\n    return (\n        <div>\n            <Sheet disableDrag={true} isOpen={boostProfilePaneOpen} onClose={() => setSheetOpenProfileBoost(false)}>\n                <Sheet.Container>\n                <Sheet.Header>\n                    <div className='margin-medium-button-pane'>\n                        <Button className={\"btn-square-danger\"} color={\"danger-2x\"} outline style={{ width: \"100%\" }} onClick={() => setSheetOpenProfileBoost(false)}>Close/Exit Pane</Button>\n                    </div>\n                </Sheet.Header>\n                <Sheet.Content>\n                    <Container fluid={true}>\n                        <Row style={{ marginTop: \"25px\" }}>\n                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card className='bordered-shadowed-card-deposit'>\n                                    <CardHeader className={\"b-l-info b-r-info\"}>\n                                        <h2 className='header-deposit-card-funds'>You've selected {profileBoostedSelected} which means you have selected the <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{calculateTier(profileBoostedSelected)}</strong> boost 'tier' which cooresponding between 1 and 3 (3 being the most intensive 'boost') for <strong style={{ color: \"#51bb25\", textDecorationLine: \"underline\" }}>{calculateBoostCost(profileBoostedSelected)}</strong></h2>\n                                        <p className='lead'>Please fill out or select the related <strong style={{ color: \"#7366ff\" }}>payment information</strong> BEFORE continuing with this profile boost submission. We will charge you approx. <strong style={{ color: \"#7366ff\", textDecorationLine: \"underline\" }}>{calculateBoostCost(profileBoostedSelected)}</strong> for this specific choosen boost!</p>\n                                        <hr />\n                                        <h2 style={{ textDecorationLine: \"underline\" }} className='header-deposit-card-funds'>Please select the payment method you'd like to use for this transaction..</h2>\n                                        <hr />\n                                        <p className='lead'>Select an existing payment method to purchase this 'boost/promotion' OR add a card to then make the desired purchase - either is acceptable, up to you! Your boost will be effective IMMEDIATELY so please time your purchase accordingly (morning's and afternoon's are good boost times)</p>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                            <Row>\n                                                                <h4 className='h4-two-col-header'>Enter your <strong>card details</strong> in the below inputs/form to add a new payment method and charge it accordingly (per this boost purchase).</h4>\n                                                                <hr />\n                                                                <p className='lead'>Add your payment details in the live form collection unit below. This will not only use <strong>THIS CARD AS A PAYMENT METHOD</strong> but will also save this card information to your account for a later date and/or future purchases down the road..</p>\n                                                                <hr />\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <FormGroup>\n                                                                        <Label>Card Number</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.number} name=\"number\" className=\"form-control\" maxLength={19} size={19} type=\"number\" placeholder=\"Debit/Credit Card Number\" aria-label=\"Debit/Credit Card Number\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Full Name</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.name} name=\"name\" maxLength=\"35\" size=\"35\" className=\"form-control\" type=\"text\" placeholder=\"Full Name\" aria-label=\"Full Name\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>Expiration</Label>\n                                                                        <InputGroup>\n                                                                            <Select\n                                                                                value={selectedMonth}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedMonth(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedMonth\", selectedMonth, selectedMonth.value);\n                                                                                }}\n                                                                                className=\"stretch\"\n                                                                                placeholder={\"MONTH\"}\n                                                                                options={monthOptions}\n                                                                            />\n                                                                            <Select\n                                                                                value={selectedYear}\n                                                                                onChange={(value) => {\n                                                                                    setSelectedYear(value);\n                                                                                    setSelectedCardPayment(null);\n                                                                                }}\n                                                                                onBlur={() => {\n                                                                                    handleSelectBlur(\"selectedYear\", selectedYear, selectedYear.value);\n                                                                                }}\n                                                                                className=\"stretch-two\"\n                                                                                placeholder={\"YEAR\"}\n                                                                                options={yearOptions}\n                                                                            />\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                                <Col sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\n                                                                    <FormGroup>\n                                                                        <Label>CVC</Label>\n                                                                        <InputGroup>\n                                                                            <Input onFocus={handleInputFocus} onChange={handleInputChange} value={cardData.cvc} name=\"cvc\" className=\"form-control\" maxLength=\"4\" size=\"4\" type=\"number\" placeholder=\"CVC\" aria-label=\"CVC\"/>\n                                                                        </InputGroup>\n                                                                    </FormGroup>\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                                <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                                    <Cards\n                                                                        cvc={cardData.cvc}\n                                                                        expiry={cardData.expiry}\n                                                                        focused={cardData.focus}\n                                                                        name={cardData.name}\n                                                                        number={cardData.number}\n                                                                    />\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                            <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                {ready === true ? <Card>\n                                                    <CardBody className='b-l-primary b-r-primary project-boxed-shadowized-min-second'>\n                                                        <Row>\n                                                            <h4 className='h4-two-col-header'>Select a previously added card/payment-method that has been added at a previous moment in time prior to this current form.</h4>\n                                                            <hr />\n                                                            <p className='lead'>Simply select your card and make sure the rest of the form data (including the above data) is completely filled out and/or selected BEFORE proceeding with your payment and boost/promotion activation!</p>\n                                                            <hr />\n                                                        </Row>\n                                                        <Row style={{ paddingBottom: \"10px\" }}>\n                                                            <Label>Select An Existing Registered Card (Previously registered on a different date/time)</Label>\n                                                            <Select\n                                                                value={cardPaymentSelected}\n                                                                onChange={handleCardSelectionChange}\n                                                                options={previousCards}\n                                                            />\n                                                        </Row>\n                                                    </CardBody>\n                                                </Card> : <Fragment>\n                                                    <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                                                        <p>\n                                                            <Skeleton containerClassName={\"stretch-bars\"} count={25} />\n                                                        </p>\n                                                    </SkeletonTheme>\n                                                </Fragment>}\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginBottom: \"37.5px\" }}>\n                                            <Button disabled={calculateDisabled()} outline={calculateDisabled() ? true : false} className='btn-square-success' onClick={handleSubmission} style={{ width: \"100%\" }} color={\"success\"}>Submit & Purchase Boost/Promotion!</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Sheet.Content>\n                </Sheet.Container>\n                <Sheet.Backdrop />\n            </Sheet>\n        </div>\n    );\n}\n\nexport default PromoteProfileBoostSheetHelper;"]},"metadata":{},"sourceType":"module"}