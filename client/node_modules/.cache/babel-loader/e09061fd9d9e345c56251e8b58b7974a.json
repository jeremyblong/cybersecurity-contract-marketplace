{"ast":null,"code":"import React,{Fragment,useState,useEffect}from'react';import{Row,Col,Card,CardHeader,Container,CardBody,Button}from'reactstrap';import moment from\"moment\";import helpers from\"./followingRelated/following/helpers.js\";import _ from\"lodash\";import{useHistory}from\"react-router-dom\";const{renderProfilePicVideo}=helpers;const FollowingEmployerAccountHelper=_ref=>{let{employerData}=_ref;const history=useHistory();const[cards,setCards]=useState([]);const redirectToProfile=element=>{console.log(\"redirectToHackersProfile ran...\");if(element.followingAccountType===\"hackers\"){history.push(\"/hacker/profile/individual/view/\".concat(element.followingID));}else{history.push(\"/employer/individual/profile/main/\".concat(element.followingID));}};useEffect(()=>{setCards([...employerData.followingHackers,...employerData.followingCompanies]);},[]);console.log(\"cards\",cards);console.log(\"UUUUSSEERRRRR\",employerData);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\",lg:\"12\",xl:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"b-l-primary b-r-primary\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-left\"},\"These are the people that this user is 'following' & actively keeping-up-with!\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,cards.map((element,i)=>{if(element.followingAccountType===\"hackers\"){return/*#__PURE__*/React.createElement(Card,{key:i,className:\"shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3\"},/*#__PURE__*/React.createElement(\"figure\",{className:\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"},/*#__PURE__*/React.createElement(\"a\",{href:null,\"data-size\":\"1600x950\"},renderProfilePicVideo(element.latestProfilePicVideo),/*#__PURE__*/React.createElement(\"div\",{className:\"caption\"},/*#__PURE__*/React.createElement(\"h4\",null,element.followingFullName),/*#__PURE__*/React.createElement(\"p\",null,\"Account Type: \",element.followingAccountType),/*#__PURE__*/React.createElement(\"p\",null,\"Job Title: \",element.followingJobTitle!==\"undefined\"&&element.followingJobTitle!==null?element.followingJobTitle:\"Not Provided..\"),/*#__PURE__*/React.createElement(\"p\",null,\"Started Following: \",moment(element.date).fromNow()))),/*#__PURE__*/React.createElement(Button,{className:\"btn-square-primary push-bottom-button-profile\",color:\"primary-2x\",outline:true,style:{width:\"100%\"},onClick:()=>redirectToProfile(element)},\"Redirect To Profile\")));}else{return/*#__PURE__*/React.createElement(Card,{key:i,className:\"shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3\"},/*#__PURE__*/React.createElement(\"figure\",{className:\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"},/*#__PURE__*/React.createElement(\"a\",{href:null,\"data-size\":\"1600x950\"},renderProfilePicVideo(element.latestProfilePicVideo),/*#__PURE__*/React.createElement(\"div\",{className:\"caption\"},/*#__PURE__*/React.createElement(\"h4\",null,element.followingFullName),/*#__PURE__*/React.createElement(\"p\",null,\"Account Type: \",element.followingAccountType),/*#__PURE__*/React.createElement(\"p\",null,\"Job Title: \",element.followingJobTitle!==\"undefined\"&&element.followingJobTitle!==null?element.followingJobTitle:\"Not Provided..\"),/*#__PURE__*/React.createElement(\"p\",null,\"Started Following: \",moment(element.date).fromNow()))),/*#__PURE__*/React.createElement(Button,{className:\"btn-square-primary push-bottom-button-profile\",color:\"primary-2x\",outline:true,style:{width:\"100%\"},onClick:()=>redirectToProfile(element)},\"Redirect To Profile\")));}})))))))));};export default FollowingEmployerAccountHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/people/employers/individualProfile/helpers/following.js"],"names":["React","Fragment","useState","useEffect","Row","Col","Card","CardHeader","Container","CardBody","Button","moment","helpers","_","useHistory","renderProfilePicVideo","FollowingEmployerAccountHelper","employerData","history","cards","setCards","redirectToProfile","element","console","log","followingAccountType","push","followingID","followingHackers","followingCompanies","map","i","latestProfilePicVideo","followingFullName","followingJobTitle","date","fromNow","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Row, Col, Card, CardHeader, Container, CardBody, Button } from 'reactstrap';\nimport moment from \"moment\";\nimport helpers from \"./followingRelated/following/helpers.js\";\nimport _ from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst { renderProfilePicVideo } = helpers;\n\nconst FollowingEmployerAccountHelper = ({ employerData }) => {\n\n    const history = useHistory();\n\n    const [ cards, setCards ] = useState([]);\n\n\n    const redirectToProfile = (element) => {\n        console.log(\"redirectToHackersProfile ran...\");\n    \n        if (element.followingAccountType === \"hackers\") {\n            history.push(`/hacker/profile/individual/view/${element.followingID}`);\n        } else {\n            history.push(`/employer/individual/profile/main/${element.followingID}`);\n        }\n    }\n\n    useEffect(() => {\n        setCards([...employerData.followingHackers, ...employerData.followingCompanies]);\n    }, [])\n\n    console.log(\"cards\", cards);\n\n    console.log(\"UUUUSSEERRRRR\", employerData);\n\n    return (\n        <Fragment>\n            <Row>\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card className='shadow'>\n                                <CardHeader className='b-l-primary b-r-primary'>\n                                    <h3 className='text-left'>These are the people that this user is 'following' & actively keeping-up-with!</h3>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        {cards.map((element, i) => {\n                                            if (element.followingAccountType === \"hackers\") {\n                                                return (\n                                                    <Card key={i} className='shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3'>\n                                                        <figure className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"><a href={null} data-size=\"1600x950\">\n                                                            {renderProfilePicVideo(element.latestProfilePicVideo)}\n                                                            <div className=\"caption\">\n                                                                <h4>{element.followingFullName}</h4>\n                                                                <p>Account Type: {element.followingAccountType}</p>\n                                                                <p>Job Title: {element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"}</p>\n                                                                <p>Started Following: {moment(element.date).fromNow()}</p>\n                                                            </div></a>\n                                                            <Button className='btn-square-primary push-bottom-button-profile' color={\"primary-2x\"} outline style={{ width: \"100%\" }} onClick={() => redirectToProfile(element)}>Redirect To Profile</Button>\n                                                        </figure>\n                                                    </Card>\n                                                );\n                                            } else {\n                                                return (\n                                                    <Card key={i} className='shadow outtercardfollowing col-sm-12 col-md-3 col-lg-3 col-xl-3'>\n                                                        <figure className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\"><a href={null} data-size=\"1600x950\">\n                                                            {renderProfilePicVideo(element.latestProfilePicVideo)}\n                                                            <div className=\"caption\">\n                                                                <h4>{element.followingFullName}</h4>\n                                                                <p>Account Type: {element.followingAccountType}</p>\n                                                                <p>Job Title: {element.followingJobTitle !== \"undefined\" && element.followingJobTitle !== null ? element.followingJobTitle : \"Not Provided..\"}</p>\n                                                                <p>Started Following: {moment(element.date).fromNow()}</p>\n                                                            </div></a>\n                                                            <Button className='btn-square-primary push-bottom-button-profile' color={\"primary-2x\"} outline style={{ width: \"100%\" }} onClick={() => redirectToProfile(element)}>Redirect To Profile</Button>\n                                                        </figure>\n                                                    </Card>\n                                                );\n                                            }\n                                        })}\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Row>\n        </Fragment>\n    );\n};\n\nexport default FollowingEmployerAccountHelper;"]},"metadata":{},"sourceType":"module"}