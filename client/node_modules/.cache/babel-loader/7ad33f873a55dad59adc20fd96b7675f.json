{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb';\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart';\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport messagingHelpers from \"./helpers/displayMessages/displayMessages.js\";\nimport _ from \"lodash\";\nimport typingIndicator from \"../../../../../assets/gifs/typing-white.gif\";\nconst {\n  RenderMessagListStreaming\n} = messagingHelpers;\n\nconst renderProfilePictureOrVideo = arr => {\n  // last image will be rendered\n  const reversed = arr.reverse();\n\n  for (let index = 0; index < reversed.length; index++) {\n    const item = reversed[index];\n\n    if (item.type.includes(\"image\")) {\n      return /*#__PURE__*/React.createElement(Media, {\n        src: `${process.env.REACT_APP_ASSET_LINK}/${item.link}`,\n        className: \"rounded-circle\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  ;\n};\n\nconst renderLiveStreamPlayer = videoUrl => {\n  console.log(\"videoUrl\", videoUrl);\n\n  if (videoUrl !== null) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        height: \"100%\"\n      },\n      className: \"ribbon-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"ribbon-wrapped-streaming-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ribbon ribbon-clip ribbon-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"LIVE FEED!\"), /*#__PURE__*/React.createElement(ReactHlsPlayer, {\n      className: \"custom-streaming-player\",\n      src: videoUrl,\n      autoPlay: true,\n      controls: true,\n      width: \"100%\",\n      height: \"95%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n      baseColor: \"#d4d4d4\",\n      highlightColor: \"#8f8f8f\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      containerClassName: \"stretch-bars\",\n      count: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nconst ViewIndividualLiveStreamHelper = _ref => {\n  let {\n    location,\n    information,\n    SBData\n  } = _ref;\n  // create history obj for redirects\n  const history = useHistory();\n  const [state, setState] = useState({\n    nav1: null,\n    nav2: null\n  });\n  const [userCount, setUserCount] = useState(0);\n  const [streamData, setStreamData] = useState(null); // eslint-disable-next-line\n\n  const generated = uuid(); // chat begin\n\n  const allMembers = [];\n  const chats = [];\n  const selectedUser = {\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    online: false,\n    id: generated,\n    name: \"Jeremy Blong\",\n    image: require(\"../../../../../assets/images/placeholder.png\"),\n    lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n  };\n  const currentUser = {\n    id: generated\n  };\n  const [messageInput, setMessageInput] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [videoUrl, setVideoUrlState] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [channel, setChannelData] = useState(null);\n  const [userList, setUserListState] = useState([]);\n  const [messages, setMessagesState] = useState([]); // chat end\n\n  const slider1 = useRef();\n  const slider2 = useRef();\n  useEffect(() => () => {\n    console.log(\"Unmounted....\");\n    const CHANNEL_URL = location.state.stream.channelUrl;\n    SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n      if (error) {\n        // Handle error.\n        console.log(\"error getting channel to LEAVE group...:\", error);\n      } else {\n        openChannel.exit((response, error) => {\n          if (error) {\n            // Handle error.\n            console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n          } else {\n            console.log(\"EXIT channel SUCCESS!\", response);\n          }\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n    setStreamData(location.state.stream);\n    const configuration = {\n      params: {\n        uniqueId: information.uniqueId\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then(res => {\n      if (res.data.message === \"Successfully gathered core user information!\") {\n        console.log(res.data);\n        const {\n          user\n        } = res.data;\n        const CHANNEL_URL = location.state.stream.channelUrl;\n        SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n          if (error) {\n            // Handle error.\n            console.log(\"error GETTING channel...:\", error);\n          }\n\n          const listQuery = openChannel.createPreviousMessageListQuery();\n          listQuery.limit = 100;\n          listQuery.reverse = true;\n          listQuery.customType = \"public\"; // Retrieving previous messages.\n\n          listQuery.load((messageList, error) => {\n            if (error) {\n              // Handle error.\n              console.log(\"error gathering old messages...:\", error);\n            } else {\n              setMessagesState(messageList);\n            }\n          }); // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n\n          openChannel.enter((response, error) => {\n            if (error) {\n              // Handle error.\n              console.log(\"error entering channel...:\", error);\n            } else {\n              console.log(\"successfully entered channel...\", response);\n              setChannelData(openChannel);\n              setUserData(user);\n            }\n          });\n        });\n      } else {\n        console.log(\"Err\", res.data);\n        NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n    });\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const addEmoji = emoji => {\n    const text = `${messageInput}${emoji.native}`;\n    setShowEmojiPicker(false);\n    setMessageInput(text);\n  };\n\n  const handleMessageChange = message => {\n    setMessageInput(message);\n  };\n\n  const renderSendbirdLiveCommands = () => {\n    const channelHandler = new SBData.ChannelHandler();\n\n    channelHandler.onUserEntered = (openChannel, user) => {\n      console.log(\"onUserEntered entered\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(prevState => {\n        return [...prevState, user];\n      });\n    };\n\n    channelHandler.onUserExited = (openChannel, user) => {\n      console.log(\"onUserExited exited\", openChannel, user); // update current count...\n\n      setUserCount(openChannel.participantCount); // update current user list...\n\n      setUserListState(prevState => {\n        return prevState.filter((item, idx) => {\n          if (item.userId !== user.userId) {\n            return true;\n          }\n        });\n      });\n    };\n\n    channelHandler.onMessageReceived = (channelRecieved, message) => {\n      console.log(\"message recieved~! : \", channelRecieved, message);\n\n      if (channel !== null && channelRecieved.url === channel.url) {\n        setMessagesState(prevState => {\n          return [message, ...prevState];\n        });\n      }\n    };\n\n    if (_.has(location.state, \"stream\")) {\n      const CHANNEL_URL = location.state.stream.channelUrl;\n      SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n    }\n  };\n\n  const handleMessagePress = e => {\n    if (e.key === \"Enter\" || e === \"send\") {}\n  };\n\n  const chatMenuToggle = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const handleOpenMessageSend = () => {\n    const params = new SBData.UserMessageParams();\n    params.message = messageInput;\n    params.customType = \"public\";\n    params.mentionType = 'users';\n    params.mentionedUserIds = [];\n    params.translationTargetLanguages = ['en']; // French and German\n\n    params.pushNotificationDeliveryOption = 'default'; // Either 'default' or 'suppress'\n\n    channel.sendUserMessage(params, (userMessage, error) => {\n      if (error) {\n        // Handle error.\n        console.log(\"error sending message...:\", error);\n      } else {\n        const messageId = userMessage.messageId;\n        console.log(\"successfully sent msg!\", messageId, userMessage);\n        setMessagesState(prevState => {\n          return [userMessage, ...prevState];\n        });\n      }\n    });\n  };\n\n  console.log(\"userData\", userData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Live Streaming\",\n    title: \"Individual Live Stream (Currently LIVE)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, renderSendbirdLiveCommands(videoUrl), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"product-page-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"7\",\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, renderLiveStreamPlayer()), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"5\",\n    xl: \"5 xl-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"streaming-chat-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, userData !== null ? /*#__PURE__*/React.createElement(CardBody, {\n    className: \"streaming-chat-card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"pr-0 chat-right-aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 45\n    }\n  }, renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos : /*#__PURE__*/React.createElement(Media, {\n    src: \"../../../../../assets/images/placeholder.png\",\n    className: \"rounded-circle\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 187\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 53\n    }\n  }, \"Streamed by \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 69\n    }\n  }, `${userData.firstName} ${userData.lastName}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status digits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 53\n    }\n  }, true ? 'online' : selectedUser.lastSeenDate, \" w/\", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"blue\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 105\n    }\n  }, userCount), \" Current Viewer's\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline float-left float-sm-right chat-menu-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-clip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-headphone-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-video-camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 101\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item toogle-bar\",\n    onClick: () => chatMenuToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 130\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 145\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history chat-msg-box custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, typeof messages !== \"undefined\" && messages.length > 0 ? messages.map((item, index) => {\n    {\n      /* const participators = allMembers.chats.find(x => x.id === item.sender); */\n    }\n    return /*#__PURE__*/React.createElement(RenderMessagListStreaming, {\n      messageList: messages,\n      channel: channel,\n      userData: userData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 64\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"img-fluid\",\n    src: start_conversion,\n    alt: \"start conversion \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 49\n    }\n  }, showEmojiPicker ? /*#__PURE__*/React.createElement(Picker, {\n    set: \"apple\",\n    emojiSize: 30,\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 57\n    }\n  }) : null), /*#__PURE__*/React.createElement(Col, {\n    xl: \"12\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smiley-box bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker\",\n    onClick: () => toggleEmojiPicker(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    src: require('../../../../../assets/images/smiley.png'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control input-txt-bx\",\n    placeholder: \"Type a message......\",\n    value: messageInput,\n    onKeyPress: e => {\n      handleMessagePress(e);\n    },\n    onChange: e => handleMessageChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => handleOpenMessageSend(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 61\n    }\n  }, Send)))))))))) : null)))), /*#__PURE__*/React.createElement(BottomContainerHelper, {\n    channel: channel,\n    userData: userData,\n    streamData: streamData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    information: state.auth.data,\n    SBData: state.sendbirdInitData.sendbirdInitData\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(ViewIndividualLiveStreamHelper));","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/streamingLiveHacks/ViewLiveStreams/individualStream/viewIndividualStream.js"],"names":["React","Fragment","useState","useEffect","useRef","Breadcrumb","Container","Row","Col","Card","Button","Media","CardBody","Form","FormGroup","Input","InputGroup","InputGroupAddon","Nav","NavItem","NavLink","TabPane","TabContent","BottomContainerHelper","useHistory","withRouter","connect","start_conversion","Picker","Send","uuid","moment","ReactHlsPlayer","Skeleton","SkeletonTheme","NotificationManager","axios","messagingHelpers","_","typingIndicator","RenderMessagListStreaming","renderProfilePictureOrVideo","arr","reversed","reverse","index","length","item","type","includes","process","env","REACT_APP_ASSET_LINK","link","renderLiveStreamPlayer","videoUrl","console","log","height","ViewIndividualLiveStreamHelper","location","information","SBData","history","state","setState","nav1","nav2","userCount","setUserCount","streamData","setStreamData","generated","allMembers","chats","selectedUser","image","require","online","id","name","lastSeenDate","format","currentUser","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","menuToggle","setMenuToggle","setVideoUrlState","userData","setUserData","channel","setChannelData","userList","setUserListState","messages","setMessagesState","slider1","slider2","CHANNEL_URL","stream","channelUrl","OpenChannel","getChannel","openChannel","error","exit","response","playback_id","configuration","params","uniqueId","get","REACT_APP_BASE_URL","then","res","data","message","user","listQuery","createPreviousMessageListQuery","limit","customType","load","messageList","enter","catch","err","current","toggleEmojiPicker","addEmoji","emoji","text","native","handleMessageChange","renderSendbirdLiveCommands","channelHandler","ChannelHandler","onUserEntered","participantCount","prevState","onUserExited","filter","idx","userId","onMessageReceived","channelRecieved","url","has","addChannelHandler","handleMessagePress","e","key","chatMenuToggle","handleOpenMessageSend","UserMessageParams","mentionType","mentionedUserIds","translationTargetLanguages","pushNotificationDeliveryOption","sendUserMessage","userMessage","messageId","profilePicsVideos","textDecorationLine","firstName","lastName","color","map","target","value","mapStateToProps","auth","sendbirdInitData"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, useEffect, useRef } from 'react';\nimport Breadcrumb from '../../../../../layout/breadcrumb'\nimport { Container, Row, Col, Card, Button, Media, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, Nav, NavItem, NavLink, TabPane, TabContent } from 'reactstrap';\nimport BottomContainerHelper from './helpers/bottomContainer/container.js';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport start_conversion from '../../../../../assets/images/start-conversion.jpg';\nimport { Picker } from 'emoji-mart'\nimport { Send } from '../../../../../constant';\nimport uuid from 'react-uuid';\nimport moment from 'moment';\nimport ReactHlsPlayer from 'react-hls-player';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { NotificationManager } from \"react-notifications\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport messagingHelpers from \"./helpers/displayMessages/displayMessages.js\";\nimport _ from \"lodash\";\nimport typingIndicator from \"../../../../../assets/gifs/typing-white.gif\";\n\n\nconst { RenderMessagListStreaming } = messagingHelpers;\n\nconst renderProfilePictureOrVideo = (arr) => {\n    // last image will be rendered\n    const reversed = arr.reverse();\n\n    for (let index = 0; index < reversed.length; index++) {\n        const item = reversed[index];\n        if (item.type.includes(\"image\")) {\n            return <Media src={`${process.env.REACT_APP_ASSET_LINK}/${item.link}`} className=\"rounded-circle\" alt=\"\" />;\n        }\n    };\n}\nconst renderLiveStreamPlayer = (videoUrl) => {\n    console.log(\"videoUrl\", videoUrl)\n    if (videoUrl !== null) {\n        return (\n            <Fragment>\n                <Card style={{ height: \"100%\" }} className=\"ribbon-wrapper\">\n                    <CardBody className={\"ribbon-wrapped-streaming-card\"}>\n                        <div className=\"ribbon ribbon-clip ribbon-info\">LIVE FEED!</div>\n                        <ReactHlsPlayer \n                            className={\"custom-streaming-player\"}\n                            src={videoUrl}\n                            autoPlay={true}\n                            controls={true}\n                            width=\"100%\"\n                            height=\"95%\"\n                        />\n                    </CardBody>\n                </Card>\n            </Fragment>\n        );\n    } else {\n        return (\n            <Fragment>\n                <SkeletonTheme baseColor=\"#d4d4d4\" highlightColor=\"#8f8f8f\">\n                    <p>\n                        <Skeleton containerClassName={\"stretch-bars\"} count={30} />\n                    </p>\n                </SkeletonTheme>\n            </Fragment>\n        );\n    }\n}\n\nconst  ViewIndividualLiveStreamHelper = ({ location, information, SBData })  => {\n    // create history obj for redirects\n    const history = useHistory();\n    const [ state, setState ] = useState({ nav1: null, nav2: null });\n    const [ userCount, setUserCount ] = useState(0);\n    const [ streamData, setStreamData ] = useState(null);\n    // eslint-disable-next-line\n    const generated = uuid();\n    // chat begin\n    const allMembers = [];\n    const chats = [];\n    const selectedUser = {\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        online: false,\n        id: generated,\n        name: \"Jeremy Blong\",\n        image: require(\"../../../../../assets/images/placeholder.png\"),\n        lastSeenDate: moment().format(\"MM/DD/YYYY hh:mm:ss a\")\n    };\n    const currentUser = {\n        id: generated\n    };\n    const [ messageInput, setMessageInput ] = useState('');\n    const [ showEmojiPicker, setShowEmojiPicker ] = useState(false)\n    const [ menuToggle, setMenuToggle ] = useState(false);\n    const [ videoUrl, setVideoUrlState ] = useState(null);\n    const [ userData, setUserData ] = useState(null);\n    const [ channel, setChannelData ] = useState(null);\n    const [ userList, setUserListState ] = useState([]);\n    const [ messages, setMessagesState ] = useState([]);\n    // chat end\n    const slider1 = useRef();\n    const slider2 = useRef();\n\n    useEffect(() => () => {\n        console.log(\"Unmounted....\");\n\n        const CHANNEL_URL = location.state.stream.channelUrl;\n\n        SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"error getting channel to LEAVE group...:\", error);\n            } else {\n                openChannel.exit((response, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"Error EXITING stream (attempting to exit) ...: \", error);\n                    } else {\n                        console.log(\"EXIT channel SUCCESS!\", response);\n                    }\n                });\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n\n        setVideoUrlState(`https://stream.mux.com/${location.state.stream.playback_id}.m3u8`);\n        setStreamData(location.state.stream);\n\n        const configuration = {\n            params: {\n                uniqueId: information.uniqueId\n            }\n        }\n\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/core/anonymous/user/data`, configuration).then((res) => {\n            if (res.data.message === \"Successfully gathered core user information!\") {\n                console.log(res.data);\n\n                const { user } = res.data;\n\n                const CHANNEL_URL = location.state.stream.channelUrl;\n\n                SBData.OpenChannel.getChannel(CHANNEL_URL, (openChannel, error) => {\n                    if (error) {\n                        // Handle error.\n                        console.log(\"error GETTING channel...:\", error);\n                    }\n\n                    const listQuery = openChannel.createPreviousMessageListQuery();\n                    listQuery.limit = 100;\n                    listQuery.reverse = true;\n                    listQuery.customType = \"public\";\n\n                    // Retrieving previous messages.\n                    listQuery.load((messageList, error) => {\n                        if (error) {\n                            // Handle error.\n                            console.log(\"error gathering old messages...:\", error);\n                        } else {\n                            setMessagesState(messageList);\n                        }\n                    });\n                \n                    // Call the instance method of the result object in the \"openChannel\" parameter of the callback function.\n                    openChannel.enter((response, error) => {\n                        if (error) {\n                            // Handle error.\n                            console.log(\"error entering channel...:\", error);\n                        } else {\n                            console.log(\"successfully entered channel...\", response);\n\n                            setChannelData(openChannel);\n\n                            setUserData(user);\n                        }\n                    });\n                });\n            } else {\n                console.log(\"Err\", res.data);\n\n                NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.error(\"Error while gathering user data for this listing - some data will NOT be complete...\", \"Could NOT gather user!\", 5000);\n        })\n\n        setState({\n            nav1: slider1.current,\n            nav2: slider2.current\n          });\n      } , []);\n\n    const toggleEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker);\n    }\n  \n    const addEmoji = (emoji) =>  {\n        const text = `${messageInput}${emoji.native}`;\n        setShowEmojiPicker(false);\n        setMessageInput(text)\n    }\n\n    const handleMessageChange = (message) => {\n        setMessageInput(message)\n    }\n    const renderSendbirdLiveCommands = () => {\n        const channelHandler = new SBData.ChannelHandler();\n\n        channelHandler.onUserEntered = (openChannel, user) => {\n            console.log(\"onUserEntered entered\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n             // update current user list...\n            setUserListState(prevState => {\n                return [...prevState, user];\n            });\n        };\n        channelHandler.onUserExited = (openChannel, user) => {\n            console.log(\"onUserExited exited\", openChannel, user);\n            // update current count...\n            setUserCount(openChannel.participantCount);\n            // update current user list...\n            setUserListState(prevState => {\n                return prevState.filter((item, idx) => {\n                    if (item.userId !== user.userId) {\n                        return true;\n                    }\n                })\n            });\n        };\n        channelHandler.onMessageReceived = (channelRecieved, message) => {\n            console.log(\"message recieved~! : \", channelRecieved, message);\n\n            if (channel !== null && channelRecieved.url === channel.url) {\n                setMessagesState(prevState => {\n                    return [message, ...prevState]\n                })\n            } \n        };\n        if (_.has(location.state, \"stream\")) {\n            const CHANNEL_URL = location.state.stream.channelUrl;\n\n            SBData.addChannelHandler(CHANNEL_URL, channelHandler);\n        }\n    }\n    const handleMessagePress = (e) => {\n        if (e.key === \"Enter\" || e === \"send\") {\n\n        }\n    }\n    const chatMenuToggle = () => {\n        setMenuToggle(!menuToggle)\n    }\n    const handleOpenMessageSend = () => {\n        const params = new SBData.UserMessageParams();\n\n        params.message = messageInput;\n        params.customType = \"public\";\n        params.mentionType = 'users';\n        params.mentionedUserIds = [];\n        params.translationTargetLanguages = ['en'];   // French and German\n        params.pushNotificationDeliveryOption = 'default';  // Either 'default' or 'suppress'\n\n        channel.sendUserMessage(params, (userMessage, error) => {\n            if (error) {\n                // Handle error.\n                console.log(\"error sending message...:\", error);\n            } else {\n                const messageId = userMessage.messageId;\n\n                console.log(\"successfully sent msg!\", messageId, userMessage);\n\n                setMessagesState(prevState => {\n                    return [userMessage, ...prevState]\n                })\n            }\n        });\n    }\n    console.log(\"userData\", userData);\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Live Streaming\" title=\"Individual Live Stream (Currently LIVE)\"/>\n            <Container fluid={true}>\n                {renderSendbirdLiveCommands(videoUrl)}\n                <Row>\n                    <Col>\n                    <Card>\n                        <Row className=\"product-page-main\">\n                            <Col sm=\"12\" md=\"12\" lg=\"7\" xl=\"7\">\n                                {renderLiveStreamPlayer()}\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"5\" xl=\"5 xl-100\">\n                                <Card className={\"streaming-chat-card-wrapper\"}>\n                                    {userData !== null ? <CardBody className={\"streaming-chat-card-body p-0\"}>\n                                        <Row className=\"chat-box\">\n                                        <Col className=\"pr-0 chat-right-aside\">\n                                            <div className=\"chat\">\n                                            <div className=\"chat-header clearfix\">\n                                                {renderProfilePictureOrVideo(_.has(userData, \"profilePicsVideos\") && userData.profilePicsVideos.length > 0 ? userData.profilePicsVideos : <Media src={\"../../../../../assets/images/placeholder.png\"} className=\"rounded-circle\" alt=\"\" />)}\n                                                <div className=\"about\">\n                                                    <div className=\"name\">\n                                                        Streamed by <strong style={{ textDecorationLine: \"underline\" }}>{`${userData.firstName} ${userData.lastName}`}</strong>\n                                                    </div>\n                                                    <div className=\"status digits\" >\n                                                        {true ? 'online' : selectedUser.lastSeenDate} w/<strong style={{ color: \"blue\", textDecorationLine: \"underline\" }}>{userCount}</strong> Current Viewer's\n                                                    </div>\n                                                </div>\n                                                <ul className=\"list-inline float-left float-sm-right chat-menu-icons\">\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-search\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-clip\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-headphone-alt\"></i></a></li>\n                                                    <li className=\"list-inline-item\"><a href={null}><i className=\"icon-video-camera\"></i></a></li>\n                                                    <li className=\"list-inline-item toogle-bar\" onClick={() => chatMenuToggle()}><a href={null}><i className=\"icon-menu\"></i></a></li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-history chat-msg-box custom-scrollbar\" >\n                                                <ul>\n                                                    {typeof messages !== \"undefined\" && messages.length > 0 ? messages.map((item, index) => {\n                                                        {/* const participators = allMembers.chats.find(x => x.id === item.sender); */}\n                                                        return <RenderMessagListStreaming messageList={messages} channel={channel} userData={userData} />;\n                                                    }) : <div>\n                                                        <Media className=\"img-fluid\" src={start_conversion} alt=\"start conversion \" />\n                                                    </div>}\n                                                </ul>\n                                            </div>\n                                            <div className=\"chat-message clearfix\">\n                                                <Row>\n                                                <div className=\"mb-2\">\n                                                {showEmojiPicker ? (\n                                                        <Picker set=\"apple\" emojiSize={30} onSelect={addEmoji} />\n                                                ) : null}\n                                                </div>\n                                                <Col xl=\"12\" className=\"d-flex\">\n                                                    <div className=\"smiley-box bg-primary\">\n                                                    \n                                                        <div className=\"picker\" onClick={() => toggleEmojiPicker()}>\n                                                        <Media src={require('../../../../../assets/images/smiley.png')}  alt=\"\"/>\n                                                        </div>\n\n                                                    </div>\n                                                    <InputGroup className=\"text-box\">\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control input-txt-bx\"\n                                                            placeholder=\"Type a message......\"\n                                                            value={messageInput}\n                                                            onKeyPress={(e) => {\n                                                                handleMessagePress(e)\n                                                            }}\n                                                            onChange={(e) => handleMessageChange(e.target.value)}\n                                                        />\n                                                        <InputGroupAddon addonType=\"append\">\n                                                            <Button color=\"primary\" onClick={() => handleOpenMessageSend()} >{Send}</Button>\n                                                        </InputGroupAddon>\n                                                    </InputGroup>\n                                                </Col>\n                                                </Row>\n                                            </div>\n                                            </div>\n                                            {/* {typingStatus === true ? <div className={\"typing-indicator-wrapper\"}>\n                                                <img src={typingIndicator} className={\"typing-animation\"} />\n                                            </div> : null} */}\n                                        </Col>\n                                    </Row>\n                                </CardBody> : null}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n                <BottomContainerHelper channel={channel} userData={userData} streamData={streamData} /></Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        information: state.auth.data,\n        SBData: state.sendbirdInitData.sendbirdInitData\n    }\n}\nexport default connect(mapStateToProps, {  })(withRouter(ViewIndividualLiveStreamHelper));\n"]},"metadata":{},"sourceType":"module"}