{"ast":null,"code":"'use strict';\n\nvar _ = require('../common/utils.js');\n\nvar version = require('../../version.js');\n\nvar parseAlgoliaClientVersion = require('../common/parseAlgoliaClientVersion.js');\n\nmodule.exports = function popularIn(index, params, details, options) {\n  var algoliaVersion = parseAlgoliaClientVersion(index.as._ua);\n\n  if (algoliaVersion && algoliaVersion[0] >= 3 && algoliaVersion[1] > 20) {\n    params = params || {};\n    params.additionalUA = 'autocomplete.js ' + version;\n  }\n\n  if (!details.source) {\n    return _.error(\"Missing 'source' key\");\n  }\n\n  var source = _.isFunction(details.source) ? details.source : function (hit) {\n    return hit[details.source];\n  };\n\n  if (!details.index) {\n    return _.error(\"Missing 'index' key\");\n  }\n\n  var detailsIndex = details.index;\n  options = options || {};\n  return sourceFn;\n\n  function sourceFn(query, cb) {\n    index.search(query, params, function (error, content) {\n      if (error) {\n        _.error(error.message);\n\n        return;\n      }\n\n      if (content.hits.length > 0) {\n        var first = content.hits[0];\n\n        var detailsParams = _.mixin({\n          hitsPerPage: 0\n        }, details);\n\n        delete detailsParams.source; // not a query parameter\n\n        delete detailsParams.index; // not a query parameter\n\n        var detailsAlgoliaVersion = parseAlgoliaClientVersion(detailsIndex.as._ua);\n\n        if (detailsAlgoliaVersion && detailsAlgoliaVersion[0] >= 3 && detailsAlgoliaVersion[1] > 20) {\n          params.additionalUA = 'autocomplete.js ' + version;\n        }\n\n        detailsIndex.search(source(first), detailsParams, function (error2, content2) {\n          if (error2) {\n            _.error(error2.message);\n\n            return;\n          }\n\n          var suggestions = []; // add the 'all department' entry before others\n\n          if (options.includeAll) {\n            var label = options.allTitle || 'All departments';\n            suggestions.push(_.mixin({\n              facet: {\n                value: label,\n                count: content2.nbHits\n              }\n            }, _.cloneDeep(first)));\n          } // enrich the first hit iterating over the facets\n\n\n          _.each(content2.facets, function (values, facet) {\n            _.each(values, function (count, value) {\n              suggestions.push(_.mixin({\n                facet: {\n                  facet: facet,\n                  value: value,\n                  count: count\n                }\n              }, _.cloneDeep(first)));\n            });\n          }); // append all other hits\n\n\n          for (var i = 1; i < content.hits.length; ++i) {\n            suggestions.push(content.hits[i]);\n          }\n\n          cb(suggestions, content);\n        });\n        return;\n      }\n\n      cb([]);\n    });\n  }\n};","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/node_modules/autocomplete.js/src/sources/popularIn.js"],"names":["_","require","version","parseAlgoliaClientVersion","module","exports","popularIn","index","params","details","options","algoliaVersion","as","_ua","additionalUA","source","error","isFunction","hit","detailsIndex","sourceFn","query","cb","search","content","message","hits","length","first","detailsParams","mixin","hitsPerPage","detailsAlgoliaVersion","error2","content2","suggestions","includeAll","label","allTitle","push","facet","value","count","nbHits","cloneDeep","each","facets","values","i"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('../common/utils.js');\nvar version = require('../../version.js');\nvar parseAlgoliaClientVersion = require('../common/parseAlgoliaClientVersion.js');\n\nmodule.exports = function popularIn(index, params, details, options) {\n  var algoliaVersion = parseAlgoliaClientVersion(index.as._ua);\n  if (algoliaVersion && algoliaVersion[0] >= 3 && algoliaVersion[1] > 20) {\n    params = params || {};\n    params.additionalUA = 'autocomplete.js ' + version;\n  }\n  if (!details.source) {\n    return _.error(\"Missing 'source' key\");\n  }\n  var source = _.isFunction(details.source) ? details.source : function(hit) { return hit[details.source]; };\n\n  if (!details.index) {\n    return _.error(\"Missing 'index' key\");\n  }\n  var detailsIndex = details.index;\n\n  options = options || {};\n\n  return sourceFn;\n\n  function sourceFn(query, cb) {\n    index.search(query, params, function(error, content) {\n      if (error) {\n        _.error(error.message);\n        return;\n      }\n\n      if (content.hits.length > 0) {\n        var first = content.hits[0];\n\n        var detailsParams = _.mixin({hitsPerPage: 0}, details);\n        delete detailsParams.source; // not a query parameter\n        delete detailsParams.index; // not a query parameter\n\n        var detailsAlgoliaVersion = parseAlgoliaClientVersion(detailsIndex.as._ua);\n        if (detailsAlgoliaVersion && detailsAlgoliaVersion[0] >= 3 && detailsAlgoliaVersion[1] > 20) {\n          params.additionalUA = 'autocomplete.js ' + version;\n        }\n\n        detailsIndex.search(source(first), detailsParams, function(error2, content2) {\n          if (error2) {\n            _.error(error2.message);\n            return;\n          }\n\n          var suggestions = [];\n\n          // add the 'all department' entry before others\n          if (options.includeAll) {\n            var label = options.allTitle || 'All departments';\n            suggestions.push(_.mixin({\n              facet: {value: label, count: content2.nbHits}\n            }, _.cloneDeep(first)));\n          }\n\n          // enrich the first hit iterating over the facets\n          _.each(content2.facets, function(values, facet) {\n            _.each(values, function(count, value) {\n              suggestions.push(_.mixin({\n                facet: {facet: facet, value: value, count: count}\n              }, _.cloneDeep(first)));\n            });\n          });\n\n          // append all other hits\n          for (var i = 1; i < content.hits.length; ++i) {\n            suggestions.push(content.hits[i]);\n          }\n\n          cb(suggestions, content);\n        });\n\n        return;\n      }\n\n      cb([]);\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}