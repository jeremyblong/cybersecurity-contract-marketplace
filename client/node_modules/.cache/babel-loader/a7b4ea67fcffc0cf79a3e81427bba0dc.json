{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageThree/index.js\";\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/helperFunctions/helpers.js\";\nimport { Button, Row, Col, Card, CardBody, CardHeader, FormGroup, Label, Input, Form, Progress, Container } from 'reactstrap';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { useForm, Controller } from 'react-hook-form';\nimport reactHookHelpers from \"./helpers/helperFunctions/hookFormHelpers.js\";\nimport options from \"./helpers/helperFunctions/options.js\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Dropzone from 'react-dropzone-uploader';\nimport ReactPlayer from \"react-player\";\nconst {\n  lanuageOptions,\n  experienceLevelOptions,\n  languageList,\n  hoursInLengthOptions\n} = options; // react-hook-form imports/helpers\n\nconst subtitleChecks = reactHookHelpers().subtitleChecks;\nconst languageSpokenChecks = reactHookHelpers().languageSpokenChecks;\nconst skillLevelChecks = reactHookHelpers().skillLevelChecks;\nconst primaryLanguageChecks = reactHookHelpers().primaryLanguageChecks;\nconst hoursOfCourseContentChecks = reactHookHelpers().hoursOfCourseContentChecks;\nconst courseWelcomeMessageChecks = reactHookHelpers().courseWelcomeMessageChecks;\nconst completionMessageChecks = reactHookHelpers().completionMessageChecks;\nconst {\n  renderPreviewOfFile,\n  onSubmitHelper,\n  CustomInputHelper,\n  renderCustomButtonDropzone\n} = helpers; // actual component\n\nconst CreateNewCoursePageThree = _ref => {\n  let {\n    userData,\n    courseData,\n    overallProgress,\n    setOverallProgress,\n    setProgress\n  } = _ref;\n  const [languageArrayNew, setLanguageArray] = useState([]); // refs & such\n\n  const dropzoneRef = useRef(null); // start of state logic...\n\n  const [fileReady, setFileReadyStatus] = useState(false);\n  const [currentFileSelectedUpload, setCurrentUploadFileStatus] = useState(null);\n  const [fileMetaData, setMetaFileData] = useState(null);\n  const [changeOptions, setChangeOptions] = useState(null);\n  const [filePathData, setCurrentFilePathData] = useState(null);\n  const [promotionalDemoFile, setPromotionalDemoFile] = useState(null);\n  const languageSpokenRef = useRef(null);\n  const primaryLanguageRef = useRef(null);\n  const skillLevelRef = useRef(null); // redux form logic\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    resetField,\n    unregister,\n    getValues,\n    array,\n    setValue,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onTouched\",\n    reValidateMode: \"onBlur\"\n  });\n  const currentValues = getValues();\n  useEffect(() => {\n    const languageArrayNew = [];\n\n    for (let index = 0; index < languageList.length; index++) {\n      const language = languageList[index];\n      languageArrayNew.push({\n        label: language.name,\n        value: language.name,\n        completeData: language\n      });\n\n      if (languageList.length - 1 === index) {\n        setLanguageArray(languageArrayNew);\n      }\n    }\n  }, []);\n\n  const onSubmit = (data, e) => {\n    console.log(\"onSubmit ran...\", data, e);\n  };\n\n  const errorsSubmit = (e, errors) => {\n    console.log(\"errorsSubmit\", e, errors);\n  };\n\n  const onBufferEnded = () => {\n    console.log(\"onBufferEnded ended.\");\n  };\n\n  const renderPromoDemoVideo = () => {\n    // ready to display live content\n    if (currentFileSelectedUpload === null) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"overlay-boxshadow-courses centered-both-ways\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"header-no-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 85\n        }\n      }, \"Current NO file(s) is selected/uploaded - please select a file.\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ReactPlayer, {\n        onBufferEnd: onBufferEnded,\n        progressInterval: 1000,\n        controls: true,\n        playIcon: true,\n        playing: false,\n        loop: false,\n        volume: 1,\n        width: \"100%\",\n        height: \"100%\",\n        url: filePathData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  console.log(\"current VALUES:\", currentValues);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-horizontally-course\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-above-bar-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, overallProgress, \"% Complete\")), /*#__PURE__*/React.createElement(Progress, {\n    className: \"course-creation-progress-bar\",\n    animated: true,\n    color: \"info\",\n    value: overallProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit, (e, errors) => {\n      return errorsSubmit(e, errors);\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"course-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 49\n    }\n  }, \"More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"17.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"specifics-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary card-header-customized-specifics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 53\n    }\n  }, \"More required detailed information related to core listing\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 53\n    }\n  }, \"You will need to \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 104\n    }\n  }, \"complete\"), \" the following \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 206\n    }\n  }, \"required\"), \" information to give potential student's more of an idea of what they will be purchasing regarding certain fine details...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12 mb-3\",\n    lg: \"12 mb-3\",\n    xl: \"12 mb-3\",\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 61\n    }\n  }, subtitleChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, subtitleChecks.check(setError, register), {\n    onChange: e => subtitleChecks.onChange(e, setValue),\n    value: currentValues.subtitle,\n    className: \"form-control\",\n    name: subtitleChecks.name,\n    type: subtitleChecks.type,\n    placeholder: subtitleChecks.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 61\n    }\n  })), errors.subtitle ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 80\n    }\n  }, errors.subtitle.message) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"6 mb-3\",\n    xl: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 65\n    }\n  }, skillLevelChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: skillLevelChecks.name\n  }, skillLevelChecks.check(setError, register, clearErrors), {\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: skillLevelRef,\n        autoBlur: true,\n        placeholder: skillLevelChecks.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          skillLevelRef.current.blur();\n        },\n        value: currentValues.skillLevel,\n        onChange: selectedOption => skillLevelChecks.onChange(selectedOption, setValue, clearErrors),\n        options: experienceLevelOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 73\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 65\n    }\n  })), errors.skillLevel ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 86\n    }\n  }, errors.skillLevel.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    md: \"6 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"6 mb-3\",\n    xl: \"6 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 65\n    }\n  }, languageSpokenChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: languageSpokenChecks.name\n  }, languageSpokenChecks.check(setError, register, clearErrors), {\n    render: _ref3 => {\n      let {\n        field\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: languageSpokenRef,\n        autoBlur: true,\n        placeholder: languageSpokenChecks.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          languageSpokenRef.current.blur();\n        },\n        value: currentValues.languageSpoken,\n        onChange: selectedOption => languageSpokenChecks.onChange(selectedOption, setValue, clearErrors),\n        options: lanuageOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 73\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 65\n    }\n  })), errors.languageSpoken ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 90\n    }\n  }, errors.languageSpoken.message) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"5 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"5 mb-3\",\n    xl: \"5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 65\n    }\n  }, primaryLanguageChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: primaryLanguageChecks.name\n  }, primaryLanguageChecks.check(setError, register, clearErrors), {\n    render: _ref4 => {\n      let {\n        field\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({}, field, {\n        ref: primaryLanguageRef,\n        autoBlur: true,\n        placeholder: primaryLanguageChecks.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          primaryLanguageRef.current.blur();\n        },\n        value: currentValues.primaryLanguageUsed,\n        onChange: selectedOption => primaryLanguageChecks.onChange(selectedOption, setValue, clearErrors),\n        options: languageArrayNew,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 73\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 65\n    }\n  })), errors.primaryLanguageUsed ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 95\n    }\n  }, errors.primaryLanguageUsed.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    md: \"7 mb-3\",\n    sm: \"12 mb-3\",\n    lg: \"7 mb-3\",\n    xl: \"7 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 65\n    }\n  }, hoursOfCourseContentChecks.label), /*#__PURE__*/React.createElement(Controller, Object.assign({\n    control: control,\n    name: hoursOfCourseContentChecks.name\n  }, hoursOfCourseContentChecks.check(setError, register, clearErrors), {\n    render: _ref5 => {\n      let {\n        field\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(Select, Object.assign({\n        className: \"controlled-select-course\"\n      }, field, {\n        ref: primaryLanguageRef,\n        autoBlur: true,\n        placeholder: hoursOfCourseContentChecks.placeholder,\n        defaultValue: null,\n        onMenuClose: () => {\n          primaryLanguageRef.current.blur();\n        },\n        value: currentValues.lengthInHours,\n        onChange: selectedOption => hoursOfCourseContentChecks.onChange(selectedOption, setValue, clearErrors),\n        options: hoursInLengthOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 73\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 65\n    }\n  })), errors.lengthInHours ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 89\n    }\n  }, errors.lengthInHours.message) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12 mb-3\",\n    lg: \"12 mb-3\",\n    xl: \"12 mb-3\",\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 61\n    }\n  }, courseWelcomeMessageChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, courseWelcomeMessageChecks.check(setError, register), {\n    onChange: e => courseWelcomeMessageChecks.onChange(e, setValue),\n    value: currentValues.welcomeMessage,\n    className: \"form-control\",\n    name: courseWelcomeMessageChecks.name,\n    rows: 8,\n    type: courseWelcomeMessageChecks.type,\n    placeholder: courseWelcomeMessageChecks.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 61\n    }\n  })), errors.welcomeMessage ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 86\n    }\n  }, errors.welcomeMessage.message) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12 mb-3\",\n    lg: \"12 mb-3\",\n    xl: \"12 mb-3\",\n    md: \"12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 61\n    }\n  }, completionMessageChecks.label), /*#__PURE__*/React.createElement(Input, Object.assign({}, completionMessageChecks.check(setError, register), {\n    onChange: e => completionMessageChecks.onChange(e, setValue),\n    value: currentValues.completionMessage,\n    className: \"form-control\",\n    name: completionMessageChecks.name,\n    rows: 8,\n    type: completionMessageChecks.type,\n    placeholder: completionMessageChecks.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 61\n    }\n  })), errors.completionMessage ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 89\n    }\n  }, errors.completionMessage.message) : null)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 53\n    }\n  })))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"specifics-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-primary card-header-customized-specifics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  }, \"Upload a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 58\n    }\n  }, \"PROMOTIONAL/DEMO\"), \" video depicting what's being sold/provided\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: \"7.5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, \"You will now need to upload a \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 109\n    }\n  }, \"promotional video\"), \" or \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 209\n    }\n  }, \"demo/preview\"), \" of what your course entials after being purchased/bought. You \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textDecorationLine: \"underline\",\n      color: \"#f73164\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 363\n    }\n  }, \"should\"), \" give an \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 457\n    }\n  }, \"accurate\"), \" idea of what's being offered for sale with this video...\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    PreviewComponent: data => renderPreviewOfFile(data, fileReady, filePathData),\n    maxFiles: 1,\n    autoUpload: true,\n    onChangeStatus: functions => {\n      setChangeOptions(functions);\n    },\n    submitButtonDisabled: false,\n    InputComponent: _ref6 => {\n      let {\n        accept,\n        onFiles\n      } = _ref6;\n      return CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus);\n    },\n    onSubmit: onSubmitHelper,\n    SubmitButtonComponent: (data, e) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"absolutely-position-submit-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 69\n        }\n      }, renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile));\n    },\n    multiple: false,\n    canCancel: false,\n    styles: {\n      dropzone: {\n        height: 300,\n        minWidth: \"100%\"\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 57\n    }\n  }), errors.promotionalUploadedFile ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 91\n    }\n  }, errors.promotionalUploadedFile.message) : null), fileReady === true ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"secondary-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"25px\"\n    },\n    onClick: e => {\n      setMetaFileData(null);\n      setFileReadyStatus(false);\n      setCurrentUploadFileStatus(null);\n      changeOptions.remove();\n    },\n    className: \"btn-air-danger cancel-button-upload\",\n    color: \"danger\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 61\n    }\n  }, \"Cancel Current/Pending Upload\"))) : null), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, renderPromoDemoVideo())), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\"\n    },\n    outline: true,\n    className: \"btn-square-info\",\n    type: \"submit\",\n    color: \"info-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 37\n    }\n  }, \"Submit form & proceed w/rest of logic\"))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data,\n    courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCourseInformationData\n})(CreateNewCoursePageThree);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/learning/educationalCoursesSeminars/createCourse/helpers/pages/pageThree/index.js"],"names":["React","Fragment","useState","useRef","useEffect","connect","helpers","Button","Row","Col","Card","CardBody","CardHeader","FormGroup","Label","Input","Form","Progress","Container","updateCourseInformationData","_","uuid","moment","Select","useForm","Controller","reactHookHelpers","options","Skeleton","SkeletonTheme","Dropzone","ReactPlayer","lanuageOptions","experienceLevelOptions","languageList","hoursInLengthOptions","subtitleChecks","languageSpokenChecks","skillLevelChecks","primaryLanguageChecks","hoursOfCourseContentChecks","courseWelcomeMessageChecks","completionMessageChecks","renderPreviewOfFile","onSubmitHelper","CustomInputHelper","renderCustomButtonDropzone","CreateNewCoursePageThree","userData","courseData","overallProgress","setOverallProgress","setProgress","languageArrayNew","setLanguageArray","dropzoneRef","fileReady","setFileReadyStatus","currentFileSelectedUpload","setCurrentUploadFileStatus","fileMetaData","setMetaFileData","changeOptions","setChangeOptions","filePathData","setCurrentFilePathData","promotionalDemoFile","setPromotionalDemoFile","languageSpokenRef","primaryLanguageRef","skillLevelRef","register","handleSubmit","control","resetField","unregister","getValues","array","setValue","setError","clearErrors","formState","errors","mode","reValidateMode","currentValues","index","length","language","push","label","name","value","completeData","onSubmit","data","e","console","log","errorsSubmit","onBufferEnded","renderPromoDemoVideo","marginTop","textDecorationLine","color","check","onChange","subtitle","type","placeholder","message","field","current","blur","skillLevel","selectedOption","languageSpoken","primaryLanguageUsed","lengthInHours","welcomeMessage","completionMessage","functions","accept","onFiles","dropzone","height","minWidth","dropzoneActive","borderColor","promotionalUploadedFile","remove","width","mapStateToProps","state","auth","has"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport helpers from \"./helpers/helperFunctions/helpers.js\";\nimport { Button, Row, Col, Card, CardBody, CardHeader, FormGroup, Label, Input, Form, Progress, Container } from 'reactstrap';\nimport { updateCourseInformationData } from \"../../../../../../../../redux/actions/courses/createNewCourse/index.js\";\nimport _ from \"lodash\";\nimport uuid from \"react-uuid\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { useForm, Controller } from 'react-hook-form';\nimport reactHookHelpers from \"./helpers/helperFunctions/hookFormHelpers.js\";\nimport options from \"./helpers/helperFunctions/options.js\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Dropzone from 'react-dropzone-uploader';\nimport ReactPlayer from \"react-player\";\n\nconst { lanuageOptions, experienceLevelOptions, languageList, hoursInLengthOptions } = options;\n\n// react-hook-form imports/helpers\nconst subtitleChecks = reactHookHelpers().subtitleChecks;\nconst languageSpokenChecks = reactHookHelpers().languageSpokenChecks;\nconst skillLevelChecks = reactHookHelpers().skillLevelChecks;\nconst primaryLanguageChecks = reactHookHelpers().primaryLanguageChecks;\nconst hoursOfCourseContentChecks = reactHookHelpers().hoursOfCourseContentChecks;\nconst courseWelcomeMessageChecks = reactHookHelpers().courseWelcomeMessageChecks;\nconst completionMessageChecks = reactHookHelpers().completionMessageChecks;\n\nconst {\n    renderPreviewOfFile,\n    onSubmitHelper,\n    CustomInputHelper,\n    renderCustomButtonDropzone\n} = helpers;\n\n// actual component\nconst CreateNewCoursePageThree = ({ userData, courseData, overallProgress, setOverallProgress, setProgress }) => {\n\n    const [ languageArrayNew, setLanguageArray ] = useState([]);\n    // refs & such\n    const dropzoneRef = useRef(null);\n    // start of state logic...\n    const [ fileReady, setFileReadyStatus ] = useState(false);\n    const [ currentFileSelectedUpload, setCurrentUploadFileStatus ] = useState(null);\n    const [ fileMetaData, setMetaFileData ] = useState(null);\n    const [ changeOptions, setChangeOptions ] = useState(null);\n    const [ filePathData, setCurrentFilePathData ] = useState(null);\n    const [ promotionalDemoFile, setPromotionalDemoFile ] = useState(null);\n\n    const languageSpokenRef = useRef(null);\n    const primaryLanguageRef = useRef(null);\n    const skillLevelRef = useRef(null);\n    // redux form logic\n    const { register, handleSubmit, control, resetField, unregister, getValues, array, setValue, setError, clearErrors, formState: { errors }} = useForm({\n        mode: \"onTouched\",\n        reValidateMode: \"onBlur\"\n    });\n\n    const currentValues = getValues();\n\n    useEffect(() => {\n\n        const languageArrayNew = [];\n      \n        for (let index = 0; index < languageList.length; index++) {\n            const language = languageList[index];\n            languageArrayNew.push({ label: language.name, value: language.name, completeData: language });\n\n            if ((languageList.length - 1) === index) {\n                setLanguageArray(languageArrayNew);\n            }\n        }\n    }, [])\n    const onSubmit = (data, e) => {\n        console.log(\"onSubmit ran...\", data, e);\n    }\n    const errorsSubmit = (e, errors) => {\n        console.log(\"errorsSubmit\", e, errors);\n    }\n    const onBufferEnded = () => {\n        console.log(\"onBufferEnded ended.\");\n    }\n    const renderPromoDemoVideo = () => {\n       // ready to display live content\n        if (currentFileSelectedUpload === null) {\n            return (\n                <Fragment>\n                    <div className={\"overlay-boxshadow-courses centered-both-ways\"}><h6 className={\"header-no-content\"}>Current NO file(s) is selected/uploaded - please select a file.</h6></div>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <ReactPlayer onBufferEnd={onBufferEnded} progressInterval={1000} controls={true} playIcon={true} playing={false} loop={false} volume={1} width={\"100%\"} height={\"100%\"} url={filePathData} />\n                </Fragment>\n            );   \n        }\n    }\n    console.log(\"current VALUES:\", currentValues);\n    return (\n        <Fragment>\n            <div className={\"centered-horizontally-course\"}>\n                <div className={\"position-above-bar-percentage\"}>\n                    <h1>{overallProgress}% Complete</h1>\n                </div>\n                <Progress className={\"course-creation-progress-bar\"} animated color=\"info\" value={overallProgress} />\n            </div>\n            <Container fluid={true}>\n                <Form onSubmit={handleSubmit(onSubmit, (e, errors) => {\n                    return errorsSubmit(e, errors);\n                })}>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                                                <h4 className={\"course-custom-title\"}>More fine-grain specific details about your listing. Please fill out each of the following fields to the best of your ability & be as specific/detailed as possible. We will collect things such as difficulty level, language, etc...</h4>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ marginTop: \"17.5px\" }}>\n                                            <Card className={\"specifics-card\"}>\n                                                <CardHeader className=\"b-l-primary card-header-customized-specifics\">\n                                                    <h4>More required detailed information related to core listing</h4>\n                                                    <p style={{ marginTop: \"7.5px\" }}>You will need to <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>complete</strong> the following <strong>required</strong> information to give potential student's more of an idea of what they will be purchasing regarding certain fine details...</p>\n                                                </CardHeader>\n                                                <CardBody>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{subtitleChecks.label}</Label>\n                                                            <Input {...subtitleChecks.check(setError, register)} onChange={(e) => subtitleChecks.onChange(e, setValue)} value={currentValues.subtitle} className=\"form-control\" name={subtitleChecks.name} type={subtitleChecks.type} placeholder={subtitleChecks.placeholder} />\n                                                            {errors.subtitle ? <span className=\"span-tooltip\">{errors.subtitle.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{skillLevelChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={skillLevelChecks.name}\n                                                                    {...skillLevelChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={skillLevelRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={skillLevelChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                skillLevelRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.skillLevel}\n                                                                            onChange={(selectedOption) => skillLevelChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={experienceLevelOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.skillLevel ? <span className=\"span-tooltip\">{errors.skillLevel.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"6 mb-3\" sm=\"12 mb-3\" lg=\"6 mb-3\" xl=\"6 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{languageSpokenChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={languageSpokenChecks.name}\n                                                                    {...languageSpokenChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={languageSpokenRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={languageSpokenChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                languageSpokenRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.languageSpoken}\n                                                                            onChange={(selectedOption) => languageSpokenChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={lanuageOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.languageSpoken ? <span className=\"span-tooltip\">{errors.languageSpoken.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col md=\"5 mb-3\" sm=\"12 mb-3\" lg=\"5 mb-3\" xl=\"5 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{primaryLanguageChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={primaryLanguageChecks.name}\n                                                                    {...primaryLanguageChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            {...field}\n                                                                            ref={primaryLanguageRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={primaryLanguageChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                primaryLanguageRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.primaryLanguageUsed}\n                                                                            onChange={(selectedOption) => primaryLanguageChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={languageArrayNew}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.primaryLanguageUsed ? <span className=\"span-tooltip\">{errors.primaryLanguageUsed.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                        <Col md=\"7 mb-3\" sm=\"12 mb-3\" lg=\"7 mb-3\" xl=\"7 mb-3\">\n                                                            <FormGroup>\n                                                                <Label>{hoursOfCourseContentChecks.label}</Label>\n                                                                <Controller\n                                                                    control={control}\n                                                                    name={hoursOfCourseContentChecks.name}\n                                                                    {...hoursOfCourseContentChecks.check(setError, register, clearErrors)}\n                                                                    render={({ field }) => (\n                                                                        <Select\n                                                                            className={\"controlled-select-course\"}\n                                                                            {...field}\n                                                                            ref={primaryLanguageRef}\n                                                                            autoBlur={true}\n                                                                            placeholder={hoursOfCourseContentChecks.placeholder}\n                                                                            defaultValue={null}\n                                                                            onMenuClose={() => {\n                                                                                primaryLanguageRef.current.blur();\n                                                                            }}\n                                                                            value={currentValues.lengthInHours}\n                                                                            onChange={(selectedOption) => hoursOfCourseContentChecks.onChange(selectedOption, setValue, clearErrors)}\n                                                                            options={hoursInLengthOptions}\n                                                                        />\n                                                                    )}\n                                                                />\n                                                                {errors.lengthInHours ? <span className=\"span-tooltip\">{errors.lengthInHours.message}</span> : null}\n                                                            </FormGroup>\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{courseWelcomeMessageChecks.label}</Label>\n                                                            <Input {...courseWelcomeMessageChecks.check(setError, register)} onChange={(e) => courseWelcomeMessageChecks.onChange(e, setValue)} value={currentValues.welcomeMessage} className=\"form-control\" name={courseWelcomeMessageChecks.name} rows={8} type={courseWelcomeMessageChecks.type} placeholder={courseWelcomeMessageChecks.placeholder} />\n                                                            {errors.welcomeMessage ? <span className=\"span-tooltip\">{errors.welcomeMessage.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <div className=\"form-row\">\n                                                        <Col sm=\"12 mb-3\" lg=\"12 mb-3\" xl=\"12 mb-3\" md=\"12 mb-3\">\n                                                            <Label>{completionMessageChecks.label}</Label>\n                                                            <Input {...completionMessageChecks.check(setError, register)} onChange={(e) => completionMessageChecks.onChange(e, setValue)} value={currentValues.completionMessage} className=\"form-control\" name={completionMessageChecks.name} rows={8} type={completionMessageChecks.type} placeholder={completionMessageChecks.placeholder} />\n                                                            {errors.completionMessage ? <span className=\"span-tooltip\">{errors.completionMessage.message}</span> : null}\n                                                        </Col>\n                                                    </div>\n                                                    <hr />\n                                                </CardBody>\n                                            </Card>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Card className={\"specifics-card\"}>\n                                        <CardHeader className=\"b-l-primary card-header-customized-specifics\">\n                                            <h4>Upload a <strong>PROMOTIONAL/DEMO</strong> video depicting what's being sold/provided</h4>\n                                            <p style={{ marginTop: \"7.5px\" }}>You will now need to upload a <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>promotional video</strong> or <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>demo/preview</strong> of what your course entials after being purchased/bought. You <strong style={{ textDecorationLine: \"underline\", color: \"#f73164\" }}>should</strong> give an <strong>accurate</strong> idea of what's being offered for sale with this video...</p>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                    <div className=\"dz-message needsclick\">\n                                                        <Dropzone\n                                                            ref={dropzoneRef}\n                                                            PreviewComponent={(data) => renderPreviewOfFile(data, fileReady, filePathData)}\n                                                            maxFiles={1}\n                                                            autoUpload={true}\n                                                            onChangeStatus={(functions) => {\n                                                                setChangeOptions(functions);\n                                                            }}\n                                                            submitButtonDisabled={false}\n                                                            InputComponent={({ accept, onFiles }) => CustomInputHelper(accept, onFiles, setCurrentFilePathData, setCurrentUploadFileStatus, setFileReadyStatus)}\n                                                            onSubmit={onSubmitHelper}\n                                                            SubmitButtonComponent={(data, e) => {\n                                                                return (\n                                                                    <div className=\"absolutely-position-submit-btn\">\n                                                                        {renderCustomButtonDropzone(data, e, currentFileSelectedUpload, setMetaFileData, setFileReadyStatus, fileMetaData, setProgress, setCurrentUploadFileStatus, fileReady, setPromotionalDemoFile)}\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                            multiple={false}\n                                                            canCancel={false}\n                                                            styles={{\n                                                                dropzone: { height: 300, minWidth: \"100%\" },\n                                                                dropzoneActive: { borderColor: 'green' },\n                                                            }}\n                                                        />\n                                                        {errors.promotionalUploadedFile ? <span className=\"span-tooltip\">{errors.promotionalUploadedFile.message}</span> : null}\n                                                    </div>\n                                                    {fileReady === true ? <Fragment>\n                                                        <hr className=\"secondary-hr\" />\n                                                        <div className=\"centered-both-ways\">\n                                                            <Button style={{ marginTop: \"25px\" }} onClick={(e) => {\n                                                                setMetaFileData(null);\n                                                                setFileReadyStatus(false);\n                                                                setCurrentUploadFileStatus(null);\n\n                                                                changeOptions.remove();\n                                                            }} className=\"btn-air-danger cancel-button-upload\" color=\"danger\" size=\"md\">Cancel Current/Pending Upload</Button>\n                                                        </div>\n                                                    </Fragment> : null}\n                                                </Col>\n                                                <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                                    {renderPromoDemoVideo()}\n                                                </Col>\n                                            </Row>\n                                            <hr />\n                                        </CardBody>\n                                    </Card>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <Button style={{ width: \"100%\" }} outline className={\"btn-square-info\"} type={\"submit\"} color=\"info-2x\">{\"Submit form & proceed w/rest of logic\"}</Button>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data,\n        courseData: _.has(state.courseData, \"courseData\") ? state.courseData.courseData : []    \n    }\n}\nexport default connect(mapStateToProps, { updateCourseInformationData })(CreateNewCoursePageThree);"]},"metadata":{},"sourceType":"module"}