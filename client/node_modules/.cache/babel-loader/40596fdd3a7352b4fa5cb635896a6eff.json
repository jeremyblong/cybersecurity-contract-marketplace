{"ast":null,"code":"// helpers logic related to mainly to redux-hook-form\nconst MainHooksCustomHelpers = () => {\n  const calculateWhetherURLIsLegit = data => {\n    // helper function\n    const isValidHttpUrl = string => {\n      let url;\n\n      try {\n        url = new URL(string);\n      } catch (_) {\n        return false;\n      } // return protocol data\n\n\n      return url.protocol === \"http:\" || url.protocol === \"https:\";\n    }; // finally, check if url is VALID\n\n\n    if (isValidHttpUrl(data)) {\n      // url IS VALID\n      return true;\n    } else {\n      // url IS NOT VALID - return error string\n      return false;\n    }\n\n    ;\n  };\n\n  const setDisplayError = (setError, clearErrors, value) => {\n    const delayDebounceFn = setTimeout(() => {\n      console.log(\"value : \", value); // check whether legit URL\n\n      if (calculateWhetherURLIsLegit(value)) {\n        clearErrors(\"referenceLink\"); // return true to parent function\n\n        return true;\n      } else {\n        setError(\"referenceLink\", {\n          type: \"manual\",\n          message: \"You MUST enter a VALID URL including http/https and ://\"\n        }); // return FALSE - ERROR SET to parent function\n\n        return false;\n      }\n    }, 225);\n    return () => clearTimeout(delayDebounceFn);\n  };\n\n  const urlEnteredLinkData = {\n    check: (setError, register, clearErrors, setValue, errors, name) => {\n      return { ...register(name, {\n          required: true,\n          minLength: {\n            value: 8,\n            message: \"You must enter AT Least 8 characters\"\n          },\n          maxLength: {\n            value: 75,\n            message: \"You may ONLY enter 75 characters or less\"\n          },\n          onBlur: e => {\n            // extracted final value from input\n            const value = e.target.value; // check if valid url in helper file.\n\n            const validOrNot = calculateWhetherURLIsLegit(value); // check if valid!\n\n            if (validOrNot === true) {\n              setValue(name, value, {\n                shouldValidate: false\n              }); // clear error after setting proper change state\n\n              clearErrors(name);\n            } else {\n              setTimeout(() => {\n                if (errors[name]) {\n                  setError(name, {\n                    type: \"manual\",\n                    message: \"You MUST enter a VALID URL including http/https and ://\"\n                  });\n                }\n              }, 75);\n            }\n          }\n        })\n      };\n    },\n    onChange: (e, setError, clearErrors) => {\n      // deconstruct actual value\n      const value = e.target.value; // set timeout/delay span\n\n      console.log(setDisplayError(setError, clearErrors, value));\n\n      if (setDisplayError(setError, clearErrors, value) === false) {\n        console.log(\"TRUE from helper function returned.\");\n      } else {\n        console.log(\"FALSE from helper function returned.\");\n      }\n    }\n  }; // return values to other component\n\n  return {\n    urlEnteredLinkData\n  };\n};\n\nexport default MainHooksCustomHelpers;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/opportunities/employers/applyToListingHacker/helpers/reactHookFormHelpers.js"],"names":["MainHooksCustomHelpers","calculateWhetherURLIsLegit","data","isValidHttpUrl","string","url","URL","_","protocol","setDisplayError","setError","clearErrors","value","delayDebounceFn","setTimeout","console","log","type","message","clearTimeout","urlEnteredLinkData","check","register","setValue","errors","name","required","minLength","maxLength","onBlur","e","target","validOrNot","shouldValidate","onChange"],"mappings":"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","sourcesContent":["// helpers logic related to mainly to redux-hook-form\nconst MainHooksCustomHelpers = () => {\n    const calculateWhetherURLIsLegit = (data) => {\n        // helper function\n        const isValidHttpUrl = (string) => {\n            let url;\n            \n            try {\n              url = new URL(string);\n            } catch (_) {\n              return false;  \n            }\n            // return protocol data\n            return url.protocol === \"http:\" || url.protocol === \"https:\";\n        }\n        // finally, check if url is VALID\n        if (isValidHttpUrl(data)) {\n            // url IS VALID\n            return true;\n        } else {\n            // url IS NOT VALID - return error string\n            return false;\n        };\n    }\n    const setDisplayError = (setError, clearErrors, value) => {\n        const delayDebounceFn = setTimeout(() => {\n            console.log(\"value : \", value);\n\n            // check whether legit URL\n            if (calculateWhetherURLIsLegit(value)) {\n                clearErrors(\"referenceLink\");\n                // return true to parent function\n                return true;\n            } else {\n                setError(\"referenceLink\", {\n                    type: \"manual\",\n                    message: \"You MUST enter a VALID URL including http/https and ://\",\n                });\n                // return FALSE - ERROR SET to parent function\n                return false;\n            }\n        }, 225);\n    \n        return () => clearTimeout(delayDebounceFn)\n    }\n\n    const urlEnteredLinkData = {\n        check: (setError, register, clearErrors, setValue, errors, name) => {\n            return (\n                {...register(name, { required: true, \n                minLength: {\n                    value: 8,\n                    message: \"You must enter AT Least 8 characters\"\n                }, maxLength: {\n                    value: 75,\n                    message: \"You may ONLY enter 75 characters or less\"\n                }, onBlur: (e) => {\n                    // extracted final value from input\n                    const value = e.target.value;\n                    // check if valid url in helper file.\n                    const validOrNot = calculateWhetherURLIsLegit(value);\n                    // check if valid!\n                    if (validOrNot === true) {\n                        setValue(name, value, { shouldValidate: false });\n                        // clear error after setting proper change state\n                        clearErrors(name);\n                    } else {\n                        setTimeout(() => {\n                            if (errors[name]) {\n                                setError(name, {\n                                    type: \"manual\",\n                                    message: \"You MUST enter a VALID URL including http/https and ://\",\n                                });\n                            }\n                        }, 75)\n                    }\n                }})}\n            );\n        },\n        onChange: (e, setError, clearErrors) => {\n            // deconstruct actual value\n            const value = e.target.value;\n            // set timeout/delay span\n            \n            console.log(setDisplayError(setError, clearErrors, value));\n\n            if (setDisplayError(setError, clearErrors, value) === false) {\n                console.log(\"TRUE from helper function returned.\")\n            } else {\n                console.log(\"FALSE from helper function returned.\");   \n            }\n        }\n    };\n    // return values to other component\n    return {\n        urlEnteredLinkData\n    }\n}\n\nexport default MainHooksCustomHelpers;"]},"metadata":{},"sourceType":"module"}