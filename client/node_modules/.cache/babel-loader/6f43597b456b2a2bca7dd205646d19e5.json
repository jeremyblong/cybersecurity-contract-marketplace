{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/topOffBal/topoffBalance.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Input, FormGroup, Form } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport Slider from 'rc-slider';\nimport { connect } from \"react-redux\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport NotificationManager from 'react-notifications';\n\nconst TopOffBalanceHelper = _ref => {\n  let {\n    userData\n  } = _ref;\n  const [valid, setValidness] = useState(false);\n  const [percentageToBePaid, setPercentageToBePaid] = useState(25);\n  const [cost, setCost] = useState(0);\n  const [previousCardOptions, setPreviousCardOptions] = useState(null);\n  const [marks, setMarks] = useState({\n    0: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$0.00\"\n    },\n    10: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$125\"\n    },\n    20: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$250\"\n    },\n    30: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$375\"\n    },\n    40: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$500\"\n    },\n    50: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$625\"\n    },\n    60: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$750\"\n    },\n    70: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$875\"\n    },\n    80: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$1000\"\n    },\n    90: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$1125\"\n    },\n    100: {\n      style: {\n        color: \"blue\"\n      },\n      label: \"$1250\"\n    }\n  });\n  const [primaryCard, setPrimaryCard] = useState(null);\n  const [cardInfo, setCardInfo] = useState({\n    cvc: \"\",\n    expiry: \"\",\n    focus: \"\",\n    name: \"\",\n    number: \"\",\n    cardType: \"\"\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCardInfo(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSliderValueChange = percentage => {\n    console.log(\"handleSliderValueChange percentage\", percentage);\n    setPercentageToBePaid(percentage);\n  };\n\n  const onAfterChange = percentage => {\n    console.log(\"onAfterChange percentage\", percentage);\n    const totalCost = 1250;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    setCost(converted);\n  };\n\n  const calculateCurrentSelectedCost = percentage => {\n    const totalCost = 1250;\n    const perc = parseFloat(percentage) / 100.0;\n    const converted = totalCost * perc;\n    return `$${converted.toFixed(2)} selected to be deposited into your account immediately!`;\n  };\n\n  useEffect(() => {\n    const config = {\n      params: {\n        id: userData.uniqueId,\n        accountType: userData.accountType\n      }\n    };\n    axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then(res => {\n      if (res.data.message === \"Gathered employer payment cards!\") {\n        console.log(res.data);\n        const {\n          cards\n        } = res.data;\n        const convertedPaymentsArr = [];\n\n        for (let index = 0; index < cards.data.length; index++) {\n          const method = cards.data[index];\n          const {\n            last4\n          } = method.card;\n          convertedPaymentsArr.push({\n            label: `**** **** **** ${last4}`,\n            value: method\n          });\n        }\n\n        setPreviousCardOptions(convertedPaymentsArr);\n      } else {\n        console.log(\"err\", res.data);\n        NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n      }\n    }).catch(err => {\n      console.log(err);\n      NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n    });\n  }, []);\n\n  const handleCardSelectionChange = value => {\n    setPrimaryCard(value);\n    setCardInfo({\n      cvc: \"\",\n      expiry: \"\",\n      focus: \"\",\n      name: \"\",\n      number: \"\",\n      cardType: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Purchase 'In-App' Currency And/Or Deposit Fund's\",\n    title: \"Deposit funds into your account balance (can be withdrawn at later date)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    lg: \"12\",\n    xl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"topoff-balance-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title-deposit-funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"Deposit funds into your account and/or top-off your balance with more funding!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, \"You can deposit fund's into your account to have a positive availiable balance to pay hacker's/contractors, employers, purchase profile boosts, purchase tokens, etc... These funds ARE retreivable and \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 253\n    }\n  }, \"CAN BE WITHDRAWN\"), \" at any point if you wish to clear your current/availiable account balance.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"b-l-info b-r-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col-two-customized\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, \"Please select a value that you wish to deposit into your account. \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 115\n    }\n  }, \"drag the slider\"), \" to the appropriate point, select your payment method & make the desired purchase. You'll balance will be \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"darkred\",\n      textDecorationLine: \"underline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 315\n    }\n  }, \"immediately updated!\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-slider-adjustment-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }, \"Please drag the marker to the appropriate position marking 'how much' you'd like to depsoit on this transaction..\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: percentageToBePaid,\n    startPoint: 0,\n    onAfterChange: onAfterChange,\n    onChange: handleSliderValueChange,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"current-selected-cost\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 53\n    }\n  }, calculateCurrentSelectedCost(percentageToBePaid))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"dotted-border-col-two-customized\",\n    sm: \"12\",\n    md: \"6\",\n    lg: \"6\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 49\n    }\n  }, \"Select An Existing Registered Card\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedPaymentCard,\n    onChange: handleCardSelectionChange,\n    options: previousCardOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form mega-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    value: cardInfo.name,\n    placeholder: \"Name (Full Name - First/Last)\",\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"number\",\n    value: cardInfo.number,\n    placeholder: \"Enter your card number..\",\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => {\n      const value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n        setCardInfo(prevState => {\n          return { ...prevState,\n            expiry: cardInfo.expiry\n          };\n        });\n      }\n    },\n    style: {\n      marginLeft: \"15px\"\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireMM\",\n    id: \"expireMM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 61\n    }\n  }, \"Select a month\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 61\n    }\n  }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 61\n    }\n  }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 61\n    }\n  }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 61\n    }\n  }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 61\n    }\n  }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 61\n    }\n  }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 61\n    }\n  }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 61\n    }\n  }, \"August\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 61\n    }\n  }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 61\n    }\n  }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 61\n    }\n  }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 61\n    }\n  }, \"December\")), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => {\n      const value = e.target.value;\n\n      if (value !== \"\") {\n        cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n        setCardInfo(prevState => {\n          return { ...prevState,\n            expiry: cardInfo.expiry\n          };\n        });\n      }\n    },\n    className: \"form-control digits year-date-format\",\n    name: \"expireYY\",\n    id: \"expireYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 61\n    }\n  }, \"Select a year\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 61\n    }\n  }, \"2020\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"21\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 61\n    }\n  }, \"2021\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 61\n    }\n  }, \"2022\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 61\n    }\n  }, \"2023\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 61\n    }\n  }, \"2024\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 61\n    }\n  }, \"2025\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"26\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 61\n    }\n  }, \"2026\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"27\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 61\n    }\n  }, \"2027\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"28\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 61\n    }\n  }, \"2028\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"29\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 61\n    }\n  }, \"2029\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 61\n    }\n  }, \"2030\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"31\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 61\n    }\n  }, \"2031\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 61\n    }\n  }, \"2032\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"33\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 61\n    }\n  }, \"2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"34\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 61\n    }\n  }, \"2034\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"35\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 61\n    }\n  }, \"2035\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 61\n    }\n  }, \"2036\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"cvc\",\n    placeholder: \"CVC... (Security Code On Back)\",\n    value: cardInfo.cvc,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centered-both-ways\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    callback: (type, isValid) => {\n      setCardInfo(prevState => {\n        return { ...prevState,\n          cardType: type.issuer\n        };\n      });\n      setValidness(isValid);\n    },\n    cvc: cardInfo.cvc,\n    expiry: cardInfo.expiry,\n    focused: cardInfo.focus,\n    name: cardInfo.name,\n    number: cardInfo.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 53\n    }\n  }))))))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"b-l-secondary b-r-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 33\n    }\n  }, \"An account balance allows for specific actions such as 'purchasing tokens', 'profile boosts' and other misc. actions. It is \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 177\n    }\n  }, \"recommended\"), \" that you keep a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 222\n    }\n  }, \"minimum\"), \" of $125.00 in your account balance at any given time however this is NOT mandatory, just recommended.\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.auth.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(TopOffBalanceHelper);","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity-bounty-hunting-platform/client/src/components/dashboard/balanceRelated/topOffBal/topoffBalance.js"],"names":["React","Fragment","useState","useEffect","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","Input","FormGroup","Form","Breadcrumb","Slider","connect","Cards","Select","axios","NotificationManager","TopOffBalanceHelper","userData","valid","setValidness","percentageToBePaid","setPercentageToBePaid","cost","setCost","previousCardOptions","setPreviousCardOptions","marks","setMarks","style","color","label","primaryCard","setPrimaryCard","cardInfo","setCardInfo","cvc","expiry","focus","name","number","cardType","handleInputChange","e","value","target","prevState","handleSliderValueChange","percentage","console","log","onAfterChange","totalCost","perc","parseFloat","converted","calculateCurrentSelectedCost","toFixed","config","params","id","uniqueId","accountType","get","process","env","REACT_APP_BASE_URL","then","res","data","message","cards","convertedPaymentsArr","index","length","method","last4","card","push","warning","catch","err","handleCardSelectionChange","textDecorationLine","textAlign","paddingBottom","selectedPaymentCard","substring","marginLeft","type","isValid","issuer","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, Input, FormGroup, Form } from \"reactstrap\";\nimport Breadcrumb from '../../../../layout/breadcrumb';\nimport Slider from 'rc-slider';\nimport { connect } from \"react-redux\";\nimport Cards from 'react-credit-cards';\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport NotificationManager from 'react-notifications';\n\nconst TopOffBalanceHelper = ({ userData }) => {\n    const [ valid, setValidness ] = useState(false);\n    const [ percentageToBePaid, setPercentageToBePaid ] = useState(25);\n    const [ cost, setCost ] = useState(0);\n    const [ previousCardOptions, setPreviousCardOptions ] = useState(null);\n    const [ marks, setMarks ] = useState({\n        0: { style: { color: \"blue\" }, label: \"$0.00\" },\n        10: { style: { color: \"blue\" }, label: \"$125\" },\n        20: { style: { color: \"blue\" }, label: \"$250\" },\n        30: { style: { color: \"blue\" }, label: \"$375\" },\n        40: { style: { color: \"blue\" }, label: \"$500\" },\n        50: { style: { color: \"blue\" }, label: \"$625\" },\n        60: { style: { color: \"blue\" }, label: \"$750\" },\n        70: { style: { color: \"blue\" }, label: \"$875\" },\n        80: { style: { color: \"blue\" }, label: \"$1000\" },\n        90: { style: { color: \"blue\" }, label: \"$1125\" },\n        100: { style: { color: \"blue\" }, label: \"$1250\" }\n    });\n    const [ primaryCard, setPrimaryCard ] = useState(null);\n    const [ cardInfo, setCardInfo ] = useState({\n        cvc: \"\",\n        expiry: \"\",\n        focus: \"\",\n        name: \"\",\n        number: \"\",\n        cardType: \"\"\n    })\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        \n        setCardInfo(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        })\n    }\n\n    const handleSliderValueChange = (percentage) => {\n        console.log(\"handleSliderValueChange percentage\", percentage);\n\n        setPercentageToBePaid(percentage);\n    }\n    const onAfterChange = (percentage) => {\n        console.log(\"onAfterChange percentage\", percentage);\n\n        const totalCost = 1250;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        setCost(converted);\n    }\n    const calculateCurrentSelectedCost = (percentage) => {\n        const totalCost = 1250;\n        const perc = parseFloat(percentage) / 100.0;\n        const converted = totalCost * perc;\n        return `$${converted.toFixed(2)} selected to be deposited into your account immediately!`;\n    }\n\n\n    useEffect(() => {\n        const config = {\n            params: {\n                id: userData.uniqueId,\n                accountType: userData.accountType\n            }\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/gather/cards/payment/methods/both/accounts`, config).then((res) => {\n            if (res.data.message === \"Gathered employer payment cards!\") {\n\n                console.log(res.data);\n\n                const { cards } = res.data;\n\n                const convertedPaymentsArr = [];\n\n                for (let index = 0; index < cards.data.length; index++) {\n                    const method = cards.data[index];\n\n                    const { last4 } = method.card;\n                    \n                    convertedPaymentsArr.push({ label: `**** **** **** ${last4}`, value: method })\n                }\n\n                setPreviousCardOptions(convertedPaymentsArr);\n\n            } else {\n                console.log(\"err\", res.data);\n                \n                NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n            }\n        }).catch((err) => {\n            console.log(err);\n\n            NotificationManager.warning(\"Failed to fetch your current payment method's on file, please reload this page or contact support if this problem persists...\", \"Failed to load previous method's!\", 4750);\n        })\n    }, [])\n\n    const handleCardSelectionChange = (value) => {\n\n        setPrimaryCard(value);\n\n        setCardInfo({\n            cvc: \"\",\n            expiry: \"\",\n            focus: \"\",\n            name: \"\",\n            number: \"\",\n            cardType: \"\"\n        })\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Purchase 'In-App' Currency And/Or Deposit Fund's\" title=\"Deposit funds into your account balance (can be withdrawn at later date)\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\n                        <Card className={\"topoff-balance-card-wrapper\"}>\n                            <CardHeader className={\"b-l-secondary b-r-secondary\"}>\n                                <h3 className='title-deposit-funds'>Deposit funds into your account and/or top-off your balance with more funding!</h3>\n                                <p className='lead'>You can deposit fund's into your account to have a positive availiable balance to pay hacker's/contractors, employers, purchase profile boosts, purchase tokens, etc... These funds ARE retreivable and <strong>CAN BE WITHDRAWN</strong> at any point if you wish to clear your current/availiable account balance.</p>\n                            </CardHeader>\n                            <CardBody className='b-l-info b-r-info'>\n                                <Row>\n                                    <div className='centered-both-ways'>\n                                        <Col className='dotted-border-col-two-customized' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <h3>Please select a value that you wish to deposit into your account. <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>drag the slider</strong> to the appropriate point, select your payment method & make the desired purchase. You'll balance will be <strong style={{ color: \"darkred\", textDecorationLine: \"underline\" }}>immediately updated!</strong></h3>\n                                            <hr />\n                                            <div className='center-slider-adjustment-bar'>\n                                                <p className='lead'>Please drag the marker to the appropriate position marking 'how much' you'd like to depsoit on this transaction..</p>\n                                                <hr />\n                                                <Slider value={percentageToBePaid} startPoint={0} onAfterChange={onAfterChange} onChange={handleSliderValueChange} marks={marks} />\n                                                <div className='centered-both-ways'>\n                                                    <h3 className='current-selected-cost' style={{ textAlign: \"center\" }}>{calculateCurrentSelectedCost(percentageToBePaid)}</h3>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                        <Col className='dotted-border-col-two-customized' sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n                                            <Row style={{ paddingBottom: \"10px\" }}>\n                                                <Label>Select An Existing Registered Card</Label>\n                                                <Select\n                                                    value={selectedPaymentCard}\n                                                    onChange={handleCardSelectionChange}\n                                                    options={previousCardOptions}\n                                                />\n                                            </Row>\n                                            <hr />\n                                            <Form className=\"theme-form mega-form\">\n                                                <FormGroup>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"name\"\n                                                        value={cardInfo.name}\n                                                        placeholder=\"Name (Full Name - First/Last)\"\n                                                        onChange={(e) => handleInputChange(e)}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"number\"\n                                                        value={cardInfo.number}\n                                                        placeholder=\"Enter your card number..\"\n                                                        onChange={(e) => handleInputChange(e)}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Row>\n                                                        <select onChange={(e) => {\n                                                            const value = e.target.value;\n\n                                                            if (value !== \"\") {\n                                                        \n                                                                cardInfo.expiry = value + cardInfo.expiry.substring(2, 5);\n\n                                                                setCardInfo(prevState => {\n                                                                    return {\n                                                                        ...prevState,\n                                                                        expiry: cardInfo.expiry\n                                                                    }\n                                                                })\n                                                            }\n                                                        }} style={{ marginLeft: \"15px\" }} className=\"form-control digits year-date-format\" name='expireMM' id='expireMM'>\n                                                            <option value=''>Select a month</option>\n                                                            <option value='01'>January</option>\n                                                            <option value='02'>February</option>\n                                                            <option value='03'>March</option>\n                                                            <option value='04'>April</option>\n                                                            <option value='05'>May</option>\n                                                            <option value='06'>June</option>\n                                                            <option value='07'>July</option>\n                                                            <option value='08'>August</option>\n                                                            <option value='09'>September</option>\n                                                            <option value='10'>October</option>\n                                                            <option value='11'>November</option>\n                                                            <option value='12'>December</option>\n                                                        </select> \n                                                        <select onChange={(e) => {\n                                                            const value = e.target.value;\n\n                                                            if (value !== \"\") {\n                                                                \n                                                                cardInfo.expiry = cardInfo.expiry.substring(0, 2) + value;\n\n                                                                setCardInfo(prevState => {\n                                                                    return {\n                                                                        ...prevState,\n                                                                        expiry: cardInfo.expiry\n                                                                    }\n                                                                })\n                                                            }\n                                                        }} className=\"form-control digits year-date-format\" name='expireYY' id='expireYY'>\n                                                            <option value=''>Select a year</option>\n                                                            <option value='20'>2020</option>\n                                                            <option value='21'>2021</option>\n                                                            <option value='22'>2022</option>\n                                                            <option value='23'>2023</option>\n                                                            <option value='24'>2024</option>\n                                                            <option value='25'>2025</option>\n                                                            <option value='26'>2026</option>\n                                                            <option value='27'>2027</option>\n                                                            <option value='28'>2028</option>\n                                                            <option value='29'>2029</option>\n                                                            <option value='30'>2030</option>\n                                                            <option value='31'>2031</option>\n                                                            <option value='32'>2032</option>\n                                                            <option value='33'>2033</option>\n                                                            <option value='34'>2034</option>\n                                                            <option value='35'>2035</option>\n                                                            <option value='36'>2036</option>\n                                                        </select> \n                                                    </Row>\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"cvc\"\n                                                        placeholder=\"CVC... (Security Code On Back)\"\n                                                        value={cardInfo.cvc}\n                                                        onChange={(e) => handleInputChange(e)}\n                                                    />\n                                                </FormGroup>\n                                                <div className='centered-both-ways'>\n                                                    <Cards\n                                                        callback={(type, isValid) => {\n                                                            setCardInfo(prevState => {\n                                                                return {\n                                                                    ...prevState,\n                                                                    cardType: type.issuer\n                                                                }\n                                                            })\n                                                            setValidness(isValid);\n                                                        }}\n                                                        cvc={cardInfo.cvc}\n                                                        expiry={cardInfo.expiry}\n                                                        focused={cardInfo.focus}\n                                                        name={cardInfo.name}\n                                                        number={cardInfo.number}\n                                                    />\n                                                </div>\n                                            </Form>\n                                        </Col>\n                                    </div>\n                                </Row>\n                            </CardBody>\n                            <CardFooter className='b-l-secondary b-r-secondary'>\n                                <p className='lead'>An account balance allows for specific actions such as 'purchasing tokens', 'profile boosts' and other misc. actions. It is <strong>recommended</strong> that you keep a <strong>minimum</strong> of $125.00 in your account balance at any given time however this is NOT mandatory, just recommended.</p>\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.auth.data\n    }\n}\nexport default connect(mapStateToProps, { })(TopOffBalanceHelper);"]},"metadata":{},"sourceType":"module"}