{"ast":null,"code":"var _jsxFileName = \"/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/employers/main/mainLandingPage.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass MainLandingPageEmployerHelper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitude is :\", position.coords.latitude); //\n\n        console.log(\"Longitude is :\", position.coords.longitude);\n        const location = {\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude\n        };\n        axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n          accountType: \"employers\",\n          location\n        }).then(res => {\n          if (res.data.message === \"Successfully saved location data to account!\") {\n            console.log(res.data);\n          } else {\n            console.log(\"err\", res.data);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"~ dashboard employer! ~\"));\n  }\n\n}\n\nexport default MainLandingPageEmployerHelper;","map":{"version":3,"sources":["/home/kali/Documents/cybersecurity/client/src/components/dashboard/homepage/employers/main/mainLandingPage.js"],"names":["React","Component","axios","MainLandingPageEmployerHelper","constructor","props","state","componentDidMount","navigator","console","log","geolocation","getCurrentPosition","position","coords","latitude","longitude","location","post","process","env","REACT_APP_BASE_URL","accountType","then","res","data","message","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,6BAAN,SAA4CF,SAA5C,CAAsD;AACtDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AACGC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,iBAAiBC,SAArB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAF,MAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAAQ,CAACC,MAAT,CAAgBC,QAA7C,EADmD,CAEnD;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AAEA,cAAMC,QAAQ,GAAG;AACbD,UAAAA,SAAS,EAAEH,QAAQ,CAACC,MAAT,CAAgBE,SADd;AAEbD,UAAAA,QAAQ,EAAEF,QAAQ,CAACC,MAAT,CAAgBC;AAFb,SAAjB;AAKAb,QAAAA,KAAK,CAACgB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,wBAA7C,EAAsE;AAClEC,UAAAA,WAAW,EAAE,WADqD;AAElEL,UAAAA;AAFkE,SAAtE,EAGGM,IAHH,CAGSC,GAAD,IAAS;AACb,cAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,8CAAzB,EAAyE;AACrEjB,YAAAA,OAAO,CAACC,GAAR,CAAYc,GAAG,CAACC,IAAhB;AACH,WAFD,MAEO;AACHhB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBc,GAAG,CAACC,IAAvB;AACH;AACJ,SATD,EASGE,KATH,CASUC,GAAD,IAAS;AACdnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,SAXD;AAYH,OAtBD;AAuBD,KA1BH,MA0BS;AACLnB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ;;AACDmB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAKH;;AA7CiD;;AAgDtD,eAAe1B,6BAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass MainLandingPageEmployerHelper extends Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n}\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            console.log(\"Available\");\n\n            navigator.geolocation.getCurrentPosition((position) => {\n                console.log(\"Latitude is :\", position.coords.latitude);\n                //\n                console.log(\"Longitude is :\", position.coords.longitude);\n\n                const location = {\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude\n                }\n\n                axios.post(`${process.env.REACT_APP_BASE_URL}/save/user/geolocation`, {\n                    accountType: \"employers\",\n                    location\n                }).then((res) => {\n                    if (res.data.message === \"Successfully saved location data to account!\") {\n                        console.log(res.data);\n                    } else {\n                        console.log(\"err\", res.data);\n                    }\n                }).catch((err) => {\n                    console.log(err);\n                });\n            });\n          } else {\n            console.log(\"Not Available\");\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h1>~ dashboard employer! ~</h1>\n            </div>\n        )\n    }\n}\n\nexport default MainLandingPageEmployerHelper;\n"]},"metadata":{},"sourceType":"module"}